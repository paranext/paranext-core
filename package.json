{
  "description": "Extensible Bible translation software",
  "keywords": [
    "electron",
    "boilerplate",
    "react",
    "typescript",
    "ts",
    "sass",
    "webpack",
    "hot",
    "reload"
  ],
  "homepage": "https://github.com/paranext/paranext-core#readme",
  "bugs": {
    "url": "https://github.com/paranext/paranext-core/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/paranext/paranext-core.git"
  },
  "license": "MIT",
  "author": {
    "name": "Paranext",
    "url": "https://github.com/paranext/"
  },
  "contributors": [
    {
      "name": "Ira J Hopkinson",
      "url": "https://github.com/irahopkinson"
    },
    {
      "name": "Tim Steenwyk",
      "url": "https://github.com/FoolRunning"
    },
    {
      "name": "TJ Couch",
      "email": "tj_couch@sil.org",
      "url": "https://github.com/tjcouch-sil"
    }
  ],
  "main": "./.erb/dll/main.bundle.dev.js",
  "scripts": {
    "build": "concurrently --kill-others-on-fail \"npm:build:main\" \"npm:build:extension-host\" \"npm:build:renderer\" \"npm:build:types\" \"npm:build:extensions\" \"npm:build:data-release\"",
    "build:dll": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:extension-host": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.extension-host.prod.ts",
    "build:extensions": "cd extensions && npm run build",
    "build:extensions:production": "cd extensions && npm run build:production",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "build:data": "dotnet build c-sharp/ParanextDataProvider.sln",
    "build:data-release": "run-script-os",
    "build:data-release:windows": "dotnet publish c-sharp/ParanextDataProvider.csproj -r win-x64 -o ./c-sharp/bin/Release/net8.0/publish/win-x64/",
    "build:data-release:linux": "dotnet publish c-sharp/ParanextDataProvider.csproj -r linux-x64 -o ./c-sharp/bin/Release/net8.0/publish/linux-x64/",
    "build:data-release:macos": "dotnet publish c-sharp/ParanextDataProvider.csproj -r osx-x64 -o ./c-sharp/bin/Release/net8.0/publish/osx-x64/ && dotnet publish c-sharp/ParanextDataProvider.csproj -r osx-arm64 -o ./c-sharp/bin/Release/net8.0/publish/osx-arm64/",
    "build:types": "cd lib/papi-dts && npm run build",
    "build:platform-bible-react": "cd lib/platform-bible-react && npm run build",
    "build:platform-bible-utils": "cd lib/platform-bible-utils && npm run build",
    "csharp:tool:restore": "cd c-sharp && dotnet tool restore",
    "editor:link": "yalc link @biblionexus-foundation/platform-editor --no-pure",
    "editor:update": "yalc update @biblionexus-foundation/platform-editor",
    "editor:unlink": "yalc remove @biblionexus-foundation/platform-editor && npm i --ignore-scripts",
    "format": "npm run format:core && npm run format --workspaces --if-present",
    "format:core": "prettier --write .",
    "format:check": "prettier --check . && npm run format:check --workspaces --if-present",
    "lint": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" npm run build:types && npm run lint:scripts && npm run lint:styles && cd lib/papi-dts && npm run lint && cd ../../extensions && npm run lint",
    "lint:config": "cross-env NODE_ENV=development eslint --print-config .eslintrc.js > .eslintConfig.json",
    "lint:scripts": "cross-env NODE_ENV=development eslint --ext .cjs,.js,.jsx,.ts,.tsx --cache .",
    "lint:staged": "lint-staged -q && npm run lint:staged --workspaces --if-present",
    "lint:styles": "stylelint **/*.{css,scss}",
    "lint-fix": "npm run build:types && npm run lint-fix:scripts && npm run lint-fix:styles && cd lib/papi-dts && npm run lint-fix && cd ../../extensions && npm run lint-fix",
    "lint-fix:scripts": "npm run format:core && npm run lint:scripts",
    "lint-fix:styles": "npm run lint:styles -- --fix",
    "ncu:group": "npx npm-check-updates --interactive --format group --workspaces",
    "package": "tsx ./.erb/scripts/clean.js dist && npm run build && npm run build:extensions:production && electron-builder build --publish never && npm run build:dll",
    "package:debug": "cross-env DEBUG_PROD=true npm run package",
    "postinstall": "patch-package && tsx .erb/scripts/check-native-dep.js && electron-builder install-app-deps && npm run build:dll && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "prepare": "husky install && npm run csharp:tool:restore",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "prestart": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.dev.ts",
    "start": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "concurrently -k -P \"cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --watch --config ./.erb/configs/webpack.config.main.dev.ts\" \"electronmon . {@}\" --",
    "start:extension-host": "cross-env NODE_ENV=development nodemon --transpile-only ./src/extension-host/extension-host.ts",
    "start:extensions": "cd extensions && npm run watch",
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.preload.dev.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "start:data": "dotnet watch --project c-sharp/ParanextDataProvider.csproj",
    "stop": "tsx stop-processes.mjs",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build",
    "test": "npm run test:core -- --run && npm run test --workspaces --if-present -- --run",
    "test:core": "vitest",
    "typecheck": "npm run typecheck:core && npm run typecheck --workspaces --if-present",
    "typecheck:core": "tsc -p ./tsconfig.json",
    "typecheck:papi-dts": "cd lib/papi-dts && npm run typecheck",
    "typecheck:platform-bible-react": "cd lib/platform-bible-react && npm run typecheck",
    "typecheck:platform-bible-utils": "cd lib/platform-bible-utils && npm run typecheck"
  },
  "lint-staged": {
    "*.{cjs,js,jsx,ts,tsx}": ["prettier --write"],
    "*.json": ["prettier --parser json --write"],
    "*.{css,scss}": ["stylelint --fix --allow-empty-input"],
    "*.{html,md,yml}": ["prettier --single-quote --write"]
  },
  "browserslist": ["extends browserslist-config-erb"],
  "dependencies": {
    "@emotion/react": "^11.11.4",
    "@emotion/styled": "^11.11.0",
    "@mui/icons-material": "^5.15.10",
    "@mui/material": "^5.15.10",
    "@sillsdev/scripture": "^2.0.2",
    "ajv": "^8.17.1",
    "chalk": "^4.1.2",
    "chokidar": "^3.6.0",
    "electron-debug": "^3.2.0",
    "electron-log": "5.0.3",
    "electron-updater": "^6.3.9",
    "electron-window-state": "^5.0.3",
    "fast-equals": "^5.0.1",
    "http-status-codes": "^2.3.0",
    "json-rpc-2.0": "^1.7.0",
    "jszip": "^3.10.1",
    "memoize-one": "^6.0.0",
    "node-localstorage": "^3.0.5",
    "platform-bible-react": "file:./lib/platform-bible-react",
    "platform-bible-utils": "file:./lib/platform-bible-utils",
    "rc-dock": "^3.2.19",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.27.0",
    "ws": "^8.18.0"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-react": "^7.26.3",
    "@babel/preset-typescript": "^7.26.0",
    "@electron/notarize": "^2.3.2",
    "@electron/rebuild": "^3.7.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.15",
    "@storybook/addon-essentials": "^8.3.4",
    "@storybook/addon-interactions": "^8.3.4",
    "@storybook/addon-links": "^8.3.4",
    "@storybook/addon-webpack5-compiler-babel": "^3.0.3",
    "@storybook/blocks": "^8.3.4",
    "@storybook/preview-api": "^8.3.4",
    "@storybook/react": "^8.3.4",
    "@storybook/react-webpack5": "^8.3.4",
    "@storybook/test": "^8.3.4",
    "@svgr/webpack": "^8.1.0",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.2",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@types/electron-devtools-installer": "^2.2.5",
    "@types/jest": "^29.5.14",
    "@types/node": "20.16.11",
    "@types/node-localstorage": "^1.3.3",
    "@types/react": "^18.3.16",
    "@types/react-dom": "^18.3.5",
    "@types/react-test-renderer": "^18.3.0",
    "@types/source-map-support": "^0.5.10",
    "@types/webpack-bundle-analyzer": "^4.7.0",
    "@types/ws": "^8.5.13",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "browserslist-config-erb": "^0.0.3",
    "concurrently": "^9.1.0",
    "core-js": "^3.39.0",
    "cross-env": "^7.0.3",
    "css-loader": "^6.11.0",
    "css-minimizer-webpack-plugin": "^7.0.0",
    "detect-port": "^1.6.1",
    "electron": "^32.1.2",
    "electron-builder": "^24.13.3",
    "electron-devtools-installer": "^3.2.0",
    "electronmon": "^2.0.3",
    "eslint": "^8.57.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.1.0",
    "eslint-import-resolver-typescript": "^3.7.0",
    "eslint-import-resolver-webpack": "^0.13.9",
    "eslint-plugin-compat": "^4.2.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-no-null": "^1.0.2",
    "eslint-plugin-no-type-assertion": "^1.3.0",
    "eslint-plugin-promise": "^6.6.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-storybook": "^0.9.0",
    "file-loader": "^6.2.0",
    "fkill": "^9.0.0",
    "html-webpack-plugin": "^5.6.3",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jsonpath-plus": "^10.3.0",
    "lint-staged": "^15.2.11",
    "mini-css-extract-plugin": "^2.9.2",
    "node-loader": "^2.1.0",
    "nodemon": "^3.1.7",
    "patch-package": "^8.0.0",
    "prettier": "^3.4.2",
    "prettier-plugin-jsdoc": "^1.3.0",
    "react-refresh": "^0.14.2",
    "react-test-renderer": "^18.3.1",
    "rimraf": "^6.0.1",
    "run-script-os": "^1.1.6",
    "sass": "^1.83.0",
    "sass-loader": "^16.0.4",
    "storybook": "^8.3.4",
    "style-loader": "^4.0.0",
    "stylelint": "^16.11.0",
    "stylelint-config-recommended": "^14.0.1",
    "stylelint-config-sass-guidelines": "^12.1.0",
    "terser-webpack-plugin": "^5.3.10",
    "ts-loader": "^9.5.1",
    "ts-mockito": "^2.6.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsconfig-paths-webpack-plugin": "^4.2.0",
    "tsx": "^4.19.2",
    "typedoc": "^0.26.9",
    "typescript": "^5.4.5",
    "url-loader": "^4.1.1",
    "webpack": "^5.97.1",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.2.0",
    "webpack-merge": "^6.0.1",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.0.5",
    "yalc": "^1.0.0-pre.53"
  },
  "engines": {
    "node": ">=18.12.x",
    "npm": ">=7.x"
  },
  "electronmon": {
    "patterns": ["!**/**", "src/main/**", "src/node/**", "src/shared/**", ".erb/dll/**"],
    "logLevel": "quiet"
  },
  "workspaces": ["lib/*", "extensions", "extensions/src/*"],
  "volta": {
    "node": "20.18.0"
  }
}
