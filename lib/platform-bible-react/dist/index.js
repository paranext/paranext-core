var F2 = Object.defineProperty;
var B2 = (t, e, n) => e in t ? F2(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;
var Zn = (t, e, n) => B2(t, typeof e != "symbol" ? e + "" : e, n);
import { jsx as p, jsxs as q, Fragment as Lt } from "react/jsx-runtime";
import * as ps from "react";
import Y, { forwardRef as Yn, useRef as xe, useMemo as Ne, useState as fe, useCallback as be, useLayoutEffect as Cn, createContext as gl, useContext as wl, useEffect as ue, Suspense as cy, memo as q2, useImperativeHandle as $h, Children as j2, cloneElement as U2, isValidElement as z2, createRef as V2, Fragment as uy } from "react";
import { Command as In } from "cmdk";
import { X as yu, Search as dy, Check as xi, Clock as Lg, ChevronsLeft as $g, ChevronsRight as Fg, ChevronLeft as wf, ChevronRight as ks, ArrowLeft as H2, ArrowRight as W2, Circle as vu, ChevronsUpDown as Fh, FilterIcon as K2, ChevronDown as _u, ChevronUp as G2, ArrowLeftIcon as J2, ChevronLeftIcon as X2, ChevronRightIcon as Y2, ArrowRightIcon as Q2, Copy as fy, Filter as Z2, User as e1, Link as t1, CircleHelp as n1, Star as r1, AlertCircle as mf, CircleCheckIcon as i1, CircleXIcon as o1, CircleHelpIcon as s1, ArrowUpIcon as a1, ArrowDownIcon as l1, ArrowUpDownIcon as c1, PanelLeft as u1, PanelRight as d1, ScrollText as f1, MenuIcon as h1, Menu as p1, EllipsisVertical as g1, MoreHorizontal as w1, LoaderCircle as m1, GripVertical as b1 } from "lucide-react";
import { clsx as y1 } from "clsx";
import { extendTailwindMerge as v1 } from "tailwind-merge";
import * as Jr from "@radix-ui/react-dialog";
import { includes as Xl, Section as Ue, getChaptersForBook as _1, formatScrRef as gs, getSectionForBook as qa, NumberFormat as x1, formatBytes as C1, getCurrentLocale as k1, getFormatCallerFunction as E1, deepEqual as Bh, isString as Sd, compareScrRefs as bf, scrRefToBBBCCCVVV as Td, getLocalizeKeyForScrollGroupId as tt, formatReplacementString as N1 } from "platform-bible-utils";
import { Slot as Js } from "@radix-ui/react-slot";
import { cva as Ji } from "class-variance-authority";
import * as Es from "@radix-ui/react-popover";
import * as hy from "@radix-ui/react-label";
import * as Ka from "@radix-ui/react-radio-group";
import { useReactTable as py, getFilteredRowModel as S1, getSortedRowModel as gy, getPaginationRowModel as T1, getCoreRowModel as wy, flexRender as ja, getGroupedRowModel as A1, getExpandedRowModel as D1 } from "@tanstack/react-table";
import * as dt from "@radix-ui/react-dropdown-menu";
import { DropdownMenuTrigger as O1 } from "@radix-ui/react-dropdown-menu";
import * as xt from "@radix-ui/react-select";
import M1 from "markdown-to-jsx";
import * as I1 from "react-dom";
import { flushSync as my, createPortal as fi } from "react-dom";
import * as yf from "@radix-ui/react-checkbox";
import * as xu from "@radix-ui/react-toggle-group";
import * as by from "@radix-ui/react-toggle";
import * as yy from "@radix-ui/react-separator";
import * as ml from "@radix-ui/react-tooltip";
import * as Rn from "@radix-ui/react-tabs";
import * as ft from "@radix-ui/react-menubar";
import { useHotkeys as R1 } from "react-hotkeys-hook";
import * as Xs from "@radix-ui/react-avatar";
import * as ht from "@radix-ui/react-context-menu";
import { Drawer as Er } from "vaul";
import * as vf from "@radix-ui/react-progress";
import * as qh from "react-resizable-panels";
import { Toaster as P1 } from "sonner";
import { toast as j3 } from "sonner";
import * as Ma from "@radix-ui/react-slider";
import * as _f from "@radix-ui/react-switch";
const L1 = v1({ prefix: "tw-" });
function G(...t) {
  return L1(y1(t));
}
const $1 = "layoutDirection";
function Jt() {
  const t = localStorage.getItem($1);
  return t === "rtl" ? t : "ltr";
}
const F1 = Jr.Portal, vy = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Jr.Overlay,
  {
    ref: n,
    className: G(
      "tw-fixed tw-inset-0 tw-z-50 tw-bg-black/80 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0",
      t
    ),
    ...e
  }
));
vy.displayName = Jr.Overlay.displayName;
const B1 = Y.forwardRef(({ className: t, children: e, ...n }, r) => {
  const i = Jt();
  return /* @__PURE__ */ q(F1, { children: [
    /* @__PURE__ */ p(vy, {}),
    /* @__PURE__ */ q(
      Jr.Content,
      {
        ref: r,
        className: G(
          "pr-twp tw-fixed tw-left-[50%] tw-top-[50%] tw-z-50 tw-grid tw-w-full tw-max-w-lg tw-translate-x-[-50%] tw-translate-y-[-50%] tw-gap-4 tw-border tw-bg-background tw-p-6 tw-shadow-lg tw-duration-200 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[state=closed]:tw-slide-out-to-left-1/2 data-[state=closed]:tw-slide-out-to-top-[48%] data-[state=open]:tw-slide-in-from-left-1/2 data-[state=open]:tw-slide-in-from-top-[48%] sm:tw-rounded-lg",
          t
        ),
        ...n,
        dir: i,
        children: [
          e,
          /* @__PURE__ */ q(
            Jr.Close,
            {
              className: G(
                "tw-absolute tw-top-4 tw-rounded-sm tw-opacity-70 tw-ring-offset-background tw-transition-opacity hover:tw-opacity-100 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2 disabled:tw-pointer-events-none data-[state=open]:tw-bg-accent data-[state=open]:tw-text-muted-foreground",
                { "tw-right-4": i === "ltr" },
                { "tw-left-4": i === "rtl" }
              ),
              children: [
                /* @__PURE__ */ p(yu, { className: "tw-h-4 tw-w-4" }),
                /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Close" })
              ]
            }
          )
        ]
      }
    )
  ] });
});
B1.displayName = Jr.Content.displayName;
const q1 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Jr.Title,
  {
    ref: n,
    className: G("tw-text-lg tw-font-semibold tw-leading-none tw-tracking-tight", t),
    ...e
  }
));
q1.displayName = Jr.Title.displayName;
const j1 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Jr.Description,
  {
    ref: n,
    className: G("tw-text-sm tw-text-muted-foreground", t),
    ...e
  }
));
j1.displayName = Jr.Description.displayName;
const Ys = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In,
  {
    ref: n,
    className: G(
      "tw-flex tw-h-full tw-w-full tw-flex-col tw-overflow-hidden tw-rounded-md tw-bg-popover tw-text-popover-foreground",
      t
    ),
    ...e
  }
));
Ys.displayName = In.displayName;
const bl = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-border-b tw-px-3", dir: r, children: [
    /* @__PURE__ */ p(dy, { className: "tw-me-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" }),
    /* @__PURE__ */ p(
      In.Input,
      {
        ref: n,
        className: G(
          "tw-flex tw-h-11 tw-w-full tw-rounded-md tw-bg-transparent tw-py-3 tw-text-sm tw-outline-none placeholder:tw-text-muted-foreground disabled:tw-cursor-not-allowed disabled:tw-opacity-50",
          t
        ),
        ...e
      }
    )
  ] });
});
bl.displayName = In.Input.displayName;
const Qs = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.List,
  {
    ref: n,
    className: G("tw-max-h-[300px] tw-overflow-y-auto tw-overflow-x-hidden", t),
    ...e
  }
));
Qs.displayName = In.List.displayName;
const Cu = Y.forwardRef((t, e) => /* @__PURE__ */ p(In.Empty, { ref: e, className: "tw-py-6 tw-text-center tw-text-sm", ...t }));
Cu.displayName = In.Empty.displayName;
const Ao = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.Group,
  {
    ref: n,
    className: G(
      "tw-overflow-hidden tw-p-1 tw-text-foreground [&_[cmdk-group-heading]]:tw-px-2 [&_[cmdk-group-heading]]:tw-py-1.5 [&_[cmdk-group-heading]]:tw-text-xs [&_[cmdk-group-heading]]:tw-font-medium [&_[cmdk-group-heading]]:tw-text-muted-foreground",
      t
    ),
    ...e
  }
));
Ao.displayName = In.Group.displayName;
const _y = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-h-px tw-bg-border", t),
    ...e
  }
));
_y.displayName = In.Separator.displayName;
const Ko = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.Item,
  {
    ref: n,
    className: G(
      "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none data-[disabled=true]:tw-pointer-events-none data-[selected=true]:tw-bg-accent data-[selected=true]:tw-text-accent-foreground data-[disabled=true]:tw-opacity-50",
      t
    ),
    ...e
  }
));
Ko.displayName = In.Item.displayName;
var U1 = Object.defineProperty, z1 = (t, e, n) => e in t ? U1(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, qe = (t, e, n) => z1(t, typeof e != "symbol" ? e + "" : e, n);
const Do = [
  "GEN",
  "EXO",
  "LEV",
  "NUM",
  "DEU",
  "JOS",
  "JDG",
  "RUT",
  "1SA",
  "2SA",
  // 10
  "1KI",
  "2KI",
  "1CH",
  "2CH",
  "EZR",
  "NEH",
  "EST",
  "JOB",
  "PSA",
  "PRO",
  // 20
  "ECC",
  "SNG",
  "ISA",
  "JER",
  "LAM",
  "EZK",
  "DAN",
  "HOS",
  "JOL",
  "AMO",
  // 30
  "OBA",
  "JON",
  "MIC",
  "NAM",
  "HAB",
  "ZEP",
  "HAG",
  "ZEC",
  "MAL",
  "MAT",
  // 40
  "MRK",
  "LUK",
  "JHN",
  "ACT",
  "ROM",
  "1CO",
  "2CO",
  "GAL",
  "EPH",
  "PHP",
  // 50
  "COL",
  "1TH",
  "2TH",
  "1TI",
  "2TI",
  "TIT",
  "PHM",
  "HEB",
  "JAS",
  "1PE",
  // 60
  "2PE",
  "1JN",
  "2JN",
  "3JN",
  "JUD",
  "REV",
  "TOB",
  "JDT",
  "ESG",
  "WIS",
  // 70
  "SIR",
  "BAR",
  "LJE",
  "S3Y",
  "SUS",
  "BEL",
  "1MA",
  "2MA",
  "3MA",
  "4MA",
  // 80
  "1ES",
  "2ES",
  "MAN",
  "PS2",
  "ODA",
  "PSS",
  "JSA",
  // actual variant text for JOS, now in LXA text
  "JDB",
  // actual variant text for JDG, now in LXA text
  "TBS",
  // actual variant text for TOB, now in LXA text
  "SST",
  // actual variant text for SUS, now in LXA text // 90
  "DNT",
  // actual variant text for DAN, now in LXA text
  "BLT",
  // actual variant text for BEL, now in LXA text
  "XXA",
  "XXB",
  "XXC",
  "XXD",
  "XXE",
  "XXF",
  "XXG",
  "FRT",
  // 100
  "BAK",
  "OTH",
  "3ES",
  // Used previously but really should be 2ES
  "EZA",
  // Used to be called 4ES, but not actually in any known project
  "5EZ",
  // Used to be called 5ES, but not actually in any known project
  "6EZ",
  // Used to be called 6ES, but not actually in any known project
  "INT",
  "CNC",
  "GLO",
  "TDX",
  // 110
  "NDX",
  "DAG",
  "PS3",
  "2BA",
  "LBA",
  "JUB",
  "ENO",
  "1MQ",
  "2MQ",
  "3MQ",
  // 120
  "REP",
  "4BA",
  "LAO"
], jh = [
  "XXA",
  "XXB",
  "XXC",
  "XXD",
  "XXE",
  "XXF",
  "XXG",
  "FRT",
  "BAK",
  "OTH",
  "INT",
  "CNC",
  "GLO",
  "TDX",
  "NDX"
], xy = [
  "Genesis",
  "Exodus",
  "Leviticus",
  "Numbers",
  "Deuteronomy",
  "Joshua",
  "Judges",
  "Ruth",
  "1 Samuel",
  "2 Samuel",
  "1 Kings",
  "2 Kings",
  "1 Chronicles",
  "2 Chronicles",
  "Ezra",
  "Nehemiah",
  "Esther (Hebrew)",
  "Job",
  "Psalms",
  "Proverbs",
  "Ecclesiastes",
  "Song of Songs",
  "Isaiah",
  "Jeremiah",
  "Lamentations",
  "Ezekiel",
  "Daniel (Hebrew)",
  "Hosea",
  "Joel",
  "Amos",
  "Obadiah",
  "Jonah",
  "Micah",
  "Nahum",
  "Habakkuk",
  "Zephaniah",
  "Haggai",
  "Zechariah",
  "Malachi",
  "Matthew",
  "Mark",
  "Luke",
  "John",
  "Acts",
  "Romans",
  "1 Corinthians",
  "2 Corinthians",
  "Galatians",
  "Ephesians",
  "Philippians",
  "Colossians",
  "1 Thessalonians",
  "2 Thessalonians",
  "1 Timothy",
  "2 Timothy",
  "Titus",
  "Philemon",
  "Hebrews",
  "James",
  "1 Peter",
  "2 Peter",
  "1 John",
  "2 John",
  "3 John",
  "Jude",
  "Revelation",
  "Tobit",
  "Judith",
  "Esther Greek",
  "Wisdom of Solomon",
  "Sirach (Ecclesiasticus)",
  "Baruch",
  "Letter of Jeremiah",
  "Song of 3 Young Men",
  "Susanna",
  "Bel and the Dragon",
  "1 Maccabees",
  "2 Maccabees",
  "3 Maccabees",
  "4 Maccabees",
  "1 Esdras (Greek)",
  "2 Esdras (Latin)",
  "Prayer of Manasseh",
  "Psalm 151",
  "Odes",
  "Psalms of Solomon",
  // WARNING, if you change the spelling of the *obsolete* tag be sure to update
  // IsObsolete routine
  "Joshua A. *obsolete*",
  "Judges B. *obsolete*",
  "Tobit S. *obsolete*",
  "Susanna Th. *obsolete*",
  "Daniel Th. *obsolete*",
  "Bel Th. *obsolete*",
  "Extra A",
  "Extra B",
  "Extra C",
  "Extra D",
  "Extra E",
  "Extra F",
  "Extra G",
  "Front Matter",
  "Back Matter",
  "Other Matter",
  "3 Ezra *obsolete*",
  "Apocalypse of Ezra",
  "5 Ezra (Latin Prologue)",
  "6 Ezra (Latin Epilogue)",
  "Introduction",
  "Concordance ",
  "Glossary ",
  "Topical Index",
  "Names Index",
  "Daniel Greek",
  "Psalms 152-155",
  "2 Baruch (Apocalypse)",
  "Letter of Baruch",
  "Jubilees",
  "Enoch",
  "1 Meqabyan",
  "2 Meqabyan",
  "3 Meqabyan",
  "Reproof (Proverbs 25-31)",
  "4 Baruch (Rest of Baruch)",
  "Laodiceans"
], Bg = Z1();
function Zs(t, e = !0) {
  return e && (t = t.toUpperCase()), t in Bg ? Bg[t] : 0;
}
function Uh(t) {
  return Zs(t) > 0;
}
function V1(t) {
  const e = typeof t == "string" ? Zs(t) : t;
  return e >= 40 && e <= 66;
}
function H1(t) {
  return (typeof t == "string" ? Zs(t) : t) <= 39;
}
function Cy(t) {
  return t <= 66;
}
function W1(t) {
  const e = typeof t == "string" ? Zs(t) : t;
  return Ny(e) && !Cy(e);
}
function* K1() {
  for (let t = 1; t <= Do.length; t++) yield t;
}
const G1 = 1, ky = Do.length;
function J1() {
  return ["XXA", "XXB", "XXC", "XXD", "XXE", "XXF", "XXG"];
}
function zh(t, e = "***") {
  const n = t - 1;
  return n < 0 || n >= Do.length ? e : Do[n];
}
function Ey(t) {
  return t <= 0 || t > ky ? "******" : xy[t - 1];
}
function X1(t) {
  return Ey(Zs(t));
}
function Ny(t) {
  const e = typeof t == "number" ? zh(t) : t;
  return Uh(e) && !jh.includes(e);
}
function Y1(t) {
  const e = typeof t == "number" ? zh(t) : t;
  return Uh(e) && jh.includes(e);
}
function Q1(t) {
  return xy[t - 1].includes("*obsolete*");
}
function Z1() {
  const t = {};
  for (let e = 0; e < Do.length; e++)
    t[Do[e]] = e + 1;
  return t;
}
const nt = {
  allBookIds: Do,
  nonCanonicalIds: jh,
  bookIdToNumber: Zs,
  isBookIdValid: Uh,
  isBookNT: V1,
  isBookOT: H1,
  isBookOTNT: Cy,
  isBookDC: W1,
  allBookNumbers: K1,
  firstBook: G1,
  lastBook: ky,
  extraBooks: J1,
  bookNumberToId: zh,
  bookNumberToEnglishName: Ey,
  bookIdToEnglishName: X1,
  isCanonical: Ny,
  isExtraMaterial: Y1,
  isObsolete: Q1
};
var Fr = /* @__PURE__ */ ((t) => (t[t.Unknown = 0] = "Unknown", t[t.Original = 1] = "Original", t[t.Septuagint = 2] = "Septuagint", t[t.Vulgate = 3] = "Vulgate", t[t.English = 4] = "English", t[t.RussianProtestant = 5] = "RussianProtestant", t[t.RussianOrthodox = 6] = "RussianOrthodox", t))(Fr || {});
const Vn = class {
  // private versInfo: Versification;
  constructor(e) {
    if (qe(this, "name"), qe(this, "fullPath"), qe(this, "isPresent"), qe(this, "hasVerseSegments"), qe(this, "isCustomized"), qe(this, "baseVersification"), qe(this, "scriptureBooks"), qe(this, "_type"), e == null)
      throw new Error("Argument undefined");
    typeof e == "string" ? (this.name = e, this._type = Fr[e]) : (this._type = e, this.name = Fr[e]);
  }
  get type() {
    return this._type;
  }
  equals(e) {
    return !e.type || !this.type ? !1 : e.type === this.type;
  }
};
qe(Vn, "Original", new Vn(Fr.Original)), qe(Vn, "Septuagint", new Vn(Fr.Septuagint)), qe(Vn, "Vulgate", new Vn(Fr.Vulgate)), qe(Vn, "English", new Vn(Fr.English)), qe(Vn, "RussianProtestant", new Vn(Fr.RussianProtestant)), qe(Vn, "RussianOrthodox", new Vn(Fr.RussianOrthodox));
let go = Vn;
function qg(t, e) {
  const n = e[0];
  for (let r = 1; r < e.length; r++)
    t = t.split(e[r]).join(n);
  return t.split(n);
}
var Sy = /* @__PURE__ */ ((t) => (t[t.Valid = 0] = "Valid", t[t.UnknownVersification = 1] = "UnknownVersification", t[t.OutOfRange = 2] = "OutOfRange", t[t.VerseOutOfOrder = 3] = "VerseOutOfOrder", t[t.VerseRepeated = 4] = "VerseRepeated", t))(Sy || {});
const Tn = class Ke {
  constructor(e, n, r, i) {
    if (qe(this, "firstChapter"), qe(this, "lastChapter"), qe(this, "lastVerse"), qe(this, "hasSegmentsDefined"), qe(this, "text"), qe(this, "BBBCCCVVVS"), qe(this, "longHashCode"), qe(this, "versification"), qe(this, "rtlMark", "‏"), qe(this, "_bookNum", 0), qe(this, "_chapterNum", 0), qe(this, "_verseNum", 0), qe(this, "_verse"), r == null && i == null)
      if (e != null && typeof e == "string") {
        const o = e, s = n != null && n instanceof go ? n : void 0;
        this.setEmpty(s), this.parse(o);
      } else if (e != null && typeof e == "number") {
        const o = n != null && n instanceof go ? n : void 0;
        this.setEmpty(o), this._verseNum = e % Ke.chapterDigitShifter, this._chapterNum = Math.floor(
          e % Ke.bookDigitShifter / Ke.chapterDigitShifter
        ), this._bookNum = Math.floor(e / Ke.bookDigitShifter);
      } else if (n == null)
        if (e != null && e instanceof Ke) {
          const o = e;
          this._bookNum = o.bookNum, this._chapterNum = o.chapterNum, this._verseNum = o.verseNum, this._verse = o.verse, this.versification = o.versification;
        } else {
          if (e == null) return;
          const o = e instanceof go ? e : Ke.defaultVersification;
          this.setEmpty(o);
        }
      else
        throw new Error("VerseRef constructor not supported.");
    else if (e != null && n != null && r != null)
      if (typeof e == "string" && typeof n == "string" && typeof r == "string")
        this.setEmpty(i), this.updateInternal(e, n, r);
      else if (typeof e == "number" && typeof n == "number" && typeof r == "number")
        this._bookNum = e, this._chapterNum = n, this._verseNum = r, this.versification = i ?? Ke.defaultVersification;
      else
        throw new Error("VerseRef constructor not supported.");
    else
      throw new Error("VerseRef constructor not supported.");
  }
  /**
   * Determines if the verse string is in a valid format (does not consider versification).
   */
  static isVerseParseable(e) {
    return e.length > 0 && "0123456789".includes(e[0]) && !e.endsWith(this.verseRangeSeparator) && !e.endsWith(this.verseSequenceIndicator);
  }
  /**
   * Tries to parse the specified string into a verse reference.
   * @param str - The string to attempt to parse.
   * @returns success: `true` if the specified string was successfully parsed, `false` otherwise.
   * @returns verseRef: The result of the parse if successful, or empty VerseRef if it failed
   */
  static tryParse(e) {
    let n;
    try {
      return n = new Ke(e), { success: !0, verseRef: n };
    } catch (r) {
      if (r instanceof Ca)
        return n = new Ke(), { success: !1, verseRef: n };
      throw r;
    }
  }
  /**
   * Gets the reference as a comparable integer where the book, chapter, and verse each occupy 3
   * digits.
   * @param bookNum - Book number (this is 1-based, not an index).
   * @param chapterNum - Chapter number.
   * @param verseNum - Verse number.
   * @returns The reference as a comparable integer where the book, chapter, and verse each occupy 3
   * digits.
   */
  static getBBBCCCVVV(e, n, r) {
    return e % Ke.bcvMaxValue * Ke.bookDigitShifter + (n >= 0 ? n % Ke.bcvMaxValue * Ke.chapterDigitShifter : 0) + (r >= 0 ? r % Ke.bcvMaxValue : 0);
  }
  /**
   * Deserializes a serialized VerseRef.
   * @param serializedVerseRef - Serialized VerseRef to create from.
   * @returns the deserialized VerseRef.
   */
  static fromJSON(e) {
    const { book: n, chapterNum: r, verseNum: i, verse: o, versificationStr: s } = e, a = o || i.toString();
    let l;
    return s && (l = new go(s)), n ? new Ke(n, r.toString(), a, l) : new Ke();
  }
  /**
   * Parses a verse string and gets the leading numeric portion as a number.
   * @param verseStr - verse string to parse
   * @returns true if the entire string could be parsed as a single, simple verse number (1-999);
   *    false if the verse string represented a verse bridge, contained segment letters, or was invalid
   */
  static tryGetVerseNum(e) {
    let n;
    if (!e)
      return n = -1, { success: !0, vNum: n };
    n = 0;
    let r;
    for (let i = 0; i < e.length; i++) {
      if (r = e[i], r < "0" || r > "9")
        return i === 0 && (n = -1), { success: !1, vNum: n };
      if (n = n * 10 + +r - 0, n > Ke.bcvMaxValue)
        return n = -1, { success: !1, vNum: n };
    }
    return { success: !0, vNum: n };
  }
  /**
   * Checks to see if a VerseRef hasn't been set - all values are the default.
   */
  get isDefault() {
    return this.bookNum === 0 && this.chapterNum === 0 && this.verseNum === 0 && this.versification == null;
  }
  /**
   * Gets whether the verse contains multiple verses.
   */
  get hasMultiple() {
    return this._verse != null && (this._verse.includes(Ke.verseRangeSeparator) || this._verse.includes(Ke.verseSequenceIndicator));
  }
  /**
   * Gets or sets the book of the reference. Book is the 3-letter abbreviation in capital letters,
   * e.g. `'MAT'`.
   */
  get book() {
    return nt.bookNumberToId(this.bookNum, "");
  }
  set book(e) {
    this.bookNum = nt.bookIdToNumber(e);
  }
  /**
   * Gets or sets the chapter of the reference,. e.g. `'3'`.
   */
  get chapter() {
    return this.isDefault || this._chapterNum < 0 ? "" : this._chapterNum.toString();
  }
  set chapter(e) {
    const n = +e;
    this._chapterNum = Number.isInteger(n) ? n : -1;
  }
  /**
   * Gets or sets the verse of the reference, including range, segments, and sequences, e.g. `'4'`,
   * or `'4b-5a, 7'`.
   */
  get verse() {
    return this._verse != null ? this._verse : this.isDefault || this._verseNum < 0 ? "" : this._verseNum.toString();
  }
  set verse(e) {
    const { success: n, vNum: r } = Ke.tryGetVerseNum(e);
    this._verse = n ? void 0 : e.replace(this.rtlMark, ""), this._verseNum = r, !(this._verseNum >= 0) && ({ vNum: this._verseNum } = Ke.tryGetVerseNum(this._verse));
  }
  /**
   * Get or set Book based on book number, e.g. `42`.
   */
  get bookNum() {
    return this._bookNum;
  }
  set bookNum(e) {
    if (e <= 0 || e > nt.lastBook)
      throw new Ca(
        "BookNum must be greater than zero and less than or equal to last book"
      );
    this._bookNum = e;
  }
  /**
   * Gets or sets the chapter number, e.g. `3`. `-1` if not valid.
   */
  get chapterNum() {
    return this._chapterNum;
  }
  set chapterNum(e) {
    this.chapterNum = e;
  }
  /**
   * Gets or sets verse start number, e.g. `4`. `-1` if not valid.
   */
  get verseNum() {
    return this._verseNum;
  }
  set verseNum(e) {
    this._verseNum = e;
  }
  /**
   * String representing the versification (should ONLY be used for serialization/deserialization).
   *
   * @remarks This is for backwards compatibility when ScrVers was an enumeration.
   */
  get versificationStr() {
    var e;
    return (e = this.versification) == null ? void 0 : e.name;
  }
  set versificationStr(e) {
    this.versification = this.versification != null ? new go(e) : void 0;
  }
  /**
   * Determines if the reference is valid.
   */
  get valid() {
    return this.validStatus === 0;
  }
  /**
   * Get the valid status for this reference.
   */
  get validStatus() {
    return this.validateVerse(Ke.verseRangeSeparators, Ke.verseSequenceIndicators);
  }
  /**
   * Gets the reference as a comparable integer where the book,
   * chapter, and verse each occupy three digits and the verse is 0.
   */
  get BBBCCC() {
    return Ke.getBBBCCCVVV(this._bookNum, this._chapterNum, 0);
  }
  /**
   * Gets the reference as a comparable integer where the book,
   * chapter, and verse each occupy three digits. If verse is not null
   * (i.e., this reference represents a complex reference with verse
   * segments or bridge) this cannot be used for an exact comparison.
   */
  get BBBCCCVVV() {
    return Ke.getBBBCCCVVV(this._bookNum, this._chapterNum, this._verseNum);
  }
  /**
   * Gets whether the verse is defined as an excluded verse in the versification.
   * Does not handle verse ranges.
   */
  // eslint-disable-next-line @typescript-eslint/class-literal-property-style
  get isExcluded() {
    return !1;
  }
  /**
   * Parses the reference in the specified string.
   * Optionally versification can follow reference as in GEN 3:11/4
   * Throw an exception if
   * - invalid book name
   * - chapter number is missing or not a number
   * - verse number is missing or does not start with a number
   * - versification is invalid
   * @param verseStr - string to parse e.g. 'MAT 3:11'
   */
  parse(e) {
    if (e = e.replace(this.rtlMark, ""), e.includes("/")) {
      const o = e.split("/");
      if (e = o[0], o.length > 1)
        try {
          const s = +o[1].trim();
          this.versification = new go(Fr[s]);
        } catch {
          throw new Ca("Invalid reference : " + e);
        }
    }
    const n = e.trim().split(" ");
    if (n.length !== 2)
      throw new Ca("Invalid reference : " + e);
    const r = n[1].split(":"), i = +r[0];
    if (r.length !== 2 || nt.bookIdToNumber(n[0]) === 0 || !Number.isInteger(i) || i < 0 || !Ke.isVerseParseable(r[1]))
      throw new Ca("Invalid reference : " + e);
    this.updateInternal(n[0], r[0], r[1]);
  }
  /**
   * Simplifies this verse ref so that it has no bridging of verses or
   * verse segments like `'1a'`.
   */
  simplify() {
    this._verse = void 0;
  }
  /**
   * Makes a clone of the reference.
   *
   * @returns The cloned VerseRef.
   */
  clone() {
    return new Ke(this);
  }
  toString() {
    const e = this.book;
    return e === "" ? "" : `${e} ${this.chapter}:${this.verse}`;
  }
  toJSON() {
    let e = this.verse;
    (e === "" || e === this.verseNum.toString()) && (e = void 0);
    const n = {
      book: this.book,
      chapterNum: this.chapterNum,
      verseNum: this.verseNum,
      verse: e,
      versificationStr: this.versificationStr
    };
    return e || delete n.verse, n;
  }
  /**
   * Compares this `VerseRef` with supplied one.
   * @param verseRef - object to compare this one to.
   * @returns `true` if this `VerseRef` is equal to the supplied one, `false` otherwise.
   */
  equals(e) {
    return e instanceof Ke ? e._bookNum === this._bookNum && e._chapterNum === this._chapterNum && e._verseNum === this._verseNum && e.verse === this.verse && (e.versification == null && this.versification == null || e.versification != null && this.versification != null && e.versification.equals(this.versification)) : !1;
  }
  /**
   * Enumerate all individual verses contained in a VerseRef.
   * Verse ranges are indicated by "-" and consecutive verses by ","s.
   * Examples:
   * GEN 1:2 returns GEN 1:2
   * GEN 1:1a-3b,5 returns GEN 1:1a, GEN 1:2, GEN 1:3b, GEN 1:5
   * GEN 1:2a-2c returns //! ??????
   *
   * @param specifiedVersesOnly - if set to <c>true</c> return only verses that are
   * explicitly specified only, not verses within a range. Defaults to `false`.
   * @param verseRangeSeparators - Verse range separators.
   * Defaults to `VerseRef.verseRangeSeparators`.
   * @param verseSequenceSeparators - Verse sequence separators.
   * Defaults to `VerseRef.verseSequenceIndicators`.
   * @returns An array of all single verse references in this VerseRef.
   */
  allVerses(e = !1, n = Ke.verseRangeSeparators, r = Ke.verseSequenceIndicators) {
    if (this._verse == null || this.chapterNum <= 0)
      return [this.clone()];
    const i = [], o = qg(this._verse, r);
    for (const s of o.map((a) => qg(a, n))) {
      const a = this.clone();
      a.verse = s[0];
      const l = a.verseNum;
      if (i.push(a), s.length > 1) {
        const c = this.clone();
        if (c.verse = s[1], !e)
          for (let u = l + 1; u < c.verseNum; u++) {
            const f = new Ke(
              this._bookNum,
              this._chapterNum,
              u,
              this.versification
            );
            this.isExcluded || i.push(f);
          }
        i.push(c);
      }
    }
    return i;
  }
  /**
   * Validates a verse number using the supplied separators rather than the defaults.
   */
  validateVerse(e, n) {
    if (!this.verse)
      return this.internalValid;
    let r = 0;
    for (const i of this.allVerses(!0, e, n)) {
      const o = i.internalValid;
      if (o !== 0)
        return o;
      const s = i.BBBCCCVVV;
      if (r > s)
        return 3;
      if (r === s)
        return 4;
      r = s;
    }
    return 0;
  }
  /**
   * Gets whether a single verse reference is valid.
   */
  get internalValid() {
    return this.versification == null ? 1 : this._bookNum <= 0 || this._bookNum > nt.lastBook ? 2 : (nt.isCanonical(this._bookNum), 0);
  }
  setEmpty(e = Ke.defaultVersification) {
    this._bookNum = 0, this._chapterNum = -1, this._verse = void 0, this.versification = e;
  }
  updateInternal(e, n, r) {
    this.bookNum = nt.bookIdToNumber(e), this.chapter = n, this.verse = r;
  }
};
qe(Tn, "defaultVersification", go.English), qe(Tn, "verseRangeSeparator", "-"), qe(Tn, "verseSequenceIndicator", ","), qe(Tn, "verseRangeSeparators", [Tn.verseRangeSeparator]), qe(Tn, "verseSequenceIndicators", [Tn.verseSequenceIndicator]), qe(Tn, "chapterDigitShifter", 1e3), qe(Tn, "bookDigitShifter", Tn.chapterDigitShifter * Tn.chapterDigitShifter), qe(Tn, "bcvMaxValue", Tn.chapterDigitShifter - 1), /**
* The valid status of the VerseRef.
*/
qe(Tn, "ValidStatusType", Sy);
let Ca = class extends Error {
};
const Ty = (t, e, n, r, i) => {
  switch (t) {
    case Ue.OT:
      return e ?? "Old Testament";
    case Ue.NT:
      return n ?? "New Testament";
    case Ue.DC:
      return r ?? "Deuterocanon";
    case Ue.Extra:
      return i ?? "Extra Materials";
    default:
      throw new Error(`Unknown section: ${t}`);
  }
}, eC = (t, e, n, r, i) => {
  switch (t) {
    case Ue.OT:
      return e ?? "OT";
    case Ue.NT:
      return n ?? "NT";
    case Ue.DC:
      return r ?? "DC";
    case Ue.Extra:
      return i ?? "Extra";
    default:
      throw new Error(`Unknown section: ${t}`);
  }
};
function ws(t, e) {
  var r;
  return ((r = e == null ? void 0 : e.get(t)) == null ? void 0 : r.localizedName) ?? nt.bookIdToEnglishName(t);
}
function Vh(t, e) {
  var r;
  return ((r = e == null ? void 0 : e.get(t)) == null ? void 0 : r.localizedId) ?? t.toUpperCase();
}
const Ay = nt.allBookIds.filter(
  (t) => !nt.isObsolete(nt.bookIdToNumber(t))
), yo = Object.fromEntries(
  Ay.map((t) => [t, nt.bookIdToEnglishName(t)])
);
function Hh(t, e, n) {
  const r = e.trim().toLowerCase();
  if (!r) return !1;
  const i = nt.bookIdToEnglishName(t), o = n == null ? void 0 : n.get(t);
  return !!(Xl(i.toLowerCase(), r) || Xl(t.toLowerCase(), r) || (o ? Xl(o.localizedName.toLowerCase(), r) || Xl(o.localizedId.toLowerCase(), r) : !1));
}
const Dy = Yn(
  ({
    bookId: t,
    isSelected: e,
    onSelect: n,
    onMouseDown: r,
    section: i,
    className: o,
    showCheck: s = !1,
    localizedBookNames: a,
    commandValue: l
  }, c) => {
    const u = xe(!1), f = () => {
      u.current || n == null || n(t), setTimeout(() => {
        u.current = !1;
      }, 100);
    }, d = (w) => {
      u.current = !0, r ? r(w) : n == null || n(t);
    }, h = Ne(
      () => ws(t, a),
      [t, a]
    ), g = Ne(
      () => Vh(t, a),
      [t, a]
    );
    return /* @__PURE__ */ p(
      "div",
      {
        className: G(
          "tw-mx-1 tw-my-1 tw-border-b-0 tw-border-e-0 tw-border-s-2 tw-border-t-0 tw-border-solid",
          {
            "tw-border-s-red-200": i === Ue.OT,
            "tw-border-s-purple-200": i === Ue.NT,
            "tw-border-s-indigo-200": i === Ue.DC,
            "tw-border-s-amber-200": i === Ue.Extra
          }
        ),
        children: /* @__PURE__ */ q(
          Ko,
          {
            ref: c,
            value: l || `${t} ${nt.bookIdToEnglishName(t)}`,
            onSelect: f,
            onMouseDown: d,
            role: "option",
            "aria-selected": e,
            "aria-label": `${nt.bookIdToEnglishName(t)} (${t.toLocaleUpperCase()})`,
            className: o,
            children: [
              s && /* @__PURE__ */ p(
                xi,
                {
                  className: G(
                    "tw-me-2 tw-h-4 tw-w-4 tw-flex-shrink-0",
                    e ? "tw-opacity-100" : "tw-opacity-0"
                  )
                }
              ),
              /* @__PURE__ */ p("span", { className: "tw-min-w-0 tw-flex-1", children: h }),
              /* @__PURE__ */ p("span", { className: "tw-ms-2 tw-flex-shrink-0 tw-text-xs tw-text-muted-foreground", children: g })
            ]
          }
        )
      }
    );
  }
), tC = Ji(
  "pr-twp tw-inline-flex tw-items-center tw-justify-center tw-gap-2 tw-whitespace-nowrap tw-rounded-md tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 [&_svg]:tw-pointer-events-none [&_svg]:tw-size-4 [&_svg]:tw-shrink-0",
  {
    variants: {
      variant: {
        default: "tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/90",
        destructive: "tw-bg-destructive tw-text-destructive-foreground hover:tw-bg-destructive/90",
        outline: "tw-border tw-border-input tw-bg-background hover:tw-bg-accent hover:tw-text-accent-foreground",
        secondary: "tw-bg-secondary tw-text-secondary-foreground hover:tw-bg-secondary/80",
        ghost: "hover:tw-bg-accent hover:tw-text-accent-foreground",
        link: "tw-text-primary tw-underline-offset-4 hover:tw-underline"
      },
      size: {
        default: "tw-h-10 tw-px-4 tw-py-2",
        sm: "tw-h-9 tw-rounded-md tw-px-3",
        lg: "tw-h-11 tw-rounded-md tw-px-8",
        icon: "tw-h-10 tw-w-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), Pe = Y.forwardRef(
  ({ className: t, variant: e, size: n, asChild: r = !1, ...i }, o) => /* @__PURE__ */ p(r ? Js : "button", { className: G(tC({ variant: e, size: n, className: t })), ref: o, ...i })
);
Pe.displayName = "Button";
const ea = Es.Root, ta = Es.Trigger, SL = Es.Anchor, Go = Y.forwardRef(({ className: t, align: e = "center", sideOffset: n = 4, ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ p(Es.Portal, { children: /* @__PURE__ */ p(
    Es.Content,
    {
      ref: i,
      align: e,
      sideOffset: n,
      className: G(
        // CUSTOM Changed z-order from 50 to 250 to make them appear on floating tabs (200)
        "tw-z-[250]",
        "pr-twp tw-w-72 tw-rounded-md tw-border tw-bg-popover tw-p-4 tw-text-popover-foreground tw-shadow-md tw-outline-none data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        t
      ),
      ...r,
      dir: o
    }
  ) });
});
Go.displayName = Es.Content.displayName;
function xf(t, e, n) {
  return `${t} ${yo[t]}${e ? ` ${Vh(t, e)} ${ws(t, e)}` : ""}${n ? ` ${n}` : ""}`;
}
function nC({
  recentSearches: t,
  onSearchItemSelect: e,
  renderItem: n = (a) => String(a),
  getItemKey: r = (a) => String(a),
  ariaLabel: i = "Show recent searches",
  groupHeading: o = "Recent",
  id: s
}) {
  const [a, l] = fe(!1);
  if (t.length === 0)
    return;
  const c = (u) => {
    e(u), l(!1);
  };
  return /* @__PURE__ */ q(ea, { open: a, onOpenChange: l, children: [
    /* @__PURE__ */ p(ta, { asChild: !0, children: /* @__PURE__ */ p(
      Pe,
      {
        variant: "ghost",
        size: "icon",
        className: "tw-absolute tw-right-0 tw-top-0 tw-h-full tw-px-3 tw-py-2",
        "aria-label": i,
        children: /* @__PURE__ */ p(Lg, { className: "tw-h-4 tw-w-4" })
      }
    ) }),
    /* @__PURE__ */ p(Go, { id: s, className: "tw-w-[300px] tw-p-0", align: "start", children: /* @__PURE__ */ p(Ys, { children: /* @__PURE__ */ p(Qs, { children: /* @__PURE__ */ p(Ao, { heading: o, children: t.map((u) => /* @__PURE__ */ q(
      Ko,
      {
        onSelect: () => c(u),
        className: "tw-flex tw-items-center",
        children: [
          /* @__PURE__ */ p(Lg, { className: "tw-mr-2 tw-h-4 tw-w-4 tw-opacity-50" }),
          /* @__PURE__ */ p("span", { children: n(u) })
        ]
      },
      r(u)
    )) }) }) }) })
  ] });
}
function TL(t, e, n = (i, o) => i === o, r = 15) {
  return (i) => {
    const o = t.filter(
      (a) => !n(a, i)
    ), s = [i, ...o.slice(0, r - 1)];
    e(s);
  };
}
const Ad = {
  // Matches start of string (`^`), one or more non-colon/space words, optionally followed by space and more words (`([^:\s]+(?:\s+[^:\s]+)*)`), end of string (`$`), case-insensitive (`i`)
  BOOK_ONLY: /^([^:\s]+(?:\s+[^:\s]+)*)$/i,
  // Same as above, but followed by a space and a chapter number (`\s+(\d+)`)
  BOOK_CHAPTER: /^([^:\s]+(?:\s+[^:\s]+)*)\s+(\d+)$/i,
  // Same as above, but followed by a colon and optionally a verse number (`:(\d*)`)
  BOOK_CHAPTER_VERSE: /^([^:\s]+(?:\s+[^:\s]+)*)\s+(\d+):(\d*)$/i
}, rC = [
  Ad.BOOK_ONLY,
  Ad.BOOK_CHAPTER,
  Ad.BOOK_CHAPTER_VERSE
];
function jg(t) {
  const e = /^[a-zA-Z]$/.test(t), n = /^[0-9]$/.test(t);
  return { isLetter: e, isDigit: n };
}
function Ur(t) {
  return _1(nt.bookIdToNumber(t));
}
function iC(t, e, n) {
  if (!t.trim() || e.length === 0) return;
  const r = rC.reduce(
    (i, o) => {
      if (i) return i;
      const s = o.exec(t.trim());
      if (s) {
        const [a, l = void 0, c = void 0] = s.slice(1);
        let u;
        const f = e.filter((d) => Hh(d, a, n));
        if (f.length === 1 && ([u] = f), !u && l) {
          if (nt.isBookIdValid(a)) {
            const d = a.toUpperCase();
            e.includes(d) && (u = d);
          }
          if (!u && n) {
            const d = Array.from(n.entries()).find(
              ([, h]) => h.localizedId.toLowerCase() === a.toLowerCase()
            );
            d && e.includes(d[0]) && ([u] = d);
          }
        }
        if (!u && l) {
          const h = ((g) => Object.keys(yo).find(
            (w) => yo[w].toLowerCase() === g.toLowerCase()
          ))(a);
          if (h && e.includes(h) && (u = h), !u && n) {
            const g = Array.from(n.entries()).find(
              ([, w]) => w.localizedName.toLowerCase() === a.toLowerCase()
            );
            g && e.includes(g[0]) && ([u] = g);
          }
        }
        if (u) {
          let d = l ? parseInt(l, 10) : void 0;
          d && d > Ur(u) && (d = Math.max(Ur(u), 1));
          const h = c ? parseInt(c, 10) : void 0;
          return {
            book: u,
            chapterNum: d,
            verseNum: h
          };
        }
      }
    },
    void 0
  );
  if (r) return r;
}
function oC(t, e, n, r) {
  const i = be(() => {
    if (t.chapterNum > 1)
      r({
        book: t.book,
        chapterNum: t.chapterNum - 1,
        verseNum: 1
      });
    else {
      const l = e.indexOf(t.book);
      if (l > 0) {
        const c = e[l - 1], u = Math.max(Ur(c), 1);
        r({
          book: c,
          chapterNum: u,
          verseNum: 1
        });
      }
    }
  }, [t, e, r]), o = be(() => {
    const l = Ur(t.book);
    if (t.chapterNum < l)
      r({
        book: t.book,
        chapterNum: t.chapterNum + 1,
        verseNum: 1
      });
    else {
      const c = e.indexOf(t.book);
      if (c < e.length - 1) {
        const u = e[c + 1];
        r({
          book: u,
          chapterNum: 1,
          verseNum: 1
        });
      }
    }
  }, [t, e, r]), s = be(() => {
    r({
      book: t.book,
      chapterNum: t.chapterNum,
      verseNum: t.verseNum > 1 ? t.verseNum - 1 : 0
    });
  }, [t, r]), a = be(() => {
    r({
      book: t.book,
      chapterNum: t.chapterNum,
      verseNum: t.verseNum + 1
    });
  }, [t, r]);
  return Ne(() => [
    {
      onClick: i,
      disabled: e.length === 0 || t.chapterNum === 1 && e.indexOf(t.book) === 0,
      title: "Previous chapter",
      icon: n === "ltr" ? $g : Fg
    },
    {
      onClick: s,
      disabled: e.length === 0 || t.verseNum === 0,
      title: "Previous verse",
      icon: n === "ltr" ? wf : ks
    },
    {
      onClick: a,
      disabled: e.length === 0,
      title: "Next verse",
      icon: n === "ltr" ? ks : wf
    },
    {
      onClick: o,
      disabled: e.length === 0 || (t.chapterNum === Ur(t.book) || Ur(t.book) === -1) && e.indexOf(t.book) === e.length - 1,
      title: "Next chapter",
      icon: n === "ltr" ? Fg : $g
    }
  ], [
    t,
    e,
    n,
    i,
    s,
    a,
    o
  ]);
}
function Ug({
  bookId: t,
  scrRef: e,
  onChapterSelect: n,
  setChapterRef: r,
  isChapterDimmed: i,
  className: o
}) {
  if (t)
    return /* @__PURE__ */ p(Ao, { children: /* @__PURE__ */ p("div", { className: G("tw-grid tw-grid-cols-6 tw-gap-1", o), children: Array.from({ length: Ur(t) }, (s, a) => a + 1).map((s) => /* @__PURE__ */ p(
      Ko,
      {
        value: `${t} ${yo[t] || ""} ${s}`,
        onSelect: () => n(s),
        ref: r(s),
        className: G(
          "tw-h-8 tw-w-8 tw-cursor-pointer tw-justify-center tw-rounded-md tw-text-center tw-text-sm",
          {
            "tw-bg-primary tw-text-primary-foreground": t === e.book && s === e.chapterNum
          },
          {
            "tw-bg-muted/50 tw-text-muted-foreground/50": (i == null ? void 0 : i(s)) ?? !1
          }
        ),
        children: s
      },
      s
    )) }) });
}
function AL({
  scrRef: t,
  handleSubmit: e,
  className: n,
  getActiveBookIds: r,
  localizedBookNames: i,
  localizedStrings: o,
  recentSearches: s,
  onAddRecentSearch: a,
  id: l
}) {
  const c = Jt(), [u, f] = fe(!1), [d, h] = fe(""), [g, w] = fe(""), [v, _] = fe("books"), [b, C] = fe(void 0), [D, R] = fe(!1), N = xe(void 0), L = xe(void 0), M = xe(void 0), O = xe(void 0), j = xe({}), k = be(
    (ae) => {
      e(ae), a && a(ae);
    },
    [e, a]
  ), I = Ne(() => r ? r() : Ay, [r]), S = Ne(() => ({
    [Ue.OT]: I.filter((Te) => nt.isBookOT(Te)),
    [Ue.NT]: I.filter((Te) => nt.isBookNT(Te)),
    [Ue.DC]: I.filter((Te) => nt.isBookDC(Te)),
    [Ue.Extra]: I.filter((Te) => nt.extraBooks().includes(Te))
  }), [I]), P = Ne(() => Object.values(S).flat(), [S]), T = Ne(() => {
    if (!g.trim()) return S;
    const ae = {
      [Ue.OT]: [],
      [Ue.NT]: [],
      [Ue.DC]: [],
      [Ue.Extra]: []
    };
    return [Ue.OT, Ue.NT, Ue.DC, Ue.Extra].forEach((Be) => {
      ae[Be] = S[Be].filter((Ge) => Hh(Ge, g, i));
    }), ae;
  }, [S, g, i]), A = Ne(
    () => iC(g, P, i),
    [g, P, i]
  ), B = be(() => {
    A && (k({
      book: A.book,
      chapterNum: A.chapterNum ?? 1,
      verseNum: A.verseNum ?? 1
    }), f(!1), w(""), h(""));
  }, [k, A]), V = be(
    (ae) => {
      if (Ur(ae) <= 1) {
        k({
          book: ae,
          chapterNum: 1,
          verseNum: 1
        }), f(!1), w("");
        return;
      }
      C(ae), _("chapters");
    },
    [k]
  ), J = be(
    (ae) => {
      const Te = v === "chapters" ? b : A == null ? void 0 : A.book;
      Te && (k({
        book: Te,
        chapterNum: ae,
        verseNum: 1
      }), f(!1), _("books"), C(void 0), w(""));
    },
    [k, v, b, A]
  ), H = be(
    (ae) => {
      k(ae), f(!1), w("");
    },
    [k]
  ), K = oC(t, P, c, e), ne = be(() => {
    _("books"), C(void 0), setTimeout(() => {
      L.current && L.current.focus();
    }, 0);
  }, []), re = be(
    (ae) => {
      if (!ae && v === "chapters") {
        ne();
        return;
      }
      f(ae), ae && (_("books"), C(void 0), w(""));
    },
    [v, ne]
  ), { otLong: te, ntLong: Q, dcLong: ce, extraLong: pe } = {
    otLong: o == null ? void 0 : o["%scripture_section_ot_long%"],
    ntLong: o == null ? void 0 : o["%scripture_section_nt_long%"],
    dcLong: o == null ? void 0 : o["%scripture_section_dc_long%"],
    extraLong: o == null ? void 0 : o["%scripture_section_extra_long%"]
  }, we = be(
    (ae) => Ty(ae, te, Q, ce, pe),
    [te, Q, ce, pe]
  ), ye = be(
    (ae) => A ? !!A.chapterNum && !ae.toString().includes(A.chapterNum.toString()) : !1,
    [A]
  ), ve = Ne(
    () => gs(
      t,
      i ? ws(t.book, i) : "English"
    ),
    [t, i]
  ), Ee = be((ae) => (Te) => {
    j.current[ae] = Te;
  }, []), de = be((ae) => {
    (ae.key === "Home" || ae.key === "End") && ae.stopPropagation();
  }, []), Re = be(
    (ae) => {
      if (ae.ctrlKey) return;
      const { isLetter: Te, isDigit: Be } = jg(ae.key);
      if (v === "chapters") {
        if (ae.key === "Backspace") {
          ae.preventDefault(), ae.stopPropagation(), ne();
          return;
        }
        if (Te || Be) {
          if (ae.preventDefault(), ae.stopPropagation(), _("books"), C(void 0), Be && b) {
            const Ge = yo[b];
            w(`${Ge} ${ae.key}`);
          } else
            w(ae.key);
          setTimeout(() => {
            L.current && L.current.focus();
          }, 0);
          return;
        }
      }
      if ((v === "chapters" || v === "books" && A) && ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"].includes(ae.key)) {
        const Ge = v === "chapters" ? b : A == null ? void 0 : A.book;
        if (!Ge) return;
        const rt = (() => {
          if (!d) return 1;
          const $e = d.match(/(\d+)$/);
          return $e ? parseInt($e[1], 10) : 0;
        })(), bt = Ur(Ge);
        if (!bt) return;
        let wt = rt;
        const kt = 6;
        switch (ae.key) {
          case "ArrowLeft":
            rt !== 0 && (wt = rt > 1 ? rt - 1 : bt);
            break;
          case "ArrowRight":
            rt !== 0 && (wt = rt < bt ? rt + 1 : 1);
            break;
          case "ArrowUp":
            wt = rt === 0 ? bt : Math.max(1, rt - kt);
            break;
          case "ArrowDown":
            wt = rt === 0 ? 1 : Math.min(bt, rt + kt);
            break;
          default:
            return;
        }
        wt !== rt && (ae.preventDefault(), ae.stopPropagation(), h(xf(Ge, i, wt)), setTimeout(() => {
          const $e = j.current[wt];
          $e && $e.scrollIntoView({ block: "nearest", behavior: "smooth" });
        }, 0));
      }
    },
    [
      v,
      A,
      ne,
      b,
      d,
      i
    ]
  ), He = be((ae) => {
    if (ae.shiftKey || ae.key === "Tab" || ae.key === " ") return;
    const { isLetter: Te, isDigit: Be } = jg(ae.key);
    (Te || Be) && (ae.preventDefault(), w((Ge) => Ge + ae.key), L.current.focus(), R(!1));
  }, []);
  return Cn(() => {
    const ae = setTimeout(() => {
      if (u && v === "books" && M.current && O.current) {
        const Te = M.current, Be = O.current, Ge = Be.offsetTop, rt = Te.clientHeight, bt = Be.clientHeight, wt = Ge - rt / 2 + bt / 2;
        Te.scrollTo({
          top: Math.max(0, wt),
          behavior: "smooth"
        }), h(xf(t.book));
      }
    }, 0);
    return () => {
      clearTimeout(ae);
    };
  }, [u, v, g, A, t.book]), Cn(() => {
    if (v === "chapters" && b) {
      const ae = b === t.book;
      setTimeout(() => {
        if (M.current)
          if (ae) {
            const Te = j.current[t.chapterNum];
            Te && Te.scrollIntoView({ block: "center", behavior: "smooth" });
          } else
            M.current.scrollTo({ top: 0 });
        N.current && N.current.focus();
      }, 0);
    }
  }, [v, b, A, t.book, t.chapterNum]), /* @__PURE__ */ q(ea, { open: u, onOpenChange: re, children: [
    /* @__PURE__ */ p(ta, { asChild: !0, children: /* @__PURE__ */ p(
      Pe,
      {
        "aria-label": "book-chapter-trigger",
        variant: "outline",
        role: "combobox",
        "aria-expanded": u,
        className: G(
          "tw-h-8 tw-w-full tw-min-w-16 tw-max-w-48 tw-overflow-hidden tw-px-1",
          n
        ),
        children: /* @__PURE__ */ p("span", { className: "tw-truncate", children: ve })
      }
    ) }),
    /* @__PURE__ */ p(Go, { id: l, forceMount: !0, className: "tw-w-[280px] tw-p-0", align: "center", children: /* @__PURE__ */ q(
      Ys,
      {
        ref: N,
        onKeyDown: Re,
        loop: !0,
        value: d,
        onValueChange: h,
        shouldFilter: !1,
        children: [
          v === "books" ? /* @__PURE__ */ q("div", { className: "tw-flex tw-items-end", children: [
            /* @__PURE__ */ q("div", { className: "tw-relative tw-flex-1", children: [
              /* @__PURE__ */ p(
                bl,
                {
                  ref: L,
                  value: g,
                  onValueChange: w,
                  onKeyDown: de,
                  onFocus: () => R(!1),
                  className: s && s.length > 0 ? "!tw-pr-10" : ""
                }
              ),
              s && s.length > 0 && /* @__PURE__ */ p(
                nC,
                {
                  recentSearches: s,
                  onSearchItemSelect: H,
                  renderItem: (ae) => gs(ae, "English"),
                  getItemKey: (ae) => `${ae.book}-${ae.chapterNum}-${ae.verseNum}`,
                  ariaLabel: o == null ? void 0 : o["%history_recentSearches_ariaLabel%"],
                  groupHeading: o == null ? void 0 : o["%history_recent%"]
                }
              )
            ] }),
            /* @__PURE__ */ p("div", { className: "tw-flex tw-items-center tw-gap-1 tw-border-b tw-pe-2", children: K.map(({ onClick: ae, disabled: Te, title: Be, icon: Ge }) => /* @__PURE__ */ p(
              Pe,
              {
                variant: "ghost",
                size: "sm",
                onClick: () => {
                  R(!0), ae();
                },
                disabled: Te,
                className: "tw-h-10 tw-w-4 tw-p-0",
                title: Be,
                onKeyDown: He,
                children: /* @__PURE__ */ p(Ge, {})
              },
              Be
            )) })
          ] }) : /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-border-b tw-px-3 tw-py-2", children: [
            /* @__PURE__ */ p(
              Pe,
              {
                variant: "ghost",
                size: "sm",
                onClick: ne,
                className: "tw-mr-2 tw-h-6 tw-w-6 tw-p-0",
                tabIndex: -1,
                children: c === "ltr" ? /* @__PURE__ */ p(H2, { className: "tw-h-4 tw-w-4" }) : /* @__PURE__ */ p(W2, { className: "tw-h-4 tw-w-4" })
              }
            ),
            b && /* @__PURE__ */ p("span", { tabIndex: -1, className: "tw-text-sm tw-font-medium", children: ws(b, i) })
          ] }),
          !D && /* @__PURE__ */ q(Qs, { ref: M, children: [
            v === "books" && /* @__PURE__ */ q(Lt, { children: [
              !A && Object.entries(T).map(([ae, Te]) => {
                if (Te.length !== 0)
                  return (
                    // We are mapping over filteredBooksByType, which uses Section as key type
                    // eslint-disable-next-line no-type-assertion/no-type-assertion
                    /* @__PURE__ */ p(Ao, { heading: we(ae), children: Te.map((Be) => /* @__PURE__ */ p(
                      Dy,
                      {
                        bookId: Be,
                        onSelect: (Ge) => V(Ge),
                        section: qa(Be),
                        commandValue: `${Be} ${yo[Be]}`,
                        ref: Be === t.book ? O : void 0,
                        localizedBookNames: i
                      },
                      Be
                    )) }, ae)
                  );
              }),
              A && /* @__PURE__ */ p(Ao, { children: /* @__PURE__ */ p(
                Ko,
                {
                  value: `${A.book} ${yo[A.book]} ${A.chapterNum || ""}:${A.verseNum || ""})}`,
                  onSelect: B,
                  className: "tw-font-semibold tw-text-primary",
                  children: gs(
                    {
                      book: A.book,
                      chapterNum: A.chapterNum ?? 1,
                      verseNum: A.verseNum ?? 1
                    },
                    i ? Vh(A.book, i) : void 0
                  )
                },
                "top-match"
              ) }),
              A && Ur(A.book) > 1 && /* @__PURE__ */ q(Lt, { children: [
                /* @__PURE__ */ p("div", { className: "tw-mb-2 tw-px-3 tw-text-sm tw-font-medium tw-text-muted-foreground", children: ws(A.book, i) }),
                /* @__PURE__ */ p(
                  Ug,
                  {
                    bookId: A.book,
                    scrRef: t,
                    onChapterSelect: J,
                    setChapterRef: Ee,
                    isChapterDimmed: ye,
                    className: "tw-px-4 tw-pb-4"
                  }
                )
              ] })
            ] }),
            v === "chapters" && b && /* @__PURE__ */ p(
              Ug,
              {
                bookId: b,
                scrRef: t,
                onChapterSelect: J,
                setChapterRef: Ee,
                className: "tw-p-4"
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const DL = Object.freeze([
  "%scripture_section_ot_long%",
  "%scripture_section_nt_long%",
  "%scripture_section_dc_long%",
  "%scripture_section_extra_long%",
  "%history_recent%",
  "%history_recentSearches_ariaLabel%"
]), sC = Ji(
  "tw-text-sm tw-font-medium tw-leading-none peer-disabled:tw-cursor-not-allowed peer-disabled:tw-opacity-70"
), Vt = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(hy.Root, { ref: n, className: G("pr-twp", sC(), t), ...e }));
Vt.displayName = hy.Root.displayName;
const Wh = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Ka.Root,
    {
      className: G("pr-twp tw-grid tw-gap-2", t),
      ...e,
      ref: n,
      dir: r
    }
  );
});
Wh.displayName = Ka.Root.displayName;
const Oc = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Ka.Item,
  {
    ref: n,
    className: G(
      "pr-twp tw-aspect-square tw-h-4 tw-w-4 tw-rounded-full tw-border tw-border-primary tw-text-primary tw-ring-offset-background focus:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50",
      t
    ),
    ...e,
    children: /* @__PURE__ */ p(Ka.Indicator, { className: "tw-flex tw-items-center tw-justify-center", children: /* @__PURE__ */ p(vu, { className: "tw-h-2.5 tw-w-2.5 tw-fill-current tw-text-current" }) })
  }
));
Oc.displayName = Ka.Item.displayName;
function aC(t) {
  return typeof t == "string" ? t : typeof t == "number" ? t.toString() : t.label;
}
function Cf({
  id: t,
  options: e = [],
  className: n,
  buttonClassName: r,
  popoverContentClassName: i,
  value: o,
  onChange: s = () => {
  },
  getOptionLabel: a = aC,
  icon: l = void 0,
  buttonPlaceholder: c = "",
  textPlaceholder: u = "",
  commandEmptyMessage: f = "No option found",
  buttonVariant: d = "outline",
  alignDropDown: h = "start",
  isDisabled: g = !1,
  ...w
}) {
  const [v, _] = fe(!1);
  return /* @__PURE__ */ q(ea, { open: v, onOpenChange: _, ...w, children: [
    /* @__PURE__ */ p(ta, { asChild: !0, children: /* @__PURE__ */ q(
      Pe,
      {
        variant: d,
        role: "combobox",
        "aria-expanded": v,
        id: t,
        className: G(
          "tw-flex tw-w-[200px] tw-items-center tw-justify-between tw-overflow-hidden",
          r ?? n
        ),
        disabled: g,
        children: [
          /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-1 tw-items-center tw-overflow-hidden", children: [
            l && /* @__PURE__ */ p("div", { className: "tw-pe-2", children: l }),
            /* @__PURE__ */ p("span", { className: G("tw-overflow-hidden tw-text-ellipsis tw-whitespace-nowrap"), children: o ? a(o) : c })
          ] }),
          /* @__PURE__ */ p(Fh, { className: "tw-ms-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" })
        ]
      }
    ) }),
    /* @__PURE__ */ p(
      Go,
      {
        align: h,
        className: G("tw-w-[200px] tw-p-0", i),
        children: /* @__PURE__ */ q(Ys, { children: [
          /* @__PURE__ */ p(bl, { placeholder: u, className: "tw-text-inherit" }),
          /* @__PURE__ */ p(Cu, { children: f }),
          /* @__PURE__ */ p(Qs, { children: e.map((b) => /* @__PURE__ */ q(
            Ko,
            {
              value: a(b),
              onSelect: () => {
                s(b), _(!1);
              },
              children: [
                /* @__PURE__ */ p(
                  xi,
                  {
                    className: G("tw-me-2 tw-h-4 tw-w-4", {
                      "tw-opacity-0": !o || a(o) !== a(b)
                    })
                  }
                ),
                a(b)
              ]
            },
            a(b)
          )) })
        ] })
      }
    )
  ] });
}
function lC({
  startChapter: t,
  endChapter: e,
  handleSelectStartChapter: n,
  handleSelectEndChapter: r,
  isDisabled: i = !1,
  chapterCount: o
}) {
  const s = Ne(
    () => Array.from({ length: o }, (c, u) => u + 1),
    [o]
  );
  return /* @__PURE__ */ q(Lt, { children: [
    /* @__PURE__ */ p(Vt, { htmlFor: "start-chapters-combobox", children: "Chapters" }),
    /* @__PURE__ */ p(
      Cf,
      {
        isDisabled: i,
        onChange: (c) => {
          n(c), c > e && r(c);
        },
        buttonClassName: "tw-me-2 tw-ms-2 tw-w-20",
        options: s,
        getOptionLabel: (c) => c.toString(),
        value: t
      },
      "start chapter"
    ),
    /* @__PURE__ */ p(Vt, { htmlFor: "end-chapters-combobox", children: "to" }),
    /* @__PURE__ */ p(
      Cf,
      {
        isDisabled: i,
        onChange: (c) => {
          r(c), c < t && n(c);
        },
        buttonClassName: "tw-ms-2 tw-w-20",
        options: s,
        getOptionLabel: (c) => c.toString(),
        value: e
      },
      "end chapter"
    )
  ] });
}
var cC = /* @__PURE__ */ ((t) => (t.CURRENT_BOOK = "current book", t.CHOOSE_BOOKS = "choose books", t))(cC || {});
const OL = Object.freeze([
  "%webView_bookSelector_currentBook%",
  "%webView_bookSelector_choose%",
  "%webView_bookSelector_chooseBooks%"
]), Dd = (t, e) => t[e] ?? e;
function ML({
  handleBookSelectionModeChange: t,
  currentBookName: e,
  onSelectBooks: n,
  selectedBookIds: r,
  chapterCount: i,
  endChapter: o,
  handleSelectEndChapter: s,
  startChapter: a,
  handleSelectStartChapter: l,
  localizedStrings: c
}) {
  const u = Dd(c, "%webView_bookSelector_currentBook%"), f = Dd(c, "%webView_bookSelector_choose%"), d = Dd(c, "%webView_bookSelector_chooseBooks%"), [h, g] = fe(
    "current book"
    /* CURRENT_BOOK */
  ), w = (v) => {
    g(v), t(v);
  };
  return /* @__PURE__ */ p(
    Wh,
    {
      className: "pr-twp tw-flex",
      value: h,
      onValueChange: (v) => w(v),
      children: /* @__PURE__ */ q("div", { className: "tw-flex tw-w-full tw-flex-col tw-gap-4", children: [
        /* @__PURE__ */ q("div", { className: "tw-grid tw-grid-cols-[25%,25%,50%]", children: [
          /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center", children: [
            /* @__PURE__ */ p(Oc, {
              value: "current book"
              /* CURRENT_BOOK */
            }),
            /* @__PURE__ */ p(Vt, { className: "tw-ms-1", children: u })
          ] }),
          /* @__PURE__ */ p(Vt, { className: "tw-flex tw-items-center", children: e }),
          /* @__PURE__ */ p("div", { className: "tw-flex tw-items-center tw-justify-end", children: /* @__PURE__ */ p(
            lC,
            {
              isDisabled: h === "choose books",
              handleSelectStartChapter: l,
              handleSelectEndChapter: s,
              chapterCount: i,
              startChapter: a,
              endChapter: o
            }
          ) })
        ] }),
        /* @__PURE__ */ q("div", { className: "tw-grid tw-grid-cols-[25%,50%,25%]", children: [
          /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center", children: [
            /* @__PURE__ */ p(Oc, {
              value: "choose books"
              /* CHOOSE_BOOKS */
            }),
            /* @__PURE__ */ p(Vt, { className: "tw-ms-1", children: d })
          ] }),
          /* @__PURE__ */ p(Vt, { className: "tw-flex tw-items-center", children: r.map((v) => nt.bookIdToEnglishName(v)).join(", ") }),
          /* @__PURE__ */ p(
            Pe,
            {
              disabled: h === "current book",
              onClick: () => n(),
              children: f
            }
          )
        ] })
      ] })
    }
  );
}
const Kh = gl(void 0);
function Nr() {
  const t = wl(Kh);
  if (!t)
    throw new Error("useMenuContext must be used within a MenuContext.Provider.");
  return t;
}
const Ci = Ji("", {
  variants: {
    variant: {
      default: "",
      muted: "hover:tw-bg-muted hover:tw-text-foreground focus:tw-bg-muted focus:tw-text-foreground data-[state=open]:tw-bg-muted data-[state=open]:tw-text-foreground"
    }
  },
  defaultVariants: {
    variant: "default"
  }
}), Gh = dt.Trigger, Oy = dt.Group, uC = dt.Portal, dC = dt.Sub, fC = dt.RadioGroup;
function ku({ variant: t = "default", ...e }) {
  const n = Y.useMemo(
    () => ({
      variant: t
    }),
    [t]
  );
  return /* @__PURE__ */ p(Kh.Provider, { value: n, children: /* @__PURE__ */ p(dt.Root, { ...e }) });
}
const My = Y.forwardRef(({ className: t, inset: e, children: n, ...r }, i) => {
  const o = Nr();
  return /* @__PURE__ */ q(
    dt.SubTrigger,
    {
      ref: i,
      className: G(
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent data-[state=open]:tw-bg-accent",
        e && "tw-pl-8",
        t,
        Ci({ variant: o.variant })
        // CUSTOM use context to add variants
      ),
      ...r,
      children: [
        n,
        /* @__PURE__ */ p(ks, { className: "tw-ml-auto tw-h-4 tw-w-4" })
      ]
    }
  );
});
My.displayName = dt.SubTrigger.displayName;
const Iy = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  dt.SubContent,
  {
    ref: n,
    className: G(
      "pr-twp tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-lg data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...e
  }
));
Iy.displayName = dt.SubContent.displayName;
const yl = Y.forwardRef(({ className: t, sideOffset: e = 4, children: n, ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ p(dt.Portal, { children: /* @__PURE__ */ p(
    dt.Content,
    {
      ref: i,
      sideOffset: e,
      className: G(
        /* adding pr-twp because the dropdown content is added to the dom as a sibling to the app root */
        "pr-twp tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        t
      ),
      ...r,
      children: /* @__PURE__ */ p("div", { dir: o, children: n })
    }
  ) });
});
yl.displayName = dt.Content.displayName;
const Ry = Y.forwardRef(({ className: t, inset: e, ...n }, r) => {
  const i = Jt(), o = Nr();
  return /* @__PURE__ */ p(
    dt.Item,
    {
      ref: r,
      className: G(
        // removed: tw-relative focus:tw-text-accent-foreground
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        e && "tw-pl-8",
        t,
        Ci({ variant: o.variant })
        // CUSTOM use context to add variants
      ),
      ...n,
      dir: i
    }
  );
});
Ry.displayName = dt.Item.displayName;
const Jh = Y.forwardRef(({ className: t, children: e, checked: n, ...r }, i) => {
  const o = Nr();
  return /* @__PURE__ */ q(
    dt.CheckboxItem,
    {
      ref: i,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        t,
        Ci({ variant: o.variant })
        // CUSTOM use context to add variants
      ),
      checked: n,
      ...r,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center ltr:tw-left-2 rtl:tw-right-2", children: /* @__PURE__ */ p(dt.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
        e
      ]
    }
  );
});
Jh.displayName = dt.CheckboxItem.displayName;
const Py = Y.forwardRef(({ className: t, children: e, ...n }, r) => {
  const i = Nr();
  return /* @__PURE__ */ q(
    dt.RadioItem,
    {
      ref: r,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        t,
        Ci({ variant: i.variant })
        // CUSTOM use context to add variants
      ),
      ...n,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center ltr:tw-left-2 rtl:tw-right-2", children: /* @__PURE__ */ p(dt.ItemIndicator, { children: /* @__PURE__ */ p(vu, { className: "tw-h-2 tw-w-2 tw-fill-current" }) }) }),
        e
      ]
    }
  );
});
Py.displayName = dt.RadioItem.displayName;
const Xh = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  dt.Label,
  {
    ref: r,
    className: G("tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold", e && "tw-pl-8", t),
    ...n
  }
));
Xh.displayName = dt.Label.displayName;
const Eu = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  dt.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-muted", t),
    ...e
  }
));
Eu.displayName = dt.Separator.displayName;
function hC({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "span",
    {
      className: G("tw-ms-auto tw-text-xs tw-tracking-widest tw-opacity-60", t),
      ...e
    }
  );
}
hC.displayName = "DropdownMenuShortcut";
function pC({ table: t }) {
  return /* @__PURE__ */ q(ku, { children: [
    /* @__PURE__ */ p(O1, { asChild: !0, children: /* @__PURE__ */ q(Pe, { variant: "outline", size: "sm", className: "tw-ml-auto tw-hidden tw-h-8 lg:tw-flex", children: [
      /* @__PURE__ */ p(K2, { className: "tw-mr-2 tw-h-4 tw-w-4" }),
      "View"
    ] }) }),
    /* @__PURE__ */ q(yl, { align: "end", className: "tw-w-[150px]", children: [
      /* @__PURE__ */ p(Xh, { children: "Toggle columns" }),
      /* @__PURE__ */ p(Eu, {}),
      t.getAllColumns().filter((e) => e.getCanHide()).map((e) => /* @__PURE__ */ p(
        Jh,
        {
          className: "tw-capitalize",
          checked: e.getIsVisible(),
          onCheckedChange: (n) => e.toggleVisibility(!!n),
          children: e.id
        },
        e.id
      ))
    ] })
  ] });
}
const Ns = xt.Root, gC = xt.Group, Ss = xt.Value, wC = Ji(
  "tw-flex tw-h-10 tw-w-full tw-items-center tw-justify-between tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background placeholder:tw-text-muted-foreground focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 [&>span]:tw-line-clamp-1",
  {
    variants: {
      size: {
        default: "tw-h-10 tw-px-4 tw-py-2",
        sm: "tw-h-8 tw-rounded-md tw-px-3",
        lg: "tw-h-11 tw-rounded-md tw-px-8",
        icon: "tw-h-10 tw-w-10"
      }
    },
    defaultVariants: {
      size: "default"
    }
  }
), Oo = Y.forwardRef(({ className: t, children: e, size: n, ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ q(
    xt.Trigger,
    {
      className: G(wC({ size: n, className: t })),
      ref: i,
      ...r,
      dir: o,
      children: [
        e,
        /* @__PURE__ */ p(xt.Icon, { asChild: !0, children: /* @__PURE__ */ p(_u, { className: "tw-h-4 tw-w-4 tw-opacity-50" }) })
      ]
    }
  );
});
Oo.displayName = xt.Trigger.displayName;
const Ly = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  xt.ScrollUpButton,
  {
    ref: n,
    className: G("tw-flex tw-cursor-default tw-items-center tw-justify-center tw-py-1", t),
    ...e,
    children: /* @__PURE__ */ p(G2, { className: "tw-h-4 tw-w-4" })
  }
));
Ly.displayName = xt.ScrollUpButton.displayName;
const $y = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  xt.ScrollDownButton,
  {
    ref: n,
    className: G("tw-flex tw-cursor-default tw-items-center tw-justify-center tw-py-1", t),
    ...e,
    children: /* @__PURE__ */ p(_u, { className: "tw-h-4 tw-w-4" })
  }
));
$y.displayName = xt.ScrollDownButton.displayName;
const Mo = Y.forwardRef(({ className: t, children: e, position: n = "popper", ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ p(xt.Portal, { children: /* @__PURE__ */ q(
    xt.Content,
    {
      ref: i,
      className: G(
        "pr-twp tw-relative tw-z-50 tw-max-h-96 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        n === "popper" && "data-[side=bottom]:tw-translate-y-1 data-[side=left]:tw--translate-x-1 data-[side=right]:tw-translate-x-1 data-[side=top]:tw--translate-y-1",
        t
      ),
      position: n,
      ...r,
      children: [
        /* @__PURE__ */ p(Ly, {}),
        /* @__PURE__ */ p(
          xt.Viewport,
          {
            className: G(
              "tw-p-1",
              n === "popper" && "tw-h-[var(--radix-select-trigger-height)] tw-w-full tw-min-w-[var(--radix-select-trigger-width)]"
            ),
            children: /* @__PURE__ */ p("div", { dir: o, children: e })
          }
        ),
        /* @__PURE__ */ p($y, {})
      ]
    }
  ) });
});
Mo.displayName = xt.Content.displayName;
const mC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  xt.Label,
  {
    ref: n,
    className: G("tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-font-semibold", t),
    ...e
  }
));
mC.displayName = xt.Label.displayName;
const er = Y.forwardRef(({ className: t, children: e, ...n }, r) => /* @__PURE__ */ q(
  xt.Item,
  {
    ref: r,
    className: G(
      "tw-relative tw-flex tw-w-full tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      t
    ),
    ...n,
    children: [
      /* @__PURE__ */ p("span", { className: "tw-absolute tw-start-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(xt.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
      /* @__PURE__ */ p(xt.ItemText, { children: e })
    ]
  }
));
er.displayName = xt.Item.displayName;
const bC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  xt.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-muted", t),
    ...e
  }
));
bC.displayName = xt.Separator.displayName;
function yC({ table: t }) {
  return /* @__PURE__ */ p("div", { className: "tw-flex tw-items-center tw-justify-between tw-px-2 tw-pb-3 tw-pt-3", children: /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-space-x-6 lg:tw-space-x-8", children: [
    /* @__PURE__ */ q("div", { className: "tw-flex-1 tw-text-sm tw-text-muted-foreground", children: [
      t.getFilteredSelectedRowModel().rows.length,
      " of",
      " ",
      t.getFilteredRowModel().rows.length,
      " row(s) selected"
    ] }),
    /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-space-x-2", children: [
      /* @__PURE__ */ p("p", { className: "tw-text-nowrap tw-text-sm tw-font-medium", children: "Rows per page" }),
      /* @__PURE__ */ q(
        Ns,
        {
          value: `${t.getState().pagination.pageSize}`,
          onValueChange: (e) => {
            t.setPageSize(Number(e));
          },
          children: [
            /* @__PURE__ */ p(Oo, { className: "tw-h-8 tw-w-[70px]", children: /* @__PURE__ */ p(Ss, { placeholder: t.getState().pagination.pageSize }) }),
            /* @__PURE__ */ p(Mo, { side: "top", children: [10, 20, 30, 40, 50].map((e) => /* @__PURE__ */ p(er, { value: `${e}`, children: e }, e)) })
          ]
        }
      )
    ] }),
    /* @__PURE__ */ q("div", { className: "tw-flex tw-w-[100px] tw-items-center tw-justify-center tw-text-sm tw-font-medium", children: [
      "Page ",
      t.getState().pagination.pageIndex + 1,
      " of ",
      t.getPageCount()
    ] }),
    /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-space-x-2", children: [
      /* @__PURE__ */ q(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-hidden tw-h-8 tw-w-8 tw-p-0 lg:tw-flex",
          onClick: () => t.setPageIndex(0),
          disabled: !t.getCanPreviousPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to first page" }),
            /* @__PURE__ */ p(J2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      ),
      /* @__PURE__ */ q(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-h-8 tw-w-8 tw-p-0",
          onClick: () => t.previousPage(),
          disabled: !t.getCanPreviousPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to previous page" }),
            /* @__PURE__ */ p(X2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      ),
      /* @__PURE__ */ q(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-h-8 tw-w-8 tw-p-0",
          onClick: () => t.nextPage(),
          disabled: !t.getCanNextPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to next page" }),
            /* @__PURE__ */ p(Y2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      ),
      /* @__PURE__ */ q(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-hidden tw-h-8 tw-w-8 tw-p-0 lg:tw-flex",
          onClick: () => t.setPageIndex(t.getPageCount() - 1),
          disabled: !t.getCanNextPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to last page" }),
            /* @__PURE__ */ p(Q2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      )
    ] })
  ] }) });
}
const zg = `
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [contenteditable],
  tr:not([disabled])
`;
function vC(t) {
  return !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length);
}
function Ga(t, e) {
  const n = e ? `${zg}, ${e}` : zg;
  return Array.from(t.querySelectorAll(n)).filter(
    (r) => !r.hasAttribute("disabled") && !r.getAttribute("aria-hidden") && vC(r)
  );
}
const Nu = Y.forwardRef(({ className: t, stickyHeader: e, ...n }, r) => {
  const i = Y.useRef(null);
  Y.useEffect(() => {
    typeof r == "function" ? r(i.current) : r && "current" in r && (r.current = i.current);
  }, [r]), Y.useEffect(() => {
    const s = i.current;
    if (!s) return;
    const a = () => {
      requestAnimationFrame(() => {
        Ga(s, '[tabindex]:not([tabindex="-1"])').forEach((u) => {
          u.setAttribute("tabindex", "-1");
        });
      });
    };
    a();
    const l = new MutationObserver(() => {
      a();
    });
    return l.observe(s, {
      childList: !0,
      // Watch for added/removed elements
      subtree: !0,
      // Include descendants
      attributes: !0,
      attributeFilter: ["tabindex"]
      // Watch for tabindex changes
    }), () => {
      l.disconnect();
    };
  }, []);
  const o = (s) => {
    const { current: a } = i;
    if (a) {
      if (s.key === "ArrowDown") {
        s.preventDefault(), Ga(a)[0].focus();
        return;
      }
      s.key === " " && document.activeElement === a && s.preventDefault();
    }
  };
  return /* @__PURE__ */ p("div", { className: G("pr-twp tw-relative tw-w-full", { "tw-p-1": e }), children: /* @__PURE__ */ p(
    "table",
    {
      tabIndex: 0,
      onKeyDown: o,
      ref: i,
      className: G(
        "tw-w-full tw-caption-bottom tw-text-sm tw-outline-none",
        // CUSTOM: Add outline-none to remove duplicate outline
        "focus:tw-relative focus:tw-z-10 focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-1 focus:tw-ring-offset-background",
        // CUSTOM: Add focus styles
        t
      ),
      "aria-label": "Table",
      "aria-labelledby": "table-label",
      ...n
    }
  ) });
});
Nu.displayName = "Table";
const Su = Y.forwardRef(({ className: t, stickyHeader: e, ...n }, r) => /* @__PURE__ */ p(
  "thead",
  {
    ref: r,
    className: G(
      {
        "tw-sticky tw-top-[-1px] tw-z-20 tw-bg-background tw-drop-shadow-sm": e
      },
      "[&_tr]:tw-border-b",
      t
    ),
    ...n
  }
));
Su.displayName = "TableHeader";
const Tu = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p("tbody", { ref: n, className: G("[&_tr:last-child]:tw-border-0", t), ...e }));
Tu.displayName = "TableBody";
const _C = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "tfoot",
  {
    ref: n,
    className: G("tw-border-t tw-bg-muted/50 tw-font-medium [&>tr]:last:tw-border-b-0", t),
    ...e
  }
));
_C.displayName = "TableFooter";
function xC(t) {
  Y.useEffect(() => {
    const e = t.current;
    if (!e) return;
    const n = (r) => {
      if (e.contains(document.activeElement)) {
        if (r.key === "ArrowRight" || r.key === "ArrowLeft") {
          r.preventDefault(), r.stopPropagation();
          const i = t.current ? Ga(t.current) : [], o = i.indexOf(document.activeElement), s = r.key === "ArrowRight" ? o + 1 : o - 1;
          s >= 0 && s < i.length && i[s].focus();
        }
        r.key === "Escape" && (r.preventDefault(), e.focus()), (r.key === "ArrowDown" || r.key === "ArrowUp") && r.preventDefault();
      }
    };
    return e.addEventListener("keydown", n), () => {
      e.removeEventListener("keydown", n);
    };
  }, [t]);
}
function CC(t, e, n) {
  let r;
  return n === "ArrowLeft" && e > 0 ? r = t[e - 1] : n === "ArrowRight" && e < t.length - 1 && (r = t[e + 1]), r ? (requestAnimationFrame(() => r.focus()), !0) : !1;
}
function kC(t, e, n) {
  let r;
  return n === "ArrowDown" && e < t.length - 1 ? r = t[e + 1] : n === "ArrowUp" && e > 0 && (r = t[e - 1]), r ? (requestAnimationFrame(() => r.focus()), !0) : !1;
}
const hi = Y.forwardRef(({ className: t, onKeyDown: e, onSelect: n, setFocusAlsoRunsSelect: r = !1, ...i }, o) => {
  const s = Y.useRef(null);
  Y.useEffect(() => {
    typeof o == "function" ? o(s.current) : o && "current" in o && (o.current = s.current);
  }, [o]), xC(s);
  const a = Y.useMemo(
    () => s.current ? Ga(s.current) : [],
    [s]
  ), l = Y.useCallback(
    (u) => {
      const { current: f } = s;
      if (!f || !f.parentElement) return;
      const d = f.closest("table"), h = d ? (
        // getFocusableElements returns an HTMLElement[] but we are filtering for HTMLTableRowElements
        // eslint-disable-next-line no-type-assertion/no-type-assertion
        Ga(d).filter(
          (v) => v.tagName === "TR"
        )
      ) : [], g = h.indexOf(f), w = a.indexOf(
        // activeElement is generic Element, so we need to cast it to HTMLElement
        // eslint-disable-next-line no-type-assertion/no-type-assertion
        document.activeElement
      );
      if (u.key === "ArrowDown" || u.key === "ArrowUp")
        u.preventDefault(), kC(h, g, u.key);
      else if (u.key === "ArrowLeft" || u.key === "ArrowRight")
        u.preventDefault(), CC(a, w, u.key);
      else if (u.key === "Escape") {
        u.preventDefault();
        const v = f.closest("table");
        v && v.focus();
      }
      e == null || e(u);
    },
    [s, a, e]
  ), c = Y.useCallback(
    (u) => {
      r && (n == null || n(u));
    },
    [r, n]
  );
  return /* @__PURE__ */ p(
    "tr",
    {
      ref: s,
      tabIndex: -1,
      onKeyDown: l,
      onFocus: c,
      className: G(
        // CUSTOM: Add focus styles and add tw-outline-none so there isn't a duplicate outline
        "tw-border-b tw-outline-none tw-transition-colors hover:tw-bg-muted/50",
        "focus:tw-relative focus:tw-z-10 focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-1 focus:tw-ring-offset-background",
        "data-[state=selected]:tw-bg-muted",
        t
      ),
      ...i
    }
  );
});
hi.displayName = "TableRow";
const Ja = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "th",
  {
    ref: n,
    className: G(
      "tw-h-12 tw-px-4 tw-text-start tw-align-middle tw-font-medium tw-text-muted-foreground [&:has([role=checkbox])]:tw-pe-0",
      t
    ),
    ...e
  }
));
Ja.displayName = "TableHead";
const vo = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "td",
  {
    ref: n,
    className: G("tw-p-4 tw-align-middle [&:has([role=checkbox])]:tw-pe-0", t),
    ...e
  }
));
vo.displayName = "TableCell";
const EC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "caption",
  {
    ref: n,
    className: G("tw-mt-4 tw-text-sm tw-text-muted-foreground", t),
    ...e
  }
));
EC.displayName = "TableCaption";
function kf({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "div",
    {
      className: G("pr-twp tw-animate-pulse tw-rounded-md tw-bg-muted", t),
      ...e
    }
  );
}
function NC({
  columns: t,
  data: e,
  enablePagination: n = !1,
  showPaginationControls: r = !1,
  showColumnVisibilityControls: i = !1,
  stickyHeader: o = !1,
  onRowClickHandler: s = () => {
  },
  id: a,
  isLoading: l = !1,
  noResultsMessage: c
}) {
  var N;
  const [u, f] = fe([]), [d, h] = fe([]), [g, w] = fe({}), [v, _] = fe({}), b = Ne(() => e ?? [], [e]), C = py({
    data: b,
    columns: t,
    getCoreRowModel: wy(),
    ...n && { getPaginationRowModel: T1() },
    onSortingChange: f,
    getSortedRowModel: gy(),
    onColumnFiltersChange: h,
    getFilteredRowModel: S1(),
    onColumnVisibilityChange: w,
    onRowSelectionChange: _,
    state: {
      sorting: u,
      columnFilters: d,
      columnVisibility: g,
      rowSelection: v
    }
  }), D = C.getVisibleFlatColumns();
  let R;
  return l ? R = Array.from({ length: 10 }).map((O, j) => `skeleton-row-${j}`).map((O) => /* @__PURE__ */ p(hi, { children: /* @__PURE__ */ p(vo, { colSpan: D.length ?? t.length, className: "tw-border-0 tw-p-0", children: /* @__PURE__ */ p("div", { className: "tw-w-full tw-py-2", children: /* @__PURE__ */ p(kf, { className: "tw-h-14 tw-w-full tw-rounded-md" }) }) }) }, O)) : ((N = C.getRowModel().rows) == null ? void 0 : N.length) > 0 ? R = C.getRowModel().rows.map((L) => /* @__PURE__ */ p(
    hi,
    {
      onClick: () => s(L, C),
      "data-state": L.getIsSelected() && "selected",
      children: L.getVisibleCells().map((M) => /* @__PURE__ */ p(vo, { children: ja(M.column.columnDef.cell, M.getContext()) }, M.id))
    },
    L.id
  )) : R = /* @__PURE__ */ p(hi, { children: /* @__PURE__ */ p(vo, { colSpan: t.length, className: "tw-h-24 tw-text-center", children: c }) }), /* @__PURE__ */ q("div", { className: "pr-twp", id: a, children: [
    i && /* @__PURE__ */ p(pC, { table: C }),
    /* @__PURE__ */ q(Nu, { stickyHeader: o, children: [
      /* @__PURE__ */ p(Su, { stickyHeader: o, children: C.getHeaderGroups().map((L) => /* @__PURE__ */ p(hi, { children: L.headers.map((M) => /* @__PURE__ */ p(Ja, { children: M.isPlaceholder ? void 0 : ja(M.column.columnDef.header, M.getContext()) }, M.id)) }, L.id)) }),
      /* @__PURE__ */ p(Tu, { children: R })
    ] }),
    n && /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-justify-end tw-space-x-2 tw-py-4", children: [
      /* @__PURE__ */ p(
        Pe,
        {
          variant: "outline",
          size: "sm",
          onClick: () => C.previousPage(),
          disabled: !C.getCanPreviousPage(),
          children: "Previous"
        }
      ),
      /* @__PURE__ */ p(
        Pe,
        {
          variant: "outline",
          size: "sm",
          onClick: () => C.nextPage(),
          disabled: !C.getCanNextPage(),
          children: "Next"
        }
      )
    ] }),
    n && r && /* @__PURE__ */ p(yC, { table: C })
  ] });
}
function IL({ id: t, markdown: e, className: n, anchorTarget: r }) {
  const i = Ne(
    () => ({
      overrides: {
        a: {
          props: {
            target: r
          }
        }
      }
    }),
    [r]
  );
  return /* @__PURE__ */ p("div", { id: t, className: G("pr-twp tw-prose", n), children: /* @__PURE__ */ p(M1, { options: i, children: e }) });
}
const SC = Object.freeze([
  "%webView_error_dump_header%",
  "%webView_error_dump_info_message%"
]), Vg = (t, e) => t[e] ?? e;
function TC({
  errorDetails: t,
  handleCopyNotify: e,
  localizedStrings: n,
  id: r
}) {
  const i = Vg(n, "%webView_error_dump_header%"), o = Vg(n, "%webView_error_dump_info_message%");
  function s() {
    navigator.clipboard.writeText(t), e && e();
  }
  return /* @__PURE__ */ q(
    "div",
    {
      id: r,
      className: "tw-inline-flex tw-w-full tw-flex-col tw-items-start tw-justify-start tw-gap-4",
      children: [
        /* @__PURE__ */ q("div", { className: "tw-inline-flex tw-items-start tw-justify-start tw-gap-4 tw-self-stretch", children: [
          /* @__PURE__ */ q("div", { className: "tw-inline-flex tw-flex-1 tw-flex-col tw-items-start tw-justify-start", children: [
            /* @__PURE__ */ p("div", { className: "tw-text-color-text tw-justify-center tw-text-center tw-text-lg tw-font-semibold tw-leading-loose", children: i }),
            /* @__PURE__ */ p("div", { className: "tw-justify-center tw-self-stretch tw-text-sm tw-font-normal tw-leading-tight tw-text-muted-foreground", children: o })
          ] }),
          /* @__PURE__ */ p(Pe, { variant: "secondary", size: "icon", className: "size-8", onClick: () => s(), children: /* @__PURE__ */ p(fy, {}) })
        ] }),
        /* @__PURE__ */ p("div", { className: "tw-prose tw-w-full", children: /* @__PURE__ */ p("pre", { className: "tw-text-xs", children: t }) })
      ]
    }
  );
}
const RL = Object.freeze([
  ...SC,
  "%webView_error_dump_copied_message%"
]);
function PL({
  errorDetails: t,
  handleCopyNotify: e,
  localizedStrings: n,
  children: r,
  className: i,
  id: o
}) {
  const [s, a] = fe(!1), l = () => {
    a(!0), e && e();
  };
  return /* @__PURE__ */ q(ea, { onOpenChange: (u) => {
    u || a(!1);
  }, children: [
    /* @__PURE__ */ p(ta, { asChild: !0, children: r }),
    /* @__PURE__ */ q(Go, { id: o, className: G("tw-min-w-80 tw-max-w-96", i), children: [
      s && n["%webView_error_dump_copied_message%"] && /* @__PURE__ */ p(Vt, { children: n["%webView_error_dump_copied_message%"] }),
      /* @__PURE__ */ p(
        TC,
        {
          errorDetails: t,
          handleCopyNotify: l,
          localizedStrings: n
        }
      )
    ] })
  ] });
}
var AC = /* @__PURE__ */ ((t) => (t[t.Check = 0] = "Check", t[t.Radio = 1] = "Radio", t))(AC || {});
function LL({ id: t, label: e, groups: n }) {
  const [r, i] = fe(
    Object.fromEntries(
      n.map(
        (c, u) => c.itemType === 0 ? [u, []] : void 0
      ).filter((c) => !!c)
    )
  ), [o, s] = fe({}), a = (c, u) => {
    const f = !r[c][u];
    i((h) => (h[c][u] = f, { ...h }));
    const d = n[c].items[u];
    d.onUpdate(d.id, f);
  }, l = (c, u) => {
    s((d) => (d[c] = u, { ...d }));
    const f = n[c].items.find((d) => d.id === u);
    f ? f.onUpdate(u) : console.error(`Could not find dropdown radio item with id '${u}'!`);
  };
  return /* @__PURE__ */ p("div", { id: t, children: /* @__PURE__ */ q(ku, { children: [
    /* @__PURE__ */ p(Gh, { asChild: !0, children: /* @__PURE__ */ q(Pe, { variant: "default", children: [
      /* @__PURE__ */ p(Z2, { size: 16, className: "tw-mr-2 tw-h-4 tw-w-4" }),
      e,
      /* @__PURE__ */ p(_u, { size: 16, className: "tw-ml-2 tw-h-4 tw-w-4" })
    ] }) }),
    /* @__PURE__ */ p(yl, { children: n.map((c, u) => /* @__PURE__ */ q("div", { children: [
      /* @__PURE__ */ p(Xh, { children: c.label }),
      /* @__PURE__ */ p(Oy, { children: c.itemType === 0 ? /* @__PURE__ */ p(Lt, { children: c.items.map((f, d) => /* @__PURE__ */ p("div", { children: /* @__PURE__ */ p(
        Jh,
        {
          checked: r[u][d],
          onCheckedChange: () => a(u, d),
          children: f.label
        }
      ) }, f.id)) }) : /* @__PURE__ */ p(
        fC,
        {
          value: o[u],
          onValueChange: (f) => l(u, f),
          children: c.items.map((f) => /* @__PURE__ */ p("div", { children: /* @__PURE__ */ p(Py, { value: f.id, children: f.label }) }, f.id))
        }
      ) }),
      /* @__PURE__ */ p(Eu, {})
    ] }, c.label)) })
  ] }) });
}
function $L({
  id: t,
  category: e,
  downloads: n,
  languages: r,
  moreInfoUrl: i,
  handleMoreInfoLinkClick: o,
  supportUrl: s,
  handleSupportLinkClick: a
}) {
  const l = new x1("en", {
    notation: "compact",
    compactDisplay: "short"
  }).format(Object.values(n).reduce((u, f) => u + f, 0)), c = () => {
    window.scrollTo(0, document.body.scrollHeight);
  };
  return /* @__PURE__ */ q(
    "div",
    {
      id: t,
      className: "pr-twp tw-flex tw-items-center tw-justify-center tw-gap-4 tw-divide-x tw-border-b tw-border-t tw-py-2 tw-text-center",
      children: [
        e && /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-items-center tw-gap-1", children: [
          /* @__PURE__ */ p("div", { className: "tw-flex", children: /* @__PURE__ */ p("span", { className: "tw-text-xs tw-font-semibold tw-text-foreground", children: e }) }),
          /* @__PURE__ */ p("span", { className: "tw-text-xs tw-text-foreground", children: "CATEGORY" })
        ] }),
        /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-items-center tw-gap-1 tw-ps-4", children: [
          /* @__PURE__ */ q("div", { className: "tw-flex tw-gap-1", children: [
            /* @__PURE__ */ p(e1, { className: "tw-h-4 tw-w-4" }),
            /* @__PURE__ */ p("span", { className: "tw-text-xs tw-font-semibold tw-text-foreground", children: l })
          ] }),
          /* @__PURE__ */ p("span", { className: "tw-text-xs tw-text-foreground", children: "USERS" })
        ] }),
        /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-items-center tw-gap-1 tw-ps-4", children: [
          /* @__PURE__ */ p("div", { className: "tw-flex tw-gap-2", children: r.slice(0, 3).map((u) => /* @__PURE__ */ p("span", { className: "tw-text-xs tw-font-semibold tw-text-foreground", children: u.toUpperCase() }, u)) }),
          r.length > 3 && /* @__PURE__ */ q(
            "button",
            {
              type: "button",
              onClick: () => c(),
              className: "tw-text-xs tw-text-foreground tw-underline",
              children: [
                "+",
                r.length - 3,
                " more languages"
              ]
            }
          )
        ] }),
        (i || s) && /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-gap-1 tw-ps-4", children: [
          i && /* @__PURE__ */ p("div", { className: "tw-flex tw-gap-1", children: /* @__PURE__ */ q(
            Pe,
            {
              onClick: () => o(),
              variant: "link",
              className: "tw-flex tw-h-auto tw-gap-1 tw-py-0 tw-text-xs tw-font-semibold tw-text-foreground",
              children: [
                "Website",
                /* @__PURE__ */ p(t1, { className: "tw-h-4 tw-w-4" })
              ]
            }
          ) }),
          s && /* @__PURE__ */ p("div", { className: "tw-flex tw-gap-1", children: /* @__PURE__ */ q(
            Pe,
            {
              onClick: () => a(),
              variant: "link",
              className: "tw-flex tw-h-auto tw-gap-1 tw-py-0 tw-text-xs tw-font-semibold tw-text-foreground",
              children: [
                "Support",
                /* @__PURE__ */ p(n1, { className: "tw-h-4 tw-w-4" })
              ]
            }
          ) })
        ] })
      ]
    }
  );
}
function DC({ id: t, versionHistory: e }) {
  const [n, r] = fe(!1), i = /* @__PURE__ */ new Date();
  function o(a) {
    const l = new Date(a), c = new Date(i.getTime() - l.getTime()), u = c.getUTCFullYear() - 1970, f = c.getUTCMonth(), d = c.getUTCDate() - 1;
    let h = "";
    return u > 0 ? h = `${u.toString()} year${u === 1 ? "" : "s"} ago` : f > 0 ? h = `${f.toString()} month${f === 1 ? "" : "s"} ago` : d === 0 ? h = "today" : h = `${d.toString()} day${d === 1 ? "" : "s"} ago`, h;
  }
  const s = Object.entries(e).sort((a, l) => l[0].localeCompare(a[0]));
  return /* @__PURE__ */ q("div", { className: "pr-twp", id: t, children: [
    /* @__PURE__ */ p("h3", { className: "tw-text-md tw-font-semibold", children: "What`s New" }),
    /* @__PURE__ */ p("ul", { className: "tw-list-disc tw-pl-5 tw-pr-4 tw-text-xs tw-text-foreground", children: (n ? s : s.slice(0, 5)).map((a) => /* @__PURE__ */ q("div", { className: "tw-mt-3 tw-flex tw-justify-between", children: [
      /* @__PURE__ */ p("div", { className: "tw-text-foreground", children: /* @__PURE__ */ p("li", { className: "tw-prose tw-text-xs", children: /* @__PURE__ */ p("span", { children: a[1].description }) }) }),
      /* @__PURE__ */ q("div", { className: "tw-justify-end tw-text-right", children: [
        /* @__PURE__ */ q("div", { children: [
          "Version ",
          a[0]
        ] }),
        /* @__PURE__ */ p("div", { children: o(a[1].date) })
      ] })
    ] }, a[0])) }),
    s.length > 5 && /* @__PURE__ */ p(
      "button",
      {
        type: "button",
        onClick: () => r(!n),
        className: "tw-text-xs tw-text-foreground tw-underline",
        children: n ? "Show Less Version History" : "Show All Version History"
      }
    )
  ] });
}
function FL({
  id: t,
  publisherDisplayName: e,
  fileSize: n,
  locales: r,
  versionHistory: i,
  currentVersion: o
}) {
  const s = Ne(() => C1(n), [n]), l = ((c) => {
    const u = new Intl.DisplayNames(k1(), { type: "language" });
    return c.map((f) => u.of(f));
  })(r);
  return /* @__PURE__ */ p("div", { id: t, className: "pr-twp tw-border-t tw-py-2", children: /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-gap-2 tw-divide-y", children: [
    Object.entries(i).length > 0 && /* @__PURE__ */ p(DC, { versionHistory: i }),
    /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-gap-2 tw-py-2", children: [
      /* @__PURE__ */ p("h2", { className: "tw-text-md tw-font-semibold", children: "Information" }),
      /* @__PURE__ */ q("div", { className: "tw-flex tw-items-start tw-justify-between tw-text-xs tw-text-foreground", children: [
        /* @__PURE__ */ q("p", { className: "tw-flex tw-flex-col tw-justify-start tw-gap-1", children: [
          /* @__PURE__ */ p("span", { children: "Publisher" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: e }),
          /* @__PURE__ */ p("span", { children: "Size" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: s })
        ] }),
        /* @__PURE__ */ p("div", { className: "tw-flex tw-w-3/4 tw-items-center tw-justify-between tw-text-xs tw-text-foreground", children: /* @__PURE__ */ q("p", { className: "tw-flex tw-flex-col tw-justify-start tw-gap-1", children: [
          /* @__PURE__ */ p("span", { children: "Version" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: o }),
          /* @__PURE__ */ p("span", { children: "Languages" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: l.join(", ") })
        ] }) })
      ] })
    ] })
  ] }) });
}
const OC = Ji(
  "pr-twp tw-inline-flex tw-items-center tw-rounded-full tw-px-2.5 tw-py-0.5 tw-text-xs tw-font-semibold tw-transition-colors focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2",
  {
    variants: {
      variant: {
        default: "tw-border tw-border-transparent tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/80",
        secondary: "tw-border tw-border-transparent tw-bg-secondary tw-text-secondary-foreground hover:tw-bg-secondary/80",
        muted: "tw-border tw-border-transparent tw-bg-muted tw-text-muted-foreground hover:tw-bg-muted/80",
        destructive: "tw-border tw-border-transparent tw-bg-destructive tw-text-destructive-foreground hover:tw-bg-destructive/80",
        outline: "tw-border tw-text-foreground",
        blueIndicator: "tw-w-[5px] tw-h-[5px] tw-bg-blue-400 tw-px-0",
        mutedIndicator: "tw-w-[5px] tw-h-[5px] tw-bg-zinc-400 tw-px-0",
        ghost: "hover:tw-bg-accent hover:tw-text-accent-foreground tw-text-mu"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), Mc = Y.forwardRef(
  ({ className: t, variant: e, ...n }, r) => /* @__PURE__ */ p("div", { ref: r, className: G("pr-twp", OC({ variant: e }), t), ...n })
);
Mc.displayName = "Badge";
function MC({
  entries: t,
  selected: e,
  onChange: n,
  placeholder: r,
  hasToggleAllFeature: i = !1,
  selectAllText: o = "Select All",
  clearAllText: s = "Clear All",
  commandEmptyMessage: a = "No entries found",
  customSelectedText: l,
  isOpen: c = void 0,
  onOpenChange: u = void 0,
  isDisabled: f = !1,
  sortSelected: d = !1,
  icon: h = void 0,
  className: g = void 0,
  variant: w = "ghost",
  id: v
}) {
  const [_, b] = fe(!1), C = be(
    (j) => {
      var I;
      const k = (I = t.find((S) => S.label === j)) == null ? void 0 : I.value;
      k && n(
        e.includes(k) ? e.filter((S) => S !== k) : [...e, k]
      );
    },
    [t, e, n]
  ), D = () => l || r, R = Ne(() => {
    if (!d) return t;
    const j = t.filter((I) => I.starred).sort((I, S) => I.label.localeCompare(S.label)), k = t.filter((I) => !I.starred).sort((I, S) => {
      const P = e.includes(I.value), T = e.includes(S.value);
      return P && !T ? -1 : !P && T ? 1 : I.label.localeCompare(S.label);
    });
    return [...j, ...k];
  }, [t, e, d]), N = () => {
    n(t.map((j) => j.value));
  }, L = () => {
    n([]);
  }, M = c ?? _;
  return /* @__PURE__ */ p("div", { id: v, className: g, children: /* @__PURE__ */ q(ea, { open: M, onOpenChange: u ?? b, children: [
    /* @__PURE__ */ p(ta, { asChild: !0, children: /* @__PURE__ */ q(
      Pe,
      {
        variant: w,
        role: "combobox",
        "aria-expanded": M,
        className: "tw-group tw-w-full tw-justify-between",
        disabled: f,
        children: [
          /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-gap-2", children: [
            h && /* @__PURE__ */ p("div", { className: "tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50", children: /* @__PURE__ */ p("span", { className: "tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center", children: h }) }),
            /* @__PURE__ */ p("div", { className: "tw-font-normal", children: D() })
          ] }),
          /* @__PURE__ */ p(Fh, { className: "tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" })
        ]
      }
    ) }),
    /* @__PURE__ */ p(Go, { align: "start", className: "tw-w-full tw-p-0", children: /* @__PURE__ */ q(Ys, { children: [
      /* @__PURE__ */ p(bl, { placeholder: `Search ${r.toLowerCase()}...` }),
      i && /* @__PURE__ */ q("div", { className: "tw-flex tw-justify-between tw-border-b tw-p-2", children: [
        /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: N, children: o }),
        /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: L, children: s })
      ] }),
      /* @__PURE__ */ q(Qs, { children: [
        /* @__PURE__ */ p(Cu, { children: a }),
        /* @__PURE__ */ p(Ao, { children: R.map((j) => /* @__PURE__ */ q(
          Ko,
          {
            value: j.label,
            onSelect: C,
            className: "tw-flex tw-items-center tw-gap-2",
            children: [
              /* @__PURE__ */ p("div", { className: "w-4", children: /* @__PURE__ */ p(
                xi,
                {
                  className: G(
                    "tw-h-4 tw-w-4",
                    e.includes(j.value) ? "tw-opacity-100" : "tw-opacity-0"
                  )
                }
              ) }),
              j.starred && /* @__PURE__ */ p(r1, { className: "tw-h-4 tw-w-4" }),
              /* @__PURE__ */ p("div", { className: "tw-flex-grow", children: j.label }),
              j.secondaryLabel && /* @__PURE__ */ p("div", { className: "tw-text-end tw-text-muted-foreground", children: j.secondaryLabel })
            ]
          },
          j.label
        )) })
      ] })
    ] }) })
  ] }) });
}
function BL({
  entries: t,
  selected: e,
  onChange: n,
  placeholder: r,
  commandEmptyMessage: i,
  customSelectedText: o,
  isDisabled: s,
  sortSelected: a,
  icon: l,
  className: c,
  badgesPlaceholder: u,
  id: f
}) {
  return /* @__PURE__ */ q("div", { id: f, className: "tw-flex tw-items-center tw-gap-2", children: [
    /* @__PURE__ */ p(
      MC,
      {
        entries: t,
        selected: e,
        onChange: n,
        placeholder: r,
        commandEmptyMessage: i,
        customSelectedText: o,
        isDisabled: s,
        sortSelected: a,
        icon: l,
        className: c
      }
    ),
    e.length > 0 ? /* @__PURE__ */ p("div", { className: "tw-flex tw-flex-wrap tw-items-center tw-gap-2", children: e.map((d) => {
      var h;
      return /* @__PURE__ */ q(Mc, { variant: "muted", className: "tw-flex tw-items-center tw-gap-1", children: [
        /* @__PURE__ */ p(
          Pe,
          {
            variant: "ghost",
            size: "icon",
            className: "tw-h-4 tw-w-4 tw-p-0 hover:tw-bg-transparent",
            onClick: () => n(e.filter((g) => g !== d)),
            children: /* @__PURE__ */ p(yu, { className: "tw-h-3 tw-w-3" })
          }
        ),
        (h = t.find((g) => g.value === d)) == null ? void 0 : h.label
      ] }, d);
    }) }) : /* @__PURE__ */ p(Vt, { children: u })
  ] });
}
var Mi = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function IC(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var je = {}, qt = {}, Hg;
function na() {
  if (Hg) return qt;
  Hg = 1;
  function t(_, b, C) {
    if (C === void 0 && (C = Array.prototype), _ && typeof C.find == "function")
      return C.find.call(_, b);
    for (var D = 0; D < _.length; D++)
      if (n(_, D)) {
        var R = _[D];
        if (b.call(void 0, R, D, _))
          return R;
      }
  }
  function e(_, b) {
    return b === void 0 && (b = Object), b && typeof b.getOwnPropertyDescriptors == "function" && (_ = b.create(null, b.getOwnPropertyDescriptors(_))), b && typeof b.freeze == "function" ? b.freeze(_) : _;
  }
  function n(_, b) {
    return Object.prototype.hasOwnProperty.call(_, b);
  }
  function r(_, b) {
    if (_ === null || typeof _ != "object")
      throw new TypeError("target is not an object");
    for (var C in b)
      n(b, C) && (_[C] = b[C]);
    return _;
  }
  var i = e({
    allowfullscreen: !0,
    async: !0,
    autofocus: !0,
    autoplay: !0,
    checked: !0,
    controls: !0,
    default: !0,
    defer: !0,
    disabled: !0,
    formnovalidate: !0,
    hidden: !0,
    ismap: !0,
    itemscope: !0,
    loop: !0,
    multiple: !0,
    muted: !0,
    nomodule: !0,
    novalidate: !0,
    open: !0,
    playsinline: !0,
    readonly: !0,
    required: !0,
    reversed: !0,
    selected: !0
  });
  function o(_) {
    return n(i, _.toLowerCase());
  }
  var s = e({
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
  });
  function a(_) {
    return n(s, _.toLowerCase());
  }
  var l = e({
    script: !1,
    style: !1,
    textarea: !0,
    title: !0
  });
  function c(_) {
    var b = _.toLowerCase();
    return n(l, b) && !l[b];
  }
  function u(_) {
    var b = _.toLowerCase();
    return n(l, b) && l[b];
  }
  function f(_) {
    return _ === h.HTML;
  }
  function d(_) {
    return f(_) || _ === h.XML_XHTML_APPLICATION;
  }
  var h = e({
    /**
     * `text/html`, the only mime type that triggers treating an XML document as HTML.
     *
     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/HTML Wikipedia
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring
     *      WHATWG HTML Spec
     */
    HTML: "text/html",
    /**
     * `application/xml`, the standard mime type for XML documents.
     *
     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType
     *      registration
     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303
     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
     */
    XML_APPLICATION: "application/xml",
    /**
     * `text/xml`, an alias for `application/xml`.
     *
     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303
     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
     */
    XML_TEXT: "text/xml",
    /**
     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,
     * but is parsed as an XML document.
     *
     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType
     *      registration
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec
     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia
     */
    XML_XHTML_APPLICATION: "application/xhtml+xml",
    /**
     * `image/svg+xml`,
     *
     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration
     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1
     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia
     */
    XML_SVG_IMAGE: "image/svg+xml"
  }), g = Object.keys(h).map(function(_) {
    return h[_];
  });
  function w(_) {
    return g.indexOf(_) > -1;
  }
  var v = e({
    /**
     * The XHTML namespace.
     *
     * @see http://www.w3.org/1999/xhtml
     */
    HTML: "http://www.w3.org/1999/xhtml",
    /**
     * The SVG namespace.
     *
     * @see http://www.w3.org/2000/svg
     */
    SVG: "http://www.w3.org/2000/svg",
    /**
     * The `xml:` namespace.
     *
     * @see http://www.w3.org/XML/1998/namespace
     */
    XML: "http://www.w3.org/XML/1998/namespace",
    /**
     * The `xmlns:` namespace.
     *
     * @see https://www.w3.org/2000/xmlns/
     */
    XMLNS: "http://www.w3.org/2000/xmlns/"
  });
  return qt.assign = r, qt.find = t, qt.freeze = e, qt.HTML_BOOLEAN_ATTRIBUTES = i, qt.HTML_RAW_TEXT_ELEMENTS = l, qt.HTML_VOID_ELEMENTS = s, qt.hasDefaultHTMLNamespace = d, qt.hasOwn = n, qt.isHTMLBooleanAttribute = o, qt.isHTMLRawTextElement = c, qt.isHTMLEscapableRawTextElement = u, qt.isHTMLMimeType = f, qt.isHTMLVoidElement = a, qt.isValidMimeType = w, qt.MIME_TYPE = h, qt.NAMESPACE = v, qt;
}
var ls = {}, Wg;
function Au() {
  if (Wg) return ls;
  Wg = 1;
  var t = na();
  function e(d, h) {
    d.prototype = Object.create(Error.prototype, {
      constructor: { value: d },
      name: { value: d.name, enumerable: !0, writable: h }
    });
  }
  var n = t.freeze({
    /**
     * the default value as defined by the spec
     */
    Error: "Error",
    /**
     * @deprecated
     * Use RangeError instead.
     */
    IndexSizeError: "IndexSizeError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    DomstringSizeError: "DomstringSizeError",
    HierarchyRequestError: "HierarchyRequestError",
    WrongDocumentError: "WrongDocumentError",
    InvalidCharacterError: "InvalidCharacterError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    NoDataAllowedError: "NoDataAllowedError",
    NoModificationAllowedError: "NoModificationAllowedError",
    NotFoundError: "NotFoundError",
    NotSupportedError: "NotSupportedError",
    InUseAttributeError: "InUseAttributeError",
    InvalidStateError: "InvalidStateError",
    SyntaxError: "SyntaxError",
    InvalidModificationError: "InvalidModificationError",
    NamespaceError: "NamespaceError",
    /**
     * @deprecated
     * Use TypeError for invalid arguments,
     * "NotSupportedError" DOMException for unsupported operations,
     * and "NotAllowedError" DOMException for denied requests instead.
     */
    InvalidAccessError: "InvalidAccessError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    ValidationError: "ValidationError",
    /**
     * @deprecated
     * Use TypeError instead.
     */
    TypeMismatchError: "TypeMismatchError",
    SecurityError: "SecurityError",
    NetworkError: "NetworkError",
    AbortError: "AbortError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    URLMismatchError: "URLMismatchError",
    QuotaExceededError: "QuotaExceededError",
    TimeoutError: "TimeoutError",
    InvalidNodeTypeError: "InvalidNodeTypeError",
    DataCloneError: "DataCloneError",
    EncodingError: "EncodingError",
    NotReadableError: "NotReadableError",
    UnknownError: "UnknownError",
    ConstraintError: "ConstraintError",
    DataError: "DataError",
    TransactionInactiveError: "TransactionInactiveError",
    ReadOnlyError: "ReadOnlyError",
    VersionError: "VersionError",
    OperationError: "OperationError",
    NotAllowedError: "NotAllowedError",
    OptOutError: "OptOutError"
  }), r = Object.keys(n);
  function i(d) {
    return typeof d == "number" && d >= 1 && d <= 25;
  }
  function o(d) {
    return typeof d == "string" && d.substring(d.length - n.Error.length) === n.Error;
  }
  function s(d, h) {
    i(d) ? (this.name = r[d], this.message = h || "") : (this.message = d, this.name = o(h) ? h : n.Error), Error.captureStackTrace && Error.captureStackTrace(this, s);
  }
  e(s, !0), Object.defineProperties(s.prototype, {
    code: {
      enumerable: !0,
      get: function() {
        var d = r.indexOf(this.name);
        return i(d) ? d : 0;
      }
    }
  });
  for (var a = {
    INDEX_SIZE_ERR: 1,
    DOMSTRING_SIZE_ERR: 2,
    HIERARCHY_REQUEST_ERR: 3,
    WRONG_DOCUMENT_ERR: 4,
    INVALID_CHARACTER_ERR: 5,
    NO_DATA_ALLOWED_ERR: 6,
    NO_MODIFICATION_ALLOWED_ERR: 7,
    NOT_FOUND_ERR: 8,
    NOT_SUPPORTED_ERR: 9,
    INUSE_ATTRIBUTE_ERR: 10,
    INVALID_STATE_ERR: 11,
    SYNTAX_ERR: 12,
    INVALID_MODIFICATION_ERR: 13,
    NAMESPACE_ERR: 14,
    INVALID_ACCESS_ERR: 15,
    VALIDATION_ERR: 16,
    TYPE_MISMATCH_ERR: 17,
    SECURITY_ERR: 18,
    NETWORK_ERR: 19,
    ABORT_ERR: 20,
    URL_MISMATCH_ERR: 21,
    QUOTA_EXCEEDED_ERR: 22,
    TIMEOUT_ERR: 23,
    INVALID_NODE_TYPE_ERR: 24,
    DATA_CLONE_ERR: 25
  }, l = Object.entries(a), c = 0; c < l.length; c++) {
    var u = l[c][0];
    s[u] = l[c][1];
  }
  function f(d, h) {
    this.message = d, this.locator = h, Error.captureStackTrace && Error.captureStackTrace(this, f);
  }
  return e(f), ls.DOMException = s, ls.DOMExceptionName = n, ls.ExceptionCode = a, ls.ParseError = f, ls;
}
var vt = {}, Me = {}, Kg;
function Fy() {
  if (Kg) return Me;
  Kg = 1;
  function t(Ze) {
    try {
      typeof Ze != "function" && (Ze = RegExp);
      var mt = new Ze("𝌆", "u").exec("𝌆");
      return !!mt && mt[0].length === 2;
    } catch {
    }
    return !1;
  }
  var e = t();
  function n(Ze) {
    if (Ze.source[0] !== "[")
      throw new Error(Ze + " can not be used with chars");
    return Ze.source.slice(1, Ze.source.lastIndexOf("]"));
  }
  function r(Ze, mt) {
    if (Ze.source[0] !== "[")
      throw new Error("/" + Ze.source + "/ can not be used with chars_without");
    if (!mt || typeof mt != "string")
      throw new Error(JSON.stringify(mt) + " is not a valid search");
    if (Ze.source.indexOf(mt) === -1)
      throw new Error('"' + mt + '" is not is /' + Ze.source + "/");
    if (mt === "-" && Ze.source.indexOf(mt) !== 1)
      throw new Error('"' + mt + '" is not at the first postion of /' + Ze.source + "/");
    return new RegExp(Ze.source.replace(mt, ""), e ? "u" : "");
  }
  function i(Ze) {
    var mt = this;
    return new RegExp(
      Array.prototype.slice.call(arguments).map(function(gn) {
        var wn = typeof gn == "string";
        if (wn && mt === void 0 && gn === "|")
          throw new Error("use regg instead of reg to wrap expressions with `|`!");
        return wn ? gn : gn.source;
      }).join(""),
      e ? "mu" : "m"
    );
  }
  function o(Ze) {
    if (arguments.length === 0)
      throw new Error("no parameters provided");
    return i.apply(o, ["(?:"].concat(Array.prototype.slice.call(arguments), [")"]));
  }
  var s = "�", a = /[-\x09\x0A\x0D\x20-\x2C\x2E-\uD7FF\uE000-\uFFFD]/;
  e && (a = i("[", n(a), "\\u{10000}-\\u{10FFFF}", "]"));
  var l = /[\x20\x09\x0D\x0A]/, c = n(l), u = i(l, "+"), f = i(l, "*"), d = /[:_a-zA-Z\xC0-\xD6\xD8-\xF6\xF8-\u02FF\u0370-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
  e && (d = i("[", n(d), "\\u{10000}-\\u{10FFFF}", "]"));
  var h = n(d), g = i("[", h, n(/[-.0-9\xB7]/), n(/[\u0300-\u036F\u203F-\u2040]/), "]"), w = i(d, g, "*"), v = i(g, "+"), _ = i("&", w, ";"), b = o(/&#[0-9]+;|&#x[0-9a-fA-F]+;/), C = o(_, "|", b), D = i("%", w, ";"), R = o(
    i('"', o(/[^%&"]/, "|", D, "|", C), "*", '"'),
    "|",
    i("'", o(/[^%&']/, "|", D, "|", C), "*", "'")
  ), N = o('"', o(/[^<&"]/, "|", C), "*", '"', "|", "'", o(/[^<&']/, "|", C), "*", "'"), L = r(d, ":"), M = r(g, ":"), O = i(L, M, "*"), j = i(O, o(":", O), "?"), k = i("^", j, "$"), I = i("(", j, ")"), S = o(/"[^"]*"|'[^']*'/), P = i(/^<\?/, "(", w, ")", o(u, "(", a, "*?)"), "?", /\?>/), T = /[\x20\x0D\x0Aa-zA-Z0-9-'()+,./:=?;!*#@$_%]/, A = o('"', T, '*"', "|", "'", r(T, "'"), "*'"), B = "<!--", V = "-->", J = i(B, o(r(a, "-"), "|", i("-", r(a, "-"))), "*", V), H = "#PCDATA", K = o(
    i(/\(/, f, H, o(f, /\|/, f, j), "*", f, /\)\*/),
    "|",
    i(/\(/, f, H, f, /\)/)
  ), ne = /[?*+]?/, re = i(
    /\([^>]+\)/,
    ne
    /*regg(choice, '|', seq), _children_quantity*/
  ), te = o("EMPTY", "|", "ANY", "|", K, "|", re), Q = "<!ELEMENT", ce = i(Q, u, o(j, "|", D), u, o(te, "|", D), f, ">"), pe = i("NOTATION", u, /\(/, f, w, o(f, /\|/, f, w), "*", f, /\)/), we = i(/\(/, f, v, o(f, /\|/, f, v), "*", f, /\)/), ye = o(pe, "|", we), ve = o(/CDATA|ID|IDREF|IDREFS|ENTITY|ENTITIES|NMTOKEN|NMTOKENS/, "|", ye), Ee = o(/#REQUIRED|#IMPLIED/, "|", o(o("#FIXED", u), "?", N)), de = o(u, w, u, ve, u, Ee), Re = "<!ATTLIST", He = i(Re, u, w, de, "*", f, ">"), ae = "about:legacy-compat", Te = o('"' + ae + '"', "|", "'" + ae + "'"), Be = "SYSTEM", Ge = "PUBLIC", rt = o(o(Be, u, S), "|", o(Ge, u, A, u, S)), bt = i(
    "^",
    o(
      o(Be, u, "(?<SystemLiteralOnly>", S, ")"),
      "|",
      o(Ge, u, "(?<PubidLiteral>", A, ")", u, "(?<SystemLiteral>", S, ")")
    )
  ), wt = o(u, "NDATA", u, w), kt = o(R, "|", o(rt, wt, "?")), $e = "<!ENTITY", Dt = i($e, u, w, u, kt, f, ">"), lt = o(R, "|", rt), ar = i($e, u, "%", u, w, u, lt, f, ">"), Pn = o(Dt, "|", ar), kn = i(Ge, u, A), Ln = i("<!NOTATION", u, w, u, o(rt, "|", kn), f, ">"), Ce = i(f, "=", f), Qe = /1[.]\d+/, Ot = i(u, "version", Ce, o("'", Qe, "'", "|", '"', Qe, '"')), Bt = /[A-Za-z][-A-Za-z0-9._]*/, $n = o(u, "encoding", Ce, o('"', Bt, '"', "|", "'", Bt, "'")), Fn = o(u, "standalone", Ce, o("'", o("yes", "|", "no"), "'", "|", '"', o("yes", "|", "no"), '"')), lr = i(/^<\?xml/, Ot, $n, "?", Fn, "?", f, /\?>/), Bn = "<!DOCTYPE", qn = "<![CDATA[", Xt = "]]>", jn = /<!\[CDATA\[/, Un = /\]\]>/, En = i(a, "*?", Un), Ar = i(jn, En);
  return Me.chars = n, Me.chars_without = r, Me.detectUnicodeSupport = t, Me.reg = i, Me.regg = o, Me.ABOUT_LEGACY_COMPAT = ae, Me.ABOUT_LEGACY_COMPAT_SystemLiteral = Te, Me.AttlistDecl = He, Me.CDATA_START = qn, Me.CDATA_END = Xt, Me.CDSect = Ar, Me.Char = a, Me.Comment = J, Me.COMMENT_START = B, Me.COMMENT_END = V, Me.DOCTYPE_DECL_START = Bn, Me.elementdecl = ce, Me.EntityDecl = Pn, Me.EntityValue = R, Me.ExternalID = rt, Me.ExternalID_match = bt, Me.Name = w, Me.NotationDecl = Ln, Me.Reference = C, Me.PEReference = D, Me.PI = P, Me.PUBLIC = Ge, Me.PubidLiteral = A, Me.QName = j, Me.QName_exact = k, Me.QName_group = I, Me.S = u, Me.SChar_s = c, Me.S_OPT = f, Me.SYSTEM = Be, Me.SystemLiteral = S, Me.UNICODE_REPLACEMENT_CHARACTER = s, Me.UNICODE_SUPPORT = e, Me.XMLDecl = lr, Me;
}
var Gg;
function By() {
  if (Gg) return vt;
  Gg = 1;
  var t = na(), e = t.find, n = t.hasDefaultHTMLNamespace, r = t.hasOwn, i = t.isHTMLMimeType, o = t.isHTMLRawTextElement, s = t.isHTMLVoidElement, a = t.MIME_TYPE, l = t.NAMESPACE, c = Symbol(), u = Au(), f = u.DOMException, d = u.DOMExceptionName, h = Fy();
  function g(y) {
    if (y !== c)
      throw new TypeError("Illegal constructor");
  }
  function w(y) {
    return y !== "";
  }
  function v(y) {
    return y ? y.split(/[\t\n\f\r ]+/).filter(w) : [];
  }
  function _(y, x) {
    return r(y, x) || (y[x] = !0), y;
  }
  function b(y) {
    if (!y) return [];
    var x = v(y);
    return Object.keys(x.reduce(_, {}));
  }
  function C(y) {
    return function(x) {
      return y && y.indexOf(x) !== -1;
    };
  }
  function D(y) {
    if (!h.QName_exact.test(y))
      throw new f(f.INVALID_CHARACTER_ERR, 'invalid character in qualified name "' + y + '"');
  }
  function R(y, x) {
    D(x), y = y || null;
    var $ = null, W = x;
    if (x.indexOf(":") >= 0) {
      var se = x.split(":");
      $ = se[0], W = se[1];
    }
    if ($ !== null && y === null)
      throw new f(f.NAMESPACE_ERR, "prefix is non-null and namespace is null");
    if ($ === "xml" && y !== t.NAMESPACE.XML)
      throw new f(f.NAMESPACE_ERR, 'prefix is "xml" and namespace is not the XML namespace');
    if (($ === "xmlns" || x === "xmlns") && y !== t.NAMESPACE.XMLNS)
      throw new f(
        f.NAMESPACE_ERR,
        'either qualifiedName or prefix is "xmlns" and namespace is not the XMLNS namespace'
      );
    if (y === t.NAMESPACE.XMLNS && $ !== "xmlns" && x !== "xmlns")
      throw new f(
        f.NAMESPACE_ERR,
        'namespace is the XMLNS namespace and neither qualifiedName nor prefix is "xmlns"'
      );
    return [y, $, W];
  }
  function N(y, x) {
    for (var $ in y)
      r(y, $) && (x[$] = y[$]);
  }
  function L(y, x) {
    var $ = y.prototype;
    if (!($ instanceof x)) {
      let W = function() {
      };
      W.prototype = x.prototype, W = new W(), N($, W), y.prototype = $ = W;
    }
    $.constructor != y && (typeof y != "function" && console.error("unknown Class:" + y), $.constructor = y);
  }
  var M = {}, O = M.ELEMENT_NODE = 1, j = M.ATTRIBUTE_NODE = 2, k = M.TEXT_NODE = 3, I = M.CDATA_SECTION_NODE = 4, S = M.ENTITY_REFERENCE_NODE = 5, P = M.ENTITY_NODE = 6, T = M.PROCESSING_INSTRUCTION_NODE = 7, A = M.COMMENT_NODE = 8, B = M.DOCUMENT_NODE = 9, V = M.DOCUMENT_TYPE_NODE = 10, J = M.DOCUMENT_FRAGMENT_NODE = 11, H = M.NOTATION_NODE = 12, K = t.freeze({
    DOCUMENT_POSITION_DISCONNECTED: 1,
    DOCUMENT_POSITION_PRECEDING: 2,
    DOCUMENT_POSITION_FOLLOWING: 4,
    DOCUMENT_POSITION_CONTAINS: 8,
    DOCUMENT_POSITION_CONTAINED_BY: 16,
    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 32
  });
  function ne(y, x) {
    if (x.length < y.length) return ne(x, y);
    var $ = null;
    for (var W in y) {
      if (y[W] !== x[W]) return $;
      $ = y[W];
    }
    return $;
  }
  function re(y) {
    return y.guid || (y.guid = Math.random()), y.guid;
  }
  function te() {
  }
  te.prototype = {
    /**
     * The number of nodes in the list. The range of valid child node indices is 0 to length-1
     * inclusive.
     *
     * @type {number}
     */
    length: 0,
    /**
     * Returns the item at `index`. If index is greater than or equal to the number of nodes in
     * the list, this returns null.
     *
     * @param index
     * Unsigned long Index into the collection.
     * @returns {Node | null}
     * The node at position `index` in the NodeList,
     * or null if that is not a valid index.
     */
    item: function(y) {
      return y >= 0 && y < this.length ? this[y] : null;
    },
    /**
     * Returns a string representation of the NodeList.
     *
     * @param {unknown} nodeFilter
     * __A filter function? Not implemented according to the spec?__.
     * @returns {string}
     * A string representation of the NodeList.
     */
    toString: function(y) {
      for (var x = [], $ = 0; $ < this.length; $++)
        wn(this[$], x, y);
      return x.join("");
    },
    /**
     * Filters the NodeList based on a predicate.
     *
     * @param {function(Node): boolean} predicate
     * - A predicate function to filter the NodeList.
     * @returns {Node[]}
     * An array of nodes that satisfy the predicate.
     * @private
     */
    filter: function(y) {
      return Array.prototype.filter.call(this, y);
    },
    /**
     * Returns the first index at which a given node can be found in the NodeList, or -1 if it is
     * not present.
     *
     * @param {Node} item
     * - The Node item to locate in the NodeList.
     * @returns {number}
     * The first index of the node in the NodeList; -1 if not found.
     * @private
     */
    indexOf: function(y) {
      return Array.prototype.indexOf.call(this, y);
    }
  }, te.prototype[Symbol.iterator] = function() {
    var y = this, x = 0;
    return {
      next: function() {
        return x < y.length ? {
          value: y[x++],
          done: !1
        } : {
          done: !0
        };
      },
      return: function() {
        return {
          done: !0
        };
      }
    };
  };
  function Q(y, x) {
    this._node = y, this._refresh = x, ce(this);
  }
  function ce(y) {
    var x = y._node._inc || y._node.ownerDocument._inc;
    if (y._inc !== x) {
      var $ = y._refresh(y._node);
      if (Qn(y, "length", $.length), !y.$$length || $.length < y.$$length)
        for (var W = $.length; W in y; W++)
          r(y, W) && delete y[W];
      N($, y), y._inc = x;
    }
  }
  Q.prototype.item = function(y) {
    return ce(this), this[y] || null;
  }, L(Q, te);
  function pe() {
  }
  function we(y, x) {
    for (var $ = 0; $ < y.length; ) {
      if (y[$] === x)
        return $;
      $++;
    }
  }
  function ye(y, x, $, W) {
    if (W ? x[we(x, W)] = $ : (x[x.length] = $, x.length++), y) {
      $.ownerElement = y;
      var se = y.ownerDocument;
      se && (W && Be(se, y, W), Te(se, y, $));
    }
  }
  function ve(y, x, $) {
    var W = we(x, $);
    if (W >= 0) {
      for (var se = x.length - 1; W <= se; )
        x[W] = x[++W];
      if (x.length = se, y) {
        var he = y.ownerDocument;
        he && Be(he, y, $), $.ownerElement = null;
      }
    }
  }
  pe.prototype = {
    length: 0,
    item: te.prototype.item,
    /**
     * Get an attribute by name. Note: Name is in lower case in case of HTML namespace and
     * document.
     *
     * @param {string} localName
     * The local name of the attribute.
     * @returns {Attr | null}
     * The attribute with the given local name, or null if no such attribute exists.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name
     */
    getNamedItem: function(y) {
      this._ownerElement && this._ownerElement._isInHTMLDocumentAndNamespace() && (y = y.toLowerCase());
      for (var x = 0; x < this.length; ) {
        var $ = this[x];
        if ($.nodeName === y)
          return $;
        x++;
      }
      return null;
    },
    /**
     * Set an attribute.
     *
     * @param {Attr} attr
     * The attribute to set.
     * @returns {Attr | null}
     * The old attribute with the same local name and namespace URI as the new one, or null if no
     * such attribute exists.
     * @throws {DOMException}
     * With code:
     * - {@link INUSE_ATTRIBUTE_ERR} - If the attribute is already an attribute of another
     * element.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-set
     */
    setNamedItem: function(y) {
      var x = y.ownerElement;
      if (x && x !== this._ownerElement)
        throw new f(f.INUSE_ATTRIBUTE_ERR);
      var $ = this.getNamedItemNS(y.namespaceURI, y.localName);
      return $ === y ? y : (ye(this._ownerElement, this, y, $), $);
    },
    /**
     * Set an attribute, replacing an existing attribute with the same local name and namespace
     * URI if one exists.
     *
     * @param {Attr} attr
     * The attribute to set.
     * @returns {Attr | null}
     * The old attribute with the same local name and namespace URI as the new one, or null if no
     * such attribute exists.
     * @throws {DOMException}
     * Throws a DOMException with the name "InUseAttributeError" if the attribute is already an
     * attribute of another element.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-set
     */
    setNamedItemNS: function(y) {
      return this.setNamedItem(y);
    },
    /**
     * Removes an attribute specified by the local name.
     *
     * @param {string} localName
     * The local name of the attribute to be removed.
     * @returns {Attr}
     * The attribute node that was removed.
     * @throws {DOMException}
     * With code:
     * - {@link DOMException.NOT_FOUND_ERR} if no attribute with the given name is found.
     * @see https://dom.spec.whatwg.org/#dom-namednodemap-removenameditem
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name
     */
    removeNamedItem: function(y) {
      var x = this.getNamedItem(y);
      if (!x)
        throw new f(f.NOT_FOUND_ERR, y);
      return ve(this._ownerElement, this, x), x;
    },
    /**
     * Removes an attribute specified by the namespace and local name.
     *
     * @param {string | null} namespaceURI
     * The namespace URI of the attribute to be removed.
     * @param {string} localName
     * The local name of the attribute to be removed.
     * @returns {Attr}
     * The attribute node that was removed.
     * @throws {DOMException}
     * With code:
     * - {@link DOMException.NOT_FOUND_ERR} if no attribute with the given namespace URI and local
     * name is found.
     * @see https://dom.spec.whatwg.org/#dom-namednodemap-removenameditemns
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace
     */
    removeNamedItemNS: function(y, x) {
      var $ = this.getNamedItemNS(y, x);
      if (!$)
        throw new f(f.NOT_FOUND_ERR, y ? y + " : " + x : x);
      return ve(this._ownerElement, this, $), $;
    },
    /**
     * Get an attribute by namespace and local name.
     *
     * @param {string | null} namespaceURI
     * The namespace URI of the attribute.
     * @param {string} localName
     * The local name of the attribute.
     * @returns {Attr | null}
     * The attribute with the given namespace URI and local name, or null if no such attribute
     * exists.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace
     */
    getNamedItemNS: function(y, x) {
      y || (y = null);
      for (var $ = 0; $ < this.length; ) {
        var W = this[$];
        if (W.localName === x && W.namespaceURI === y)
          return W;
        $++;
      }
      return null;
    }
  }, pe.prototype[Symbol.iterator] = function() {
    var y = this, x = 0;
    return {
      next: function() {
        return x < y.length ? {
          value: y[x++],
          done: !1
        } : {
          done: !0
        };
      },
      return: function() {
        return {
          done: !0
        };
      }
    };
  };
  function Ee() {
  }
  Ee.prototype = {
    /**
     * Test if the DOM implementation implements a specific feature and version, as specified in
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures DOM Features}.
     *
     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given
     * feature is supported. The different implementations fairly diverged in what kind of
     * features were reported. The latest version of the spec settled to force this method to
     * always return true, where the functionality was accurate and in use.
     *
     * @deprecated
     * It is deprecated and modern browsers return true in all cases.
     * @function DOMImplementation#hasFeature
     * @param {string} feature
     * The name of the feature to test.
     * @param {string} [version]
     * This is the version number of the feature to test.
     * @returns {boolean}
     * Always returns true.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN
     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5CED94D7 DOM Level 3 Core
     */
    hasFeature: function(y, x) {
      return !0;
    },
    /**
     * Creates a DOM Document object of the specified type with its document element. Note that
     * based on the {@link DocumentType}
     * given to create the document, the implementation may instantiate specialized
     * {@link Document} objects that support additional features than the "Core", such as "HTML"
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#DOM2HTML DOM Level 2 HTML}.
     * On the other hand, setting the {@link DocumentType} after the document was created makes
     * this very unlikely to happen. Alternatively, specialized {@link Document} creation methods,
     * such as createHTMLDocument
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#DOM2HTML DOM Level 2 HTML},
     * can be used to obtain specific types of {@link Document} objects.
     *
     * __It behaves slightly different from the description in the living standard__:
     * - There is no interface/class `XMLDocument`, it returns a `Document`
     * instance (with it's `type` set to `'xml'`).
     * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     *
     * @function DOMImplementation.createDocument
     * @param {string | null} namespaceURI
     * The
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-namespaceURI namespace URI}
     * of the document element to create or null.
     * @param {string | null} qualifiedName
     * The
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-qualifiedname qualified name}
     * of the document element to be created or null.
     * @param {DocumentType | null} [doctype=null]
     * The type of document to be created or null. When doctype is not null, its
     * {@link Node#ownerDocument} attribute is set to the document being created. Default is
     * `null`
     * @returns {Document}
     * A new {@link Document} object with its document element. If the NamespaceURI,
     * qualifiedName, and doctype are null, the returned {@link Document} is empty with no
     * document element.
     * @throws {DOMException}
     * With code:
     *
     * - `INVALID_CHARACTER_ERR`: Raised if the specified qualified name is not an XML name
     * according to {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#XML XML 1.0}.
     * - `NAMESPACE_ERR`: Raised if the qualifiedName is malformed, if the qualifiedName has a
     * prefix and the namespaceURI is null, or if the qualifiedName is null and the namespaceURI
     * is different from null, or if the qualifiedName has a prefix that is "xml" and the
     * namespaceURI is different from "{@link http://www.w3.org/XML/1998/namespace}"
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#Namespaces XML Namespaces},
     * or if the DOM implementation does not support the "XML" feature but a non-null namespace
     * URI was provided, since namespaces were defined by XML.
     * - `WRONG_DOCUMENT_ERR`: Raised if doctype has already been used with a different document
     * or was created from a different implementation.
     * - `NOT_SUPPORTED_ERR`: May be raised if the implementation does not support the feature
     * "XML" and the language exposed through the Document does not support XML Namespaces (such
     * as {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#HTML40 HTML 4.01}).
     * @since DOM Level 2.
     * @see {@link #createHTMLDocument}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument DOM Living Standard
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocument DOM
     *      Level 3 Core
     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM
     *      Level 2 Core (initial)
     */
    createDocument: function(y, x, $) {
      var W = a.XML_APPLICATION;
      y === l.HTML ? W = a.XML_XHTML_APPLICATION : y === l.SVG && (W = a.XML_SVG_IMAGE);
      var se = new ae(c, { contentType: W });
      if (se.implementation = this, se.childNodes = new te(), se.doctype = $ || null, $ && se.appendChild($), x) {
        var he = se.createElementNS(y, x);
        se.appendChild(he);
      }
      return se;
    },
    /**
     * Creates an empty DocumentType node. Entity declarations and notations are not made
     * available. Entity reference expansions and default attribute additions do not occur.
     *
     * **This behavior is slightly different from the one in the specs**:
     * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     * - `publicId` and `systemId` contain the raw data including any possible quotes,
     *   so they can always be serialized back to the original value
     * - `internalSubset` contains the raw string between `[` and `]` if present,
     *   but is not parsed or validated in any form.
     *
     * @function DOMImplementation#createDocumentType
     * @param {string} qualifiedName
     * The {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-qualifiedname qualified
     * name} of the document type to be created.
     * @param {string} [publicId]
     * The external subset public identifier.
     * @param {string} [systemId]
     * The external subset system identifier.
     * @param {string} [internalSubset]
     * the internal subset or an empty string if it is not present
     * @returns {DocumentType}
     * A new {@link DocumentType} node with {@link Node#ownerDocument} set to null.
     * @throws {DOMException}
     * With code:
     *
     * - `INVALID_CHARACTER_ERR`: Raised if the specified qualified name is not an XML name
     * according to {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#XML XML 1.0}.
     * - `NAMESPACE_ERR`: Raised if the qualifiedName is malformed.
     * - `NOT_SUPPORTED_ERR`: May be raised if the implementation does not support the feature
     * "XML" and the language exposed through the Document does not support XML Namespaces (such
     * as {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#HTML40 HTML 4.01}).
     * @since DOM Level 2.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType
     *      MDN
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living
     *      Standard
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-3-Core-DOM-createDocType DOM
     *      Level 3 Core
     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM
     *      Level 2 Core
     * @see https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#050
     * @see https://www.w3.org/TR/DOM-Level-2-Core/#core-ID-Core-DocType-internalSubset
     * @prettierignore
     */
    createDocumentType: function(y, x, $, W) {
      D(y);
      var se = new Bn(c);
      return se.name = y, se.nodeName = y, se.publicId = x || "", se.systemId = $ || "", se.internalSubset = W || "", se.childNodes = new te(), se;
    },
    /**
     * Returns an HTML document, that might already have a basic DOM structure.
     *
     * __It behaves slightly different from the description in the living standard__:
     * - If the first argument is `false` no initial nodes are added (steps 3-7 in the specs are
     * omitted)
     * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     *
     * @param {string | false} [title]
     * A string containing the title to give the new HTML document.
     * @returns {Document}
     * The HTML document.
     * @since WHATWG Living Standard.
     * @see {@link #createDocument}
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createhtmldocument
     * @see https://dom.spec.whatwg.org/#html-document
     */
    createHTMLDocument: function(y) {
      var x = new ae(c, { contentType: a.HTML });
      if (x.implementation = this, x.childNodes = new te(), y !== !1) {
        x.doctype = this.createDocumentType("html"), x.doctype.ownerDocument = x, x.appendChild(x.doctype);
        var $ = x.createElement("html");
        x.appendChild($);
        var W = x.createElement("head");
        if ($.appendChild(W), typeof y == "string") {
          var se = x.createElement("title");
          se.appendChild(x.createTextNode(y)), W.appendChild(se);
        }
        $.appendChild(x.createElement("body"));
      }
      return x;
    }
  };
  function de(y) {
    g(y);
  }
  de.prototype = {
    /**
     * The first child of this node.
     *
     * @type {Node | null}
     */
    firstChild: null,
    /**
     * The last child of this node.
     *
     * @type {Node | null}
     */
    lastChild: null,
    /**
     * The previous sibling of this node.
     *
     * @type {Node | null}
     */
    previousSibling: null,
    /**
     * The next sibling of this node.
     *
     * @type {Node | null}
     */
    nextSibling: null,
    /**
     * The parent node of this node.
     *
     * @type {Node | null}
     */
    parentNode: null,
    /**
     * The parent element of this node.
     *
     * @type {Element | null}
     */
    get parentElement() {
      return this.parentNode && this.parentNode.nodeType === this.ELEMENT_NODE ? this.parentNode : null;
    },
    /**
     * The child nodes of this node.
     *
     * @type {NodeList}
     */
    childNodes: null,
    /**
     * The document object associated with this node.
     *
     * @type {Document | null}
     */
    ownerDocument: null,
    /**
     * The value of this node.
     *
     * @type {string | null}
     */
    nodeValue: null,
    /**
     * The namespace URI of this node.
     *
     * @type {string | null}
     */
    namespaceURI: null,
    /**
     * The prefix of the namespace for this node.
     *
     * @type {string | null}
     */
    prefix: null,
    /**
     * The local part of the qualified name of this node.
     *
     * @type {string | null}
     */
    localName: null,
    /**
     * The baseURI is currently always `about:blank`,
     * since that's what happens when you create a document from scratch.
     *
     * @type {'about:blank'}
     */
    baseURI: "about:blank",
    /**
     * Is true if this node is part of a document.
     *
     * @type {boolean}
     */
    get isConnected() {
      var y = this.getRootNode();
      return y && y.nodeType === y.DOCUMENT_NODE;
    },
    /**
     * Checks whether `other` is an inclusive descendant of this node.
     *
     * @param {Node | null | undefined} other
     * The node to check.
     * @returns {boolean}
     * True if `other` is an inclusive descendant of this node; false otherwise.
     * @see https://dom.spec.whatwg.org/#dom-node-contains
     */
    contains: function(y) {
      if (!y) return !1;
      var x = y;
      do {
        if (this === x) return !0;
        x = y.parentNode;
      } while (x);
      return !1;
    },
    /**
     * @typedef GetRootNodeOptions
     * @property {boolean} [composed=false]
     */
    /**
     * Searches for the root node of this node.
     *
     * **This behavior is slightly different from the in the specs**:
     * - ignores `options.composed`, since `ShadowRoot`s are unsupported, always returns root.
     *
     * @param {GetRootNodeOptions} [options]
     * @returns {Node}
     * Root node.
     * @see https://dom.spec.whatwg.org/#dom-node-getrootnode
     * @see https://dom.spec.whatwg.org/#concept-shadow-including-root
     */
    getRootNode: function(y) {
      var x = this;
      do {
        if (!x.parentNode)
          return x;
        x = x.parentNode;
      } while (x);
    },
    /**
     * Checks whether the given node is equal to this node.
     *
     * @param {Node} [otherNode]
     * @see https://dom.spec.whatwg.org/#concept-node-equals
     */
    isEqualNode: function(y) {
      if (!y || this.nodeType !== y.nodeType) return !1;
      switch (this.nodeType) {
        case this.DOCUMENT_TYPE_NODE:
          if (this.name !== y.name || this.publicId !== y.publicId || this.systemId !== y.systemId) return !1;
          break;
        case this.ELEMENT_NODE:
          if (this.namespaceURI !== y.namespaceURI || this.prefix !== y.prefix || this.localName !== y.localName || this.attributes.length !== y.attributes.length) return !1;
          for (var x = 0; x < this.attributes.length; x++) {
            var $ = this.attributes.item(x);
            if (!$.isEqualNode(y.getAttributeNodeNS($.namespaceURI, $.localName)))
              return !1;
          }
          break;
        case this.ATTRIBUTE_NODE:
          if (this.namespaceURI !== y.namespaceURI || this.localName !== y.localName || this.value !== y.value) return !1;
          break;
        case this.PROCESSING_INSTRUCTION_NODE:
          if (this.target !== y.target || this.data !== y.data)
            return !1;
          break;
        case this.TEXT_NODE:
        case this.COMMENT_NODE:
          if (this.data !== y.data) return !1;
          break;
      }
      if (this.childNodes.length !== y.childNodes.length)
        return !1;
      for (var x = 0; x < this.childNodes.length; x++)
        if (!this.childNodes[x].isEqualNode(y.childNodes[x]))
          return !1;
      return !0;
    },
    /**
     * Checks whether or not the given node is this node.
     *
     * @param {Node} [otherNode]
     */
    isSameNode: function(y) {
      return this === y;
    },
    /**
     * Inserts a node before a reference node as a child of this node.
     *
     * @param {Node} newChild
     * The new child node to be inserted.
     * @param {Node | null} refChild
     * The reference node before which newChild will be inserted.
     * @returns {Node}
     * The new child node successfully inserted.
     * @throws {DOMException}
     * Throws a DOMException if inserting the node would result in a DOM tree that is not
     * well-formed, or if `child` is provided but is not a child of `parent`.
     * See {@link _insertBefore} for more details.
     * @since Modified in DOM L2
     */
    insertBefore: function(y, x) {
      return Ce(this, y, x);
    },
    /**
     * Replaces an old child node with a new child node within this node.
     *
     * @param {Node} newChild
     * The new node that is to replace the old node.
     * If it already exists in the DOM, it is removed from its original position.
     * @param {Node} oldChild
     * The existing child node to be replaced.
     * @returns {Node}
     * Returns the replaced child node.
     * @throws {DOMException}
     * Throws a DOMException if replacing the node would result in a DOM tree that is not
     * well-formed, or if `oldChild` is not a child of `this`.
     * This can also occur if the pre-replacement validity assertion fails.
     * See {@link _insertBefore}, {@link Node.removeChild}, and
     * {@link assertPreReplacementValidityInDocument} for more details.
     * @see https://dom.spec.whatwg.org/#concept-node-replace
     */
    replaceChild: function(y, x) {
      Ce(this, y, x, Ln), x && this.removeChild(x);
    },
    /**
     * Removes an existing child node from this node.
     *
     * @param {Node} oldChild
     * The child node to be removed.
     * @returns {Node}
     * Returns the removed child node.
     * @throws {DOMException}
     * Throws a DOMException if `oldChild` is not a child of `this`.
     * See {@link _removeChild} for more details.
     */
    removeChild: function(y) {
      return rt(this, y);
    },
    /**
     * Appends a child node to this node.
     *
     * @param {Node} newChild
     * The child node to be appended to this node.
     * If it already exists in the DOM, it is removed from its original position.
     * @returns {Node}
     * Returns the appended child node.
     * @throws {DOMException}
     * Throws a DOMException if appending the node would result in a DOM tree that is not
     * well-formed, or if `newChild` is not a valid Node.
     * See {@link insertBefore} for more details.
     */
    appendChild: function(y) {
      return this.insertBefore(y, null);
    },
    /**
     * Determines whether this node has any child nodes.
     *
     * @returns {boolean}
     * Returns true if this node has any child nodes, and false otherwise.
     */
    hasChildNodes: function() {
      return this.firstChild != null;
    },
    /**
     * Creates a copy of the calling node.
     *
     * @param {boolean} deep
     * If true, the contents of the node are recursively copied.
     * If false, only the node itself (and its attributes, if it is an element) are copied.
     * @returns {Node}
     * Returns the newly created copy of the node.
     * @throws {DOMException}
     * May throw a DOMException if operations within {@link Element#setAttributeNode} or
     * {@link Node#appendChild} (which are potentially invoked in this method) do not meet their
     * specific constraints.
     * @see {@link cloneNode}
     */
    cloneNode: function(y) {
      return Si(this.ownerDocument || this, this, y);
    },
    /**
     * Puts the specified node and all of its subtree into a "normalized" form. In a normalized
     * subtree, no text nodes in the subtree are empty and there are no adjacent text nodes.
     *
     * Specifically, this method merges any adjacent text nodes (i.e., nodes for which `nodeType`
     * is `TEXT_NODE`) into a single node with the combined data. It also removes any empty text
     * nodes.
     *
     * This method operates recursively, so it also normalizes any and all descendent nodes within
     * the subtree.
     *
     * @throws {DOMException}
     * May throw a DOMException if operations within removeChild or appendData (which are
     * potentially invoked in this method) do not meet their specific constraints.
     * @since Modified in DOM Level 2
     * @see {@link Node.removeChild}
     * @see {@link CharacterData.appendData}
     */
    normalize: function() {
      for (var y = this.firstChild; y; ) {
        var x = y.nextSibling;
        x && x.nodeType == k && y.nodeType == k ? (this.removeChild(x), y.appendData(x.data)) : (y.normalize(), y = x);
      }
    },
    /**
     * Checks whether the DOM implementation implements a specific feature and its version.
     *
     * @deprecated
     * Since `DOMImplementation.hasFeature` is deprecated and always returns true.
     * @param {string} feature
     * The package name of the feature to test. This is the same name that can be passed to the
     * method `hasFeature` on `DOMImplementation`.
     * @param {string} version
     * This is the version number of the package name to test.
     * @returns {boolean}
     * Returns true in all cases in the current implementation.
     * @since Introduced in DOM Level 2
     * @see {@link DOMImplementation.hasFeature}
     */
    isSupported: function(y, x) {
      return this.ownerDocument.implementation.hasFeature(y, x);
    },
    /**
     * Look up the prefix associated to the given namespace URI, starting from this node.
     * **The default namespace declarations are ignored by this method.**
     * See Namespace Prefix Lookup for details on the algorithm used by this method.
     *
     * **This behavior is different from the in the specs**:
     * - no node type specific handling
     * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes
     *
     * @param {string | null} namespaceURI
     * The namespace URI for which to find the associated prefix.
     * @returns {string | null}
     * The associated prefix, if found; otherwise, null.
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix
     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo
     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix
     * @see https://github.com/xmldom/xmldom/issues/322
     * @prettierignore
     */
    lookupPrefix: function(y) {
      for (var x = this; x; ) {
        var $ = x._nsMap;
        if ($) {
          for (var W in $)
            if (r($, W) && $[W] === y)
              return W;
        }
        x = x.nodeType == j ? x.ownerDocument : x.parentNode;
      }
      return null;
    },
    /**
     * This function is used to look up the namespace URI associated with the given prefix,
     * starting from this node.
     *
     * **This behavior is different from the in the specs**:
     * - no node type specific handling
     * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes
     *
     * @param {string | null} prefix
     * The prefix for which to find the associated namespace URI.
     * @returns {string | null}
     * The associated namespace URI, if found; otherwise, null.
     * @since DOM Level 3
     * @see https://dom.spec.whatwg.org/#dom-node-lookupnamespaceuri
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI
     * @prettierignore
     */
    lookupNamespaceURI: function(y) {
      for (var x = this; x; ) {
        var $ = x._nsMap;
        if ($ && r($, y))
          return $[y];
        x = x.nodeType == j ? x.ownerDocument : x.parentNode;
      }
      return null;
    },
    /**
     * Determines whether the given namespace URI is the default namespace.
     *
     * The function works by looking up the prefix associated with the given namespace URI. If no
     * prefix is found (i.e., the namespace URI is not registered in the namespace map of this
     * node or any of its ancestors), it returns `true`, implying the namespace URI is considered
     * the default.
     *
     * **This behavior is different from the in the specs**:
     * - no node type specific handling
     * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes
     *
     * @param {string | null} namespaceURI
     * The namespace URI to be checked.
     * @returns {boolean}
     * Returns true if the given namespace URI is the default namespace, false otherwise.
     * @since DOM Level 3
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace
     * @see https://dom.spec.whatwg.org/#dom-node-isdefaultnamespace
     * @prettierignore
     */
    isDefaultNamespace: function(y) {
      var x = this.lookupPrefix(y);
      return x == null;
    },
    /**
     * Compares the reference node with a node with regard to their position in the document and
     * according to the document order.
     *
     * @param {Node} other
     * The node to compare the reference node to.
     * @returns {number}
     * Returns how the node is positioned relatively to the reference node according to the
     * bitmask. 0 if reference node and given node are the same.
     * @since DOM Level 3
     * @see https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-compare
     * @see https://dom.spec.whatwg.org/#dom-node-comparedocumentposition
     */
    compareDocumentPosition: function(y) {
      if (this === y) return 0;
      var x = y, $ = this, W = null, se = null;
      if (x instanceof Ot && (W = x, x = W.ownerElement), $ instanceof Ot && (se = $, $ = se.ownerElement, W && x && $ === x))
        for (var he = 0, Fe; Fe = $.attributes[he]; he++) {
          if (Fe === W)
            return K.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + K.DOCUMENT_POSITION_PRECEDING;
          if (Fe === se)
            return K.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + K.DOCUMENT_POSITION_FOLLOWING;
        }
      if (!x || !$ || $.ownerDocument !== x.ownerDocument)
        return K.DOCUMENT_POSITION_DISCONNECTED + K.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + (re($.ownerDocument) > re(x.ownerDocument) ? K.DOCUMENT_POSITION_FOLLOWING : K.DOCUMENT_POSITION_PRECEDING);
      if (se && x === $)
        return K.DOCUMENT_POSITION_CONTAINS + K.DOCUMENT_POSITION_PRECEDING;
      if (W && x === $)
        return K.DOCUMENT_POSITION_CONTAINED_BY + K.DOCUMENT_POSITION_FOLLOWING;
      for (var yt = [], Nt = x.parentNode; Nt; ) {
        if (!se && Nt === $)
          return K.DOCUMENT_POSITION_CONTAINED_BY + K.DOCUMENT_POSITION_FOLLOWING;
        yt.push(Nt), Nt = Nt.parentNode;
      }
      yt.reverse();
      for (var Yt = [], Mt = $.parentNode; Mt; ) {
        if (!W && Mt === x)
          return K.DOCUMENT_POSITION_CONTAINS + K.DOCUMENT_POSITION_PRECEDING;
        Yt.push(Mt), Mt = Mt.parentNode;
      }
      Yt.reverse();
      var pt = ne(yt, Yt);
      for (var zn in pt.childNodes) {
        var an = pt.childNodes[zn];
        if (an === $) return K.DOCUMENT_POSITION_FOLLOWING;
        if (an === x) return K.DOCUMENT_POSITION_PRECEDING;
        if (Yt.indexOf(an) >= 0) return K.DOCUMENT_POSITION_FOLLOWING;
        if (yt.indexOf(an) >= 0) return K.DOCUMENT_POSITION_PRECEDING;
      }
      return 0;
    }
  };
  function Re(y) {
    return y == "<" && "&lt;" || y == ">" && "&gt;" || y == "&" && "&amp;" || y == '"' && "&quot;" || "&#" + y.charCodeAt() + ";";
  }
  N(M, de), N(M, de.prototype), N(K, de), N(K, de.prototype);
  function He(y, x) {
    if (x(y))
      return !0;
    if (y = y.firstChild)
      do
        if (He(y, x))
          return !0;
      while (y = y.nextSibling);
  }
  function ae(y, x) {
    g(y);
    var $ = x || {};
    this.ownerDocument = this, this.contentType = $.contentType || a.XML_APPLICATION, this.type = i(this.contentType) ? "html" : "xml";
  }
  function Te(y, x, $) {
    y && y._inc++;
    var W = $.namespaceURI;
    W === l.XMLNS && (x._nsMap[$.prefix ? $.localName : ""] = $.value);
  }
  function Be(y, x, $, W) {
    y && y._inc++;
    var se = $.namespaceURI;
    se === l.XMLNS && delete x._nsMap[$.prefix ? $.localName : ""];
  }
  function Ge(y, x, $) {
    if (y && y._inc) {
      y._inc++;
      var W = x.childNodes;
      if ($ && !$.nextSibling)
        W[W.length++] = $;
      else {
        for (var se = x.firstChild, he = 0; se; )
          W[he++] = se, se = se.nextSibling;
        W.length = he, delete W[W.length];
      }
    }
  }
  function rt(y, x) {
    if (y !== x.parentNode)
      throw new f(f.NOT_FOUND_ERR, "child's parent is not parent");
    var $ = x.previousSibling, W = x.nextSibling;
    return $ ? $.nextSibling = W : y.firstChild = W, W ? W.previousSibling = $ : y.lastChild = $, Ge(y.ownerDocument, y), x.parentNode = null, x.previousSibling = null, x.nextSibling = null, x;
  }
  function bt(y) {
    return y && (y.nodeType === de.DOCUMENT_NODE || y.nodeType === de.DOCUMENT_FRAGMENT_NODE || y.nodeType === de.ELEMENT_NODE);
  }
  function wt(y) {
    return y && (y.nodeType === de.CDATA_SECTION_NODE || y.nodeType === de.COMMENT_NODE || y.nodeType === de.DOCUMENT_FRAGMENT_NODE || y.nodeType === de.DOCUMENT_TYPE_NODE || y.nodeType === de.ELEMENT_NODE || y.nodeType === de.PROCESSING_INSTRUCTION_NODE || y.nodeType === de.TEXT_NODE);
  }
  function kt(y) {
    return y && y.nodeType === de.DOCUMENT_TYPE_NODE;
  }
  function $e(y) {
    return y && y.nodeType === de.ELEMENT_NODE;
  }
  function Dt(y) {
    return y && y.nodeType === de.TEXT_NODE;
  }
  function lt(y, x) {
    var $ = y.childNodes || [];
    if (e($, $e) || kt(x))
      return !1;
    var W = e($, kt);
    return !(x && W && $.indexOf(W) > $.indexOf(x));
  }
  function ar(y, x) {
    var $ = y.childNodes || [];
    function W(he) {
      return $e(he) && he !== x;
    }
    if (e($, W))
      return !1;
    var se = e($, kt);
    return !(x && se && $.indexOf(se) > $.indexOf(x));
  }
  function Pn(y, x, $) {
    if (!bt(y))
      throw new f(f.HIERARCHY_REQUEST_ERR, "Unexpected parent node type " + y.nodeType);
    if ($ && $.parentNode !== y)
      throw new f(f.NOT_FOUND_ERR, "child not in parent");
    if (
      // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a "HierarchyRequestError" DOMException.
      !wt(x) || // 5. If either `node` is a Text node and `parent` is a document,
      // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0
      // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)
      // or `node` is a doctype and `parent` is not a document, then throw a "HierarchyRequestError" DOMException.
      kt(x) && y.nodeType !== de.DOCUMENT_NODE
    )
      throw new f(
        f.HIERARCHY_REQUEST_ERR,
        "Unexpected node type " + x.nodeType + " for parent node type " + y.nodeType
      );
  }
  function kn(y, x, $) {
    var W = y.childNodes || [], se = x.childNodes || [];
    if (x.nodeType === de.DOCUMENT_FRAGMENT_NODE) {
      var he = se.filter($e);
      if (he.length > 1 || e(se, Dt))
        throw new f(f.HIERARCHY_REQUEST_ERR, "More than one element or text in fragment");
      if (he.length === 1 && !lt(y, $))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Element in fragment can not be inserted before doctype");
    }
    if ($e(x) && !lt(y, $))
      throw new f(f.HIERARCHY_REQUEST_ERR, "Only one element can be added and only after doctype");
    if (kt(x)) {
      if (e(W, kt))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Only one doctype is allowed");
      var Fe = e(W, $e);
      if ($ && W.indexOf(Fe) < W.indexOf($))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Doctype can only be inserted before an element");
      if (!$ && Fe)
        throw new f(f.HIERARCHY_REQUEST_ERR, "Doctype can not be appended since element is present");
    }
  }
  function Ln(y, x, $) {
    var W = y.childNodes || [], se = x.childNodes || [];
    if (x.nodeType === de.DOCUMENT_FRAGMENT_NODE) {
      var he = se.filter($e);
      if (he.length > 1 || e(se, Dt))
        throw new f(f.HIERARCHY_REQUEST_ERR, "More than one element or text in fragment");
      if (he.length === 1 && !ar(y, $))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Element in fragment can not be inserted before doctype");
    }
    if ($e(x) && !ar(y, $))
      throw new f(f.HIERARCHY_REQUEST_ERR, "Only one element can be added and only after doctype");
    if (kt(x)) {
      if (e(W, function(Nt) {
        return kt(Nt) && Nt !== $;
      }))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Only one doctype is allowed");
      var Fe = e(W, $e);
      if ($ && W.indexOf(Fe) < W.indexOf($))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Doctype can only be inserted before an element");
    }
  }
  function Ce(y, x, $, W) {
    Pn(y, x, $), y.nodeType === de.DOCUMENT_NODE && (W || kn)(y, x, $);
    var se = x.parentNode;
    if (se && se.removeChild(x), x.nodeType === J) {
      var he = x.firstChild;
      if (he == null)
        return x;
      var Fe = x.lastChild;
    } else
      he = Fe = x;
    var yt = $ ? $.previousSibling : y.lastChild;
    he.previousSibling = yt, Fe.nextSibling = $, yt ? yt.nextSibling = he : y.firstChild = he, $ == null ? y.lastChild = Fe : $.previousSibling = Fe;
    do
      he.parentNode = y;
    while (he !== Fe && (he = he.nextSibling));
    return Ge(y.ownerDocument || y, y, x), x.nodeType == J && (x.firstChild = x.lastChild = null), x;
  }
  ae.prototype = {
    /**
     * The implementation that created this document.
     *
     * @type DOMImplementation
     * @readonly
     */
    implementation: null,
    nodeName: "#document",
    nodeType: B,
    /**
     * The DocumentType node of the document.
     *
     * @type DocumentType
     * @readonly
     */
    doctype: null,
    documentElement: null,
    _inc: 1,
    insertBefore: function(y, x) {
      if (y.nodeType === J) {
        for (var $ = y.firstChild; $; ) {
          var W = $.nextSibling;
          this.insertBefore($, x), $ = W;
        }
        return y;
      }
      return Ce(this, y, x), y.ownerDocument = this, this.documentElement === null && y.nodeType === O && (this.documentElement = y), y;
    },
    removeChild: function(y) {
      var x = rt(this, y);
      return x === this.documentElement && (this.documentElement = null), x;
    },
    replaceChild: function(y, x) {
      Ce(this, y, x, Ln), y.ownerDocument = this, x && this.removeChild(x), $e(y) && (this.documentElement = y);
    },
    // Introduced in DOM Level 2:
    importNode: function(y, x) {
      return cr(this, y, x);
    },
    // Introduced in DOM Level 2:
    getElementById: function(y) {
      var x = null;
      return He(this.documentElement, function($) {
        if ($.nodeType == O && $.getAttribute("id") == y)
          return x = $, !0;
      }), x;
    },
    /**
     * Creates a new `Element` that is owned by this `Document`.
     * In HTML Documents `localName` is the lower cased `tagName`,
     * otherwise no transformation is being applied.
     * When `contentType` implies the HTML namespace, it will be set as `namespaceURI`.
     *
     * __This implementation differs from the specification:__ - The provided name is not checked
     * against the `Name` production,
     * so no related error will be thrown.
     * - There is no interface `HTMLElement`, it is always an `Element`.
     * - There is no support for a second argument to indicate using custom elements.
     *
     * @param {string} tagName
     * @returns {Element}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement
     * @see https://dom.spec.whatwg.org/#dom-document-createelement
     * @see https://dom.spec.whatwg.org/#concept-create-element
     */
    createElement: function(y) {
      var x = new Qe(c);
      x.ownerDocument = this, this.type === "html" && (y = y.toLowerCase()), n(this.contentType) && (x.namespaceURI = l.HTML), x.nodeName = y, x.tagName = y, x.localName = y, x.childNodes = new te();
      var $ = x.attributes = new pe();
      return $._ownerElement = x, x;
    },
    /**
     * @returns {DocumentFragment}
     */
    createDocumentFragment: function() {
      var y = new Un(c);
      return y.ownerDocument = this, y.childNodes = new te(), y;
    },
    /**
     * @param {string} data
     * @returns {Text}
     */
    createTextNode: function(y) {
      var x = new $n(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.appendData(y), x;
    },
    /**
     * @param {string} data
     * @returns {Comment}
     */
    createComment: function(y) {
      var x = new Fn(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.appendData(y), x;
    },
    /**
     * @param {string} data
     * @returns {CDATASection}
     */
    createCDATASection: function(y) {
      var x = new lr(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.appendData(y), x;
    },
    /**
     * @param {string} target
     * @param {string} data
     * @returns {ProcessingInstruction}
     */
    createProcessingInstruction: function(y, x) {
      var $ = new En(c);
      return $.ownerDocument = this, $.childNodes = new te(), $.nodeName = $.target = y, $.nodeValue = $.data = x, $;
    },
    /**
     * Creates an `Attr` node that is owned by this document.
     * In HTML Documents `localName` is the lower cased `name`,
     * otherwise no transformation is being applied.
     *
     * __This implementation differs from the specification:__ - The provided name is not checked
     * against the `Name` production,
     * so no related error will be thrown.
     *
     * @param {string} name
     * @returns {Attr}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createAttribute
     * @see https://dom.spec.whatwg.org/#dom-document-createattribute
     */
    createAttribute: function(y) {
      if (!h.QName_exact.test(y))
        throw new f(f.INVALID_CHARACTER_ERR, 'invalid character in name "' + y + '"');
      return this.type === "html" && (y = y.toLowerCase()), this._createAttribute(y);
    },
    _createAttribute: function(y) {
      var x = new Ot(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.name = y, x.nodeName = y, x.localName = y, x.specified = !0, x;
    },
    /**
     * Creates an EntityReference object.
     * The current implementation does not fill the `childNodes` with those of the corresponding
     * `Entity`
     *
     * @deprecated
     * In DOM Level 4.
     * @param {string} name
     * The name of the entity to reference. No namespace well-formedness checks are performed.
     * @returns {EntityReference}
     * @throws {DOMException}
     * With code `INVALID_CHARACTER_ERR` when `name` is not valid.
     * @throws {DOMException}
     * with code `NOT_SUPPORTED_ERR` when the document is of type `html`
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-392B75AE
     */
    createEntityReference: function(y) {
      if (!h.Name.test(y))
        throw new f(f.INVALID_CHARACTER_ERR, 'not a valid xml name "' + y + '"');
      if (this.type === "html")
        throw new f("document is an html document", d.NotSupportedError);
      var x = new jn(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.nodeName = y, x;
    },
    // Introduced in DOM Level 2:
    /**
     * @param {string} namespaceURI
     * @param {string} qualifiedName
     * @returns {Element}
     */
    createElementNS: function(y, x) {
      var $ = R(y, x), W = new Qe(c), se = W.attributes = new pe();
      return W.childNodes = new te(), W.ownerDocument = this, W.nodeName = x, W.tagName = x, W.namespaceURI = $[0], W.prefix = $[1], W.localName = $[2], se._ownerElement = W, W;
    },
    // Introduced in DOM Level 2:
    /**
     * @param {string} namespaceURI
     * @param {string} qualifiedName
     * @returns {Attr}
     */
    createAttributeNS: function(y, x) {
      var $ = R(y, x), W = new Ot(c);
      return W.ownerDocument = this, W.childNodes = new te(), W.nodeName = x, W.name = x, W.specified = !0, W.namespaceURI = $[0], W.prefix = $[1], W.localName = $[2], W;
    }
  }, L(ae, de);
  function Qe(y) {
    g(y), this._nsMap = /* @__PURE__ */ Object.create(null);
  }
  Qe.prototype = {
    nodeType: O,
    /**
     * The attributes of this element.
     *
     * @type {NamedNodeMap | null}
     */
    attributes: null,
    getQualifiedName: function() {
      return this.prefix ? this.prefix + ":" + this.localName : this.localName;
    },
    _isInHTMLDocumentAndNamespace: function() {
      return this.ownerDocument.type === "html" && this.namespaceURI === l.HTML;
    },
    /**
     * Implementaton of Level2 Core function hasAttributes.
     *
     * @returns {boolean}
     * True if attribute list is not empty.
     * @see https://www.w3.org/TR/DOM-Level-2-Core/#core-ID-NodeHasAttrs
     */
    hasAttributes: function() {
      return !!(this.attributes && this.attributes.length);
    },
    hasAttribute: function(y) {
      return !!this.getAttributeNode(y);
    },
    /**
     * Returns element’s first attribute whose qualified name is `name`, and `null`
     * if there is no such attribute.
     *
     * @param {string} name
     * @returns {string | null}
     */
    getAttribute: function(y) {
      var x = this.getAttributeNode(y);
      return x ? x.value : null;
    },
    getAttributeNode: function(y) {
      return this._isInHTMLDocumentAndNamespace() && (y = y.toLowerCase()), this.attributes.getNamedItem(y);
    },
    /**
     * Sets the value of element’s first attribute whose qualified name is qualifiedName to value.
     *
     * @param {string} name
     * @param {string} value
     */
    setAttribute: function(y, x) {
      this._isInHTMLDocumentAndNamespace() && (y = y.toLowerCase());
      var $ = this.getAttributeNode(y);
      $ ? $.value = $.nodeValue = "" + x : ($ = this.ownerDocument._createAttribute(y), $.value = $.nodeValue = "" + x, this.setAttributeNode($));
    },
    removeAttribute: function(y) {
      var x = this.getAttributeNode(y);
      x && this.removeAttributeNode(x);
    },
    setAttributeNode: function(y) {
      return this.attributes.setNamedItem(y);
    },
    setAttributeNodeNS: function(y) {
      return this.attributes.setNamedItemNS(y);
    },
    removeAttributeNode: function(y) {
      return this.attributes.removeNamedItem(y.nodeName);
    },
    //get real attribute name,and remove it by removeAttributeNode
    removeAttributeNS: function(y, x) {
      var $ = this.getAttributeNodeNS(y, x);
      $ && this.removeAttributeNode($);
    },
    hasAttributeNS: function(y, x) {
      return this.getAttributeNodeNS(y, x) != null;
    },
    /**
     * Returns element’s attribute whose namespace is `namespaceURI` and local name is
     * `localName`,
     * or `null` if there is no such attribute.
     *
     * @param {string} namespaceURI
     * @param {string} localName
     * @returns {string | null}
     */
    getAttributeNS: function(y, x) {
      var $ = this.getAttributeNodeNS(y, x);
      return $ ? $.value : null;
    },
    /**
     * Sets the value of element’s attribute whose namespace is `namespaceURI` and local name is
     * `localName` to value.
     *
     * @param {string} namespaceURI
     * @param {string} qualifiedName
     * @param {string} value
     * @see https://dom.spec.whatwg.org/#dom-element-setattributens
     */
    setAttributeNS: function(y, x, $) {
      var W = R(y, x), se = W[2], he = this.getAttributeNodeNS(y, se);
      he ? he.value = he.nodeValue = "" + $ : (he = this.ownerDocument.createAttributeNS(y, x), he.value = he.nodeValue = "" + $, this.setAttributeNode(he));
    },
    getAttributeNodeNS: function(y, x) {
      return this.attributes.getNamedItemNS(y, x);
    },
    /**
     * Returns a LiveNodeList of all child elements which have **all** of the given class name(s).
     *
     * Returns an empty list if `classNames` is an empty string or only contains HTML white space
     * characters.
     *
     * Warning: This returns a live LiveNodeList.
     * Changes in the DOM will reflect in the array as the changes occur.
     * If an element selected by this array no longer qualifies for the selector,
     * it will automatically be removed. Be aware of this for iteration purposes.
     *
     * @param {string} classNames
     * Is a string representing the class name(s) to match; multiple class names are separated by
     * (ASCII-)whitespace.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName
     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname
     */
    getElementsByClassName: function(y) {
      var x = b(y);
      return new Q(this, function($) {
        var W = [];
        return x.length > 0 && He($, function(se) {
          if (se !== $ && se.nodeType === O) {
            var he = se.getAttribute("class");
            if (he) {
              var Fe = y === he;
              if (!Fe) {
                var yt = b(he);
                Fe = x.every(C(yt));
              }
              Fe && W.push(se);
            }
          }
        }), W;
      });
    },
    /**
     * Returns a LiveNodeList of elements with the given qualifiedName.
     * Searching for all descendants can be done by passing `*` as `qualifiedName`.
     *
     * All descendants of the specified element are searched, but not the element itself.
     * The returned list is live, which means it updates itself with the DOM tree automatically.
     * Therefore, there is no need to call `Element.getElementsByTagName()`
     * with the same element and arguments repeatedly if the DOM changes in between calls.
     *
     * When called on an HTML element in an HTML document,
     * `getElementsByTagName` lower-cases the argument before searching for it.
     * This is undesirable when trying to match camel-cased SVG elements (such as
     * `<linearGradient>`) in an HTML document.
     * Instead, use `Element.getElementsByTagNameNS()`,
     * which preserves the capitalization of the tag name.
     *
     * `Element.getElementsByTagName` is similar to `Document.getElementsByTagName()`,
     * except that it only searches for elements that are descendants of the specified element.
     *
     * @param {string} qualifiedName
     * @returns {LiveNodeList}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName
     * @see https://dom.spec.whatwg.org/#concept-getelementsbytagname
     */
    getElementsByTagName: function(y) {
      var x = (this.nodeType === B ? this : this.ownerDocument).type === "html", $ = y.toLowerCase();
      return new Q(this, function(W) {
        var se = [];
        return He(W, function(he) {
          if (!(he === W || he.nodeType !== O))
            if (y === "*")
              se.push(he);
            else {
              var Fe = he.getQualifiedName(), yt = x && he.namespaceURI === l.HTML ? $ : y;
              Fe === yt && se.push(he);
            }
        }), se;
      });
    },
    getElementsByTagNameNS: function(y, x) {
      return new Q(this, function($) {
        var W = [];
        return He($, function(se) {
          se !== $ && se.nodeType === O && (y === "*" || se.namespaceURI === y) && (x === "*" || se.localName == x) && W.push(se);
        }), W;
      });
    }
  }, ae.prototype.getElementsByClassName = Qe.prototype.getElementsByClassName, ae.prototype.getElementsByTagName = Qe.prototype.getElementsByTagName, ae.prototype.getElementsByTagNameNS = Qe.prototype.getElementsByTagNameNS, L(Qe, de);
  function Ot(y) {
    g(y), this.namespaceURI = null, this.prefix = null, this.ownerElement = null;
  }
  Ot.prototype.nodeType = j, L(Ot, de);
  function Bt(y) {
    g(y);
  }
  Bt.prototype = {
    data: "",
    substringData: function(y, x) {
      return this.data.substring(y, y + x);
    },
    appendData: function(y) {
      y = this.data + y, this.nodeValue = this.data = y, this.length = y.length;
    },
    insertData: function(y, x) {
      this.replaceData(y, 0, x);
    },
    deleteData: function(y, x) {
      this.replaceData(y, x, "");
    },
    replaceData: function(y, x, $) {
      var W = this.data.substring(0, y), se = this.data.substring(y + x);
      $ = W + $ + se, this.nodeValue = this.data = $, this.length = $.length;
    }
  }, L(Bt, de);
  function $n(y) {
    g(y);
  }
  $n.prototype = {
    nodeName: "#text",
    nodeType: k,
    splitText: function(y) {
      var x = this.data, $ = x.substring(y);
      x = x.substring(0, y), this.data = this.nodeValue = x, this.length = x.length;
      var W = this.ownerDocument.createTextNode($);
      return this.parentNode && this.parentNode.insertBefore(W, this.nextSibling), W;
    }
  }, L($n, Bt);
  function Fn(y) {
    g(y);
  }
  Fn.prototype = {
    nodeName: "#comment",
    nodeType: A
  }, L(Fn, Bt);
  function lr(y) {
    g(y);
  }
  lr.prototype = {
    nodeName: "#cdata-section",
    nodeType: I
  }, L(lr, $n);
  function Bn(y) {
    g(y);
  }
  Bn.prototype.nodeType = V, L(Bn, de);
  function qn(y) {
    g(y);
  }
  qn.prototype.nodeType = H, L(qn, de);
  function Xt(y) {
    g(y);
  }
  Xt.prototype.nodeType = P, L(Xt, de);
  function jn(y) {
    g(y);
  }
  jn.prototype.nodeType = S, L(jn, de);
  function Un(y) {
    g(y);
  }
  Un.prototype.nodeName = "#document-fragment", Un.prototype.nodeType = J, L(Un, de);
  function En(y) {
    g(y);
  }
  En.prototype.nodeType = T, L(En, Bt);
  function Ar() {
  }
  Ar.prototype.serializeToString = function(y, x) {
    return Ze.call(y, x);
  }, de.prototype.toString = Ze;
  function Ze(y) {
    var x = [], $ = this.nodeType === B && this.documentElement || this, W = $.prefix, se = $.namespaceURI;
    if (se && W == null) {
      var W = $.lookupPrefix(se);
      if (W == null)
        var he = [
          { namespace: se, prefix: null }
          //{namespace:uri,prefix:''}
        ];
    }
    return wn(this, x, y, he), x.join("");
  }
  function mt(y, x, $) {
    var W = y.prefix || "", se = y.namespaceURI;
    if (!se || W === "xml" && se === l.XML || se === l.XMLNS)
      return !1;
    for (var he = $.length; he--; ) {
      var Fe = $[he];
      if (Fe.prefix === W)
        return Fe.namespace !== se;
    }
    return !0;
  }
  function gn(y, x, $) {
    y.push(" ", x, '="', $.replace(/[<>&"\t\n\r]/g, Re), '"');
  }
  function wn(y, x, $, W) {
    W || (W = []);
    var se = y.nodeType === B ? y : y.ownerDocument, he = se.type === "html";
    if ($)
      if (y = $(y), y) {
        if (typeof y == "string") {
          x.push(y);
          return;
        }
      } else
        return;
    switch (y.nodeType) {
      case O:
        var Fe = y.attributes, yt = Fe.length, Tt = y.firstChild, Nt = y.tagName, Yt = Nt;
        if (!he && !y.prefix && y.namespaceURI) {
          for (var Mt, pt = 0; pt < Fe.length; pt++)
            if (Fe.item(pt).name === "xmlns") {
              Mt = Fe.item(pt).value;
              break;
            }
          if (!Mt)
            for (var zn = W.length - 1; zn >= 0; zn--) {
              var an = W[zn];
              if (an.prefix === "" && an.namespace === y.namespaceURI) {
                Mt = an.namespace;
                break;
              }
            }
          if (Mt !== y.namespaceURI)
            for (var zn = W.length - 1; zn >= 0; zn--) {
              var an = W[zn];
              if (an.namespace === y.namespaceURI) {
                an.prefix && (Yt = an.prefix + ":" + Nt);
                break;
              }
            }
        }
        x.push("<", Yt);
        for (var ur = 0; ur < yt; ur++) {
          var Nn = Fe.item(ur);
          Nn.prefix == "xmlns" ? W.push({
            prefix: Nn.localName,
            namespace: Nn.value
          }) : Nn.nodeName == "xmlns" && W.push({ prefix: "", namespace: Nn.value });
        }
        for (var ur = 0; ur < yt; ur++) {
          var Nn = Fe.item(ur);
          if (mt(Nn, he, W)) {
            var dr = Nn.prefix || "", St = Nn.namespaceURI;
            gn(x, dr ? "xmlns:" + dr : "xmlns", St), W.push({ prefix: dr, namespace: St });
          }
          wn(Nn, x, $, W);
        }
        if (Nt === Yt && mt(y, he, W)) {
          var dr = y.prefix || "", St = y.namespaceURI;
          gn(x, dr ? "xmlns:" + dr : "xmlns", St), W.push({ prefix: dr, namespace: St });
        }
        var so = !Tt;
        if (so && (he || y.namespaceURI === l.HTML) && (so = s(Nt)), so)
          x.push("/>");
        else {
          if (x.push(">"), he && o(Nt))
            for (; Tt; )
              Tt.data ? x.push(Tt.data) : wn(Tt, x, $, W.slice()), Tt = Tt.nextSibling;
          else
            for (; Tt; )
              wn(Tt, x, $, W.slice()), Tt = Tt.nextSibling;
          x.push("</", Yt, ">");
        }
        return;
      case B:
      case J:
        for (var Tt = y.firstChild; Tt; )
          wn(Tt, x, $, W.slice()), Tt = Tt.nextSibling;
        return;
      case j:
        return gn(x, y.name, y.value);
      case k:
        return x.push(y.data.replace(/[<&>]/g, Re));
      case I:
        return x.push(h.CDATA_START, y.data, h.CDATA_END);
      case A:
        return x.push(h.COMMENT_START, y.data, h.COMMENT_END);
      case V:
        var ns = y.publicId, Dr = y.systemId;
        x.push(h.DOCTYPE_DECL_START, " ", y.name), ns ? (x.push(" ", h.PUBLIC, " ", ns), Dr && Dr !== "." && x.push(" ", Dr)) : Dr && Dr !== "." && x.push(" ", h.SYSTEM, " ", Dr), y.internalSubset && x.push(" [", y.internalSubset, "]"), x.push(">");
        return;
      case T:
        return x.push("<?", y.target, " ", y.data, "?>");
      case S:
        return x.push("&", y.nodeName, ";");
      //case ENTITY_NODE:
      //case NOTATION_NODE:
      default:
        x.push("??", y.nodeName);
    }
  }
  function cr(y, x, $) {
    var W;
    switch (x.nodeType) {
      case O:
        W = x.cloneNode(!1), W.ownerDocument = y;
      //var attrs = node2.attributes;
      //var len = attrs.length;
      //for(var i=0;i<len;i++){
      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
      //}
      case J:
        break;
      case j:
        $ = !0;
        break;
    }
    if (W || (W = x.cloneNode(!1)), W.ownerDocument = y, W.parentNode = null, $)
      for (var se = x.firstChild; se; )
        W.appendChild(cr(y, se, $)), se = se.nextSibling;
    return W;
  }
  function Si(y, x, $) {
    var W = new x.constructor(c);
    for (var se in x)
      if (r(x, se)) {
        var he = x[se];
        typeof he != "object" && he != W[se] && (W[se] = he);
      }
    switch (x.childNodes && (W.childNodes = new te()), W.ownerDocument = y, W.nodeType) {
      case O:
        var Fe = x.attributes, yt = W.attributes = new pe(), Nt = Fe.length;
        yt._ownerElement = W;
        for (var Yt = 0; Yt < Nt; Yt++)
          W.setAttributeNode(Si(y, Fe.item(Yt), !0));
        break;
      case j:
        $ = !0;
    }
    if ($)
      for (var Mt = x.firstChild; Mt; )
        W.appendChild(Si(y, Mt, $)), Mt = Mt.nextSibling;
    return W;
  }
  function Qn(y, x, $) {
    y[x] = $;
  }
  try {
    if (Object.defineProperty) {
      let y = function(x) {
        switch (x.nodeType) {
          case O:
          case J:
            var $ = [];
            for (x = x.firstChild; x; )
              x.nodeType !== 7 && x.nodeType !== 8 && $.push(y(x)), x = x.nextSibling;
            return $.join("");
          default:
            return x.nodeValue;
        }
      };
      Object.defineProperty(Q.prototype, "length", {
        get: function() {
          return ce(this), this.$$length;
        }
      }), Object.defineProperty(de.prototype, "textContent", {
        get: function() {
          return y(this);
        },
        set: function(x) {
          switch (this.nodeType) {
            case O:
            case J:
              for (; this.firstChild; )
                this.removeChild(this.firstChild);
              (x || String(x)) && this.appendChild(this.ownerDocument.createTextNode(x));
              break;
            default:
              this.data = x, this.value = x, this.nodeValue = x;
          }
        }
      }), Qn = function(x, $, W) {
        x["$$" + $] = W;
      };
    }
  } catch {
  }
  return vt._updateLiveList = ce, vt.Attr = Ot, vt.CDATASection = lr, vt.CharacterData = Bt, vt.Comment = Fn, vt.Document = ae, vt.DocumentFragment = Un, vt.DocumentType = Bn, vt.DOMImplementation = Ee, vt.Element = Qe, vt.Entity = Xt, vt.EntityReference = jn, vt.LiveNodeList = Q, vt.NamedNodeMap = pe, vt.Node = de, vt.NodeList = te, vt.Notation = qn, vt.Text = $n, vt.ProcessingInstruction = En, vt.XMLSerializer = Ar, vt;
}
var uo = {}, Od = {}, Jg;
function RC() {
  return Jg || (Jg = 1, function(t) {
    var e = na().freeze;
    t.XML_ENTITIES = e({
      amp: "&",
      apos: "'",
      gt: ">",
      lt: "<",
      quot: '"'
    }), t.HTML_ENTITIES = e({
      Aacute: "Á",
      aacute: "á",
      Abreve: "Ă",
      abreve: "ă",
      ac: "∾",
      acd: "∿",
      acE: "∾̳",
      Acirc: "Â",
      acirc: "â",
      acute: "´",
      Acy: "А",
      acy: "а",
      AElig: "Æ",
      aelig: "æ",
      af: "⁡",
      Afr: "𝔄",
      afr: "𝔞",
      Agrave: "À",
      agrave: "à",
      alefsym: "ℵ",
      aleph: "ℵ",
      Alpha: "Α",
      alpha: "α",
      Amacr: "Ā",
      amacr: "ā",
      amalg: "⨿",
      AMP: "&",
      amp: "&",
      And: "⩓",
      and: "∧",
      andand: "⩕",
      andd: "⩜",
      andslope: "⩘",
      andv: "⩚",
      ang: "∠",
      ange: "⦤",
      angle: "∠",
      angmsd: "∡",
      angmsdaa: "⦨",
      angmsdab: "⦩",
      angmsdac: "⦪",
      angmsdad: "⦫",
      angmsdae: "⦬",
      angmsdaf: "⦭",
      angmsdag: "⦮",
      angmsdah: "⦯",
      angrt: "∟",
      angrtvb: "⊾",
      angrtvbd: "⦝",
      angsph: "∢",
      angst: "Å",
      angzarr: "⍼",
      Aogon: "Ą",
      aogon: "ą",
      Aopf: "𝔸",
      aopf: "𝕒",
      ap: "≈",
      apacir: "⩯",
      apE: "⩰",
      ape: "≊",
      apid: "≋",
      apos: "'",
      ApplyFunction: "⁡",
      approx: "≈",
      approxeq: "≊",
      Aring: "Å",
      aring: "å",
      Ascr: "𝒜",
      ascr: "𝒶",
      Assign: "≔",
      ast: "*",
      asymp: "≈",
      asympeq: "≍",
      Atilde: "Ã",
      atilde: "ã",
      Auml: "Ä",
      auml: "ä",
      awconint: "∳",
      awint: "⨑",
      backcong: "≌",
      backepsilon: "϶",
      backprime: "‵",
      backsim: "∽",
      backsimeq: "⋍",
      Backslash: "∖",
      Barv: "⫧",
      barvee: "⊽",
      Barwed: "⌆",
      barwed: "⌅",
      barwedge: "⌅",
      bbrk: "⎵",
      bbrktbrk: "⎶",
      bcong: "≌",
      Bcy: "Б",
      bcy: "б",
      bdquo: "„",
      becaus: "∵",
      Because: "∵",
      because: "∵",
      bemptyv: "⦰",
      bepsi: "϶",
      bernou: "ℬ",
      Bernoullis: "ℬ",
      Beta: "Β",
      beta: "β",
      beth: "ℶ",
      between: "≬",
      Bfr: "𝔅",
      bfr: "𝔟",
      bigcap: "⋂",
      bigcirc: "◯",
      bigcup: "⋃",
      bigodot: "⨀",
      bigoplus: "⨁",
      bigotimes: "⨂",
      bigsqcup: "⨆",
      bigstar: "★",
      bigtriangledown: "▽",
      bigtriangleup: "△",
      biguplus: "⨄",
      bigvee: "⋁",
      bigwedge: "⋀",
      bkarow: "⤍",
      blacklozenge: "⧫",
      blacksquare: "▪",
      blacktriangle: "▴",
      blacktriangledown: "▾",
      blacktriangleleft: "◂",
      blacktriangleright: "▸",
      blank: "␣",
      blk12: "▒",
      blk14: "░",
      blk34: "▓",
      block: "█",
      bne: "=⃥",
      bnequiv: "≡⃥",
      bNot: "⫭",
      bnot: "⌐",
      Bopf: "𝔹",
      bopf: "𝕓",
      bot: "⊥",
      bottom: "⊥",
      bowtie: "⋈",
      boxbox: "⧉",
      boxDL: "╗",
      boxDl: "╖",
      boxdL: "╕",
      boxdl: "┐",
      boxDR: "╔",
      boxDr: "╓",
      boxdR: "╒",
      boxdr: "┌",
      boxH: "═",
      boxh: "─",
      boxHD: "╦",
      boxHd: "╤",
      boxhD: "╥",
      boxhd: "┬",
      boxHU: "╩",
      boxHu: "╧",
      boxhU: "╨",
      boxhu: "┴",
      boxminus: "⊟",
      boxplus: "⊞",
      boxtimes: "⊠",
      boxUL: "╝",
      boxUl: "╜",
      boxuL: "╛",
      boxul: "┘",
      boxUR: "╚",
      boxUr: "╙",
      boxuR: "╘",
      boxur: "└",
      boxV: "║",
      boxv: "│",
      boxVH: "╬",
      boxVh: "╫",
      boxvH: "╪",
      boxvh: "┼",
      boxVL: "╣",
      boxVl: "╢",
      boxvL: "╡",
      boxvl: "┤",
      boxVR: "╠",
      boxVr: "╟",
      boxvR: "╞",
      boxvr: "├",
      bprime: "‵",
      Breve: "˘",
      breve: "˘",
      brvbar: "¦",
      Bscr: "ℬ",
      bscr: "𝒷",
      bsemi: "⁏",
      bsim: "∽",
      bsime: "⋍",
      bsol: "\\",
      bsolb: "⧅",
      bsolhsub: "⟈",
      bull: "•",
      bullet: "•",
      bump: "≎",
      bumpE: "⪮",
      bumpe: "≏",
      Bumpeq: "≎",
      bumpeq: "≏",
      Cacute: "Ć",
      cacute: "ć",
      Cap: "⋒",
      cap: "∩",
      capand: "⩄",
      capbrcup: "⩉",
      capcap: "⩋",
      capcup: "⩇",
      capdot: "⩀",
      CapitalDifferentialD: "ⅅ",
      caps: "∩︀",
      caret: "⁁",
      caron: "ˇ",
      Cayleys: "ℭ",
      ccaps: "⩍",
      Ccaron: "Č",
      ccaron: "č",
      Ccedil: "Ç",
      ccedil: "ç",
      Ccirc: "Ĉ",
      ccirc: "ĉ",
      Cconint: "∰",
      ccups: "⩌",
      ccupssm: "⩐",
      Cdot: "Ċ",
      cdot: "ċ",
      cedil: "¸",
      Cedilla: "¸",
      cemptyv: "⦲",
      cent: "¢",
      CenterDot: "·",
      centerdot: "·",
      Cfr: "ℭ",
      cfr: "𝔠",
      CHcy: "Ч",
      chcy: "ч",
      check: "✓",
      checkmark: "✓",
      Chi: "Χ",
      chi: "χ",
      cir: "○",
      circ: "ˆ",
      circeq: "≗",
      circlearrowleft: "↺",
      circlearrowright: "↻",
      circledast: "⊛",
      circledcirc: "⊚",
      circleddash: "⊝",
      CircleDot: "⊙",
      circledR: "®",
      circledS: "Ⓢ",
      CircleMinus: "⊖",
      CirclePlus: "⊕",
      CircleTimes: "⊗",
      cirE: "⧃",
      cire: "≗",
      cirfnint: "⨐",
      cirmid: "⫯",
      cirscir: "⧂",
      ClockwiseContourIntegral: "∲",
      CloseCurlyDoubleQuote: "”",
      CloseCurlyQuote: "’",
      clubs: "♣",
      clubsuit: "♣",
      Colon: "∷",
      colon: ":",
      Colone: "⩴",
      colone: "≔",
      coloneq: "≔",
      comma: ",",
      commat: "@",
      comp: "∁",
      compfn: "∘",
      complement: "∁",
      complexes: "ℂ",
      cong: "≅",
      congdot: "⩭",
      Congruent: "≡",
      Conint: "∯",
      conint: "∮",
      ContourIntegral: "∮",
      Copf: "ℂ",
      copf: "𝕔",
      coprod: "∐",
      Coproduct: "∐",
      COPY: "©",
      copy: "©",
      copysr: "℗",
      CounterClockwiseContourIntegral: "∳",
      crarr: "↵",
      Cross: "⨯",
      cross: "✗",
      Cscr: "𝒞",
      cscr: "𝒸",
      csub: "⫏",
      csube: "⫑",
      csup: "⫐",
      csupe: "⫒",
      ctdot: "⋯",
      cudarrl: "⤸",
      cudarrr: "⤵",
      cuepr: "⋞",
      cuesc: "⋟",
      cularr: "↶",
      cularrp: "⤽",
      Cup: "⋓",
      cup: "∪",
      cupbrcap: "⩈",
      CupCap: "≍",
      cupcap: "⩆",
      cupcup: "⩊",
      cupdot: "⊍",
      cupor: "⩅",
      cups: "∪︀",
      curarr: "↷",
      curarrm: "⤼",
      curlyeqprec: "⋞",
      curlyeqsucc: "⋟",
      curlyvee: "⋎",
      curlywedge: "⋏",
      curren: "¤",
      curvearrowleft: "↶",
      curvearrowright: "↷",
      cuvee: "⋎",
      cuwed: "⋏",
      cwconint: "∲",
      cwint: "∱",
      cylcty: "⌭",
      Dagger: "‡",
      dagger: "†",
      daleth: "ℸ",
      Darr: "↡",
      dArr: "⇓",
      darr: "↓",
      dash: "‐",
      Dashv: "⫤",
      dashv: "⊣",
      dbkarow: "⤏",
      dblac: "˝",
      Dcaron: "Ď",
      dcaron: "ď",
      Dcy: "Д",
      dcy: "д",
      DD: "ⅅ",
      dd: "ⅆ",
      ddagger: "‡",
      ddarr: "⇊",
      DDotrahd: "⤑",
      ddotseq: "⩷",
      deg: "°",
      Del: "∇",
      Delta: "Δ",
      delta: "δ",
      demptyv: "⦱",
      dfisht: "⥿",
      Dfr: "𝔇",
      dfr: "𝔡",
      dHar: "⥥",
      dharl: "⇃",
      dharr: "⇂",
      DiacriticalAcute: "´",
      DiacriticalDot: "˙",
      DiacriticalDoubleAcute: "˝",
      DiacriticalGrave: "`",
      DiacriticalTilde: "˜",
      diam: "⋄",
      Diamond: "⋄",
      diamond: "⋄",
      diamondsuit: "♦",
      diams: "♦",
      die: "¨",
      DifferentialD: "ⅆ",
      digamma: "ϝ",
      disin: "⋲",
      div: "÷",
      divide: "÷",
      divideontimes: "⋇",
      divonx: "⋇",
      DJcy: "Ђ",
      djcy: "ђ",
      dlcorn: "⌞",
      dlcrop: "⌍",
      dollar: "$",
      Dopf: "𝔻",
      dopf: "𝕕",
      Dot: "¨",
      dot: "˙",
      DotDot: "⃜",
      doteq: "≐",
      doteqdot: "≑",
      DotEqual: "≐",
      dotminus: "∸",
      dotplus: "∔",
      dotsquare: "⊡",
      doublebarwedge: "⌆",
      DoubleContourIntegral: "∯",
      DoubleDot: "¨",
      DoubleDownArrow: "⇓",
      DoubleLeftArrow: "⇐",
      DoubleLeftRightArrow: "⇔",
      DoubleLeftTee: "⫤",
      DoubleLongLeftArrow: "⟸",
      DoubleLongLeftRightArrow: "⟺",
      DoubleLongRightArrow: "⟹",
      DoubleRightArrow: "⇒",
      DoubleRightTee: "⊨",
      DoubleUpArrow: "⇑",
      DoubleUpDownArrow: "⇕",
      DoubleVerticalBar: "∥",
      DownArrow: "↓",
      Downarrow: "⇓",
      downarrow: "↓",
      DownArrowBar: "⤓",
      DownArrowUpArrow: "⇵",
      DownBreve: "̑",
      downdownarrows: "⇊",
      downharpoonleft: "⇃",
      downharpoonright: "⇂",
      DownLeftRightVector: "⥐",
      DownLeftTeeVector: "⥞",
      DownLeftVector: "↽",
      DownLeftVectorBar: "⥖",
      DownRightTeeVector: "⥟",
      DownRightVector: "⇁",
      DownRightVectorBar: "⥗",
      DownTee: "⊤",
      DownTeeArrow: "↧",
      drbkarow: "⤐",
      drcorn: "⌟",
      drcrop: "⌌",
      Dscr: "𝒟",
      dscr: "𝒹",
      DScy: "Ѕ",
      dscy: "ѕ",
      dsol: "⧶",
      Dstrok: "Đ",
      dstrok: "đ",
      dtdot: "⋱",
      dtri: "▿",
      dtrif: "▾",
      duarr: "⇵",
      duhar: "⥯",
      dwangle: "⦦",
      DZcy: "Џ",
      dzcy: "џ",
      dzigrarr: "⟿",
      Eacute: "É",
      eacute: "é",
      easter: "⩮",
      Ecaron: "Ě",
      ecaron: "ě",
      ecir: "≖",
      Ecirc: "Ê",
      ecirc: "ê",
      ecolon: "≕",
      Ecy: "Э",
      ecy: "э",
      eDDot: "⩷",
      Edot: "Ė",
      eDot: "≑",
      edot: "ė",
      ee: "ⅇ",
      efDot: "≒",
      Efr: "𝔈",
      efr: "𝔢",
      eg: "⪚",
      Egrave: "È",
      egrave: "è",
      egs: "⪖",
      egsdot: "⪘",
      el: "⪙",
      Element: "∈",
      elinters: "⏧",
      ell: "ℓ",
      els: "⪕",
      elsdot: "⪗",
      Emacr: "Ē",
      emacr: "ē",
      empty: "∅",
      emptyset: "∅",
      EmptySmallSquare: "◻",
      emptyv: "∅",
      EmptyVerySmallSquare: "▫",
      emsp: " ",
      emsp13: " ",
      emsp14: " ",
      ENG: "Ŋ",
      eng: "ŋ",
      ensp: " ",
      Eogon: "Ę",
      eogon: "ę",
      Eopf: "𝔼",
      eopf: "𝕖",
      epar: "⋕",
      eparsl: "⧣",
      eplus: "⩱",
      epsi: "ε",
      Epsilon: "Ε",
      epsilon: "ε",
      epsiv: "ϵ",
      eqcirc: "≖",
      eqcolon: "≕",
      eqsim: "≂",
      eqslantgtr: "⪖",
      eqslantless: "⪕",
      Equal: "⩵",
      equals: "=",
      EqualTilde: "≂",
      equest: "≟",
      Equilibrium: "⇌",
      equiv: "≡",
      equivDD: "⩸",
      eqvparsl: "⧥",
      erarr: "⥱",
      erDot: "≓",
      Escr: "ℰ",
      escr: "ℯ",
      esdot: "≐",
      Esim: "⩳",
      esim: "≂",
      Eta: "Η",
      eta: "η",
      ETH: "Ð",
      eth: "ð",
      Euml: "Ë",
      euml: "ë",
      euro: "€",
      excl: "!",
      exist: "∃",
      Exists: "∃",
      expectation: "ℰ",
      ExponentialE: "ⅇ",
      exponentiale: "ⅇ",
      fallingdotseq: "≒",
      Fcy: "Ф",
      fcy: "ф",
      female: "♀",
      ffilig: "ﬃ",
      fflig: "ﬀ",
      ffllig: "ﬄ",
      Ffr: "𝔉",
      ffr: "𝔣",
      filig: "ﬁ",
      FilledSmallSquare: "◼",
      FilledVerySmallSquare: "▪",
      fjlig: "fj",
      flat: "♭",
      fllig: "ﬂ",
      fltns: "▱",
      fnof: "ƒ",
      Fopf: "𝔽",
      fopf: "𝕗",
      ForAll: "∀",
      forall: "∀",
      fork: "⋔",
      forkv: "⫙",
      Fouriertrf: "ℱ",
      fpartint: "⨍",
      frac12: "½",
      frac13: "⅓",
      frac14: "¼",
      frac15: "⅕",
      frac16: "⅙",
      frac18: "⅛",
      frac23: "⅔",
      frac25: "⅖",
      frac34: "¾",
      frac35: "⅗",
      frac38: "⅜",
      frac45: "⅘",
      frac56: "⅚",
      frac58: "⅝",
      frac78: "⅞",
      frasl: "⁄",
      frown: "⌢",
      Fscr: "ℱ",
      fscr: "𝒻",
      gacute: "ǵ",
      Gamma: "Γ",
      gamma: "γ",
      Gammad: "Ϝ",
      gammad: "ϝ",
      gap: "⪆",
      Gbreve: "Ğ",
      gbreve: "ğ",
      Gcedil: "Ģ",
      Gcirc: "Ĝ",
      gcirc: "ĝ",
      Gcy: "Г",
      gcy: "г",
      Gdot: "Ġ",
      gdot: "ġ",
      gE: "≧",
      ge: "≥",
      gEl: "⪌",
      gel: "⋛",
      geq: "≥",
      geqq: "≧",
      geqslant: "⩾",
      ges: "⩾",
      gescc: "⪩",
      gesdot: "⪀",
      gesdoto: "⪂",
      gesdotol: "⪄",
      gesl: "⋛︀",
      gesles: "⪔",
      Gfr: "𝔊",
      gfr: "𝔤",
      Gg: "⋙",
      gg: "≫",
      ggg: "⋙",
      gimel: "ℷ",
      GJcy: "Ѓ",
      gjcy: "ѓ",
      gl: "≷",
      gla: "⪥",
      glE: "⪒",
      glj: "⪤",
      gnap: "⪊",
      gnapprox: "⪊",
      gnE: "≩",
      gne: "⪈",
      gneq: "⪈",
      gneqq: "≩",
      gnsim: "⋧",
      Gopf: "𝔾",
      gopf: "𝕘",
      grave: "`",
      GreaterEqual: "≥",
      GreaterEqualLess: "⋛",
      GreaterFullEqual: "≧",
      GreaterGreater: "⪢",
      GreaterLess: "≷",
      GreaterSlantEqual: "⩾",
      GreaterTilde: "≳",
      Gscr: "𝒢",
      gscr: "ℊ",
      gsim: "≳",
      gsime: "⪎",
      gsiml: "⪐",
      Gt: "≫",
      GT: ">",
      gt: ">",
      gtcc: "⪧",
      gtcir: "⩺",
      gtdot: "⋗",
      gtlPar: "⦕",
      gtquest: "⩼",
      gtrapprox: "⪆",
      gtrarr: "⥸",
      gtrdot: "⋗",
      gtreqless: "⋛",
      gtreqqless: "⪌",
      gtrless: "≷",
      gtrsim: "≳",
      gvertneqq: "≩︀",
      gvnE: "≩︀",
      Hacek: "ˇ",
      hairsp: " ",
      half: "½",
      hamilt: "ℋ",
      HARDcy: "Ъ",
      hardcy: "ъ",
      hArr: "⇔",
      harr: "↔",
      harrcir: "⥈",
      harrw: "↭",
      Hat: "^",
      hbar: "ℏ",
      Hcirc: "Ĥ",
      hcirc: "ĥ",
      hearts: "♥",
      heartsuit: "♥",
      hellip: "…",
      hercon: "⊹",
      Hfr: "ℌ",
      hfr: "𝔥",
      HilbertSpace: "ℋ",
      hksearow: "⤥",
      hkswarow: "⤦",
      hoarr: "⇿",
      homtht: "∻",
      hookleftarrow: "↩",
      hookrightarrow: "↪",
      Hopf: "ℍ",
      hopf: "𝕙",
      horbar: "―",
      HorizontalLine: "─",
      Hscr: "ℋ",
      hscr: "𝒽",
      hslash: "ℏ",
      Hstrok: "Ħ",
      hstrok: "ħ",
      HumpDownHump: "≎",
      HumpEqual: "≏",
      hybull: "⁃",
      hyphen: "‐",
      Iacute: "Í",
      iacute: "í",
      ic: "⁣",
      Icirc: "Î",
      icirc: "î",
      Icy: "И",
      icy: "и",
      Idot: "İ",
      IEcy: "Е",
      iecy: "е",
      iexcl: "¡",
      iff: "⇔",
      Ifr: "ℑ",
      ifr: "𝔦",
      Igrave: "Ì",
      igrave: "ì",
      ii: "ⅈ",
      iiiint: "⨌",
      iiint: "∭",
      iinfin: "⧜",
      iiota: "℩",
      IJlig: "Ĳ",
      ijlig: "ĳ",
      Im: "ℑ",
      Imacr: "Ī",
      imacr: "ī",
      image: "ℑ",
      ImaginaryI: "ⅈ",
      imagline: "ℐ",
      imagpart: "ℑ",
      imath: "ı",
      imof: "⊷",
      imped: "Ƶ",
      Implies: "⇒",
      in: "∈",
      incare: "℅",
      infin: "∞",
      infintie: "⧝",
      inodot: "ı",
      Int: "∬",
      int: "∫",
      intcal: "⊺",
      integers: "ℤ",
      Integral: "∫",
      intercal: "⊺",
      Intersection: "⋂",
      intlarhk: "⨗",
      intprod: "⨼",
      InvisibleComma: "⁣",
      InvisibleTimes: "⁢",
      IOcy: "Ё",
      iocy: "ё",
      Iogon: "Į",
      iogon: "į",
      Iopf: "𝕀",
      iopf: "𝕚",
      Iota: "Ι",
      iota: "ι",
      iprod: "⨼",
      iquest: "¿",
      Iscr: "ℐ",
      iscr: "𝒾",
      isin: "∈",
      isindot: "⋵",
      isinE: "⋹",
      isins: "⋴",
      isinsv: "⋳",
      isinv: "∈",
      it: "⁢",
      Itilde: "Ĩ",
      itilde: "ĩ",
      Iukcy: "І",
      iukcy: "і",
      Iuml: "Ï",
      iuml: "ï",
      Jcirc: "Ĵ",
      jcirc: "ĵ",
      Jcy: "Й",
      jcy: "й",
      Jfr: "𝔍",
      jfr: "𝔧",
      jmath: "ȷ",
      Jopf: "𝕁",
      jopf: "𝕛",
      Jscr: "𝒥",
      jscr: "𝒿",
      Jsercy: "Ј",
      jsercy: "ј",
      Jukcy: "Є",
      jukcy: "є",
      Kappa: "Κ",
      kappa: "κ",
      kappav: "ϰ",
      Kcedil: "Ķ",
      kcedil: "ķ",
      Kcy: "К",
      kcy: "к",
      Kfr: "𝔎",
      kfr: "𝔨",
      kgreen: "ĸ",
      KHcy: "Х",
      khcy: "х",
      KJcy: "Ќ",
      kjcy: "ќ",
      Kopf: "𝕂",
      kopf: "𝕜",
      Kscr: "𝒦",
      kscr: "𝓀",
      lAarr: "⇚",
      Lacute: "Ĺ",
      lacute: "ĺ",
      laemptyv: "⦴",
      lagran: "ℒ",
      Lambda: "Λ",
      lambda: "λ",
      Lang: "⟪",
      lang: "⟨",
      langd: "⦑",
      langle: "⟨",
      lap: "⪅",
      Laplacetrf: "ℒ",
      laquo: "«",
      Larr: "↞",
      lArr: "⇐",
      larr: "←",
      larrb: "⇤",
      larrbfs: "⤟",
      larrfs: "⤝",
      larrhk: "↩",
      larrlp: "↫",
      larrpl: "⤹",
      larrsim: "⥳",
      larrtl: "↢",
      lat: "⪫",
      lAtail: "⤛",
      latail: "⤙",
      late: "⪭",
      lates: "⪭︀",
      lBarr: "⤎",
      lbarr: "⤌",
      lbbrk: "❲",
      lbrace: "{",
      lbrack: "[",
      lbrke: "⦋",
      lbrksld: "⦏",
      lbrkslu: "⦍",
      Lcaron: "Ľ",
      lcaron: "ľ",
      Lcedil: "Ļ",
      lcedil: "ļ",
      lceil: "⌈",
      lcub: "{",
      Lcy: "Л",
      lcy: "л",
      ldca: "⤶",
      ldquo: "“",
      ldquor: "„",
      ldrdhar: "⥧",
      ldrushar: "⥋",
      ldsh: "↲",
      lE: "≦",
      le: "≤",
      LeftAngleBracket: "⟨",
      LeftArrow: "←",
      Leftarrow: "⇐",
      leftarrow: "←",
      LeftArrowBar: "⇤",
      LeftArrowRightArrow: "⇆",
      leftarrowtail: "↢",
      LeftCeiling: "⌈",
      LeftDoubleBracket: "⟦",
      LeftDownTeeVector: "⥡",
      LeftDownVector: "⇃",
      LeftDownVectorBar: "⥙",
      LeftFloor: "⌊",
      leftharpoondown: "↽",
      leftharpoonup: "↼",
      leftleftarrows: "⇇",
      LeftRightArrow: "↔",
      Leftrightarrow: "⇔",
      leftrightarrow: "↔",
      leftrightarrows: "⇆",
      leftrightharpoons: "⇋",
      leftrightsquigarrow: "↭",
      LeftRightVector: "⥎",
      LeftTee: "⊣",
      LeftTeeArrow: "↤",
      LeftTeeVector: "⥚",
      leftthreetimes: "⋋",
      LeftTriangle: "⊲",
      LeftTriangleBar: "⧏",
      LeftTriangleEqual: "⊴",
      LeftUpDownVector: "⥑",
      LeftUpTeeVector: "⥠",
      LeftUpVector: "↿",
      LeftUpVectorBar: "⥘",
      LeftVector: "↼",
      LeftVectorBar: "⥒",
      lEg: "⪋",
      leg: "⋚",
      leq: "≤",
      leqq: "≦",
      leqslant: "⩽",
      les: "⩽",
      lescc: "⪨",
      lesdot: "⩿",
      lesdoto: "⪁",
      lesdotor: "⪃",
      lesg: "⋚︀",
      lesges: "⪓",
      lessapprox: "⪅",
      lessdot: "⋖",
      lesseqgtr: "⋚",
      lesseqqgtr: "⪋",
      LessEqualGreater: "⋚",
      LessFullEqual: "≦",
      LessGreater: "≶",
      lessgtr: "≶",
      LessLess: "⪡",
      lesssim: "≲",
      LessSlantEqual: "⩽",
      LessTilde: "≲",
      lfisht: "⥼",
      lfloor: "⌊",
      Lfr: "𝔏",
      lfr: "𝔩",
      lg: "≶",
      lgE: "⪑",
      lHar: "⥢",
      lhard: "↽",
      lharu: "↼",
      lharul: "⥪",
      lhblk: "▄",
      LJcy: "Љ",
      ljcy: "љ",
      Ll: "⋘",
      ll: "≪",
      llarr: "⇇",
      llcorner: "⌞",
      Lleftarrow: "⇚",
      llhard: "⥫",
      lltri: "◺",
      Lmidot: "Ŀ",
      lmidot: "ŀ",
      lmoust: "⎰",
      lmoustache: "⎰",
      lnap: "⪉",
      lnapprox: "⪉",
      lnE: "≨",
      lne: "⪇",
      lneq: "⪇",
      lneqq: "≨",
      lnsim: "⋦",
      loang: "⟬",
      loarr: "⇽",
      lobrk: "⟦",
      LongLeftArrow: "⟵",
      Longleftarrow: "⟸",
      longleftarrow: "⟵",
      LongLeftRightArrow: "⟷",
      Longleftrightarrow: "⟺",
      longleftrightarrow: "⟷",
      longmapsto: "⟼",
      LongRightArrow: "⟶",
      Longrightarrow: "⟹",
      longrightarrow: "⟶",
      looparrowleft: "↫",
      looparrowright: "↬",
      lopar: "⦅",
      Lopf: "𝕃",
      lopf: "𝕝",
      loplus: "⨭",
      lotimes: "⨴",
      lowast: "∗",
      lowbar: "_",
      LowerLeftArrow: "↙",
      LowerRightArrow: "↘",
      loz: "◊",
      lozenge: "◊",
      lozf: "⧫",
      lpar: "(",
      lparlt: "⦓",
      lrarr: "⇆",
      lrcorner: "⌟",
      lrhar: "⇋",
      lrhard: "⥭",
      lrm: "‎",
      lrtri: "⊿",
      lsaquo: "‹",
      Lscr: "ℒ",
      lscr: "𝓁",
      Lsh: "↰",
      lsh: "↰",
      lsim: "≲",
      lsime: "⪍",
      lsimg: "⪏",
      lsqb: "[",
      lsquo: "‘",
      lsquor: "‚",
      Lstrok: "Ł",
      lstrok: "ł",
      Lt: "≪",
      LT: "<",
      lt: "<",
      ltcc: "⪦",
      ltcir: "⩹",
      ltdot: "⋖",
      lthree: "⋋",
      ltimes: "⋉",
      ltlarr: "⥶",
      ltquest: "⩻",
      ltri: "◃",
      ltrie: "⊴",
      ltrif: "◂",
      ltrPar: "⦖",
      lurdshar: "⥊",
      luruhar: "⥦",
      lvertneqq: "≨︀",
      lvnE: "≨︀",
      macr: "¯",
      male: "♂",
      malt: "✠",
      maltese: "✠",
      Map: "⤅",
      map: "↦",
      mapsto: "↦",
      mapstodown: "↧",
      mapstoleft: "↤",
      mapstoup: "↥",
      marker: "▮",
      mcomma: "⨩",
      Mcy: "М",
      mcy: "м",
      mdash: "—",
      mDDot: "∺",
      measuredangle: "∡",
      MediumSpace: " ",
      Mellintrf: "ℳ",
      Mfr: "𝔐",
      mfr: "𝔪",
      mho: "℧",
      micro: "µ",
      mid: "∣",
      midast: "*",
      midcir: "⫰",
      middot: "·",
      minus: "−",
      minusb: "⊟",
      minusd: "∸",
      minusdu: "⨪",
      MinusPlus: "∓",
      mlcp: "⫛",
      mldr: "…",
      mnplus: "∓",
      models: "⊧",
      Mopf: "𝕄",
      mopf: "𝕞",
      mp: "∓",
      Mscr: "ℳ",
      mscr: "𝓂",
      mstpos: "∾",
      Mu: "Μ",
      mu: "μ",
      multimap: "⊸",
      mumap: "⊸",
      nabla: "∇",
      Nacute: "Ń",
      nacute: "ń",
      nang: "∠⃒",
      nap: "≉",
      napE: "⩰̸",
      napid: "≋̸",
      napos: "ŉ",
      napprox: "≉",
      natur: "♮",
      natural: "♮",
      naturals: "ℕ",
      nbsp: " ",
      nbump: "≎̸",
      nbumpe: "≏̸",
      ncap: "⩃",
      Ncaron: "Ň",
      ncaron: "ň",
      Ncedil: "Ņ",
      ncedil: "ņ",
      ncong: "≇",
      ncongdot: "⩭̸",
      ncup: "⩂",
      Ncy: "Н",
      ncy: "н",
      ndash: "–",
      ne: "≠",
      nearhk: "⤤",
      neArr: "⇗",
      nearr: "↗",
      nearrow: "↗",
      nedot: "≐̸",
      NegativeMediumSpace: "​",
      NegativeThickSpace: "​",
      NegativeThinSpace: "​",
      NegativeVeryThinSpace: "​",
      nequiv: "≢",
      nesear: "⤨",
      nesim: "≂̸",
      NestedGreaterGreater: "≫",
      NestedLessLess: "≪",
      NewLine: `
`,
      nexist: "∄",
      nexists: "∄",
      Nfr: "𝔑",
      nfr: "𝔫",
      ngE: "≧̸",
      nge: "≱",
      ngeq: "≱",
      ngeqq: "≧̸",
      ngeqslant: "⩾̸",
      nges: "⩾̸",
      nGg: "⋙̸",
      ngsim: "≵",
      nGt: "≫⃒",
      ngt: "≯",
      ngtr: "≯",
      nGtv: "≫̸",
      nhArr: "⇎",
      nharr: "↮",
      nhpar: "⫲",
      ni: "∋",
      nis: "⋼",
      nisd: "⋺",
      niv: "∋",
      NJcy: "Њ",
      njcy: "њ",
      nlArr: "⇍",
      nlarr: "↚",
      nldr: "‥",
      nlE: "≦̸",
      nle: "≰",
      nLeftarrow: "⇍",
      nleftarrow: "↚",
      nLeftrightarrow: "⇎",
      nleftrightarrow: "↮",
      nleq: "≰",
      nleqq: "≦̸",
      nleqslant: "⩽̸",
      nles: "⩽̸",
      nless: "≮",
      nLl: "⋘̸",
      nlsim: "≴",
      nLt: "≪⃒",
      nlt: "≮",
      nltri: "⋪",
      nltrie: "⋬",
      nLtv: "≪̸",
      nmid: "∤",
      NoBreak: "⁠",
      NonBreakingSpace: " ",
      Nopf: "ℕ",
      nopf: "𝕟",
      Not: "⫬",
      not: "¬",
      NotCongruent: "≢",
      NotCupCap: "≭",
      NotDoubleVerticalBar: "∦",
      NotElement: "∉",
      NotEqual: "≠",
      NotEqualTilde: "≂̸",
      NotExists: "∄",
      NotGreater: "≯",
      NotGreaterEqual: "≱",
      NotGreaterFullEqual: "≧̸",
      NotGreaterGreater: "≫̸",
      NotGreaterLess: "≹",
      NotGreaterSlantEqual: "⩾̸",
      NotGreaterTilde: "≵",
      NotHumpDownHump: "≎̸",
      NotHumpEqual: "≏̸",
      notin: "∉",
      notindot: "⋵̸",
      notinE: "⋹̸",
      notinva: "∉",
      notinvb: "⋷",
      notinvc: "⋶",
      NotLeftTriangle: "⋪",
      NotLeftTriangleBar: "⧏̸",
      NotLeftTriangleEqual: "⋬",
      NotLess: "≮",
      NotLessEqual: "≰",
      NotLessGreater: "≸",
      NotLessLess: "≪̸",
      NotLessSlantEqual: "⩽̸",
      NotLessTilde: "≴",
      NotNestedGreaterGreater: "⪢̸",
      NotNestedLessLess: "⪡̸",
      notni: "∌",
      notniva: "∌",
      notnivb: "⋾",
      notnivc: "⋽",
      NotPrecedes: "⊀",
      NotPrecedesEqual: "⪯̸",
      NotPrecedesSlantEqual: "⋠",
      NotReverseElement: "∌",
      NotRightTriangle: "⋫",
      NotRightTriangleBar: "⧐̸",
      NotRightTriangleEqual: "⋭",
      NotSquareSubset: "⊏̸",
      NotSquareSubsetEqual: "⋢",
      NotSquareSuperset: "⊐̸",
      NotSquareSupersetEqual: "⋣",
      NotSubset: "⊂⃒",
      NotSubsetEqual: "⊈",
      NotSucceeds: "⊁",
      NotSucceedsEqual: "⪰̸",
      NotSucceedsSlantEqual: "⋡",
      NotSucceedsTilde: "≿̸",
      NotSuperset: "⊃⃒",
      NotSupersetEqual: "⊉",
      NotTilde: "≁",
      NotTildeEqual: "≄",
      NotTildeFullEqual: "≇",
      NotTildeTilde: "≉",
      NotVerticalBar: "∤",
      npar: "∦",
      nparallel: "∦",
      nparsl: "⫽⃥",
      npart: "∂̸",
      npolint: "⨔",
      npr: "⊀",
      nprcue: "⋠",
      npre: "⪯̸",
      nprec: "⊀",
      npreceq: "⪯̸",
      nrArr: "⇏",
      nrarr: "↛",
      nrarrc: "⤳̸",
      nrarrw: "↝̸",
      nRightarrow: "⇏",
      nrightarrow: "↛",
      nrtri: "⋫",
      nrtrie: "⋭",
      nsc: "⊁",
      nsccue: "⋡",
      nsce: "⪰̸",
      Nscr: "𝒩",
      nscr: "𝓃",
      nshortmid: "∤",
      nshortparallel: "∦",
      nsim: "≁",
      nsime: "≄",
      nsimeq: "≄",
      nsmid: "∤",
      nspar: "∦",
      nsqsube: "⋢",
      nsqsupe: "⋣",
      nsub: "⊄",
      nsubE: "⫅̸",
      nsube: "⊈",
      nsubset: "⊂⃒",
      nsubseteq: "⊈",
      nsubseteqq: "⫅̸",
      nsucc: "⊁",
      nsucceq: "⪰̸",
      nsup: "⊅",
      nsupE: "⫆̸",
      nsupe: "⊉",
      nsupset: "⊃⃒",
      nsupseteq: "⊉",
      nsupseteqq: "⫆̸",
      ntgl: "≹",
      Ntilde: "Ñ",
      ntilde: "ñ",
      ntlg: "≸",
      ntriangleleft: "⋪",
      ntrianglelefteq: "⋬",
      ntriangleright: "⋫",
      ntrianglerighteq: "⋭",
      Nu: "Ν",
      nu: "ν",
      num: "#",
      numero: "№",
      numsp: " ",
      nvap: "≍⃒",
      nVDash: "⊯",
      nVdash: "⊮",
      nvDash: "⊭",
      nvdash: "⊬",
      nvge: "≥⃒",
      nvgt: ">⃒",
      nvHarr: "⤄",
      nvinfin: "⧞",
      nvlArr: "⤂",
      nvle: "≤⃒",
      nvlt: "<⃒",
      nvltrie: "⊴⃒",
      nvrArr: "⤃",
      nvrtrie: "⊵⃒",
      nvsim: "∼⃒",
      nwarhk: "⤣",
      nwArr: "⇖",
      nwarr: "↖",
      nwarrow: "↖",
      nwnear: "⤧",
      Oacute: "Ó",
      oacute: "ó",
      oast: "⊛",
      ocir: "⊚",
      Ocirc: "Ô",
      ocirc: "ô",
      Ocy: "О",
      ocy: "о",
      odash: "⊝",
      Odblac: "Ő",
      odblac: "ő",
      odiv: "⨸",
      odot: "⊙",
      odsold: "⦼",
      OElig: "Œ",
      oelig: "œ",
      ofcir: "⦿",
      Ofr: "𝔒",
      ofr: "𝔬",
      ogon: "˛",
      Ograve: "Ò",
      ograve: "ò",
      ogt: "⧁",
      ohbar: "⦵",
      ohm: "Ω",
      oint: "∮",
      olarr: "↺",
      olcir: "⦾",
      olcross: "⦻",
      oline: "‾",
      olt: "⧀",
      Omacr: "Ō",
      omacr: "ō",
      Omega: "Ω",
      omega: "ω",
      Omicron: "Ο",
      omicron: "ο",
      omid: "⦶",
      ominus: "⊖",
      Oopf: "𝕆",
      oopf: "𝕠",
      opar: "⦷",
      OpenCurlyDoubleQuote: "“",
      OpenCurlyQuote: "‘",
      operp: "⦹",
      oplus: "⊕",
      Or: "⩔",
      or: "∨",
      orarr: "↻",
      ord: "⩝",
      order: "ℴ",
      orderof: "ℴ",
      ordf: "ª",
      ordm: "º",
      origof: "⊶",
      oror: "⩖",
      orslope: "⩗",
      orv: "⩛",
      oS: "Ⓢ",
      Oscr: "𝒪",
      oscr: "ℴ",
      Oslash: "Ø",
      oslash: "ø",
      osol: "⊘",
      Otilde: "Õ",
      otilde: "õ",
      Otimes: "⨷",
      otimes: "⊗",
      otimesas: "⨶",
      Ouml: "Ö",
      ouml: "ö",
      ovbar: "⌽",
      OverBar: "‾",
      OverBrace: "⏞",
      OverBracket: "⎴",
      OverParenthesis: "⏜",
      par: "∥",
      para: "¶",
      parallel: "∥",
      parsim: "⫳",
      parsl: "⫽",
      part: "∂",
      PartialD: "∂",
      Pcy: "П",
      pcy: "п",
      percnt: "%",
      period: ".",
      permil: "‰",
      perp: "⊥",
      pertenk: "‱",
      Pfr: "𝔓",
      pfr: "𝔭",
      Phi: "Φ",
      phi: "φ",
      phiv: "ϕ",
      phmmat: "ℳ",
      phone: "☎",
      Pi: "Π",
      pi: "π",
      pitchfork: "⋔",
      piv: "ϖ",
      planck: "ℏ",
      planckh: "ℎ",
      plankv: "ℏ",
      plus: "+",
      plusacir: "⨣",
      plusb: "⊞",
      pluscir: "⨢",
      plusdo: "∔",
      plusdu: "⨥",
      pluse: "⩲",
      PlusMinus: "±",
      plusmn: "±",
      plussim: "⨦",
      plustwo: "⨧",
      pm: "±",
      Poincareplane: "ℌ",
      pointint: "⨕",
      Popf: "ℙ",
      popf: "𝕡",
      pound: "£",
      Pr: "⪻",
      pr: "≺",
      prap: "⪷",
      prcue: "≼",
      prE: "⪳",
      pre: "⪯",
      prec: "≺",
      precapprox: "⪷",
      preccurlyeq: "≼",
      Precedes: "≺",
      PrecedesEqual: "⪯",
      PrecedesSlantEqual: "≼",
      PrecedesTilde: "≾",
      preceq: "⪯",
      precnapprox: "⪹",
      precneqq: "⪵",
      precnsim: "⋨",
      precsim: "≾",
      Prime: "″",
      prime: "′",
      primes: "ℙ",
      prnap: "⪹",
      prnE: "⪵",
      prnsim: "⋨",
      prod: "∏",
      Product: "∏",
      profalar: "⌮",
      profline: "⌒",
      profsurf: "⌓",
      prop: "∝",
      Proportion: "∷",
      Proportional: "∝",
      propto: "∝",
      prsim: "≾",
      prurel: "⊰",
      Pscr: "𝒫",
      pscr: "𝓅",
      Psi: "Ψ",
      psi: "ψ",
      puncsp: " ",
      Qfr: "𝔔",
      qfr: "𝔮",
      qint: "⨌",
      Qopf: "ℚ",
      qopf: "𝕢",
      qprime: "⁗",
      Qscr: "𝒬",
      qscr: "𝓆",
      quaternions: "ℍ",
      quatint: "⨖",
      quest: "?",
      questeq: "≟",
      QUOT: '"',
      quot: '"',
      rAarr: "⇛",
      race: "∽̱",
      Racute: "Ŕ",
      racute: "ŕ",
      radic: "√",
      raemptyv: "⦳",
      Rang: "⟫",
      rang: "⟩",
      rangd: "⦒",
      range: "⦥",
      rangle: "⟩",
      raquo: "»",
      Rarr: "↠",
      rArr: "⇒",
      rarr: "→",
      rarrap: "⥵",
      rarrb: "⇥",
      rarrbfs: "⤠",
      rarrc: "⤳",
      rarrfs: "⤞",
      rarrhk: "↪",
      rarrlp: "↬",
      rarrpl: "⥅",
      rarrsim: "⥴",
      Rarrtl: "⤖",
      rarrtl: "↣",
      rarrw: "↝",
      rAtail: "⤜",
      ratail: "⤚",
      ratio: "∶",
      rationals: "ℚ",
      RBarr: "⤐",
      rBarr: "⤏",
      rbarr: "⤍",
      rbbrk: "❳",
      rbrace: "}",
      rbrack: "]",
      rbrke: "⦌",
      rbrksld: "⦎",
      rbrkslu: "⦐",
      Rcaron: "Ř",
      rcaron: "ř",
      Rcedil: "Ŗ",
      rcedil: "ŗ",
      rceil: "⌉",
      rcub: "}",
      Rcy: "Р",
      rcy: "р",
      rdca: "⤷",
      rdldhar: "⥩",
      rdquo: "”",
      rdquor: "”",
      rdsh: "↳",
      Re: "ℜ",
      real: "ℜ",
      realine: "ℛ",
      realpart: "ℜ",
      reals: "ℝ",
      rect: "▭",
      REG: "®",
      reg: "®",
      ReverseElement: "∋",
      ReverseEquilibrium: "⇋",
      ReverseUpEquilibrium: "⥯",
      rfisht: "⥽",
      rfloor: "⌋",
      Rfr: "ℜ",
      rfr: "𝔯",
      rHar: "⥤",
      rhard: "⇁",
      rharu: "⇀",
      rharul: "⥬",
      Rho: "Ρ",
      rho: "ρ",
      rhov: "ϱ",
      RightAngleBracket: "⟩",
      RightArrow: "→",
      Rightarrow: "⇒",
      rightarrow: "→",
      RightArrowBar: "⇥",
      RightArrowLeftArrow: "⇄",
      rightarrowtail: "↣",
      RightCeiling: "⌉",
      RightDoubleBracket: "⟧",
      RightDownTeeVector: "⥝",
      RightDownVector: "⇂",
      RightDownVectorBar: "⥕",
      RightFloor: "⌋",
      rightharpoondown: "⇁",
      rightharpoonup: "⇀",
      rightleftarrows: "⇄",
      rightleftharpoons: "⇌",
      rightrightarrows: "⇉",
      rightsquigarrow: "↝",
      RightTee: "⊢",
      RightTeeArrow: "↦",
      RightTeeVector: "⥛",
      rightthreetimes: "⋌",
      RightTriangle: "⊳",
      RightTriangleBar: "⧐",
      RightTriangleEqual: "⊵",
      RightUpDownVector: "⥏",
      RightUpTeeVector: "⥜",
      RightUpVector: "↾",
      RightUpVectorBar: "⥔",
      RightVector: "⇀",
      RightVectorBar: "⥓",
      ring: "˚",
      risingdotseq: "≓",
      rlarr: "⇄",
      rlhar: "⇌",
      rlm: "‏",
      rmoust: "⎱",
      rmoustache: "⎱",
      rnmid: "⫮",
      roang: "⟭",
      roarr: "⇾",
      robrk: "⟧",
      ropar: "⦆",
      Ropf: "ℝ",
      ropf: "𝕣",
      roplus: "⨮",
      rotimes: "⨵",
      RoundImplies: "⥰",
      rpar: ")",
      rpargt: "⦔",
      rppolint: "⨒",
      rrarr: "⇉",
      Rrightarrow: "⇛",
      rsaquo: "›",
      Rscr: "ℛ",
      rscr: "𝓇",
      Rsh: "↱",
      rsh: "↱",
      rsqb: "]",
      rsquo: "’",
      rsquor: "’",
      rthree: "⋌",
      rtimes: "⋊",
      rtri: "▹",
      rtrie: "⊵",
      rtrif: "▸",
      rtriltri: "⧎",
      RuleDelayed: "⧴",
      ruluhar: "⥨",
      rx: "℞",
      Sacute: "Ś",
      sacute: "ś",
      sbquo: "‚",
      Sc: "⪼",
      sc: "≻",
      scap: "⪸",
      Scaron: "Š",
      scaron: "š",
      sccue: "≽",
      scE: "⪴",
      sce: "⪰",
      Scedil: "Ş",
      scedil: "ş",
      Scirc: "Ŝ",
      scirc: "ŝ",
      scnap: "⪺",
      scnE: "⪶",
      scnsim: "⋩",
      scpolint: "⨓",
      scsim: "≿",
      Scy: "С",
      scy: "с",
      sdot: "⋅",
      sdotb: "⊡",
      sdote: "⩦",
      searhk: "⤥",
      seArr: "⇘",
      searr: "↘",
      searrow: "↘",
      sect: "§",
      semi: ";",
      seswar: "⤩",
      setminus: "∖",
      setmn: "∖",
      sext: "✶",
      Sfr: "𝔖",
      sfr: "𝔰",
      sfrown: "⌢",
      sharp: "♯",
      SHCHcy: "Щ",
      shchcy: "щ",
      SHcy: "Ш",
      shcy: "ш",
      ShortDownArrow: "↓",
      ShortLeftArrow: "←",
      shortmid: "∣",
      shortparallel: "∥",
      ShortRightArrow: "→",
      ShortUpArrow: "↑",
      shy: "­",
      Sigma: "Σ",
      sigma: "σ",
      sigmaf: "ς",
      sigmav: "ς",
      sim: "∼",
      simdot: "⩪",
      sime: "≃",
      simeq: "≃",
      simg: "⪞",
      simgE: "⪠",
      siml: "⪝",
      simlE: "⪟",
      simne: "≆",
      simplus: "⨤",
      simrarr: "⥲",
      slarr: "←",
      SmallCircle: "∘",
      smallsetminus: "∖",
      smashp: "⨳",
      smeparsl: "⧤",
      smid: "∣",
      smile: "⌣",
      smt: "⪪",
      smte: "⪬",
      smtes: "⪬︀",
      SOFTcy: "Ь",
      softcy: "ь",
      sol: "/",
      solb: "⧄",
      solbar: "⌿",
      Sopf: "𝕊",
      sopf: "𝕤",
      spades: "♠",
      spadesuit: "♠",
      spar: "∥",
      sqcap: "⊓",
      sqcaps: "⊓︀",
      sqcup: "⊔",
      sqcups: "⊔︀",
      Sqrt: "√",
      sqsub: "⊏",
      sqsube: "⊑",
      sqsubset: "⊏",
      sqsubseteq: "⊑",
      sqsup: "⊐",
      sqsupe: "⊒",
      sqsupset: "⊐",
      sqsupseteq: "⊒",
      squ: "□",
      Square: "□",
      square: "□",
      SquareIntersection: "⊓",
      SquareSubset: "⊏",
      SquareSubsetEqual: "⊑",
      SquareSuperset: "⊐",
      SquareSupersetEqual: "⊒",
      SquareUnion: "⊔",
      squarf: "▪",
      squf: "▪",
      srarr: "→",
      Sscr: "𝒮",
      sscr: "𝓈",
      ssetmn: "∖",
      ssmile: "⌣",
      sstarf: "⋆",
      Star: "⋆",
      star: "☆",
      starf: "★",
      straightepsilon: "ϵ",
      straightphi: "ϕ",
      strns: "¯",
      Sub: "⋐",
      sub: "⊂",
      subdot: "⪽",
      subE: "⫅",
      sube: "⊆",
      subedot: "⫃",
      submult: "⫁",
      subnE: "⫋",
      subne: "⊊",
      subplus: "⪿",
      subrarr: "⥹",
      Subset: "⋐",
      subset: "⊂",
      subseteq: "⊆",
      subseteqq: "⫅",
      SubsetEqual: "⊆",
      subsetneq: "⊊",
      subsetneqq: "⫋",
      subsim: "⫇",
      subsub: "⫕",
      subsup: "⫓",
      succ: "≻",
      succapprox: "⪸",
      succcurlyeq: "≽",
      Succeeds: "≻",
      SucceedsEqual: "⪰",
      SucceedsSlantEqual: "≽",
      SucceedsTilde: "≿",
      succeq: "⪰",
      succnapprox: "⪺",
      succneqq: "⪶",
      succnsim: "⋩",
      succsim: "≿",
      SuchThat: "∋",
      Sum: "∑",
      sum: "∑",
      sung: "♪",
      Sup: "⋑",
      sup: "⊃",
      sup1: "¹",
      sup2: "²",
      sup3: "³",
      supdot: "⪾",
      supdsub: "⫘",
      supE: "⫆",
      supe: "⊇",
      supedot: "⫄",
      Superset: "⊃",
      SupersetEqual: "⊇",
      suphsol: "⟉",
      suphsub: "⫗",
      suplarr: "⥻",
      supmult: "⫂",
      supnE: "⫌",
      supne: "⊋",
      supplus: "⫀",
      Supset: "⋑",
      supset: "⊃",
      supseteq: "⊇",
      supseteqq: "⫆",
      supsetneq: "⊋",
      supsetneqq: "⫌",
      supsim: "⫈",
      supsub: "⫔",
      supsup: "⫖",
      swarhk: "⤦",
      swArr: "⇙",
      swarr: "↙",
      swarrow: "↙",
      swnwar: "⤪",
      szlig: "ß",
      Tab: "	",
      target: "⌖",
      Tau: "Τ",
      tau: "τ",
      tbrk: "⎴",
      Tcaron: "Ť",
      tcaron: "ť",
      Tcedil: "Ţ",
      tcedil: "ţ",
      Tcy: "Т",
      tcy: "т",
      tdot: "⃛",
      telrec: "⌕",
      Tfr: "𝔗",
      tfr: "𝔱",
      there4: "∴",
      Therefore: "∴",
      therefore: "∴",
      Theta: "Θ",
      theta: "θ",
      thetasym: "ϑ",
      thetav: "ϑ",
      thickapprox: "≈",
      thicksim: "∼",
      ThickSpace: "  ",
      thinsp: " ",
      ThinSpace: " ",
      thkap: "≈",
      thksim: "∼",
      THORN: "Þ",
      thorn: "þ",
      Tilde: "∼",
      tilde: "˜",
      TildeEqual: "≃",
      TildeFullEqual: "≅",
      TildeTilde: "≈",
      times: "×",
      timesb: "⊠",
      timesbar: "⨱",
      timesd: "⨰",
      tint: "∭",
      toea: "⤨",
      top: "⊤",
      topbot: "⌶",
      topcir: "⫱",
      Topf: "𝕋",
      topf: "𝕥",
      topfork: "⫚",
      tosa: "⤩",
      tprime: "‴",
      TRADE: "™",
      trade: "™",
      triangle: "▵",
      triangledown: "▿",
      triangleleft: "◃",
      trianglelefteq: "⊴",
      triangleq: "≜",
      triangleright: "▹",
      trianglerighteq: "⊵",
      tridot: "◬",
      trie: "≜",
      triminus: "⨺",
      TripleDot: "⃛",
      triplus: "⨹",
      trisb: "⧍",
      tritime: "⨻",
      trpezium: "⏢",
      Tscr: "𝒯",
      tscr: "𝓉",
      TScy: "Ц",
      tscy: "ц",
      TSHcy: "Ћ",
      tshcy: "ћ",
      Tstrok: "Ŧ",
      tstrok: "ŧ",
      twixt: "≬",
      twoheadleftarrow: "↞",
      twoheadrightarrow: "↠",
      Uacute: "Ú",
      uacute: "ú",
      Uarr: "↟",
      uArr: "⇑",
      uarr: "↑",
      Uarrocir: "⥉",
      Ubrcy: "Ў",
      ubrcy: "ў",
      Ubreve: "Ŭ",
      ubreve: "ŭ",
      Ucirc: "Û",
      ucirc: "û",
      Ucy: "У",
      ucy: "у",
      udarr: "⇅",
      Udblac: "Ű",
      udblac: "ű",
      udhar: "⥮",
      ufisht: "⥾",
      Ufr: "𝔘",
      ufr: "𝔲",
      Ugrave: "Ù",
      ugrave: "ù",
      uHar: "⥣",
      uharl: "↿",
      uharr: "↾",
      uhblk: "▀",
      ulcorn: "⌜",
      ulcorner: "⌜",
      ulcrop: "⌏",
      ultri: "◸",
      Umacr: "Ū",
      umacr: "ū",
      uml: "¨",
      UnderBar: "_",
      UnderBrace: "⏟",
      UnderBracket: "⎵",
      UnderParenthesis: "⏝",
      Union: "⋃",
      UnionPlus: "⊎",
      Uogon: "Ų",
      uogon: "ų",
      Uopf: "𝕌",
      uopf: "𝕦",
      UpArrow: "↑",
      Uparrow: "⇑",
      uparrow: "↑",
      UpArrowBar: "⤒",
      UpArrowDownArrow: "⇅",
      UpDownArrow: "↕",
      Updownarrow: "⇕",
      updownarrow: "↕",
      UpEquilibrium: "⥮",
      upharpoonleft: "↿",
      upharpoonright: "↾",
      uplus: "⊎",
      UpperLeftArrow: "↖",
      UpperRightArrow: "↗",
      Upsi: "ϒ",
      upsi: "υ",
      upsih: "ϒ",
      Upsilon: "Υ",
      upsilon: "υ",
      UpTee: "⊥",
      UpTeeArrow: "↥",
      upuparrows: "⇈",
      urcorn: "⌝",
      urcorner: "⌝",
      urcrop: "⌎",
      Uring: "Ů",
      uring: "ů",
      urtri: "◹",
      Uscr: "𝒰",
      uscr: "𝓊",
      utdot: "⋰",
      Utilde: "Ũ",
      utilde: "ũ",
      utri: "▵",
      utrif: "▴",
      uuarr: "⇈",
      Uuml: "Ü",
      uuml: "ü",
      uwangle: "⦧",
      vangrt: "⦜",
      varepsilon: "ϵ",
      varkappa: "ϰ",
      varnothing: "∅",
      varphi: "ϕ",
      varpi: "ϖ",
      varpropto: "∝",
      vArr: "⇕",
      varr: "↕",
      varrho: "ϱ",
      varsigma: "ς",
      varsubsetneq: "⊊︀",
      varsubsetneqq: "⫋︀",
      varsupsetneq: "⊋︀",
      varsupsetneqq: "⫌︀",
      vartheta: "ϑ",
      vartriangleleft: "⊲",
      vartriangleright: "⊳",
      Vbar: "⫫",
      vBar: "⫨",
      vBarv: "⫩",
      Vcy: "В",
      vcy: "в",
      VDash: "⊫",
      Vdash: "⊩",
      vDash: "⊨",
      vdash: "⊢",
      Vdashl: "⫦",
      Vee: "⋁",
      vee: "∨",
      veebar: "⊻",
      veeeq: "≚",
      vellip: "⋮",
      Verbar: "‖",
      verbar: "|",
      Vert: "‖",
      vert: "|",
      VerticalBar: "∣",
      VerticalLine: "|",
      VerticalSeparator: "❘",
      VerticalTilde: "≀",
      VeryThinSpace: " ",
      Vfr: "𝔙",
      vfr: "𝔳",
      vltri: "⊲",
      vnsub: "⊂⃒",
      vnsup: "⊃⃒",
      Vopf: "𝕍",
      vopf: "𝕧",
      vprop: "∝",
      vrtri: "⊳",
      Vscr: "𝒱",
      vscr: "𝓋",
      vsubnE: "⫋︀",
      vsubne: "⊊︀",
      vsupnE: "⫌︀",
      vsupne: "⊋︀",
      Vvdash: "⊪",
      vzigzag: "⦚",
      Wcirc: "Ŵ",
      wcirc: "ŵ",
      wedbar: "⩟",
      Wedge: "⋀",
      wedge: "∧",
      wedgeq: "≙",
      weierp: "℘",
      Wfr: "𝔚",
      wfr: "𝔴",
      Wopf: "𝕎",
      wopf: "𝕨",
      wp: "℘",
      wr: "≀",
      wreath: "≀",
      Wscr: "𝒲",
      wscr: "𝓌",
      xcap: "⋂",
      xcirc: "◯",
      xcup: "⋃",
      xdtri: "▽",
      Xfr: "𝔛",
      xfr: "𝔵",
      xhArr: "⟺",
      xharr: "⟷",
      Xi: "Ξ",
      xi: "ξ",
      xlArr: "⟸",
      xlarr: "⟵",
      xmap: "⟼",
      xnis: "⋻",
      xodot: "⨀",
      Xopf: "𝕏",
      xopf: "𝕩",
      xoplus: "⨁",
      xotime: "⨂",
      xrArr: "⟹",
      xrarr: "⟶",
      Xscr: "𝒳",
      xscr: "𝓍",
      xsqcup: "⨆",
      xuplus: "⨄",
      xutri: "△",
      xvee: "⋁",
      xwedge: "⋀",
      Yacute: "Ý",
      yacute: "ý",
      YAcy: "Я",
      yacy: "я",
      Ycirc: "Ŷ",
      ycirc: "ŷ",
      Ycy: "Ы",
      ycy: "ы",
      yen: "¥",
      Yfr: "𝔜",
      yfr: "𝔶",
      YIcy: "Ї",
      yicy: "ї",
      Yopf: "𝕐",
      yopf: "𝕪",
      Yscr: "𝒴",
      yscr: "𝓎",
      YUcy: "Ю",
      yucy: "ю",
      Yuml: "Ÿ",
      yuml: "ÿ",
      Zacute: "Ź",
      zacute: "ź",
      Zcaron: "Ž",
      zcaron: "ž",
      Zcy: "З",
      zcy: "з",
      Zdot: "Ż",
      zdot: "ż",
      zeetrf: "ℨ",
      ZeroWidthSpace: "​",
      Zeta: "Ζ",
      zeta: "ζ",
      Zfr: "ℨ",
      zfr: "𝔷",
      ZHcy: "Ж",
      zhcy: "ж",
      zigrarr: "⇝",
      Zopf: "ℤ",
      zopf: "𝕫",
      Zscr: "𝒵",
      zscr: "𝓏",
      zwj: "‍",
      zwnj: "‌"
    }), t.entityMap = t.HTML_ENTITIES;
  }(Od)), Od;
}
var ka = {}, Xg;
function PC() {
  if (Xg) return ka;
  Xg = 1;
  var t = na(), e = Fy(), n = Au(), r = t.isHTMLEscapableRawTextElement, i = t.isHTMLMimeType, o = t.isHTMLRawTextElement, s = t.hasOwn, a = t.NAMESPACE, l = n.ParseError, c = n.DOMException, u = 0, f = 1, d = 2, h = 3, g = 4, w = 5, v = 6, _ = 7;
  function b() {
  }
  b.prototype = {
    parse: function(T, A, B) {
      var V = this.domBuilder;
      V.startDocument(), O(A, A = /* @__PURE__ */ Object.create(null)), D(T, A, B, V, this.errorHandler), V.endDocument();
    }
  };
  var C = /&#?\w+;?/g;
  function D(T, A, B, V, J) {
    var H = i(V.mimeType);
    T.indexOf(e.UNICODE_REPLACEMENT_CHARACTER) >= 0 && J.warning("Unicode replacement character detected, source encoding issues?");
    function K(Ce) {
      if (Ce > 65535) {
        Ce -= 65536;
        var Qe = 55296 + (Ce >> 10), Ot = 56320 + (Ce & 1023);
        return String.fromCharCode(Qe, Ot);
      } else
        return String.fromCharCode(Ce);
    }
    function ne(Ce) {
      var Qe = Ce[Ce.length - 1] === ";" ? Ce : Ce + ";";
      if (!H && Qe !== Ce)
        return J.error("EntityRef: expecting ;"), Ce;
      var Ot = e.Reference.exec(Qe);
      if (!Ot || Ot[0].length !== Qe.length)
        return J.error("entity not matching Reference production: " + Ce), Ce;
      var Bt = Qe.slice(1, -1);
      return s(B, Bt) ? B[Bt] : Bt.charAt(0) === "#" ? K(parseInt(Bt.substring(1).replace("x", "0x"))) : (J.error("entity not found:" + Ce), Ce);
    }
    function re(Ce) {
      if (Ce > Ee) {
        var Qe = T.substring(Ee, Ce).replace(C, ne);
        pe && we(Ee), V.characters(Qe, 0, Ce - Ee), Ee = Ce;
      }
    }
    var te = 0, Q = 0, ce = /\r\n?|\n|$/g, pe = V.locator;
    function we(Ce, Qe) {
      for (; Ce >= Q && (Qe = ce.exec(T)); )
        te = Q, Q = Qe.index + Qe[0].length, pe.lineNumber++;
      pe.columnNumber = Ce - te + 1;
    }
    for (var ye = [{ currentNSMap: A }], ve = [], Ee = 0; ; ) {
      try {
        var de = T.indexOf("<", Ee);
        if (de < 0) {
          if (!H && ve.length > 0)
            return J.fatalError("unclosed xml tag(s): " + ve.join(", "));
          if (!T.substring(Ee).match(/^\s*$/)) {
            var Re = V.doc, He = Re.createTextNode(T.substring(Ee));
            if (Re.documentElement)
              return J.error("Extra content at the end of the document");
            Re.appendChild(He), V.currentElement = He;
          }
          return;
        }
        if (de > Ee) {
          var ae = T.substring(Ee, de);
          !H && ve.length === 0 && (ae = ae.replace(new RegExp(e.S_OPT.source, "g"), ""), ae && J.error("Unexpected content outside root element: '" + ae + "'")), re(de);
        }
        switch (T.charAt(de + 1)) {
          case "/":
            var lt = T.indexOf(">", de + 2), Te = T.substring(de + 2, lt > 0 ? lt : void 0);
            if (!Te)
              return J.fatalError("end tag name missing");
            var Be = lt > 0 && e.reg("^", e.QName_group, e.S_OPT, "$").exec(Te);
            if (!Be)
              return J.fatalError('end tag name contains invalid characters: "' + Te + '"');
            if (!V.currentElement && !V.doc.documentElement)
              return;
            var Ge = ve[ve.length - 1] || V.currentElement.tagName || V.doc.documentElement.tagName || "";
            if (Ge !== Be[1]) {
              var rt = Be[1].toLowerCase();
              if (!H || Ge.toLowerCase() !== rt)
                return J.fatalError('Opening and ending tag mismatch: "' + Ge + '" != "' + Te + '"');
            }
            var bt = ye.pop();
            ve.pop();
            var wt = bt.localNSMap;
            if (V.endElement(bt.uri, bt.localName, Ge), wt)
              for (var kt in wt)
                s(wt, kt) && V.endPrefixMapping(kt);
            lt++;
            break;
          // end element
          case "?":
            pe && we(de), lt = S(T, de, V, J);
            break;
          case "!":
            pe && we(de), lt = I(T, de, V, J, H);
            break;
          default:
            pe && we(de);
            var $e = new P(), Dt = ye[ye.length - 1].currentNSMap, lt = N(T, de, $e, Dt, ne, J, H), ar = $e.length;
            if ($e.closed || (H && t.isHTMLVoidElement($e.tagName) ? $e.closed = !0 : ve.push($e.tagName)), pe && ar) {
              for (var Pn = R(pe, {}), kn = 0; kn < ar; kn++) {
                var Ln = $e[kn];
                we(Ln.offset), Ln.locator = R(pe, {});
              }
              V.locator = Pn, L($e, V, Dt) && ye.push($e), V.locator = pe;
            } else
              L($e, V, Dt) && ye.push($e);
            H && !$e.closed ? lt = M(T, lt, $e.tagName, ne, V) : lt++;
        }
      } catch (Ce) {
        if (Ce instanceof l)
          throw Ce;
        if (Ce instanceof c)
          throw new l(Ce.name + ": " + Ce.message, V.locator, Ce);
        J.error("element parse error: " + Ce), lt = -1;
      }
      lt > Ee ? Ee = lt : re(Math.max(de, Ee) + 1);
    }
  }
  function R(T, A) {
    return A.lineNumber = T.lineNumber, A.columnNumber = T.columnNumber, A;
  }
  function N(T, A, B, V, J, H, K) {
    function ne(we, ye, ve) {
      if (s(B.attributeNames, we))
        return H.fatalError("Attribute " + we + " redefined");
      if (!K && ye.indexOf("<") >= 0)
        return H.fatalError("Unescaped '<' not allowed in attributes values");
      B.addValue(
        we,
        // @see https://www.w3.org/TR/xml/#AVNormalize
        // since the xmldom sax parser does not "interpret" DTD the following is not implemented:
        // - recursive replacement of (DTD) entity references
        // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA
        ye.replace(/[\t\n\r]/g, " ").replace(C, J),
        ve
      );
    }
    for (var re, te, Q = ++A, ce = u; ; ) {
      var pe = T.charAt(Q);
      switch (pe) {
        case "=":
          if (ce === f)
            re = T.slice(A, Q), ce = h;
          else if (ce === d)
            ce = h;
          else
            throw new Error("attribute equal must after attrName");
          break;
        case "'":
        case '"':
          if (ce === h || ce === f)
            if (ce === f && (H.warning('attribute value must after "="'), re = T.slice(A, Q)), A = Q + 1, Q = T.indexOf(pe, A), Q > 0)
              te = T.slice(A, Q), ne(re, te, A - 1), ce = w;
            else
              throw new Error("attribute value no end '" + pe + "' match");
          else if (ce == g)
            te = T.slice(A, Q), ne(re, te, A), H.warning('attribute "' + re + '" missed start quot(' + pe + ")!!"), A = Q + 1, ce = w;
          else
            throw new Error('attribute value must after "="');
          break;
        case "/":
          switch (ce) {
            case u:
              B.setTagName(T.slice(A, Q));
            case w:
            case v:
            case _:
              ce = _, B.closed = !0;
            case g:
            case f:
              break;
            case d:
              B.closed = !0;
              break;
            //case S_EQ:
            default:
              throw new Error("attribute invalid close char('/')");
          }
          break;
        case "":
          return H.error("unexpected end of input"), ce == u && B.setTagName(T.slice(A, Q)), Q;
        case ">":
          switch (ce) {
            case u:
              B.setTagName(T.slice(A, Q));
            case w:
            case v:
            case _:
              break;
            //normal
            case g:
            //Compatible state
            case f:
              te = T.slice(A, Q), te.slice(-1) === "/" && (B.closed = !0, te = te.slice(0, -1));
            case d:
              ce === d && (te = re), ce == g ? (H.warning('attribute "' + te + '" missed quot(")!'), ne(re, te, A)) : (K || H.warning('attribute "' + te + '" missed value!! "' + te + '" instead!!'), ne(te, te, A));
              break;
            case h:
              if (!K)
                return H.fatalError(`AttValue: ' or " expected`);
          }
          return Q;
        /*xml space '\x20' | #x9 | #xD | #xA; */
        case "":
          pe = " ";
        default:
          if (pe <= " ")
            switch (ce) {
              case u:
                B.setTagName(T.slice(A, Q)), ce = v;
                break;
              case f:
                re = T.slice(A, Q), ce = d;
                break;
              case g:
                var te = T.slice(A, Q);
                H.warning('attribute "' + te + '" missed quot(")!!'), ne(re, te, A);
              case w:
                ce = v;
                break;
            }
          else
            switch (ce) {
              //case S_TAG:void();break;
              //case S_ATTR:void();break;
              //case S_ATTR_NOQUOT_VALUE:void();break;
              case d:
                K || H.warning('attribute "' + re + '" missed value!! "' + re + '" instead2!!'), ne(re, re, A), A = Q, ce = f;
                break;
              case w:
                H.warning('attribute space is required"' + re + '"!!');
              case v:
                ce = f, A = Q;
                break;
              case h:
                ce = g, A = Q;
                break;
              case _:
                throw new Error("elements closed character '/' and '>' must be connected to");
            }
      }
      Q++;
    }
  }
  function L(T, A, B) {
    for (var V = T.tagName, J = null, ce = T.length; ce--; ) {
      var H = T[ce], K = H.qName, ne = H.value, pe = K.indexOf(":");
      if (pe > 0)
        var re = H.prefix = K.slice(0, pe), te = K.slice(pe + 1), Q = re === "xmlns" && te;
      else
        te = K, re = null, Q = K === "xmlns" && "";
      H.localName = te, Q !== !1 && (J == null && (J = /* @__PURE__ */ Object.create(null), O(B, B = /* @__PURE__ */ Object.create(null))), B[Q] = J[Q] = ne, H.uri = a.XMLNS, A.startPrefixMapping(Q, ne));
    }
    for (var ce = T.length; ce--; )
      H = T[ce], H.prefix && (H.prefix === "xml" && (H.uri = a.XML), H.prefix !== "xmlns" && (H.uri = B[H.prefix]));
    var pe = V.indexOf(":");
    pe > 0 ? (re = T.prefix = V.slice(0, pe), te = T.localName = V.slice(pe + 1)) : (re = null, te = T.localName = V);
    var we = T.uri = B[re || ""];
    if (A.startElement(we, te, V, T), T.closed) {
      if (A.endElement(we, te, V), J)
        for (re in J)
          s(J, re) && A.endPrefixMapping(re);
    } else
      return T.currentNSMap = B, T.localNSMap = J, !0;
  }
  function M(T, A, B, V, J) {
    var H = r(B);
    if (H || o(B)) {
      var K = T.indexOf("</" + B + ">", A), ne = T.substring(A + 1, K);
      return H && (ne = ne.replace(C, V)), J.characters(ne, 0, ne.length), K;
    }
    return A + 1;
  }
  function O(T, A) {
    for (var B in T)
      s(T, B) && (A[B] = T[B]);
  }
  function j(T, A) {
    var B = A;
    function V(Q) {
      return Q = Q || 0, T.charAt(B + Q);
    }
    function J(Q) {
      Q = Q || 1, B += Q;
    }
    function H() {
      for (var Q = 0; B < T.length; ) {
        var ce = V();
        if (ce !== " " && ce !== `
` && ce !== "	" && ce !== "\r")
          return Q;
        Q++, J();
      }
      return -1;
    }
    function K() {
      return T.substring(B);
    }
    function ne(Q) {
      return T.substring(B, B + Q.length) === Q;
    }
    function re(Q) {
      return T.substring(B, B + Q.length).toUpperCase() === Q.toUpperCase();
    }
    function te(Q) {
      var ce = e.reg("^", Q), pe = ce.exec(K());
      return pe ? (J(pe[0].length), pe[0]) : null;
    }
    return {
      char: V,
      getIndex: function() {
        return B;
      },
      getMatch: te,
      getSource: function() {
        return T;
      },
      skip: J,
      skipBlanks: H,
      substringFromIndex: K,
      substringStartsWith: ne,
      substringStartsWithCaseInsensitive: re
    };
  }
  function k(T, A) {
    function B(ne, re) {
      var te = e.PI.exec(ne.substringFromIndex());
      return te ? te[1].toLowerCase() === "xml" ? re.fatalError(
        "xml declaration is only allowed at the start of the document, but found at position " + ne.getIndex()
      ) : (ne.skip(te[0].length), te[0]) : re.fatalError("processing instruction is not well-formed at position " + ne.getIndex());
    }
    var V = T.getSource();
    if (T.char() === "[") {
      T.skip(1);
      for (var J = T.getIndex(); T.getIndex() < V.length; ) {
        if (T.skipBlanks(), T.char() === "]") {
          var H = V.substring(J, T.getIndex());
          return T.skip(1), H;
        }
        var K = null;
        if (T.char() === "<" && T.char(1) === "!")
          switch (T.char(2)) {
            case "E":
              T.char(3) === "L" ? K = T.getMatch(e.elementdecl) : T.char(3) === "N" && (K = T.getMatch(e.EntityDecl));
              break;
            case "A":
              K = T.getMatch(e.AttlistDecl);
              break;
            case "N":
              K = T.getMatch(e.NotationDecl);
              break;
            case "-":
              K = T.getMatch(e.Comment);
              break;
          }
        else if (T.char() === "<" && T.char(1) === "?")
          K = B(T, A);
        else if (T.char() === "%")
          K = T.getMatch(e.PEReference);
        else
          return A.fatalError("Error detected in Markup declaration");
        if (!K)
          return A.fatalError("Error in internal subset at position " + T.getIndex());
      }
      return A.fatalError("doctype internal subset is not well-formed, missing ]");
    }
  }
  function I(T, A, B, V, J) {
    var H = j(T, A);
    switch (J ? H.char(2).toUpperCase() : H.char(2)) {
      case "-":
        var K = H.getMatch(e.Comment);
        return K ? (B.comment(K, e.COMMENT_START.length, K.length - e.COMMENT_START.length - e.COMMENT_END.length), H.getIndex()) : V.fatalError("comment is not well-formed at position " + H.getIndex());
      case "[":
        var ne = H.getMatch(e.CDSect);
        return ne ? !J && !B.currentElement ? V.fatalError("CDATA outside of element") : (B.startCDATA(), B.characters(ne, e.CDATA_START.length, ne.length - e.CDATA_START.length - e.CDATA_END.length), B.endCDATA(), H.getIndex()) : V.fatalError("Invalid CDATA starting at position " + A);
      case "D": {
        if (B.doc && B.doc.documentElement)
          return V.fatalError("Doctype not allowed inside or after documentElement at position " + H.getIndex());
        if (J ? !H.substringStartsWithCaseInsensitive(e.DOCTYPE_DECL_START) : !H.substringStartsWith(e.DOCTYPE_DECL_START))
          return V.fatalError("Expected " + e.DOCTYPE_DECL_START + " at position " + H.getIndex());
        if (H.skip(e.DOCTYPE_DECL_START.length), H.skipBlanks() < 1)
          return V.fatalError("Expected whitespace after " + e.DOCTYPE_DECL_START + " at position " + H.getIndex());
        var re = {
          name: void 0,
          publicId: void 0,
          systemId: void 0,
          internalSubset: void 0
        };
        if (re.name = H.getMatch(e.Name), !re.name)
          return V.fatalError("doctype name missing or contains unexpected characters at position " + H.getIndex());
        if (J && re.name.toLowerCase() !== "html" && V.warning("Unexpected DOCTYPE in HTML document at position " + H.getIndex()), H.skipBlanks(), H.substringStartsWith(e.PUBLIC) || H.substringStartsWith(e.SYSTEM)) {
          var te = e.ExternalID_match.exec(H.substringFromIndex());
          if (!te)
            return V.fatalError("doctype external id is not well-formed at position " + H.getIndex());
          te.groups.SystemLiteralOnly !== void 0 ? re.systemId = te.groups.SystemLiteralOnly : (re.systemId = te.groups.SystemLiteral, re.publicId = te.groups.PubidLiteral), H.skip(te[0].length);
        } else if (J && H.substringStartsWithCaseInsensitive(e.SYSTEM)) {
          if (H.skip(e.SYSTEM.length), H.skipBlanks() < 1)
            return V.fatalError("Expected whitespace after " + e.SYSTEM + " at position " + H.getIndex());
          if (re.systemId = H.getMatch(e.ABOUT_LEGACY_COMPAT_SystemLiteral), !re.systemId)
            return V.fatalError(
              "Expected " + e.ABOUT_LEGACY_COMPAT + " in single or double quotes after " + e.SYSTEM + " at position " + H.getIndex()
            );
        }
        return J && re.systemId && !e.ABOUT_LEGACY_COMPAT_SystemLiteral.test(re.systemId) && V.warning("Unexpected doctype.systemId in HTML document at position " + H.getIndex()), J || (H.skipBlanks(), re.internalSubset = k(H, V)), H.skipBlanks(), H.char() !== ">" ? V.fatalError("doctype not terminated with > at position " + H.getIndex()) : (H.skip(1), B.startDTD(re.name, re.publicId, re.systemId, re.internalSubset), B.endDTD(), H.getIndex());
      }
      default:
        return V.fatalError('Not well-formed XML starting with "<!" at position ' + A);
    }
  }
  function S(T, A, B, V) {
    var J = T.substring(A).match(e.PI);
    if (!J)
      return V.fatalError("Invalid processing instruction starting at position " + A);
    if (J[1].toLowerCase() === "xml") {
      if (A > 0)
        return V.fatalError(
          "processing instruction at position " + A + " is an xml declaration which is only at the start of the document"
        );
      if (!e.XMLDecl.test(T.substring(A)))
        return V.fatalError("xml declaration is not well-formed");
    }
    return B.processingInstruction(J[1], J[2]), A + J[0].length;
  }
  function P() {
    this.attributeNames = /* @__PURE__ */ Object.create(null);
  }
  return P.prototype = {
    setTagName: function(T) {
      if (!e.QName_exact.test(T))
        throw new Error("invalid tagName:" + T);
      this.tagName = T;
    },
    addValue: function(T, A, B) {
      if (!e.QName_exact.test(T))
        throw new Error("invalid attribute:" + T);
      this.attributeNames[T] = this.length, this[this.length++] = { qName: T, value: A, offset: B };
    },
    length: 0,
    getLocalName: function(T) {
      return this[T].localName;
    },
    getLocator: function(T) {
      return this[T].locator;
    },
    getQName: function(T) {
      return this[T].qName;
    },
    getURI: function(T) {
      return this[T].uri;
    },
    getValue: function(T) {
      return this[T].value;
    }
    //	,getIndex:function(uri, localName)){
    //		if(localName){
    //
    //		}else{
    //			var qName = uri
    //		}
    //	},
    //	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
    //	getType:function(uri,localName){}
    //	getType:function(i){},
  }, ka.XMLReader = b, ka.parseUtils = j, ka.parseDoctypeCommentOrCData = I, ka;
}
var Yg;
function LC() {
  if (Yg) return uo;
  Yg = 1;
  var t = na(), e = By(), n = Au(), r = RC(), i = PC(), o = e.DOMImplementation, s = t.hasDefaultHTMLNamespace, a = t.isHTMLMimeType, l = t.isValidMimeType, c = t.MIME_TYPE, u = t.NAMESPACE, f = n.ParseError, d = i.XMLReader;
  function h(N) {
    return N.replace(/\r[\n\u0085]/g, `
`).replace(/[\r\u0085\u2028\u2029]/g, `
`);
  }
  function g(N) {
    if (N = N || {}, N.locator === void 0 && (N.locator = !0), this.assign = N.assign || t.assign, this.domHandler = N.domHandler || w, this.onError = N.onError || N.errorHandler, N.errorHandler && typeof N.errorHandler != "function")
      throw new TypeError("errorHandler object is no longer supported, switch to onError!");
    N.errorHandler && N.errorHandler("warning", "The `errorHandler` option has been deprecated, use `onError` instead!", this), this.normalizeLineEndings = N.normalizeLineEndings || h, this.locator = !!N.locator, this.xmlns = this.assign(/* @__PURE__ */ Object.create(null), N.xmlns);
  }
  g.prototype.parseFromString = function(N, L) {
    if (!l(L))
      throw new TypeError('DOMParser.parseFromString: the provided mimeType "' + L + '" is not valid.');
    var M = this.assign(/* @__PURE__ */ Object.create(null), this.xmlns), O = r.XML_ENTITIES, j = M[""] || null;
    s(L) ? (O = r.HTML_ENTITIES, j = u.HTML) : L === c.XML_SVG_IMAGE && (j = u.SVG), M[""] = j, M.xml = M.xml || u.XML;
    var k = new this.domHandler({
      mimeType: L,
      defaultNamespace: j,
      onError: this.onError
    }), I = this.locator ? {} : void 0;
    this.locator && k.setDocumentLocator(I);
    var S = new d();
    S.errorHandler = k, S.domBuilder = k;
    var P = !t.isHTMLMimeType(L);
    return P && typeof N != "string" && S.errorHandler.fatalError("source is not a string"), S.parse(this.normalizeLineEndings(String(N)), M, O), k.doc.documentElement || S.errorHandler.fatalError("missing root element"), k.doc;
  };
  function w(N) {
    var L = N || {};
    this.mimeType = L.mimeType || c.XML_APPLICATION, this.defaultNamespace = L.defaultNamespace || null, this.cdata = !1, this.currentElement = void 0, this.doc = void 0, this.locator = void 0, this.onError = L.onError;
  }
  function v(N, L) {
    L.lineNumber = N.lineNumber, L.columnNumber = N.columnNumber;
  }
  w.prototype = {
    /**
     * Either creates an XML or an HTML document and stores it under `this.doc`.
     * If it is an XML document, `this.defaultNamespace` is used to create it,
     * and it will not contain any `childNodes`.
     * If it is an HTML document, it will be created without any `childNodes`.
     *
     * @see http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
     */
    startDocument: function() {
      var N = new o();
      this.doc = a(this.mimeType) ? N.createHTMLDocument(!1) : N.createDocument(this.defaultNamespace, "");
    },
    startElement: function(N, L, M, O) {
      var j = this.doc, k = j.createElementNS(N, M || L), I = O.length;
      C(this, k), this.currentElement = k, this.locator && v(this.locator, k);
      for (var S = 0; S < I; S++) {
        var N = O.getURI(S), P = O.getValue(S), M = O.getQName(S), T = j.createAttributeNS(N, M);
        this.locator && v(O.getLocator(S), T), T.value = T.nodeValue = P, k.setAttributeNode(T);
      }
    },
    endElement: function(N, L, M) {
      this.currentElement = this.currentElement.parentNode;
    },
    startPrefixMapping: function(N, L) {
    },
    endPrefixMapping: function(N) {
    },
    processingInstruction: function(N, L) {
      var M = this.doc.createProcessingInstruction(N, L);
      this.locator && v(this.locator, M), C(this, M);
    },
    ignorableWhitespace: function(N, L, M) {
    },
    characters: function(N, L, M) {
      if (N = b.apply(this, arguments), N) {
        if (this.cdata)
          var O = this.doc.createCDATASection(N);
        else
          var O = this.doc.createTextNode(N);
        this.currentElement ? this.currentElement.appendChild(O) : /^\s*$/.test(N) && this.doc.appendChild(O), this.locator && v(this.locator, O);
      }
    },
    skippedEntity: function(N) {
    },
    endDocument: function() {
      this.doc.normalize();
    },
    /**
     * Stores the locator to be able to set the `columnNumber` and `lineNumber`
     * on the created DOM nodes.
     *
     * @param {Locator} locator
     */
    setDocumentLocator: function(N) {
      N && (N.lineNumber = 0), this.locator = N;
    },
    //LexicalHandler
    comment: function(N, L, M) {
      N = b.apply(this, arguments);
      var O = this.doc.createComment(N);
      this.locator && v(this.locator, O), C(this, O);
    },
    startCDATA: function() {
      this.cdata = !0;
    },
    endCDATA: function() {
      this.cdata = !1;
    },
    startDTD: function(N, L, M, O) {
      var j = this.doc.implementation;
      if (j && j.createDocumentType) {
        var k = j.createDocumentType(N, L, M, O);
        this.locator && v(this.locator, k), C(this, k), this.doc.doctype = k;
      }
    },
    reportError: function(N, L) {
      if (typeof this.onError == "function")
        try {
          this.onError(N, L, this);
        } catch (M) {
          throw new f("Reporting " + N + ' "' + L + '" caused ' + M, this.locator);
        }
      else
        console.error("[xmldom " + N + "]	" + L, _(this.locator));
    },
    /**
     * @see http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
     */
    warning: function(N) {
      this.reportError("warning", N);
    },
    error: function(N) {
      this.reportError("error", N);
    },
    /**
     * This function reports a fatal error and throws a ParseError.
     *
     * @param {string} message
     * - The message to be used for reporting and throwing the error.
     * @returns {never}
     * This function always throws an error and never returns a value.
     * @throws {ParseError}
     * Always throws a ParseError with the provided message.
     */
    fatalError: function(N) {
      throw this.reportError("fatalError", N), new f(N, this.locator);
    }
  };
  function _(N) {
    if (N)
      return `
@#[line:` + N.lineNumber + ",col:" + N.columnNumber + "]";
  }
  function b(N, L, M) {
    return typeof N == "string" ? N.substr(L, M) : N.length >= L + M || L ? new java.lang.String(N, L, M) + "" : N;
  }
  "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(
    /\w+/g,
    function(N) {
      w.prototype[N] = function() {
        return null;
      };
    }
  );
  function C(N, L) {
    N.currentElement ? N.currentElement.appendChild(L) : N.doc.appendChild(L);
  }
  function D(N) {
    if (N === "error") throw "onErrorStopParsing";
  }
  function R() {
    throw "onWarningStopParsing";
  }
  return uo.__DOMHandler = w, uo.DOMParser = g, uo.normalizeLineEndings = h, uo.onErrorStopParsing = D, uo.onWarningStopParsing = R, uo;
}
var Qg;
function $C() {
  if (Qg) return je;
  Qg = 1;
  var t = na();
  je.assign = t.assign, je.hasDefaultHTMLNamespace = t.hasDefaultHTMLNamespace, je.isHTMLMimeType = t.isHTMLMimeType, je.isValidMimeType = t.isValidMimeType, je.MIME_TYPE = t.MIME_TYPE, je.NAMESPACE = t.NAMESPACE;
  var e = Au();
  je.DOMException = e.DOMException, je.DOMExceptionName = e.DOMExceptionName, je.ExceptionCode = e.ExceptionCode, je.ParseError = e.ParseError;
  var n = By();
  je.Attr = n.Attr, je.CDATASection = n.CDATASection, je.CharacterData = n.CharacterData, je.Comment = n.Comment, je.Document = n.Document, je.DocumentFragment = n.DocumentFragment, je.DocumentType = n.DocumentType, je.DOMImplementation = n.DOMImplementation, je.Element = n.Element, je.Entity = n.Entity, je.EntityReference = n.EntityReference, je.LiveNodeList = n.LiveNodeList, je.NamedNodeMap = n.NamedNodeMap, je.Node = n.Node, je.NodeList = n.NodeList, je.Notation = n.Notation, je.ProcessingInstruction = n.ProcessingInstruction, je.Text = n.Text, je.XMLSerializer = n.XMLSerializer;
  var r = LC();
  return je.DOMParser = r.DOMParser, je.normalizeLineEndings = r.normalizeLineEndings, je.onErrorStopParsing = r.onErrorStopParsing, je.onWarningStopParsing = r.onWarningStopParsing, je;
}
var FC = $C();
const Ts = "USJ", As = "3.1", BC = [
  "type",
  "marker",
  "content",
  "sid",
  "eid",
  "number",
  "code",
  "altnumber",
  "pubnumber",
  "caller",
  "align",
  "category"
];
function qC(t) {
  return jC.includes(t);
}
const jC = [
  // Old Testament
  "GEN",
  "EXO",
  "LEV",
  "NUM",
  "DEU",
  "JOS",
  "JDG",
  "RUT",
  "1SA",
  "2SA",
  "1KI",
  "2KI",
  "1CH",
  "2CH",
  "EZR",
  "NEH",
  "EST",
  "JOB",
  "PSA",
  "PRO",
  "ECC",
  "SNG",
  "ISA",
  "JER",
  "LAM",
  "EZK",
  "DAN",
  "HOS",
  "JOL",
  "AMO",
  "OBA",
  "JON",
  "MIC",
  "NAM",
  "HAB",
  "ZEP",
  "HAG",
  "ZEC",
  "MAL",
  // New Testament
  "MAT",
  "MRK",
  "LUK",
  "JHN",
  "ACT",
  "ROM",
  "1CO",
  "2CO",
  "GAL",
  "EPH",
  "PHP",
  "COL",
  "1TH",
  "2TH",
  "1TI",
  "2TI",
  "TIT",
  "PHM",
  "HEB",
  "JAS",
  "1PE",
  "2PE",
  "1JN",
  "2JN",
  "3JN",
  "JUD",
  "REV",
  // Deuterocanon
  "TOB",
  "JDT",
  "ESG",
  "WIS",
  "SIR",
  "BAR",
  "LJE",
  "S3Y",
  "SUS",
  "BEL",
  "1MA",
  "2MA",
  "3MA",
  "4MA",
  "1ES",
  "2ES",
  "MAN",
  "PS2",
  "ODA",
  "PSS",
  "EZA",
  "5EZ",
  "6EZ",
  "DAG",
  "PS3",
  "2BA",
  "LBA",
  "JUB",
  "ENO",
  "1MQ",
  "2MQ",
  "3MQ",
  "REP",
  "4BA",
  "LAO",
  // Non scripture
  "FRT",
  "BAK",
  "OTH",
  "INT",
  "CNC",
  "GLO",
  "TDX",
  "NDX",
  "XXA",
  "XXB",
  "XXC",
  "XXD",
  "XXE",
  "XXF",
  "XXG"
], UC = "usx";
function zC(t) {
  const e = new FC.DOMParser().parseFromString(t, "text/xml");
  return VC(e.documentElement);
}
function VC(t) {
  const [e] = t ? qy(t) : [{ content: [] }];
  return e.type = Ts, e.version = As, e;
}
function qy(t) {
  const e = {};
  let n = t.tagName, r, i, o = "append";
  if (["row", "cell"].includes(n) && (n = "table:" + n), t.attributes)
    for (const l of Array.from(t.attributes))
      e[l.name] = l.value;
  e.style && (r = e.style, delete e.style), e.vid && delete e.vid, e.status && delete e.status;
  let s = { type: n };
  r && (s.marker = r), s = { ...s, ...e }, t.firstChild && t.firstChild.nodeType === t.firstChild.TEXT_NODE && t.firstChild.nodeValue && Zg(t.firstChild.nodeValue) !== "" && (i = t.firstChild.nodeValue);
  const a = Array.from(t.childNodes);
  s.content = [], i && s.content.push(i);
  for (const l of a) {
    if (l.tagName === void 0)
      continue;
    const [c, u] = qy(l);
    switch (u) {
      case "append":
        s.content.push(c);
        break;
      case "merge":
        s.content = s.content.concat(c);
        break;
    }
    l.nextSibling && l.nextSibling.nodeType === l.nextSibling.TEXT_NODE && l.nextSibling.nodeValue && (Zg(l.nextSibling.nodeValue) !== "" || l.nextSibling.nodeValue === " ") && s.content.push(l.nextSibling.nodeValue);
  }
  return s.content.length === 0 && s.type !== UC && delete s.content, "eid" in s && ["verse", "chapter"].includes(n) && (o = "ignore"), [s, o];
}
function Zg(t) {
  return t.replace(/(^[ \t\n\r\f\v]+)|([ \t\n\r\f\v]+$)/g, "");
}
const Ef = "$", jy = ".content[";
function HC(t) {
  const e = t.split(jy);
  if (e.shift() !== Ef)
    throw new Error(`indexesFromJsonPath: jsonPath didn't start with '${Ef}'`);
  return e.map((n) => parseInt(n, 10));
}
function WC(t) {
  return t.reduce((e, n) => `${e}${jy}${n}]`, Ef);
}
function le(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
const Sr = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, KC = Sr && "documentMode" in document ? document.documentMode : null, Br = Sr && /Mac|iPod|iPhone|iPad/.test(navigator.platform), Io = Sr && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent), Ic = !(!Sr || !("InputEvent" in window) || KC) && "getTargetRanges" in new window.InputEvent("input"), Xa = Sr && /Version\/[\d.]+.*Safari/.test(navigator.userAgent), Ds = Sr && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream, GC = Sr && /Android/.test(navigator.userAgent), Uy = Sr && /^(?=.*Chrome).*/i.test(navigator.userAgent), ew = Sr && GC && Uy, Rc = Sr && /AppleWebKit\/[\d.]+/.test(navigator.userAgent) && !Uy;
function Pc(...t) {
  const e = [];
  for (const n of t) if (n && typeof n == "string") for (const [r] of n.matchAll(/\S+/g)) e.push(r);
  return e;
}
const JC = 1, XC = 3, YC = 9, QC = 11, Ro = 0, zy = 1, Os = 2, ZC = 0, ek = 1, tk = 2, Lc = 4, $c = 8, Yh = 128, nk = 1792 | (112 | (3 | Lc | $c) | Yh), Qh = 1, Zh = 2, ep = 3, tp = 4, np = 5, rp = 6, Du = Xa || Ds || Rc ? " " : "​", mi = `

`, rk = Io ? " " : Du, Vy = "֑-߿יִ-﷽ﹰ-ﻼ", Hy = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿‎Ⰰ-﬜︀-﹯﻽-￿", ik = new RegExp("^[^" + Hy + "]*[" + Vy + "]"), ok = new RegExp("^[^" + Vy + "]*[" + Hy + "]"), qi = { bold: 1, capitalize: 1024, code: 16, highlight: Yh, italic: 2, lowercase: 256, strikethrough: Lc, subscript: 32, superscript: 64, underline: $c, uppercase: 512 }, sk = { directionless: 1, unmergeable: 2 }, tw = { center: Zh, end: rp, justify: tp, left: Qh, right: ep, start: np }, ak = { [Zh]: "center", [rp]: "end", [tp]: "justify", [Qh]: "left", [ep]: "right", [np]: "start" }, lk = { normal: 0, segmented: 2, token: 1 }, ck = { [ZC]: "normal", [tk]: "segmented", [ek]: "token" }, nw = "$config";
function Wy(t, e, n, r, i, o) {
  let s = t.getFirstChild();
  for (; s !== null; ) {
    const a = s.__key;
    s.__parent === e && (X(s) && Wy(s, a, n, r, i, o), n.has(a) || o.delete(a), i.push(a)), s = s.getNextSibling();
  }
}
const uk = 100;
let Nf = !1, ip = 0;
function dk(t) {
  ip = t.timeStamp;
}
function Md(t, e, n) {
  const r = t.nodeName === "BR", i = e.__lexicalLineBreak;
  return i && (t === i || r && t.previousSibling === i) || r && Fu(t, n) !== void 0;
}
function fk(t, e, n) {
  const r = yr(or(n));
  let i = null, o = null;
  r !== null && r.anchorNode === t && (i = r.anchorOffset, o = r.focusOffset);
  const s = t.nodeValue;
  s !== null && Sp(e, s, i, o, !1);
}
function hk(t, e, n) {
  if (Z(t)) {
    const r = t.anchor.getNode();
    if (r.is(n) && t.format !== r.getFormat()) return !1;
  }
  return ki(e) && n.isAttached();
}
function pk(t, e, n, r) {
  for (let i = t; i && !fE(i); i = Tl(i)) {
    const o = Fu(i, e);
    if (o !== void 0) {
      const s = Oe(o, n);
      if (s) return Xe(s) || !it(i) ? void 0 : [i, s];
    } else if (i === r) return [r, K0(n)];
  }
}
function Ky(t, e, n) {
  Nf = !0;
  const r = performance.now() - ip > uk;
  try {
    Wn(t, () => {
      const i = oe() || function(d) {
        return d.getEditorState().read(() => {
          const h = oe();
          return h !== null ? h.clone() : null;
        });
      }(t), o = /* @__PURE__ */ new Map(), s = t.getRootElement(), a = t._editorState, l = t._blockCursorElement;
      let c = !1, u = "";
      for (let d = 0; d < e.length; d++) {
        const h = e[d], g = h.type, w = h.target, v = pk(w, t, a, s);
        if (!v) continue;
        const [_, b] = v;
        if (g === "characterData") r && ie(b) && ki(w) && hk(i, w, b) && fk(w, b, t);
        else if (g === "childList") {
          c = !0;
          const C = h.addedNodes;
          for (let N = 0; N < C.length; N++) {
            const L = C[N], M = H0(L), O = L.parentNode;
            if (O != null && L !== l && M === null && !Md(L, O, t)) {
              if (Io) {
                const j = (it(L) ? L.innerText : null) || L.nodeValue;
                j && (u += j);
              }
              O.removeChild(L);
            }
          }
          const D = h.removedNodes, R = D.length;
          if (R > 0) {
            let N = 0;
            for (let L = 0; L < R; L++) {
              const M = D[L];
              (Md(M, w, t) || l === M) && (w.appendChild(M), N++);
            }
            R !== N && o.set(_, b);
          }
        }
      }
      if (o.size > 0) for (const [d, h] of o) h.reconcileObservedMutation(d, t);
      const f = n.takeRecords();
      if (f.length > 0) {
        for (let d = 0; d < f.length; d++) {
          const h = f[d], g = h.addedNodes, w = h.target;
          for (let v = 0; v < g.length; v++) {
            const _ = g[v], b = _.parentNode;
            b == null || _.nodeName !== "BR" || Md(_, w, t) || b.removeChild(_);
          }
        }
        n.takeRecords();
      }
      i !== null && (c && sn(i), Io && Q0(t) && i.insertRawText(u));
    });
  } finally {
    Nf = !1;
  }
}
function Gy(t) {
  const e = t._observer;
  e !== null && Ky(t, e.takeRecords(), e);
}
function Jy(t) {
  (function(e) {
    ip === 0 && or(e).addEventListener("textInput", dk, !0);
  })(t), t._observer = new MutationObserver((e, n) => {
    Ky(t, e, n);
  });
}
let gk = class {
  constructor(e, n) {
    this.key = e, this.parse = n.parse.bind(n), this.unparse = (n.unparse || bk).bind(n), this.isEqual = (n.isEqual || Object.is).bind(n), this.defaultValue = this.parse(void 0);
  }
};
function Xy(t, e) {
  return new gk(t, e);
}
function Ms(t, e, n = "latest") {
  const r = (n === "latest" ? t.getLatest() : t).__state;
  return r ? r.getValue(e) : e.defaultValue;
}
function pi(t, e, n) {
  let r;
  if (Zt(), typeof n == "function") {
    const o = t.getLatest(), s = Ms(o, e);
    if (r = n(s), e.isEqual(s, r)) return o;
  } else r = n;
  const i = t.getWritable();
  return Qy(i).updateFromKnown(e, r), i;
}
function wk(t) {
  const e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set();
  for (let r = typeof t == "function" ? t : t.replace; r.prototype && r.prototype.getType !== void 0; r = Object.getPrototypeOf(r)) {
    const { ownNodeConfig: i } = Op(r);
    if (i && i.stateConfigs) for (const o of i.stateConfigs) {
      let s;
      "stateConfig" in o ? (s = o.stateConfig, o.flat && n.add(s.key)) : s = o, e.set(s.key, s);
    }
  }
  return { flatKeys: n, sharedConfigMap: e };
}
let mk = class Yy {
  constructor(e, n, r = void 0, i = /* @__PURE__ */ new Map(), o = void 0) {
    this.node = e, this.sharedNodeState = n, this.unknownState = r, this.knownState = i;
    const { sharedConfigMap: s } = this.sharedNodeState, a = o !== void 0 ? o : function(l, c, u) {
      let f = u.size;
      if (c) for (const d in c) {
        const h = l.get(d);
        h && u.has(h) || f++;
      }
      return f;
    }(s, r, i);
    this.size = a;
  }
  getValue(e) {
    const n = this.knownState.get(e);
    if (n !== void 0) return n;
    this.sharedNodeState.sharedConfigMap.set(e.key, e);
    let r = e.defaultValue;
    if (this.unknownState && e.key in this.unknownState) {
      const i = this.unknownState[e.key];
      i !== void 0 && (r = e.parse(i)), this.updateFromKnown(e, r);
    }
    return r;
  }
  getInternalState() {
    return [this.unknownState, this.knownState];
  }
  toJSON() {
    const e = { ...this.unknownState }, n = {};
    for (const [r, i] of this.knownState) r.isEqual(i, r.defaultValue) ? delete e[r.key] : e[r.key] = r.unparse(i);
    for (const r of this.sharedNodeState.flatKeys) r in e && (n[r] = e[r], delete e[r]);
    return rw(e) && (n.$ = e), n;
  }
  getWritable(e) {
    if (this.node === e) return this;
    const { sharedNodeState: n, unknownState: r } = this, i = new Map(this.knownState);
    return new Yy(e, n, function(o, s, a) {
      let l;
      if (a) for (const [c, u] of Object.entries(a)) {
        const f = o.get(c);
        f ? s.has(f) || s.set(f, f.parse(u)) : (l = l || {}, l[c] = u);
      }
      return l;
    }(n.sharedConfigMap, i, r), i, this.size);
  }
  updateFromKnown(e, n) {
    const r = e.key;
    this.sharedNodeState.sharedConfigMap.set(r, e);
    const { knownState: i, unknownState: o } = this;
    i.has(e) || o && r in o || (o && (delete o[r], this.unknownState = rw(o)), this.size++), i.set(e, n);
  }
  updateFromUnknown(e, n) {
    const r = this.sharedNodeState.sharedConfigMap.get(e);
    r ? this.updateFromKnown(r, r.parse(n)) : (this.unknownState = this.unknownState || {}, e in this.unknownState || this.size++, this.unknownState[e] = n);
  }
  updateFromJSON(e) {
    const { knownState: n } = this;
    for (const r of n.keys()) n.set(r, r.defaultValue);
    if (this.size = n.size, this.unknownState = void 0, e) for (const [r, i] of Object.entries(e)) this.updateFromUnknown(r, i);
  }
};
function Qy(t) {
  const e = t.getWritable(), n = e.__state ? e.__state.getWritable(e) : new mk(e, Zy(e));
  return e.__state = n, n;
}
function Zy(t) {
  return t.__state ? t.__state.sharedNodeState : z0(qu(), t.getType()).sharedNodeState;
}
function rw(t) {
  if (t) for (const e in t) return t;
}
function bk(t) {
  return t;
}
function iw(t, e, n) {
  for (const [r, i] of e.knownState) {
    if (t.has(r.key)) continue;
    t.add(r.key);
    const o = n ? n.getValue(r) : r.defaultValue;
    if (o !== i && !r.isEqual(o, i)) return !0;
  }
  return !1;
}
function ow(t, e, n) {
  const { unknownState: r } = e, i = n ? n.unknownState : void 0;
  if (r) {
    for (const [o, s] of Object.entries(r))
      if (!t.has(o) && (t.add(o), s !== (i ? i[o] : void 0)))
        return !0;
  }
  return !1;
}
function sw(t, e) {
  const n = t.__state;
  return n && n.node === t ? n.getWritable(e) : n;
}
function aw(t, e) {
  const n = t.__mode, r = t.__format, i = t.__style, o = e.__mode, s = e.__format, a = e.__style, l = t.__state, c = e.__state;
  return (n === null || n === o) && (r === null || r === s) && (i === null || i === a) && (t.__state === null || l === c || function(u, f) {
    if (u === f) return !0;
    if (u && f && u.size !== f.size) return !1;
    const d = /* @__PURE__ */ new Set();
    return !(u && iw(d, u, f) || f && iw(d, f, u) || u && ow(d, u, f) || f && ow(d, f, u));
  }(l, c));
}
function lw(t, e) {
  const n = t.mergeWithSibling(e), r = gt()._normalizedNodes;
  return r.add(t.__key), r.add(e.__key), n;
}
function cw(t) {
  let e, n, r = t;
  if (r.__text !== "" || !r.isSimpleText() || r.isUnmergeable()) {
    for (; (e = r.getPreviousSibling()) !== null && ie(e) && e.isSimpleText() && !e.isUnmergeable(); ) {
      if (e.__text !== "") {
        if (aw(e, r)) {
          r = lw(e, r);
          break;
        }
        break;
      }
      e.remove();
    }
    for (; (n = r.getNextSibling()) !== null && ie(n) && n.isSimpleText() && !n.isUnmergeable(); ) {
      if (n.__text !== "") {
        if (aw(r, n)) {
          r = lw(r, n);
          break;
        }
        break;
      }
      n.remove();
    }
  } else r.remove();
}
function Ya(t) {
  return uw(t.anchor), uw(t.focus), t;
}
function uw(t) {
  for (; t.type === "element"; ) {
    const e = t.getNode(), n = t.offset;
    let r, i;
    if (n === e.getChildrenSize() ? (r = e.getChildAtIndex(n - 1), i = !0) : (r = e.getChildAtIndex(n), i = !1), ie(r)) {
      t.set(r.__key, i ? r.getTextContentSize() : 0, "text", !0);
      break;
    }
    if (!X(r)) break;
    t.set(r.__key, i ? r.getChildrenSize() : 0, "element", !0);
  }
}
let ji, vn, Qa, Ou, Sf, Tf, Po, gr, Af, Za, Rt = "", yn = "", Lr = null, $r = "", ci = "", e0 = !1, el = !1, mc = null;
function Fc(t, e) {
  const n = Po.get(t);
  if (e !== null) {
    const r = Mf(t);
    r.parentNode === e && e.removeChild(r);
  }
  if (gr.has(t) || vn._keyToDOMMap.delete(t), X(n)) {
    const r = qc(n, Po);
    Df(r, 0, r.length - 1, null);
  }
  n !== void 0 && Tp(Za, Qa, Ou, n, "destroyed");
}
function Df(t, e, n, r) {
  let i = e;
  for (; i <= n; ++i) {
    const o = t[i];
    o !== void 0 && Fc(o, r);
  }
}
function fo(t, e) {
  t.setProperty("text-align", e);
}
const yk = "40px";
function t0(t, e) {
  const n = ji.theme.indent;
  if (typeof n == "string") {
    const i = t.classList.contains(n);
    e > 0 && !i ? t.classList.add(n) : e < 1 && i && t.classList.remove(n);
  }
  const r = getComputedStyle(t).getPropertyValue("--lexical-indent-base-value") || yk;
  t.style.setProperty("padding-inline-start", e === 0 ? "" : `calc(${e} * ${r})`);
}
function n0(t, e) {
  const n = t.style;
  e === 0 ? fo(n, "") : e === Qh ? fo(n, "left") : e === Zh ? fo(n, "center") : e === ep ? fo(n, "right") : e === tp ? fo(n, "justify") : e === np ? fo(n, "start") : e === rp && fo(n, "end");
}
function Bc(t, e) {
  const n = gr.get(t);
  n === void 0 && le(60);
  const r = n.createDOM(ji, vn);
  if (function(i, o, s) {
    const a = s._keyToDOMMap;
    (function(l, c, u) {
      const f = `__lexicalKey_${c._key}`;
      l[f] = u;
    })(o, s, i), a.set(i, o);
  }(t, r, vn), ie(n) ? r.setAttribute("data-lexical-text", "true") : Xe(n) && r.setAttribute("data-lexical-decorator", "true"), X(n)) {
    const i = n.__indent, o = n.__size;
    if (i !== 0 && t0(r, i), o !== 0) {
      const a = o - 1;
      (function(l, c, u, f) {
        const d = yn;
        yn = "", Of(l, u, 0, c, u.getDOMSlot(f)), i0(u, f), yn = d;
      })(qc(n, gr), a, n, r);
    }
    const s = n.__format;
    s !== 0 && n0(r, s), n.isInline() || r0(null, n, r), Bu(n) && (Rt += mi, ci += mi);
  } else {
    const i = n.getTextContent();
    if (Xe(n)) {
      const o = n.decorate(vn, ji);
      o !== null && o0(t, o), r.contentEditable = "false";
    } else ie(n) && (n.isDirectionless() || (yn += i));
    Rt += i, ci += i;
  }
  return e !== null && e.insertChild(r), Tp(Za, Qa, Ou, n, "created"), r;
}
function Of(t, e, n, r, i) {
  const o = Rt;
  Rt = "";
  let s = n;
  for (; s <= r; ++s) {
    Bc(t[s], i);
    const a = gr.get(t[s]);
    a !== null && ie(a) && (Lr === null && (Lr = a.getFormat()), $r === "" && ($r = a.getStyle()));
  }
  Bu(e) && (Rt += mi), i.element.__lexicalTextContent = Rt, Rt = o + Rt;
}
function dw(t, e) {
  if (t) {
    const n = t.__last;
    if (n) {
      const r = e.get(n);
      if (r) return xo(r) ? "line-break" : Xe(r) && r.isInline() ? "decorator" : null;
    }
    return "empty";
  }
  return null;
}
function r0(t, e, n) {
  const r = dw(t, Po), i = dw(e, gr);
  r !== i && e.getDOMSlot(n).setManagedLineBreak(i);
}
function i0(t, e) {
  const n = e.__lexicalDirTextContent || "", r = e.__lexicalDir || "";
  if (n !== yn || r !== mc) {
    const i = yn === "", o = i ? mc : function(s) {
      return ik.test(s) ? "rtl" : ok.test(s) ? "ltr" : null;
    }(yn);
    if (o !== r) {
      const s = e.classList, a = ji.theme;
      let l = r !== null ? a[r] : void 0, c = o !== null ? a[o] : void 0;
      if (l !== void 0) {
        if (typeof l == "string") {
          const u = Pc(l);
          l = a[r] = u;
        }
        s.remove(...l);
      }
      if (o === null || i && o === "ltr") e.removeAttribute("dir");
      else {
        if (c !== void 0) {
          if (typeof c == "string") {
            const u = Pc(c);
            c = a[o] = u;
          }
          c !== void 0 && s.add(...c);
        }
        e.dir = o;
      }
      el || (t.getWritable().__dir = o);
    }
    mc = o, e.__lexicalDirTextContent = yn, e.__lexicalDir = o;
  }
}
function vk(t, e, n) {
  const r = yn;
  var i;
  yn = "", Lr = null, $r = "", function(o, s, a) {
    const l = Rt, c = o.__size, u = s.__size;
    Rt = "";
    const f = a.element;
    if (c === 1 && u === 1) {
      const d = o.__first, h = s.__first;
      if (d === h) Ia(d, f);
      else {
        const w = Mf(d), v = Bc(h, null);
        try {
          f.replaceChild(v, w);
        } catch (_) {
          if (typeof _ == "object" && _ != null) {
            const b = `${_.toString()} Parent: ${f.tagName}, new child: {tag: ${v.tagName} key: ${h}}, old child: {tag: ${w.tagName}, key: ${d}}.`;
            throw new Error(b);
          }
          throw _;
        }
        Fc(d, null);
      }
      const g = gr.get(h);
      ie(g) && (Lr === null && (Lr = g.getFormat()), $r === "" && ($r = g.getStyle()));
    } else {
      const d = qc(o, Po), h = qc(s, gr);
      if (d.length !== c && le(227), h.length !== u && le(228), c === 0) u !== 0 && Of(h, s, 0, u - 1, a);
      else if (u === 0) {
        if (c !== 0) {
          const g = a.after == null && a.before == null && a.element.__lexicalLineBreak == null;
          Df(d, 0, c - 1, g ? null : f), g && (f.textContent = "");
        }
      } else (function(g, w, v, _, b, C) {
        const D = _ - 1, R = b - 1;
        let N, L, M = C.getFirstChild(), O = 0, j = 0;
        for (; O <= D && j <= R; ) {
          const S = w[O], P = v[j];
          if (S === P) M = Id(Ia(P, C.element)), O++, j++;
          else {
            N === void 0 && (N = new Set(w)), L === void 0 && (L = new Set(v));
            const A = L.has(S), B = N.has(P);
            if (A) if (B) {
              const V = $s(vn, P);
              V === M ? M = Id(Ia(P, C.element)) : (C.withBefore(M).insertChild(V), Ia(P, C.element)), O++, j++;
            } else Bc(P, C.withBefore(M)), j++;
            else M = Id(Mf(S)), Fc(S, C.element), O++;
          }
          const T = gr.get(P);
          T !== null && ie(T) && (Lr === null && (Lr = T.getFormat()), $r === "" && ($r = T.getStyle()));
        }
        const k = O > D, I = j > R;
        if (k && !I) {
          const S = v[R + 1], P = S === void 0 ? null : vn.getElementByKey(S);
          Of(v, g, j, R, C.withBefore(P));
        } else I && !k && Df(w, O, D, C.element);
      })(s, d, h, c, u, a);
    }
    Bu(s) && (Rt += mi), f.__lexicalTextContent = Rt, Rt = l + Rt;
  }(t, e, e.getDOMSlot(n)), i0(e, n), i = e, Lr == null || Lr === i.__textFormat || el || i.setTextFormat(Lr), function(o) {
    $r === "" || $r === o.__textStyle || el || o.setTextStyle($r);
  }(e), yn = r;
}
function qc(t, e) {
  const n = [];
  let r = t.__first;
  for (; r !== null; ) {
    const i = e.get(r);
    i === void 0 && le(101), n.push(r), r = i.__next;
  }
  return n;
}
function Ia(t, e) {
  const n = Po.get(t);
  let r = gr.get(t);
  n !== void 0 && r !== void 0 || le(61);
  const i = e0 || Tf.has(t) || Sf.has(t), o = $s(vn, t);
  if (n === r && !i) {
    if (X(n)) {
      const s = o.__lexicalTextContent;
      s !== void 0 && (Rt += s, ci += s);
      const a = o.__lexicalDirTextContent;
      a !== void 0 && (yn += a);
    } else {
      const s = n.getTextContent();
      ie(n) && !n.isDirectionless() && (yn += s), ci += s, Rt += s;
    }
    return o;
  }
  if (n !== r && i && Tp(Za, Qa, Ou, r, "updated"), r.updateDOM(n, o, ji)) {
    const s = Bc(t, null);
    return e === null && le(62), e.replaceChild(s, o), Fc(t, null), s;
  }
  if (X(n) && X(r)) {
    const s = r.__indent;
    s !== n.__indent && t0(o, s);
    const a = r.__format;
    a !== n.__format && n0(o, a), i && (vk(n, r, o), tn(r) || r.isInline() || r0(n, r, o)), Bu(r) && (Rt += mi, ci += mi);
  } else {
    const s = r.getTextContent();
    if (Xe(r)) {
      const a = r.decorate(vn, ji);
      a !== null && o0(t, a);
    } else ie(r) && !r.isDirectionless() && (yn += s);
    Rt += s, ci += s;
  }
  if (!el && tn(r) && r.__cachedText !== ci) {
    const s = r.getWritable();
    s.__cachedText = ci, r = s;
  }
  return o;
}
function o0(t, e) {
  let n = vn._pendingDecorators;
  const r = vn._decorators;
  if (n === null) {
    if (r[t] === e) return;
    n = W0(vn);
  }
  n[t] = e;
}
function Id(t) {
  let e = t.nextSibling;
  return e !== null && e === vn._blockCursorElement && (e = e.nextSibling), e;
}
function _k(t, e, n, r, i, o) {
  Rt = "", ci = "", yn = "", e0 = r === Os, mc = null, vn = n, ji = n._config, Qa = n._nodes, Ou = vn._listeners.mutation, Sf = i, Tf = o, Po = t._nodeMap, gr = e._nodeMap, el = e._readOnly, Af = new Map(n._keyToDOMMap);
  const s = /* @__PURE__ */ new Map();
  return Za = s, Ia("root", null), vn = void 0, Qa = void 0, Sf = void 0, Tf = void 0, Po = void 0, gr = void 0, ji = void 0, Af = void 0, Za = void 0, s;
}
function Mf(t) {
  const e = Af.get(t);
  return e === void 0 && le(75, t), e;
}
function Se(t) {
  return { type: t };
}
const Xi = Se("SELECTION_CHANGE_COMMAND"), xk = Se("SELECTION_INSERT_CLIPBOARD_NODES_COMMAND"), s0 = Se("CLICK_COMMAND"), Vr = Se("DELETE_CHARACTER_COMMAND"), $i = Se("INSERT_LINE_BREAK_COMMAND"), tl = Se("INSERT_PARAGRAPH_COMMAND"), _o = Se("CONTROLLED_TEXT_INSERTION_COMMAND"), Jo = Se("PASTE_COMMAND"), jc = Se("REMOVE_TEXT_COMMAND"), Is = Se("DELETE_WORD_COMMAND"), Rs = Se("DELETE_LINE_COMMAND"), Ii = Se("FORMAT_TEXT_COMMAND"), vl = Se("UNDO_COMMAND"), _l = Se("REDO_COMMAND"), ra = Se("KEYDOWN_COMMAND"), op = Se("KEY_ARROW_RIGHT_COMMAND"), Ck = Se("MOVE_TO_END"), sp = Se("KEY_ARROW_LEFT_COMMAND"), kk = Se("MOVE_TO_START"), ap = Se("KEY_ARROW_UP_COMMAND"), lp = Se("KEY_ARROW_DOWN_COMMAND"), Ps = Se("KEY_ENTER_COMMAND"), a0 = Se("KEY_SPACE_COMMAND"), cp = Se("KEY_BACKSPACE_COMMAND"), Mu = Se("KEY_ESCAPE_COMMAND"), up = Se("KEY_DELETE_COMMAND"), dp = Se("KEY_TAB_COMMAND"), Ek = Se("INSERT_TAB_COMMAND"), Nk = Se("INDENT_CONTENT_COMMAND"), fw = Se("OUTDENT_CONTENT_COMMAND"), Iu = Se("DROP_COMMAND"), Sk = Se("FORMAT_ELEMENT_COMMAND"), fp = Se("DRAGSTART_COMMAND"), l0 = Se("DRAGOVER_COMMAND"), Tk = Se("DRAGEND_COMMAND"), Yi = Se("COPY_COMMAND"), Xo = Se("CUT_COMMAND"), Uc = Se("SELECT_ALL_COMMAND"), hp = Se("CLEAR_EDITOR_COMMAND"), c0 = Se("CLEAR_HISTORY_COMMAND"), Ra = Se("CAN_REDO_COMMAND"), Pa = Se("CAN_UNDO_COMMAND"), Ak = Se("FOCUS_COMMAND"), Dk = Se("BLUR_COMMAND"), Ok = Se("KEY_MODIFIER_COMMAND"), ii = Object.freeze({}), If = 30, Rf = [["keydown", function(t, e) {
  if (Ua = t.timeStamp, u0 = t.key, !e.isComposing() && !ge(e, ra, t) && t.key != null) {
    if (Rd && qw(t)) return Wn(e, () => {
      Yl(e, Pd);
    }), Rd = !1, void (Pd = "");
    if (function(n) {
      return et(n, "ArrowRight", { shiftKey: "any" });
    }(t)) ge(e, op, t);
    else if (function(n) {
      return et(n, "ArrowRight", ai);
    }(t)) ge(e, Ck, t);
    else if (function(n) {
      return et(n, "ArrowLeft", { shiftKey: "any" });
    }(t)) ge(e, sp, t);
    else if (function(n) {
      return et(n, "ArrowLeft", ai);
    }(t)) ge(e, kk, t);
    else if (function(n) {
      return et(n, "ArrowUp", { altKey: "any", shiftKey: "any" });
    }(t)) ge(e, ap, t);
    else if (function(n) {
      return et(n, "ArrowDown", { altKey: "any", shiftKey: "any" });
    }(t)) ge(e, lp, t);
    else if (function(n) {
      return et(n, "Enter", { altKey: "any", ctrlKey: "any", metaKey: "any", shiftKey: !0 });
    }(t)) za = !0, ge(e, Ps, t);
    else if (function(n) {
      return n.key === " ";
    }(t)) ge(e, a0, t);
    else if (function(n) {
      return Br && et(n, "o", { ctrlKey: !0 });
    }(t)) t.preventDefault(), za = !0, ge(e, $i, !0);
    else if (function(n) {
      return et(n, "Enter", { altKey: "any", ctrlKey: "any", metaKey: "any" });
    }(t)) za = !1, ge(e, Ps, t);
    else if (function(n) {
      return et(n, "Backspace", { shiftKey: "any" }) || Br && et(n, "h", { ctrlKey: !0 });
    }(t)) qw(t) ? ge(e, cp, t) : (t.preventDefault(), ge(e, Vr, !0));
    else if (function(n) {
      return n.key === "Escape";
    }(t)) ge(e, Mu, t);
    else if (function(n) {
      return et(n, "Delete", {}) || Br && et(n, "d", { ctrlKey: !0 });
    }(t)) (function(n) {
      return n.key === "Delete";
    })(t) ? ge(e, up, t) : (t.preventDefault(), ge(e, Vr, !1));
    else if (function(n) {
      return et(n, "Backspace", Bw);
    }(t)) t.preventDefault(), ge(e, Is, !0);
    else if (function(n) {
      return et(n, "Delete", Bw);
    }(t)) t.preventDefault(), ge(e, Is, !1);
    else if (function(n) {
      return Br && et(n, "Backspace", { metaKey: !0 });
    }(t)) t.preventDefault(), ge(e, Rs, !0);
    else if (function(n) {
      return Br && (et(n, "Delete", { metaKey: !0 }) || et(n, "k", { ctrlKey: !0 }));
    }(t)) t.preventDefault(), ge(e, Rs, !1);
    else if (function(n) {
      return et(n, "b", ai);
    }(t)) t.preventDefault(), ge(e, Ii, "bold");
    else if (function(n) {
      return et(n, "u", ai);
    }(t)) t.preventDefault(), ge(e, Ii, "underline");
    else if (function(n) {
      return et(n, "i", ai);
    }(t)) t.preventDefault(), ge(e, Ii, "italic");
    else if (function(n) {
      return et(n, "Tab", { shiftKey: "any" });
    }(t)) ge(e, dp, t);
    else if (function(n) {
      return et(n, "z", ai);
    }(t)) t.preventDefault(), ge(e, vl, void 0);
    else if (function(n) {
      return Br ? et(n, "z", { metaKey: !0, shiftKey: !0 }) : et(n, "y", { ctrlKey: !0 }) || et(n, "z", { ctrlKey: !0, shiftKey: !0 });
    }(t)) t.preventDefault(), ge(e, _l, void 0);
    else {
      const n = e._editorState._selection;
      n === null || Z(n) ? jw(t) && (t.preventDefault(), ge(e, Uc, t)) : function(r) {
        return et(r, "c", ai);
      }(t) ? (t.preventDefault(), ge(e, Yi, t)) : function(r) {
        return et(r, "x", ai);
      }(t) ? (t.preventDefault(), ge(e, Xo, t)) : jw(t) && (t.preventDefault(), ge(e, Uc, t));
    }
    (function(n) {
      return n.ctrlKey || n.shiftKey || n.altKey || n.metaKey;
    })(t) && ge(e, Ok, t);
  }
}], ["pointerdown", function(t, e) {
  const n = t.target, r = t.pointerType;
  Qo(n) && r !== "touch" && r !== "pen" && t.button === 0 && Wn(e, () => {
    Lw(n) || (Lf = !0);
  });
}], ["compositionstart", function(t, e) {
  Wn(e, () => {
    const n = oe();
    if (Z(n) && !e.isComposing()) {
      const r = n.anchor, i = n.anchor.getNode();
      en(r.key), (t.timeStamp < Ua + If || r.type === "element" || !n.isCollapsed() || i.getFormat() !== n.format || ie(i) && i.getStyle() !== n.style) && ge(e, _o, rk);
    }
  });
}], ["compositionend", function(t, e) {
  Io ? Ea = !0 : Ds || !Xa && !Rc ? Wn(e, () => {
    Yl(e, t.data);
  }) : (Rd = !0, Pd = t.data);
}], ["input", function(t, e) {
  t.stopPropagation(), Wn(e, () => {
    if (it(t.target) && Lw(t.target)) return;
    const n = oe(), r = t.data, i = g0(t);
    if (r != null && Z(n) && h0(n, i, r, t.timeStamp, !1)) {
      Ea && (Yl(e, r), Ea = !1);
      const o = n.anchor.getNode(), s = yr(or(e));
      if (s === null) return;
      const a = n.isBackward(), l = a ? n.anchor.offset : n.focus.offset, c = a ? n.focus.offset : n.anchor.offset;
      Ic && !n.isCollapsed() && ie(o) && s.anchorNode !== null && o.getTextContent().slice(0, l) + r + o.getTextContent().slice(l + c) === X0(s.anchorNode) || ge(e, _o, r);
      const u = r.length;
      Io && u > 1 && t.inputType === "insertCompositionText" && !e.isComposing() && (n.anchor.offset -= u), Xa || Ds || Rc || !e.isComposing() || (Ua = 0, en(null));
    } else
      Np(!1, e, r !== null ? r : void 0), Ea && (Yl(e, r || void 0), Ea = !1);
    (function() {
      Zt();
      const o = gt();
      Gy(o);
    })();
  }, { event: t }), us = null;
}], ["click", function(t, e) {
  Wn(e, () => {
    const n = oe(), r = yr(or(e)), i = oa();
    if (r) {
      if (Z(n)) {
        const o = n.anchor, s = o.getNode();
        if (o.type === "element" && o.offset === 0 && n.isCollapsed() && !tn(s) && Ve().getChildrenSize() === 1 && s.getTopLevelElementOrThrow().isEmpty() && i !== null && n.is(i)) r.removeAllRanges(), n.dirty = !0;
        else if (t.detail === 3 && !n.isCollapsed() && s !== n.focus.getNode()) {
          const a = function(l, c) {
            let u = l;
            for (; u !== Ve() && u != null; ) {
              if (c(u)) return u;
              u = u.getParent();
            }
            return null;
          }(s, (l) => X(l) && !l.isInline());
          X(a) && a.select(0);
        }
      } else if (t.pointerType === "touch" || t.pointerType === "pen") {
        const o = r.anchorNode;
        (it(o) || ki(o)) && sn(gp(i, r, e, t));
      }
    }
    ge(e, s0, t);
  });
}], ["cut", ii], ["copy", ii], ["dragstart", ii], ["dragover", ii], ["dragend", ii], ["paste", ii], ["focus", ii], ["blur", ii], ["drop", ii]];
Ic && Rf.push(["beforeinput", (t, e) => function(n, r) {
  const i = n.inputType, o = g0(n);
  i === "deleteCompositionText" || Io && Q0(r) || i !== "insertCompositionText" && Wn(r, () => {
    const s = oe();
    if (i === "deleteContentBackward") {
      if (s === null) {
        const h = oa();
        if (!Z(h)) return;
        sn(h.clone());
      }
      if (Z(s)) {
        const h = s.anchor.key === s.focus.key;
        if (a = n.timeStamp, u0 === "MediaLast" && a < Ua + If && r.isComposing() && h) {
          if (en(null), Ua = 0, setTimeout(() => {
            Wn(r, () => {
              en(null);
            });
          }, If), Z(s)) {
            const g = s.anchor.getNode();
            g.markDirty(), ie(g) || le(142), p0(s, g);
          }
        } else {
          en(null), n.preventDefault();
          const g = s.anchor.getNode(), w = g.getTextContent(), v = g.canInsertTextAfter(), _ = s.anchor.offset === 0 && s.focus.offset === w.length;
          let b = ew && h && !_ && v;
          if (b && s.isCollapsed() && (b = !Xe(Uf(s.anchor, !0))), !b) {
            ge(r, Vr, !0);
            const C = oe();
            ew && Z(C) && C.isCollapsed() && (mo = C, setTimeout(() => mo = null));
          }
        }
        return;
      }
    }
    var a;
    if (!Z(s)) return;
    const l = n.data;
    us !== null && Np(!1, r, us), s.dirty && us === null || !s.isCollapsed() || tn(s.anchor.getNode()) || o === null || s.applyDOMRange(o), us = null;
    const c = s.anchor, u = s.focus, f = c.getNode(), d = u.getNode();
    if (i !== "insertText" && i !== "insertTranspose") switch (n.preventDefault(), i) {
      case "insertFromYank":
      case "insertFromDrop":
      case "insertReplacementText":
        ge(r, _o, n);
        break;
      case "insertFromComposition":
        en(null), ge(r, _o, n);
        break;
      case "insertLineBreak":
        en(null), ge(r, $i, !1);
        break;
      case "insertParagraph":
        en(null), za && !Ds ? (za = !1, ge(r, $i, !1)) : ge(r, tl, void 0);
        break;
      case "insertFromPaste":
      case "insertFromPasteAsQuotation":
        ge(r, Jo, n);
        break;
      case "deleteByComposition":
        (function(h, g) {
          return h !== g || X(h) || X(g) || !ko(h) || !ko(g);
        })(f, d) && ge(r, jc, n);
        break;
      case "deleteByDrag":
      case "deleteByCut":
        ge(r, jc, n);
        break;
      case "deleteContent":
        ge(r, Vr, !1);
        break;
      case "deleteWordBackward":
        ge(r, Is, !0);
        break;
      case "deleteWordForward":
        ge(r, Is, !1);
        break;
      case "deleteHardLineBackward":
      case "deleteSoftLineBackward":
        ge(r, Rs, !0);
        break;
      case "deleteContentForward":
      case "deleteHardLineForward":
      case "deleteSoftLineForward":
        ge(r, Rs, !1);
        break;
      case "formatStrikeThrough":
        ge(r, Ii, "strikethrough");
        break;
      case "formatBold":
        ge(r, Ii, "bold");
        break;
      case "formatItalic":
        ge(r, Ii, "italic");
        break;
      case "formatUnderline":
        ge(r, Ii, "underline");
        break;
      case "historyUndo":
        ge(r, vl, void 0);
        break;
      case "historyRedo":
        ge(r, _l, void 0);
    }
    else {
      if (l === `
`) n.preventDefault(), ge(r, $i, !1);
      else if (l === mi) n.preventDefault(), ge(r, tl, void 0);
      else if (l == null && n.dataTransfer) {
        const h = n.dataTransfer.getData("text/plain");
        n.preventDefault(), s.insertRawText(h);
      } else l != null && h0(s, o, l, n.timeStamp, !0) ? (n.preventDefault(), ge(r, _o, l)) : us = l;
      d0 = n.timeStamp;
    }
  });
}(t, e)]);
let Ua = 0, u0 = null, d0 = 0, us = null;
const zc = /* @__PURE__ */ new WeakMap();
let Pf = !1, Lf = !1, za = !1, Ea = !1, Rd = !1, Pd = "", mo = null, f0 = [0, "", 0, "root", 0];
function h0(t, e, n, r, i) {
  const o = t.anchor, s = t.focus, a = o.getNode(), l = gt(), c = yr(or(l)), u = c !== null ? c.anchorNode : null, f = o.key, d = l.getElementByKey(f), h = n.length;
  return f !== s.key || !ie(a) || (!i && (!Ic || d0 < r + 50) || a.isDirty() && h < 2 || G0(n)) && o.offset !== s.offset && !a.isComposing() || li(a) || a.isDirty() && h > 1 || (i || !Ic) && d !== null && !a.isComposing() && u !== Ls(d) || c !== null && e !== null && (!e.collapsed || e.startContainer !== c.anchorNode || e.startOffset !== c.anchorOffset) || a.getFormat() !== t.format || a.getStyle() !== t.style || function(g, w) {
    if (w.isSegmented()) return !0;
    if (!g.isCollapsed()) return !1;
    const v = g.anchor.offset, _ = w.getParentOrThrow(), b = ko(w);
    return v === 0 ? !w.canInsertTextBefore() || !_.canInsertTextBefore() && !w.isComposing() || b || function(C) {
      const D = C.getPreviousSibling();
      return (ie(D) || X(D) && D.isInline()) && !D.canInsertTextAfter();
    }(w) : v === w.getTextContentSize() && (!w.canInsertTextAfter() || !_.canInsertTextAfter() && !w.isComposing() || b);
  }(t, a);
}
function hw(t, e) {
  return ki(t) && t.nodeValue !== null && e !== 0 && e !== t.nodeValue.length;
}
function pw(t, e, n) {
  const { anchorNode: r, anchorOffset: i, focusNode: o, focusOffset: s } = t;
  Pf && (Pf = !1, hw(r, i) && hw(o, s) && !mo) || Wn(e, () => {
    if (!n) return void sn(null);
    if (!Sl(e, r, o)) return;
    let a = oe();
    if (mo && Z(a) && a.isCollapsed()) {
      const l = a.anchor, c = mo.anchor;
      (l.key === c.key && l.offset === c.offset + 1 || l.offset === 1 && c.getNode().is(l.getNode().getPreviousSibling())) && (a = mo.clone(), sn(a));
    }
    if (mo = null, Z(a)) {
      const l = a.anchor, c = l.getNode();
      if (a.isCollapsed()) {
        t.type === "Range" && t.anchorNode === t.focusNode && (a.dirty = !0);
        const u = or(e).event, f = u ? u.timeStamp : performance.now(), [d, h, g, w, v] = f0, _ = Ve(), b = e.isComposing() === !1 && _.getTextContent() === "";
        if (f < v + 200 && l.offset === g && l.key === w) bc(a, d, h);
        else if (l.type === "text") ie(c) || le(141), p0(a, c);
        else if (l.type === "element" && !b) {
          X(c) || le(259);
          const C = l.getNode();
          C.isEmpty() ? function(D, R) {
            const N = R.getTextFormat(), L = R.getTextStyle();
            bc(D, N, L);
          }(a, C) : bc(a, 0, "");
        }
      } else {
        const u = l.key, f = a.focus.key, d = a.getNodes(), h = d.length, g = a.isBackward(), w = g ? s : i, v = g ? i : s, _ = g ? f : u, b = g ? u : f;
        let C = nk, D = !1;
        for (let R = 0; R < h; R++) {
          const N = d[R], L = N.getTextContentSize();
          if (ie(N) && L !== 0 && !(R === 0 && N.__key === _ && w === L || R === h - 1 && N.__key === b && v === 0) && (D = !0, C &= N.getFormat(), C === 0)) break;
        }
        a.format = D ? C : 0;
      }
    }
    ge(e, Xi, void 0);
  });
}
function bc(t, e, n) {
  t.format === e && t.style === n || (t.format = e, t.style = n, t.dirty = !0);
}
function p0(t, e) {
  bc(t, e.getFormat(), e.getStyle());
}
function g0(t) {
  if (!t.getTargetRanges) return null;
  const e = t.getTargetRanges();
  return e.length === 0 ? null : e[0];
}
function Yl(t, e) {
  const n = t._compositionKey;
  if (en(null), n !== null && e != null) {
    if (e === "") {
      const r = Oe(n), i = Ls(t.getElementByKey(n));
      return void (i !== null && i.nodeValue !== null && ie(r) && Sp(r, i.nodeValue, null, null, !0));
    }
    if (e[e.length - 1] === `
`) {
      const r = oe();
      if (Z(r)) {
        const i = r.focus;
        return r.anchor.set(i.key, i.offset, i.type), void ge(t, Ps, null);
      }
    }
  }
  Np(!0, t, e);
}
function w0(t) {
  let e = t.__lexicalEventHandles;
  return e === void 0 && (e = [], t.__lexicalEventHandles = e), e;
}
const ms = /* @__PURE__ */ new Map();
function m0(t) {
  const e = lE(t.target);
  if (e === null) return;
  const n = V0(e.anchorNode);
  if (n === null) return;
  Lf && (Lf = !1, Wn(n, () => {
    const l = oa(), c = e.anchorNode;
    (it(c) || ki(c)) && sn(gp(l, e, n, t));
  }));
  const r = Ep(n), i = r[r.length - 1], o = i._key, s = ms.get(o), a = s || i;
  a !== n && pw(e, a, !1), pw(e, n, !0), n !== i ? ms.set(o, n) : s && ms.delete(o);
}
function gw(t) {
  t._lexicalHandled = !0;
}
function ww(t) {
  return t._lexicalHandled === !0;
}
function Mk(t) {
  const e = t.ownerDocument, n = zc.get(e);
  if (n === void 0) return;
  const r = n - 1;
  r >= 0 || le(164), zc.set(e, r), r === 0 && e.removeEventListener("selectionchange", m0);
  const i = $u(t);
  kp(i) ? (function(s) {
    if (s._parentEditor !== null) {
      const a = Ep(s), l = a[a.length - 1]._key;
      ms.get(l) === s && ms.delete(l);
    } else ms.delete(s._key);
  }(i), t.__lexicalEditor = null) : i && le(198);
  const o = w0(t);
  for (let s = 0; s < o.length; s++) o[s]();
  t.__lexicalEventHandles = [];
}
function $f(t, e, n) {
  Zt();
  const r = t.__key, i = t.getParent();
  if (i === null) return;
  const o = function(a) {
    const l = oe();
    if (!Z(l) || !X(a)) return l;
    const { anchor: c, focus: u } = l, f = c.getNode(), d = u.getNode();
    return zf(f, a) && c.set(a.__key, 0, "element"), zf(d, a) && u.set(a.__key, 0, "element"), l;
  }(t);
  let s = !1;
  if (Z(o) && e) {
    const a = o.anchor, l = o.focus;
    a.key === r && (Hc(a, t, i, t.getPreviousSibling(), t.getNextSibling()), s = !0), l.key === r && (Hc(l, t, i, t.getPreviousSibling(), t.getNextSibling()), s = !0);
  } else bn(o) && e && t.isSelected() && t.selectPrevious();
  if (Z(o) && e && !s) {
    const a = t.getIndexWithinParent();
    Eo(t), Vc(o, i, a, -1);
  } else Eo(t);
  n || Zr(i) || i.canBeEmpty() || !i.isEmpty() || $f(i, e), e && o && tn(i) && i.isEmpty() && i.selectEnd();
}
let ia = class {
  static getType() {
    const { ownNodeType: e } = Op(this);
    return e === void 0 && le(64, this.name), e;
  }
  static clone(e) {
    le(65, this.name);
  }
  $config() {
    return {};
  }
  config(e, n) {
    const r = n.extends || Object.getPrototypeOf(this.constructor);
    return Object.assign(n, { extends: r, type: e }), { [e]: n };
  }
  afterCloneFrom(e) {
    this.__key === e.__key ? (this.__parent = e.__parent, this.__next = e.__next, this.__prev = e.__prev, this.__state = e.__state) : e.__state && (this.__state = e.__state.getWritable(this));
  }
  constructor(e) {
    this.__type = this.constructor.getType(), this.__parent = null, this.__prev = null, this.__next = null, Object.defineProperty(this, "__state", { configurable: !0, enumerable: !1, value: void 0, writable: !0 }), tE(this, e);
  }
  getType() {
    return this.__type;
  }
  isInline() {
    le(137, this.constructor.name);
  }
  isAttached() {
    let e = this.__key;
    for (; e !== null; ) {
      if (e === "root") return !0;
      const n = Oe(e);
      if (n === null) break;
      e = n.__parent;
    }
    return !1;
  }
  isSelected(e) {
    const n = e || oe();
    if (n == null) return !1;
    const r = n.getNodes().some((i) => i.__key === this.__key);
    if (ie(this)) return r;
    if (Z(n) && n.anchor.type === "element" && n.focus.type === "element") {
      if (n.isCollapsed()) return !1;
      const i = this.getParent();
      if (Xe(this) && this.isInline() && i) {
        const o = n.isBackward() ? n.focus : n.anchor;
        if (i.is(o.getNode()) && o.offset === i.getChildrenSize() && this.is(i.getLastChild())) return !1;
      }
    }
    return r;
  }
  getKey() {
    return this.__key;
  }
  getIndexWithinParent() {
    const e = this.getParent();
    if (e === null) return -1;
    let n = e.getFirstChild(), r = 0;
    for (; n !== null; ) {
      if (this.is(n)) return r;
      r++, n = n.getNextSibling();
    }
    return -1;
  }
  getParent() {
    const e = this.getLatest().__parent;
    return e === null ? null : Oe(e);
  }
  getParentOrThrow() {
    const e = this.getParent();
    return e === null && le(66, this.__key), e;
  }
  getTopLevelElement() {
    let e = this;
    for (; e !== null; ) {
      const n = e.getParent();
      if (Zr(n)) return X(e) || e === this && Xe(e) || le(194), e;
      e = n;
    }
    return null;
  }
  getTopLevelElementOrThrow() {
    const e = this.getTopLevelElement();
    return e === null && le(67, this.__key), e;
  }
  getParents() {
    const e = [];
    let n = this.getParent();
    for (; n !== null; ) e.push(n), n = n.getParent();
    return e;
  }
  getParentKeys() {
    const e = [];
    let n = this.getParent();
    for (; n !== null; ) e.push(n.__key), n = n.getParent();
    return e;
  }
  getPreviousSibling() {
    const e = this.getLatest().__prev;
    return e === null ? null : Oe(e);
  }
  getPreviousSiblings() {
    const e = [], n = this.getParent();
    if (n === null) return e;
    let r = n.getFirstChild();
    for (; r !== null && !r.is(this); ) e.push(r), r = r.getNextSibling();
    return e;
  }
  getNextSibling() {
    const e = this.getLatest().__next;
    return e === null ? null : Oe(e);
  }
  getNextSiblings() {
    const e = [];
    let n = this.getNextSibling();
    for (; n !== null; ) e.push(n), n = n.getNextSibling();
    return e;
  }
  getCommonAncestor(e) {
    const n = X(this) ? this : this.getParent(), r = X(e) ? e : e.getParent(), i = n && r ? Ha(n, r) : null;
    return i ? i.commonAncestor : null;
  }
  is(e) {
    return e != null && this.__key === e.__key;
  }
  isBefore(e) {
    const n = Ha(this, e);
    return n !== null && (n.type === "descendant" || (n.type === "branch" ? ov(n) === -1 : (n.type !== "same" && n.type !== "ancestor" && le(279), !1)));
  }
  isParentOf(e) {
    const n = Ha(this, e);
    return n !== null && n.type === "ancestor";
  }
  getNodesBetween(e) {
    const n = this.isBefore(e), r = [], i = /* @__PURE__ */ new Set();
    let o = this;
    for (; o !== null; ) {
      const s = o.__key;
      if (i.has(s) || (i.add(s), r.push(o)), o === e) break;
      const a = X(o) ? n ? o.getFirstChild() : o.getLastChild() : null;
      if (a !== null) {
        o = a;
        continue;
      }
      const l = n ? o.getNextSibling() : o.getPreviousSibling();
      if (l !== null) {
        o = l;
        continue;
      }
      const c = o.getParentOrThrow();
      if (i.has(c.__key) || r.push(c), c === e) break;
      let u = null, f = c;
      do {
        if (f === null && le(68), u = n ? f.getNextSibling() : f.getPreviousSibling(), f = f.getParent(), f === null) break;
        u !== null || i.has(f.__key) || r.push(f);
      } while (u === null);
      o = u;
    }
    return n || r.reverse(), r;
  }
  isDirty() {
    const e = gt()._dirtyLeaves;
    return e !== null && e.has(this.__key);
  }
  getLatest() {
    const e = Oe(this.__key);
    return e === null && le(113), e;
  }
  getWritable() {
    Zt();
    const e = Qi(), n = gt(), r = e._nodeMap, i = this.__key, o = this.getLatest(), s = n._cloneNotNeeded, a = oe();
    if (a !== null && a.setCachedNodes(null), s.has(i)) return Kc(o), o;
    const l = Dp(o);
    return s.add(i), Kc(l), r.set(i, l), l;
  }
  getTextContent() {
    return "";
  }
  getTextContentSize() {
    return this.getTextContent().length;
  }
  createDOM(e, n) {
    le(70);
  }
  updateDOM(e, n, r) {
    le(71);
  }
  exportDOM(e) {
    return { element: this.createDOM(e._config, e) };
  }
  exportJSON() {
    const e = this.__state ? this.__state.toJSON() : void 0;
    return { type: this.__type, version: 1, ...e };
  }
  static importJSON(e) {
    le(18, this.name);
  }
  updateFromJSON(e) {
    return function(n, r) {
      const i = n.getWritable(), o = r.$;
      let s = o;
      for (const a of Zy(i).flatKeys) a in r && (s !== void 0 && s !== o || (s = { ...o }), s[a] = r[a]);
      return (i.__state || s) && Qy(n).updateFromJSON(s), i;
    }(this, e);
  }
  static transform() {
    return null;
  }
  remove(e) {
    $f(this, !0, e);
  }
  replace(e, n) {
    Zt();
    let r = oe();
    r !== null && (r = r.clone()), jd(this, e);
    const i = this.getLatest(), o = this.__key, s = e.__key, a = e.getWritable(), l = this.getParentOrThrow().getWritable(), c = l.__size;
    Eo(a);
    const u = i.getPreviousSibling(), f = i.getNextSibling(), d = i.__prev, h = i.__next, g = i.__parent;
    if ($f(i, !1, !0), u === null ? l.__first = s : u.getWritable().__next = s, a.__prev = d, f === null ? l.__last = s : f.getWritable().__prev = s, a.__next = h, a.__parent = g, l.__size = c, n && (X(this) && X(a) || le(139), this.getChildren().forEach((w) => {
      a.append(w);
    })), Z(r)) {
      sn(r);
      const w = r.anchor, v = r.focus;
      w.key === o && vw(w, a), v.key === o && vw(v, a);
    }
    return Ri() === o && en(s), a;
  }
  insertAfter(e, n = !0) {
    Zt(), jd(this, e);
    const r = this.getWritable(), i = e.getWritable(), o = i.getParent(), s = oe();
    let a = !1, l = !1;
    if (o !== null) {
      const h = e.getIndexWithinParent();
      if (Eo(i), Z(s)) {
        const g = o.__key, w = s.anchor, v = s.focus;
        a = w.type === "element" && w.key === g && w.offset === h + 1, l = v.type === "element" && v.key === g && v.offset === h + 1;
      }
    }
    const c = this.getNextSibling(), u = this.getParentOrThrow().getWritable(), f = i.__key, d = r.__next;
    if (c === null ? u.__last = f : c.getWritable().__prev = f, u.__size++, r.__next = f, i.__next = d, i.__prev = r.__key, i.__parent = r.__parent, n && Z(s)) {
      const h = this.getIndexWithinParent();
      Vc(s, u, h + 1);
      const g = u.__key;
      a && s.anchor.set(g, h + 2, "element"), l && s.focus.set(g, h + 2, "element");
    }
    return e;
  }
  insertBefore(e, n = !0) {
    Zt(), jd(this, e);
    const r = this.getWritable(), i = e.getWritable(), o = i.__key;
    Eo(i);
    const s = this.getPreviousSibling(), a = this.getParentOrThrow().getWritable(), l = r.__prev, c = this.getIndexWithinParent();
    s === null ? a.__first = o : s.getWritable().__next = o, a.__size++, r.__prev = o, i.__prev = l, i.__next = r.__key, i.__parent = r.__parent;
    const u = oe();
    return n && Z(u) && Vc(u, this.getParentOrThrow(), c), e;
  }
  isParentRequired() {
    return !1;
  }
  createParentElementNode() {
    return Jn();
  }
  selectStart() {
    return this.selectPrevious();
  }
  selectEnd() {
    return this.selectNext(0, 0);
  }
  selectPrevious(e, n) {
    Zt();
    const r = this.getPreviousSibling(), i = this.getParentOrThrow();
    if (r === null) return i.select(0, 0);
    if (X(r)) return r.select();
    if (!ie(r)) {
      const o = r.getIndexWithinParent() + 1;
      return i.select(o, o);
    }
    return r.select(e, n);
  }
  selectNext(e, n) {
    Zt();
    const r = this.getNextSibling(), i = this.getParentOrThrow();
    if (r === null) return i.select();
    if (X(r)) return r.select(0, 0);
    if (!ie(r)) {
      const o = r.getIndexWithinParent();
      return i.select(o, o);
    }
    return r.select(e, n);
  }
  markDirty() {
    this.getWritable();
  }
  reconcileObservedMutation(e, n) {
    this.markDirty();
  }
}, xl = class b0 extends ia {
  static getType() {
    return "linebreak";
  }
  static clone(e) {
    return new b0(e.__key);
  }
  constructor(e) {
    super(e);
  }
  getTextContent() {
    return `
`;
  }
  createDOM() {
    return document.createElement("br");
  }
  updateDOM() {
    return !1;
  }
  isInline() {
    return !0;
  }
  static importDOM() {
    return { br: (e) => function(n) {
      const r = n.parentElement;
      if (r !== null && Gc(r)) {
        const i = r.firstChild;
        if (i === n || i.nextSibling === n && Ql(i)) {
          const o = r.lastChild;
          if (o === n || o.previousSibling === n && Ql(o)) return !0;
        }
      }
      return !1;
    }(e) || function(n) {
      const r = n.parentElement;
      if (r !== null && Gc(r)) {
        const i = r.firstChild;
        if (i === n || i.nextSibling === n && Ql(i)) return !1;
        const o = r.lastChild;
        if (o === n || o.previousSibling === n && Ql(o)) return !0;
      }
      return !1;
    }(e) ? null : { conversion: Ik, priority: 0 } };
  }
  static importJSON(e) {
    return Lo().updateFromJSON(e);
  }
};
function Ik(t) {
  return { node: Lo() };
}
function Lo() {
  return at(new xl());
}
function xo(t) {
  return t instanceof xl;
}
function Ql(t) {
  return ki(t) && /^( |\t|\r?\n)+$/.test(t.textContent || "");
}
function Ld(t, e) {
  return 16 & e ? "code" : e & Yh ? "mark" : 32 & e ? "sub" : 64 & e ? "sup" : null;
}
function $d(t, e) {
  return 1 & e ? "strong" : 2 & e ? "em" : "span";
}
function y0(t, e, n, r, i) {
  const o = r.classList;
  let s = ys(i, "base");
  s !== void 0 && o.add(...s), s = ys(i, "underlineStrikethrough");
  let a = !1;
  const l = e & $c && e & Lc;
  s !== void 0 && (n & $c && n & Lc ? (a = !0, l || o.add(...s)) : l && o.remove(...s));
  for (const c in qi) {
    const u = qi[c];
    if (s = ys(i, c), s !== void 0) if (n & u) {
      if (a && (c === "underline" || c === "strikethrough")) {
        e & u && o.remove(...s);
        continue;
      }
      e & u && (!l || c !== "underline") && c !== "strikethrough" || o.add(...s);
    } else e & u && o.remove(...s);
  }
}
function v0(t, e, n) {
  const r = e.firstChild, i = n.isComposing(), o = t + (i ? Du : "");
  if (r == null) e.textContent = o;
  else {
    const s = r.nodeValue;
    if (s !== o) if (i || Io) {
      const [a, l, c] = function(u, f) {
        const d = u.length, h = f.length;
        let g = 0, w = 0;
        for (; g < d && g < h && u[g] === f[g]; ) g++;
        for (; w + g < d && w + g < h && u[d - w - 1] === f[h - w - 1]; ) w++;
        return [g, d - g - w, f.slice(g, h - w)];
      }(s, o);
      l !== 0 && r.deleteData(a, l), r.insertData(a, c);
    } else r.nodeValue = o;
  }
}
function mw(t, e, n, r, i, o) {
  v0(i, t, e);
  const s = o.theme.text;
  s !== void 0 && y0(0, 0, r, t, s);
}
function Zl(t, e) {
  const n = document.createElement(e);
  return n.appendChild(t), n;
}
let Gn = class _0 extends ia {
  static getType() {
    return "text";
  }
  static clone(e) {
    return new _0(e.__text, e.__key);
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__text = e.__text, this.__format = e.__format, this.__style = e.__style, this.__mode = e.__mode, this.__detail = e.__detail;
  }
  constructor(e = "", n) {
    super(n), this.__text = e, this.__format = 0, this.__style = "", this.__mode = 0, this.__detail = 0;
  }
  getFormat() {
    return this.getLatest().__format;
  }
  getDetail() {
    return this.getLatest().__detail;
  }
  getMode() {
    const e = this.getLatest();
    return ck[e.__mode];
  }
  getStyle() {
    return this.getLatest().__style;
  }
  isToken() {
    return this.getLatest().__mode === 1;
  }
  isComposing() {
    return this.__key === Ri();
  }
  isSegmented() {
    return this.getLatest().__mode === 2;
  }
  isDirectionless() {
    return !!(1 & this.getLatest().__detail);
  }
  isUnmergeable() {
    return !!(2 & this.getLatest().__detail);
  }
  hasFormat(e) {
    const n = qi[e];
    return !!(this.getFormat() & n);
  }
  isSimpleText() {
    return this.__type === "text" && this.__mode === 0;
  }
  getTextContent() {
    return this.getLatest().__text;
  }
  getFormatFlags(e, n) {
    return Wc(this.getLatest().__format, e, n);
  }
  canHaveFormat() {
    return !0;
  }
  isInline() {
    return !0;
  }
  createDOM(e, n) {
    const r = this.__format, i = Ld(0, r), o = $d(0, r), s = i === null ? o : i, a = document.createElement(s);
    let l = a;
    this.hasFormat("code") && a.setAttribute("spellcheck", "false"), i !== null && (l = document.createElement(o), a.appendChild(l)), mw(l, this, 0, r, this.__text, e);
    const c = this.__style;
    return c !== "" && (a.style.cssText = c), a;
  }
  updateDOM(e, n, r) {
    const i = this.__text, o = e.__format, s = this.__format, a = Ld(0, o), l = Ld(0, s), c = $d(0, o), u = $d(0, s);
    if ((a === null ? c : a) !== (l === null ? u : l)) return !0;
    if (a === l && c !== u) {
      const w = n.firstChild;
      w == null && le(48);
      const v = document.createElement(u);
      return mw(v, this, 0, s, i, r), n.replaceChild(v, w), !1;
    }
    let f = n;
    l !== null && a !== null && (f = n.firstChild, f == null && le(49)), v0(i, f, this);
    const d = r.theme.text;
    d !== void 0 && o !== s && y0(0, o, s, f, d);
    const h = e.__style, g = this.__style;
    return h !== g && (n.style.cssText = g), !1;
  }
  static importDOM() {
    return { "#text": () => ({ conversion: $k, priority: 0 }), b: () => ({ conversion: Pk, priority: 0 }), code: () => ({ conversion: oi, priority: 0 }), em: () => ({ conversion: oi, priority: 0 }), i: () => ({ conversion: oi, priority: 0 }), mark: () => ({ conversion: oi, priority: 0 }), s: () => ({ conversion: oi, priority: 0 }), span: () => ({ conversion: Rk, priority: 0 }), strong: () => ({ conversion: oi, priority: 0 }), sub: () => ({ conversion: oi, priority: 0 }), sup: () => ({ conversion: oi, priority: 0 }), u: () => ({ conversion: oi, priority: 0 }) };
  }
  static importJSON(e) {
    return Ie().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTextContent(e.text).setFormat(e.format).setDetail(e.detail).setMode(e.mode).setStyle(e.style);
  }
  exportDOM(e) {
    let { element: n } = super.exportDOM(e);
    return it(n) || le(132), n.style.whiteSpace = "pre-wrap", this.hasFormat("lowercase") ? n.style.textTransform = "lowercase" : this.hasFormat("uppercase") ? n.style.textTransform = "uppercase" : this.hasFormat("capitalize") && (n.style.textTransform = "capitalize"), this.hasFormat("bold") && (n = Zl(n, "b")), this.hasFormat("italic") && (n = Zl(n, "i")), this.hasFormat("strikethrough") && (n = Zl(n, "s")), this.hasFormat("underline") && (n = Zl(n, "u")), { element: n };
  }
  exportJSON() {
    return { detail: this.getDetail(), format: this.getFormat(), mode: this.getMode(), style: this.getStyle(), text: this.getTextContent(), ...super.exportJSON() };
  }
  selectionTransform(e, n) {
  }
  setFormat(e) {
    const n = this.getWritable();
    return n.__format = typeof e == "string" ? qi[e] : e, n;
  }
  setDetail(e) {
    const n = this.getWritable();
    return n.__detail = typeof e == "string" ? sk[e] : e, n;
  }
  setStyle(e) {
    const n = this.getWritable();
    return n.__style = e, n;
  }
  toggleFormat(e) {
    const n = Wc(this.getFormat(), e, null);
    return this.setFormat(n);
  }
  toggleDirectionless() {
    const e = this.getWritable();
    return e.__detail ^= 1, e;
  }
  toggleUnmergeable() {
    const e = this.getWritable();
    return e.__detail ^= 2, e;
  }
  setMode(e) {
    const n = lk[e];
    if (this.__mode === n) return this;
    const r = this.getWritable();
    return r.__mode = n, r;
  }
  setTextContent(e) {
    if (this.__text === e) return this;
    const n = this.getWritable();
    return n.__text = e, n;
  }
  select(e, n) {
    Zt();
    let r = e, i = n;
    const o = oe(), s = this.getTextContent(), a = this.__key;
    if (typeof s == "string") {
      const l = s.length;
      r === void 0 && (r = l), i === void 0 && (i = l);
    } else r = 0, i = 0;
    if (!Z(o)) return T0(a, r, a, i, "text", "text");
    {
      const l = Ri();
      l !== o.anchor.key && l !== o.focus.key || en(a), o.setTextNodeRange(this, r, this, i);
    }
    return o;
  }
  selectStart() {
    return this.select(0, 0);
  }
  selectEnd() {
    const e = this.getTextContentSize();
    return this.select(e, e);
  }
  spliceText(e, n, r, i) {
    const o = this.getWritable(), s = o.__text, a = r.length;
    let l = e;
    l < 0 && (l = a + l, l < 0 && (l = 0));
    const c = oe();
    if (i && Z(c)) {
      const f = e + a;
      c.setTextNodeRange(o, f, o, f);
    }
    const u = s.slice(0, l) + r + s.slice(l + n);
    return o.__text = u, o;
  }
  canInsertTextBefore() {
    return !0;
  }
  canInsertTextAfter() {
    return !0;
  }
  splitText(...e) {
    Zt();
    const n = this.getLatest(), r = n.getTextContent();
    if (r === "") return [];
    const i = n.__key, o = Ri(), s = r.length;
    e.sort((M, O) => M - O), e.push(s);
    const a = [], l = e.length;
    for (let M = 0, O = 0; M < s && O <= l; O++) {
      const j = e[O];
      j > M && (a.push(r.slice(M, j)), M = j);
    }
    const c = a.length;
    if (c === 1) return [n];
    const u = a[0], f = n.getParent();
    let d;
    const h = n.getFormat(), g = n.getStyle(), w = n.__detail;
    let v = !1, _ = null, b = null;
    const C = oe();
    if (Z(C)) {
      const [M, O] = C.isBackward() ? [C.focus, C.anchor] : [C.anchor, C.focus];
      M.type === "text" && M.key === i && (_ = M), O.type === "text" && O.key === i && (b = O);
    }
    n.isSegmented() ? (d = Ie(u), d.__format = h, d.__style = g, d.__detail = w, d.__state = sw(n, d), v = !0) : d = n.setTextContent(u);
    const D = [d];
    for (let M = 1; M < c; M++) {
      const O = Ie(a[M]);
      O.__format = h, O.__style = g, O.__detail = w, O.__state = sw(n, O);
      const j = O.__key;
      o === i && en(j), D.push(O);
    }
    const R = _ ? _.offset : null, N = b ? b.offset : null;
    let L = 0;
    for (const M of D) {
      if (!_ && !b) break;
      const O = L + M.getTextContentSize();
      if (_ !== null && R !== null && R <= O && R >= L && (_.set(M.getKey(), R - L, "text"), R < O && (_ = null)), b !== null && N !== null && N <= O && N >= L) {
        b.set(M.getKey(), N - L, "text");
        break;
      }
      L = O;
    }
    if (f !== null) {
      (function(j) {
        const k = j.getPreviousSibling(), I = j.getNextSibling();
        k !== null && Kc(k), I !== null && Kc(I);
      })(this);
      const M = f.getWritable(), O = this.getIndexWithinParent();
      v ? (M.splice(O, 0, D), this.remove()) : M.splice(O, 1, D), Z(C) && Vc(C, f, O, c - 1);
    }
    return D;
  }
  mergeWithSibling(e) {
    const n = e === this.getPreviousSibling();
    n || e === this.getNextSibling() || le(50);
    const r = this.__key, i = e.__key, o = this.__text, s = o.length;
    Ri() === i && en(r);
    const a = oe();
    if (Z(a)) {
      const f = a.anchor, d = a.focus;
      f !== null && f.key === i && Sw(f, n, r, e, s), d !== null && d.key === i && Sw(d, n, r, e, s);
    }
    const l = e.__text, c = n ? l + o : o + l;
    this.setTextContent(c);
    const u = this.getWritable();
    return e.remove(), u;
  }
  isTextEntity() {
    return !1;
  }
};
function Rk(t) {
  return { forChild: pp(t.style), node: null };
}
function Pk(t) {
  const e = t, n = e.style.fontWeight === "normal";
  return { forChild: pp(e.style, n ? void 0 : "bold"), node: null };
}
const bw = /* @__PURE__ */ new WeakMap();
function Lk(t) {
  if (!it(t)) return !1;
  if (t.nodeName === "PRE") return !0;
  const e = t.style.whiteSpace;
  return typeof e == "string" && e.startsWith("pre");
}
function $k(t) {
  const e = t;
  t.parentElement === null && le(129);
  let n = e.textContent || "";
  if (function(r) {
    let i, o = r.parentNode;
    const s = [r];
    for (; o !== null && (i = bw.get(o)) === void 0 && !Lk(o); ) s.push(o), o = o.parentNode;
    const a = i === void 0 ? o : i;
    for (let l = 0; l < s.length; l++) bw.set(s[l], a);
    return a;
  }(e) !== null) {
    const r = n.split(/(\r?\n|\t)/), i = [], o = r.length;
    for (let s = 0; s < o; s++) {
      const a = r[s];
      a === `
` || a === `\r
` ? i.push(Lo()) : a === "	" ? i.push(kl()) : a !== "" && i.push(Ie(a));
    }
    return { node: i };
  }
  if (n = n.replace(/\r/g, "").replace(/[ \t\n]+/g, " "), n === "") return { node: null };
  if (n[0] === " ") {
    let r = e, i = !0;
    for (; r !== null && (r = yw(r, !1)) !== null; ) {
      const o = r.textContent || "";
      if (o.length > 0) {
        /[ \t\n]$/.test(o) && (n = n.slice(1)), i = !1;
        break;
      }
    }
    i && (n = n.slice(1));
  }
  if (n[n.length - 1] === " ") {
    let r = e, i = !0;
    for (; r !== null && (r = yw(r, !0)) !== null; )
      if ((r.textContent || "").replace(/^( |\t|\r?\n)+/, "").length > 0) {
        i = !1;
        break;
      }
    i && (n = n.slice(0, n.length - 1));
  }
  return n === "" ? { node: null } : { node: Ie(n) };
}
function yw(t, e) {
  let n = t;
  for (; ; ) {
    let r;
    for (; (r = e ? n.nextSibling : n.previousSibling) === null; ) {
      const o = n.parentElement;
      if (o === null) return null;
      n = o;
    }
    if (n = r, it(n)) {
      const o = n.style.display;
      if (o === "" && !Wf(n) || o !== "" && !o.startsWith("inline")) return null;
    }
    let i = n;
    for (; (i = e ? n.firstChild : n.lastChild) !== null; ) n = i;
    if (ki(n)) return n;
    if (n.nodeName === "BR") return null;
  }
}
const Fk = { code: "code", em: "italic", i: "italic", mark: "highlight", s: "strikethrough", strong: "bold", sub: "subscript", sup: "superscript", u: "underline" };
function oi(t) {
  const e = Fk[t.nodeName.toLowerCase()];
  return e === void 0 ? { node: null } : { forChild: pp(t.style, e), node: null };
}
function Ie(t = "") {
  return at(new Gn(t));
}
function ie(t) {
  return t instanceof Gn;
}
function pp(t, e) {
  const n = t.fontWeight, r = t.textDecoration.split(" "), i = n === "700" || n === "bold", o = r.includes("line-through"), s = t.fontStyle === "italic", a = r.includes("underline"), l = t.verticalAlign;
  return (c) => (ie(c) && (i && !c.hasFormat("bold") && c.toggleFormat("bold"), o && !c.hasFormat("strikethrough") && c.toggleFormat("strikethrough"), s && !c.hasFormat("italic") && c.toggleFormat("italic"), a && !c.hasFormat("underline") && c.toggleFormat("underline"), l !== "sub" || c.hasFormat("subscript") || c.toggleFormat("subscript"), l !== "super" || c.hasFormat("superscript") || c.toggleFormat("superscript"), e && !c.hasFormat(e) && c.toggleFormat(e)), c);
}
class Cl extends Gn {
  static getType() {
    return "tab";
  }
  static clone(e) {
    return new Cl(e.__key);
  }
  constructor(e) {
    super("	", e), this.__detail = 2;
  }
  static importDOM() {
    return null;
  }
  createDOM(e) {
    const n = super.createDOM(e), r = ys(e.theme, "tab");
    return r !== void 0 && n.classList.add(...r), n;
  }
  static importJSON(e) {
    return kl().updateFromJSON(e);
  }
  setTextContent(e) {
    return e !== "	" && e !== "" && le(126), super.setTextContent("	");
  }
  spliceText(e, n, r, i) {
    return r === "" && n === 0 || r === "	" && n === 1 || le(286), this;
  }
  setDetail(e) {
    return e !== 2 && le(127), this;
  }
  setMode(e) {
    return e !== "normal" && le(128), this;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
}
function kl() {
  return at(new Cl());
}
function x0(t) {
  return t instanceof Cl;
}
let Bk = class {
  constructor(e, n, r) {
    this._selection = null, this.key = e, this.offset = n, this.type = r;
  }
  is(e) {
    return this.key === e.key && this.offset === e.offset && this.type === e.type;
  }
  isBefore(e) {
    return this.key === e.key ? this.offset < e.offset : iv(zr(bi(this, "next")), zr(bi(e, "next"))) < 0;
  }
  getNode() {
    const e = Oe(this.key);
    return e === null && le(20), e;
  }
  set(e, n, r, i) {
    const o = this._selection, s = this.key;
    i && this.key === e && this.offset === n && this.type === r || (this.key = e, this.offset = n, this.type = r, sa() || (Ri() === s && en(e), o !== null && (o.setCachedNodes(null), o.dirty = !0)));
  }
};
function On(t, e, n) {
  return new Bk(t, e, n);
}
function Fd(t, e) {
  let n = e.__key, r = t.offset, i = "element";
  if (ie(e)) {
    i = "text";
    const o = e.getTextContentSize();
    r > o && (r = o);
  } else if (!X(e)) {
    const o = e.getNextSibling();
    if (ie(o)) n = o.__key, r = 0, i = "text";
    else {
      const s = e.getParent();
      s && (n = s.__key, r = e.getIndexWithinParent() + 1);
    }
  }
  t.set(n, r, i);
}
function vw(t, e) {
  if (X(e)) {
    const n = e.getLastDescendant();
    X(n) || ie(n) ? Fd(t, n) : Fd(t, e);
  } else Fd(t, e);
}
let C0 = class k0 {
  constructor(e) {
    this._cachedNodes = null, this._nodes = e, this.dirty = !1;
  }
  getCachedNodes() {
    return this._cachedNodes;
  }
  setCachedNodes(e) {
    this._cachedNodes = e;
  }
  is(e) {
    if (!bn(e)) return !1;
    const n = this._nodes, r = e._nodes;
    return n.size === r.size && Array.from(n).every((i) => r.has(i));
  }
  isCollapsed() {
    return !1;
  }
  isBackward() {
    return !1;
  }
  getStartEndPoints() {
    return null;
  }
  add(e) {
    this.dirty = !0, this._nodes.add(e), this._cachedNodes = null;
  }
  delete(e) {
    this.dirty = !0, this._nodes.delete(e), this._cachedNodes = null;
  }
  clear() {
    this.dirty = !0, this._nodes.clear(), this._cachedNodes = null;
  }
  has(e) {
    return this._nodes.has(e);
  }
  clone() {
    return new k0(new Set(this._nodes));
  }
  extract() {
    return this.getNodes();
  }
  insertRawText(e) {
  }
  insertText() {
  }
  insertNodes(e) {
    const n = this.getNodes(), r = n.length, i = n[r - 1];
    let o;
    if (ie(i)) o = i.select();
    else {
      const s = i.getIndexWithinParent() + 1;
      o = i.getParentOrThrow().select(s, s);
    }
    o.insertNodes(e);
    for (let s = 0; s < r; s++) n[s].remove();
  }
  getNodes() {
    const e = this._cachedNodes;
    if (e !== null) return e;
    const n = this._nodes, r = [];
    for (const i of n) {
      const o = Oe(i);
      o !== null && r.push(o);
    }
    return sa() || (this._cachedNodes = r), r;
  }
  getTextContent() {
    const e = this.getNodes();
    let n = "";
    for (let r = 0; r < e.length; r++) n += e[r].getTextContent();
    return n;
  }
  deleteNodes() {
    const e = this.getNodes();
    if ((oe() || oa()) === this && e[0]) {
      const n = $t(e[0], "next");
      xE(zi(n, n));
    }
    for (const n of e) n.remove();
  }
};
function Z(t) {
  return t instanceof El;
}
let El = class E0 {
  constructor(e, n, r, i) {
    this.anchor = e, this.focus = n, e._selection = this, n._selection = this, this._cachedNodes = null, this.format = r, this.style = i, this.dirty = !1;
  }
  getCachedNodes() {
    return this._cachedNodes;
  }
  setCachedNodes(e) {
    this._cachedNodes = e;
  }
  is(e) {
    return !!Z(e) && this.anchor.is(e.anchor) && this.focus.is(e.focus) && this.format === e.format && this.style === e.style;
  }
  isCollapsed() {
    return this.anchor.is(this.focus);
  }
  getNodes() {
    const e = this._cachedNodes;
    if (e !== null) return e;
    const n = function(r) {
      const i = [], [o, s] = r.getTextSlices();
      o && i.push(o.caret.origin);
      const a = /* @__PURE__ */ new Set(), l = /* @__PURE__ */ new Set();
      for (const c of r) if (wr(c)) {
        const { origin: u } = c;
        i.length === 0 ? a.add(u) : (l.add(u), i.push(u));
      } else {
        const { origin: u } = c;
        X(u) && l.has(u) || i.push(u);
      }
      if (s && i.push(s.caret.origin), $o(r.focus) && X(r.focus.origin) && r.focus.getNodeAtCaret() === null) for (let c = vr(r.focus.origin, "previous"); wr(c) && a.has(c.origin) && !c.origin.isEmpty() && c.origin.is(i[i.length - 1]); c = nl(c)) a.delete(c.origin), i.pop();
      for (; i.length > 1; ) {
        const c = i[i.length - 1];
        if (!X(c) || l.has(c) || c.isEmpty() || a.has(c)) break;
        i.pop();
      }
      if (i.length === 0 && r.isCollapsed()) {
        const c = zr(r.anchor), u = zr(r.anchor.getFlipped()), f = (h) => Fi(h) ? h.origin : h.getNodeAtCaret(), d = f(c) || f(u) || (r.anchor.getNodeAtCaret() ? c.origin : u.origin);
        i.push(d);
      }
      return i;
    }(av(Kw(this), "next"));
    return sa() || (this._cachedNodes = n), n;
  }
  setTextNodeRange(e, n, r, i) {
    this.anchor.set(e.__key, n, "text"), this.focus.set(r.__key, i, "text");
  }
  getTextContent() {
    const e = this.getNodes();
    if (e.length === 0) return "";
    const n = e[0], r = e[e.length - 1], i = this.anchor, o = this.focus, s = i.isBefore(o), [a, l] = Ff(this);
    let c = "", u = !0;
    for (let f = 0; f < e.length; f++) {
      const d = e[f];
      if (X(d) && !d.isInline()) u || (c += `
`), u = !d.isEmpty();
      else if (u = !1, ie(d)) {
        let h = d.getTextContent();
        d === n ? d === r ? i.type === "element" && o.type === "element" && o.offset !== i.offset || (h = a < l ? h.slice(a, l) : h.slice(l, a)) : h = s ? h.slice(a) : h.slice(l) : d === r && (h = s ? h.slice(0, l) : h.slice(0, a)), c += h;
      } else !Xe(d) && !xo(d) || d === r && this.isCollapsed() || (c += d.getTextContent());
    }
    return c;
  }
  applyDOMRange(e) {
    const n = gt(), r = n.getEditorState()._selection, i = S0(e.startContainer, e.startOffset, e.endContainer, e.endOffset, n, r);
    if (i === null) return;
    const [o, s] = i;
    this.anchor.set(o.key, o.offset, o.type, !0), this.focus.set(s.key, s.offset, s.type, !0), Ya(this);
  }
  clone() {
    const e = this.anchor, n = this.focus;
    return new E0(On(e.key, e.offset, e.type), On(n.key, n.offset, n.type), this.format, this.style);
  }
  toggleFormat(e) {
    this.format = Wc(this.format, e, null), this.dirty = !0;
  }
  setFormat(e) {
    this.format = e, this.dirty = !0;
  }
  setStyle(e) {
    this.style = e, this.dirty = !0;
  }
  hasFormat(e) {
    const n = qi[e];
    return !!(this.format & n);
  }
  insertRawText(e) {
    const n = e.split(/(\r?\n|\t)/), r = [], i = n.length;
    for (let o = 0; o < i; o++) {
      const s = n[o];
      s === `
` || s === `\r
` ? r.push(Lo()) : s === "	" ? r.push(kl()) : r.push(Ie(s));
    }
    this.insertNodes(r);
  }
  insertText(e) {
    const n = this.anchor, r = this.focus, i = this.format, o = this.style;
    let s = n, a = r;
    !this.isCollapsed() && r.isBefore(n) && (s = r, a = n), s.type === "element" && function(v, _, b, C) {
      const D = v.getNode(), R = D.getChildAtIndex(v.offset), N = Ie(), L = tn(D) ? Jn().append(N) : N;
      N.setFormat(b), N.setStyle(C), R === null ? D.append(L) : R.insertBefore(L), v.is(_) && _.set(N.__key, 0, "text"), v.set(N.__key, 0, "text");
    }(s, a, i, o), a.type === "element" && rl(a, zr(bi(a, "next")));
    const l = s.offset;
    let c = a.offset;
    const u = this.getNodes(), f = u.length;
    let d = u[0];
    ie(d) || le(26);
    const h = d.getTextContent().length, g = d.getParentOrThrow();
    let w = u[f - 1];
    if (f === 1 && a.type === "element" && (c = h, a.set(s.key, c, "text")), this.isCollapsed() && l === h && (li(d) || !d.canInsertTextAfter() || !g.canInsertTextAfter() && d.getNextSibling() === null)) {
      let v = d.getNextSibling();
      if (ie(v) && v.canInsertTextBefore() && !li(v) || (v = Ie(), v.setFormat(i), v.setStyle(o), g.canInsertTextAfter() ? d.insertAfter(v) : g.insertAfter(v)), v.select(0, 0), d = v, e !== "") return void this.insertText(e);
    } else if (this.isCollapsed() && l === 0 && (li(d) || !d.canInsertTextBefore() || !g.canInsertTextBefore() && d.getPreviousSibling() === null)) {
      let v = d.getPreviousSibling();
      if (ie(v) && !li(v) || (v = Ie(), v.setFormat(i), g.canInsertTextBefore() ? d.insertBefore(v) : g.insertBefore(v)), v.select(), d = v, e !== "") return void this.insertText(e);
    } else if (d.isSegmented() && l !== h) {
      const v = Ie(d.getTextContent());
      v.setFormat(i), d.replace(v), d = v;
    } else if (!this.isCollapsed() && e !== "") {
      const v = w.getParent();
      if (!g.canInsertTextBefore() || !g.canInsertTextAfter() || X(v) && (!v.canInsertTextBefore() || !v.canInsertTextAfter())) return this.insertText(""), N0(this.anchor, this.focus, null), void this.insertText(e);
    }
    if (f === 1) {
      if (ko(d)) {
        const C = Ie(e);
        return C.select(), void d.replace(C);
      }
      const v = d.getFormat(), _ = d.getStyle();
      if (l !== c || v === i && _ === o) {
        if (x0(d)) {
          const C = Ie(e);
          return C.setFormat(i), C.setStyle(o), C.select(), void d.replace(C);
        }
      } else {
        if (d.getTextContent() !== "") {
          const C = Ie(e);
          if (C.setFormat(i), C.setStyle(o), C.select(), l === 0) d.insertBefore(C, !1);
          else {
            const [D] = d.splitText(l);
            D.insertAfter(C, !1);
          }
          return void (C.isComposing() && this.anchor.type === "text" && (this.anchor.offset -= e.length));
        }
        d.setFormat(i), d.setStyle(o);
      }
      const b = c - l;
      d = d.spliceText(l, b, e, !0), d.getTextContent() === "" ? d.remove() : this.anchor.type === "text" && (d.isComposing() ? this.anchor.offset -= e.length : (this.format = v, this.style = _));
    } else {
      const v = /* @__PURE__ */ new Set([...d.getParentKeys(), ...w.getParentKeys()]), _ = X(d) ? d : d.getParentOrThrow();
      let b = X(w) ? w : w.getParentOrThrow(), C = w;
      if (!_.is(b) && b.isInline()) do
        C = b, b = b.getParentOrThrow();
      while (b.isInline());
      if (a.type === "text" && (c !== 0 || w.getTextContent() === "") || a.type === "element" && w.getIndexWithinParent() < c) if (ie(w) && !ko(w) && c !== w.getTextContentSize()) {
        if (w.isSegmented()) {
          const M = Ie(w.getTextContent());
          w.replace(M), w = M;
        }
        tn(a.getNode()) || a.type !== "text" || (w = w.spliceText(0, c, "")), v.add(w.__key);
      } else {
        const M = w.getParentOrThrow();
        M.canBeEmpty() || M.getChildrenSize() !== 1 ? w.remove() : M.remove();
      }
      else v.add(w.__key);
      const D = b.getChildren(), R = new Set(u), N = _.is(b), L = _.isInline() && d.getNextSibling() === null ? _ : d;
      for (let M = D.length - 1; M >= 0; M--) {
        const O = D[M];
        if (O.is(d) || X(O) && O.isParentOf(d)) break;
        O.isAttached() && (!R.has(O) || O.is(C) ? N || L.insertAfter(O, !1) : O.remove());
      }
      if (!N) {
        let M = b, O = null;
        for (; M !== null; ) {
          const j = M.getChildren(), k = j.length;
          (k === 0 || j[k - 1].is(O)) && (v.delete(M.__key), O = M), M = M.getParent();
        }
      }
      if (ko(d)) if (l === h) d.select();
      else {
        const M = Ie(e);
        M.select(), d.replace(M);
      }
      else d = d.spliceText(l, h - l, e, !0), d.getTextContent() === "" ? d.remove() : d.isComposing() && this.anchor.type === "text" && (this.anchor.offset -= e.length);
      for (let M = 1; M < f; M++) {
        const O = u[M], j = O.__key;
        v.has(j) || O.remove();
      }
    }
  }
  removeText() {
    const e = oe() === this;
    xc(this, CE(Kw(this))), e && oe() !== this && sn(this);
  }
  formatText(e, n = null) {
    if (this.isCollapsed()) return this.toggleFormat(e), void en(null);
    const r = this.getNodes(), i = [];
    for (const D of r) ie(D) && i.push(D);
    const o = (D) => {
      r.forEach((R) => {
        if (X(R)) {
          const N = R.getFormatFlags(e, D);
          R.setTextFormat(N);
        }
      });
    }, s = i.length;
    if (s === 0) return this.toggleFormat(e), en(null), void o(n);
    const a = this.anchor, l = this.focus, c = this.isBackward(), u = c ? l : a, f = c ? a : l;
    let d = 0, h = i[0], g = u.type === "element" ? 0 : u.offset;
    if (u.type === "text" && g === h.getTextContentSize() && (d = 1, h = i[1], g = 0), h == null) return;
    const w = h.getFormatFlags(e, n);
    o(w);
    const v = s - 1;
    let _ = i[v];
    const b = f.type === "text" ? f.offset : _.getTextContentSize();
    if (h.is(_)) {
      if (g === b) return;
      if (li(h) || g === 0 && b === h.getTextContentSize()) h.setFormat(w);
      else {
        const D = h.splitText(g, b), R = g === 0 ? D[0] : D[1];
        R.setFormat(w), u.type === "text" && u.set(R.__key, 0, "text"), f.type === "text" && f.set(R.__key, b - g, "text");
      }
      return void (this.format = w);
    }
    g === 0 || li(h) || ([, h] = h.splitText(g), g = 0), h.setFormat(w);
    const C = _.getFormatFlags(e, w);
    b > 0 && (b === _.getTextContentSize() || li(_) || ([_] = _.splitText(b)), _.setFormat(C));
    for (let D = d + 1; D < v; D++) {
      const R = i[D], N = R.getFormatFlags(e, C);
      R.setFormat(N);
    }
    u.type === "text" && u.set(h.__key, g, "text"), f.type === "text" && f.set(_.__key, b, "text"), this.format = w | C;
  }
  insertNodes(e) {
    if (e.length === 0) return;
    if (this.isCollapsed() || this.removeText(), this.anchor.key === "root") {
      this.insertParagraph();
      const g = oe();
      return Z(g) || le(134), g.insertNodes(e);
    }
    const n = (this.isBackward() ? this.focus : this.anchor).getNode(), r = zd(n, nr), i = e[e.length - 1];
    if (X(r) && "__language" in r) {
      if ("__language" in e[0]) this.insertText(e[0].getTextContent());
      else {
        const g = Bd(this);
        r.splice(g, 0, e), i.selectEnd();
      }
      return;
    }
    if (!e.some((g) => (X(g) || Xe(g)) && !g.isInline())) {
      X(r) || le(211, n.constructor.name, n.getType());
      const g = Bd(this);
      return r.splice(g, 0, e), void i.selectEnd();
    }
    const o = function(g) {
      const w = Jn();
      let v = null;
      for (let _ = 0; _ < g.length; _++) {
        const b = g[_], C = xo(b);
        if (C || Xe(b) && b.isInline() || X(b) && b.isInline() || ie(b) || b.isParentRequired()) {
          if (v === null && (v = b.createParentElementNode(), w.append(v), C)) continue;
          v !== null && v.append(b);
        } else w.append(b), v = null;
      }
      return w;
    }(e), s = o.getLastDescendant(), a = o.getChildren(), l = !X(r) || !r.isEmpty() ? this.insertParagraph() : null, c = a[a.length - 1];
    let u = a[0];
    var f;
    X(f = u) && nr(f) && !f.isEmpty() && X(r) && (!r.isEmpty() || r.canMergeWhenEmpty()) && (X(r) || le(211, n.constructor.name, n.getType()), r.append(...u.getChildren()), u = a[1]), u && (r === null && le(212, n.constructor.name, n.getType()), function(g, w, v) {
      const _ = w.getParentOrThrow().getLastChild();
      let b = w;
      const C = [w];
      for (; b !== _; ) b.getNextSibling() || le(140), b = b.getNextSibling(), C.push(b);
      let D = g;
      for (const R of C) D = D.insertAfter(R);
    }(r, u));
    const d = zd(s, nr);
    l && X(d) && (l.canMergeWhenEmpty() || nr(c)) && (d.append(...l.getChildren()), l.remove()), X(r) && r.isEmpty() && r.remove(), s.selectEnd();
    const h = X(r) ? r.getLastChild() : null;
    xo(h) && d !== r && h.remove();
  }
  insertParagraph() {
    if (this.anchor.key === "root") {
      const s = Jn();
      return Ve().splice(this.anchor.offset, 0, [s]), s.select(), s;
    }
    const e = Bd(this), n = zd(this.anchor.getNode(), nr);
    X(n) || le(213);
    const r = n.getChildAtIndex(e), i = r ? [r, ...r.getNextSiblings()] : [], o = n.insertNewAfter(this, !1);
    return o ? (o.append(...i), o.selectStart(), o) : null;
  }
  insertLineBreak(e) {
    const n = Lo();
    if (this.insertNodes([n]), e) {
      const r = n.getParentOrThrow(), i = n.getIndexWithinParent();
      r.select(i, i);
    }
  }
  extract() {
    const e = this.getNodes(), n = e.length, r = n - 1, i = this.anchor, o = this.focus;
    let s = e[0], a = e[r];
    const [l, c] = Ff(this);
    if (n === 0) return [];
    if (n === 1) {
      if (ie(s) && !this.isCollapsed()) {
        const f = l > c ? c : l, d = l > c ? l : c, h = s.splitText(f, d), g = f === 0 ? h[0] : h[1];
        return g != null ? [g] : [];
      }
      return [s];
    }
    const u = i.isBefore(o);
    if (ie(s)) {
      const f = u ? l : c;
      f === s.getTextContentSize() ? e.shift() : f !== 0 && ([, s] = s.splitText(f), e[0] = s);
    }
    if (ie(a)) {
      const f = a.getTextContent().length, d = u ? c : l;
      d === 0 ? e.pop() : d !== f && ([a] = a.splitText(d), e[r] = a);
    }
    return e;
  }
  modify(e, n, r) {
    if (Tw(this, e, n, r)) return;
    const i = e === "move", o = gt(), s = yr(or(o));
    if (!s) return;
    const a = o._blockCursorElement, l = o._rootElement, c = this.focus.getNode();
    if (l === null || a === null || !X(c) || c.isInline() || c.canBeEmpty() || Vf(a, o, l), this.dirty) {
      let u = $s(o, this.anchor.key), f = $s(o, this.focus.key);
      this.anchor.type === "text" && (u = Ls(u)), this.focus.type === "text" && (f = Ls(f)), u && f && D0(s, u, this.anchor.offset, f, this.focus.offset);
    }
    if (function(u, f, d, h) {
      u.modify(f, d, h);
    }(s, e, n ? "backward" : "forward", r), s.rangeCount > 0) {
      const u = s.getRangeAt(0), f = this.anchor.getNode(), d = tn(f) ? f : sE(f);
      if (this.applyDOMRange(u), this.dirty = !0, !i) {
        const h = this.getNodes(), g = [];
        let w = !1;
        for (let v = 0; v < h.length; v++) {
          const _ = h[v];
          zf(_, d) ? g.push(_) : w = !0;
        }
        if (w && g.length > 0) if (n) {
          const v = g[0];
          X(v) ? v.selectStart() : v.getParentOrThrow().selectStart();
        } else {
          const v = g[g.length - 1];
          X(v) ? v.selectEnd() : v.getParentOrThrow().selectEnd();
        }
        s.anchorNode === u.startContainer && s.anchorOffset === u.startOffset || function(v) {
          const _ = v.focus, b = v.anchor, C = b.key, D = b.offset, R = b.type;
          b.set(_.key, _.offset, _.type, !0), _.set(C, D, R, !0);
        }(this);
      }
    }
    r === "lineboundary" && Tw(this, e, n, r, "decorators");
  }
  forwardDeletion(e, n, r) {
    if (!r && (e.type === "element" && X(n) && e.offset === n.getChildrenSize() || e.type === "text" && e.offset === n.getTextContentSize())) {
      const i = n.getParent(), o = n.getNextSibling() || (i === null ? null : i.getNextSibling());
      if (X(o) && o.isShadowRoot()) return !0;
    }
    return !1;
  }
  deleteCharacter(e) {
    const n = this.isCollapsed();
    if (this.isCollapsed()) {
      const r = this.anchor;
      let i = r.getNode();
      if (this.forwardDeletion(r, i, e)) return;
      const o = Rp(bi(r, e ? "previous" : "next"));
      if (o.getTextSlices().every((a) => a === null || a.distance === 0)) {
        let a = { type: "initial" };
        for (const l of o.iterNodeCarets("shadowRoot")) if (wr(l)) {
          if (!l.origin.isInline()) {
            if (l.origin.isShadowRoot()) {
              if (a.type === "merge-block") break;
              if (X(o.anchor.origin) && o.anchor.origin.isEmpty()) {
                const c = zr(l);
                xc(this, zi(c, c)), o.anchor.origin.remove();
              }
              return;
            }
            a.type !== "merge-next-block" && a.type !== "merge-block" || (a = { block: a.block, caret: l, type: "merge-block" });
          }
        } else {
          if (a.type === "merge-block") break;
          if ($o(l)) {
            if (X(l.origin)) {
              if (l.origin.isInline()) {
                if (!l.origin.isParentOf(o.anchor.origin)) break;
              } else a = { block: l.origin, type: "merge-next-block" };
              continue;
            }
            if (Xe(l.origin)) {
              if (!l.origin.isIsolated()) if (a.type === "merge-next-block" && (l.origin.isKeyboardSelectable() || !l.origin.isInline()) && X(o.anchor.origin) && o.anchor.origin.isEmpty()) {
                o.anchor.origin.remove();
                const c = A0();
                c.add(l.origin.getKey()), sn(c);
              } else l.origin.remove();
              return;
            }
            break;
          }
        }
        if (a.type === "merge-block") {
          const { caret: l, block: c } = a;
          return xc(this, zi(!l.origin.isEmpty() && c.isEmpty() ? Uu($t(c, l.direction)) : o.anchor, l)), this.removeText();
        }
      }
      const s = this.focus;
      if (this.modify("extend", e, "character"), this.isCollapsed()) {
        if (e && r.offset === 0 && xw(this, r.getNode())) return;
      } else {
        const a = s.type === "text" ? s.getNode() : null;
        if (i = r.type === "text" ? r.getNode() : null, a !== null && a.isSegmented()) {
          const l = s.offset, c = a.getTextContentSize();
          if (a.is(i) || e && l !== c || !e && l !== 0) return void Cw(a, e, l);
        } else if (i !== null && i.isSegmented()) {
          const l = r.offset, c = i.getTextContentSize();
          if (i.is(a) || e && l !== 0 || !e && l !== c) return void Cw(i, e, l);
        }
        (function(l, c) {
          const u = l.anchor, f = l.focus, d = u.getNode(), h = f.getNode();
          if (d === h && u.type === "text" && f.type === "text") {
            const g = u.offset, w = f.offset, v = g < w, _ = v ? g : w, b = v ? w : g, C = b - 1;
            _ !== C && function(D) {
              return !(G0(D) || qk(D));
            }(d.getTextContent().slice(_, b)) && (c ? f.set(f.key, C, f.type) : u.set(u.key, C, u.type));
          }
        })(this, e);
      }
    }
    if (this.removeText(), e && !n && this.isCollapsed() && this.anchor.type === "element" && this.anchor.offset === 0) {
      const r = this.anchor.getNode();
      r.isEmpty() && tn(r.getParent()) && r.getPreviousSibling() === null && xw(this, r);
    }
  }
  deleteLine(e) {
    this.isCollapsed() && this.modify("extend", e, "lineboundary"), this.isCollapsed() ? this.deleteCharacter(e) : this.removeText();
  }
  deleteWord(e) {
    if (this.isCollapsed()) {
      const n = this.anchor, r = n.getNode();
      if (this.forwardDeletion(n, r, e)) return;
      this.modify("extend", e, "word");
    }
    this.removeText();
  }
  isBackward() {
    return this.focus.isBefore(this.anchor);
  }
  getStartEndPoints() {
    return [this.anchor, this.focus];
  }
};
function bn(t) {
  return t instanceof C0;
}
function _w(t) {
  const e = t.offset;
  if (t.type === "text") return e;
  const n = t.getNode();
  return e === n.getChildrenSize() ? n.getTextContent().length : 0;
}
function Ff(t) {
  const e = t.getStartEndPoints();
  if (e === null) return [0, 0];
  const [n, r] = e;
  return n.type === "element" && r.type === "element" && n.key === r.key && n.offset === r.offset ? [0, 0] : [_w(n), _w(r)];
}
function xw(t, e) {
  for (let n = e; n; n = n.getParent()) {
    if (X(n)) {
      if (n.collapseAtStart(t)) return !0;
      if (Zr(n)) break;
    }
    if (n.getPreviousSibling()) break;
  }
  return !1;
}
const qk = (() => {
  try {
    const t = new RegExp("\\p{Emoji}", "u"), e = t.test.bind(t);
    if (e("❤️") && e("#️⃣") && e("👍")) return e;
  } catch {
  }
  return () => !1;
})();
function Cw(t, e, n) {
  const r = t, i = r.getTextContent().split(/(?=\s)/g), o = i.length;
  let s = 0, a = 0;
  for (let c = 0; c < o; c++) {
    const u = c === o - 1;
    if (a = s, s += i[c].length, e && s === n || s > n || u) {
      i.splice(c, 1), u && (a = void 0);
      break;
    }
  }
  const l = i.join("").trim();
  l === "" ? r.remove() : (r.setTextContent(l), r.select(a, a));
}
function kw(t, e, n, r) {
  let i, o = e;
  if (it(t)) {
    let s = !1;
    const a = t.childNodes, l = a.length, c = r._blockCursorElement;
    o === l && (s = !0, o = l - 1);
    let u = a[o], f = !1;
    if (u === c) u = a[o + 1], f = !0;
    else if (c !== null) {
      const d = c.parentNode;
      t === d && e > Array.prototype.indexOf.call(d.children, c) && o--;
    }
    if (i = hs(u), ie(i)) o = Bi(i, s ? "next" : "previous");
    else {
      let d = hs(t);
      if (d === null) return null;
      if (X(d)) {
        const h = r.getElementByKey(d.getKey());
        h === null && le(214), [d, o] = d.getDOMSlot(h).resolveChildIndex(d, h, t, e), X(d) || le(215), s && o >= d.getChildrenSize() && (o = Math.max(0, d.getChildrenSize() - 1));
        let w = d.getChildAtIndex(o);
        if (X(w) && function(v, _, b) {
          const C = v.getParent();
          return b === null || C === null || !C.canBeEmpty() || C !== b.getNode();
        }(w, 0, n)) {
          const v = s ? w.getLastDescendant() : w.getFirstDescendant();
          v === null ? d = w : (w = v, d = X(w) ? w : w.getParentOrThrow()), o = 0;
        }
        ie(w) ? (i = w, d = null, o = Bi(w, s ? "next" : "previous")) : w !== d && s && !f && (X(d) || le(216), o = Math.min(d.getChildrenSize(), o + 1));
      } else {
        const h = d.getIndexWithinParent();
        o = e === 0 && Xe(d) && hs(t) === d ? h : h + 1, d = d.getParentOrThrow();
      }
      if (X(d)) return On(d.__key, o, "element");
    }
  } else i = hs(t);
  return ie(i) ? On(i.__key, Bi(i, o, "clamp"), "text") : null;
}
function Ew(t, e, n) {
  const r = t.offset, i = t.getNode();
  if (r === 0) {
    const o = i.getPreviousSibling(), s = i.getParent();
    if (e) {
      if ((n || !e) && o === null && X(s) && s.isInline()) {
        const a = s.getPreviousSibling();
        ie(a) && t.set(a.__key, a.getTextContent().length, "text");
      }
    } else X(o) && !n && o.isInline() ? t.set(o.__key, o.getChildrenSize(), "element") : ie(o) && t.set(o.__key, o.getTextContent().length, "text");
  } else if (r === i.getTextContent().length) {
    const o = i.getNextSibling(), s = i.getParent();
    if (e && X(o) && o.isInline()) t.set(o.__key, 0, "element");
    else if ((n || e) && o === null && X(s) && s.isInline() && !s.canInsertTextAfter()) {
      const a = s.getNextSibling();
      ie(a) && t.set(a.__key, 0, "text");
    }
  }
}
function N0(t, e, n) {
  if (t.type === "text" && e.type === "text") {
    const r = t.isBefore(e), i = t.is(e);
    Ew(t, r, i), Ew(e, !r, i), i && e.set(t.key, t.offset, t.type);
    const o = gt();
    if (o.isComposing() && o._compositionKey !== t.key && Z(n)) {
      const s = n.anchor, a = n.focus;
      t.set(s.key, s.offset, s.type, !0), e.set(a.key, a.offset, a.type, !0);
    }
  }
}
function S0(t, e, n, r, i, o) {
  if (t === null || n === null || !Sl(i, t, n)) return null;
  const s = kw(t, e, Z(o) ? o.anchor : null, i);
  if (s === null) return null;
  const a = kw(n, r, Z(o) ? o.focus : null, i);
  if (a === null) return null;
  if (s.type === "element" && a.type === "element") {
    const l = hs(t), c = hs(n);
    if (Xe(l) && Xe(c)) return null;
  }
  return N0(s, a, o), [s, a];
}
function Bf(t) {
  return X(t) && !t.isInline();
}
function T0(t, e, n, r, i, o) {
  const s = Qi(), a = new El(On(t, e, i), On(n, r, o), 0, "");
  return a.dirty = !0, s._selection = a, a;
}
function Nl() {
  const t = On("root", 0, "element"), e = On("root", 0, "element");
  return new El(t, e, 0, "");
}
function A0() {
  return new C0(/* @__PURE__ */ new Set());
}
function gp(t, e, n, r) {
  const i = n._window;
  if (i === null) return null;
  const o = r || i.event, s = o ? o.type : void 0, a = s === "selectionchange", l = !Nf && (a || s === "beforeinput" || s === "compositionstart" || s === "compositionend" || s === "click" && o && o.detail === 3 || s === "drop" || s === void 0);
  let c, u, f, d;
  if (Z(t) && !l) return t.clone();
  if (e === null) return null;
  if (c = e.anchorNode, u = e.focusNode, f = e.anchorOffset, d = e.focusOffset, a && Z(t) && !Sl(n, c, u)) return t.clone();
  const h = S0(c, f, u, d, n, t);
  if (h === null) return null;
  const [g, w] = h;
  return new El(g, w, Z(t) ? t.format : 0, Z(t) ? t.style : "");
}
function oe() {
  return Qi()._selection;
}
function oa() {
  return gt()._editorState._selection;
}
function Vc(t, e, n, r = 1) {
  const i = t.anchor, o = t.focus, s = i.getNode(), a = o.getNode();
  if (!e.is(s) && !e.is(a)) return;
  const l = e.__key;
  if (t.isCollapsed()) {
    const c = i.offset;
    if (n <= c && r > 0 || n < c && r < 0) {
      const u = Math.max(0, c + r);
      i.set(l, u, "element"), o.set(l, u, "element"), Nw(t);
    }
  } else {
    const c = t.isBackward(), u = c ? o : i, f = u.getNode(), d = c ? i : o, h = d.getNode();
    if (e.is(f)) {
      const g = u.offset;
      (n <= g && r > 0 || n < g && r < 0) && u.set(l, Math.max(0, g + r), "element");
    }
    if (e.is(h)) {
      const g = d.offset;
      (n <= g && r > 0 || n < g && r < 0) && d.set(l, Math.max(0, g + r), "element");
    }
  }
  Nw(t);
}
function Nw(t) {
  const e = t.anchor, n = e.offset, r = t.focus, i = r.offset, o = e.getNode(), s = r.getNode();
  if (t.isCollapsed()) {
    if (!X(o)) return;
    const a = o.getChildrenSize(), l = n >= a, c = l ? o.getChildAtIndex(a - 1) : o.getChildAtIndex(n);
    if (ie(c)) {
      let u = 0;
      l && (u = c.getTextContentSize()), e.set(c.__key, u, "text"), r.set(c.__key, u, "text");
    }
  } else {
    if (X(o)) {
      const a = o.getChildrenSize(), l = n >= a, c = l ? o.getChildAtIndex(a - 1) : o.getChildAtIndex(n);
      if (ie(c)) {
        let u = 0;
        l && (u = c.getTextContentSize()), e.set(c.__key, u, "text");
      }
    }
    if (X(s)) {
      const a = s.getChildrenSize(), l = i >= a, c = l ? s.getChildAtIndex(a - 1) : s.getChildAtIndex(i);
      if (ie(c)) {
        let u = 0;
        l && (u = c.getTextContentSize()), r.set(c.__key, u, "text");
      }
    }
  }
}
function Hc(t, e, n, r, i) {
  let o = null, s = 0, a = null;
  r !== null ? (o = r.__key, ie(r) ? (s = r.getTextContentSize(), a = "text") : X(r) && (s = r.getChildrenSize(), a = "element")) : i !== null && (o = i.__key, ie(i) ? a = "text" : X(i) && (a = "element")), o !== null && a !== null ? t.set(o, s, a) : (s = e.getIndexWithinParent(), s === -1 && (s = n.getChildrenSize()), t.set(n.__key, s, "element"));
}
function Sw(t, e, n, r, i) {
  t.type === "text" ? t.set(n, t.offset + (e ? 0 : i), "text") : t.offset > r.getIndexWithinParent() && t.set(t.key, t.offset - 1, "element");
}
function D0(t, e, n, r, i) {
  try {
    t.setBaseAndExtent(e, n, r, i);
  } catch {
  }
}
function jk(t, e, n, r, i, o, s) {
  const a = r.anchorNode, l = r.focusNode, c = r.anchorOffset, u = r.focusOffset, f = document.activeElement;
  if (i.has(Kk) && f !== o || f !== null && Cp(f)) return;
  if (!Z(e)) return void (t !== null && Sl(n, a, l) && r.removeAllRanges());
  const d = e.anchor, h = e.focus, g = d.key, w = h.key, v = $s(n, g), _ = $s(n, w), b = d.offset, C = h.offset, D = e.format, R = e.style, N = e.isCollapsed();
  let L = v, M = _, O = !1;
  if (d.type === "text") {
    L = Ls(v);
    const T = d.getNode();
    O = T.getFormat() !== D || T.getStyle() !== R;
  } else Z(t) && t.anchor.type === "text" && (O = !0);
  var j, k, I, S, P;
  if (h.type === "text" && (M = Ls(_)), L !== null && M !== null && (N && (t === null || O || Z(t) && (t.format !== D || t.style !== R)) && (j = D, k = R, I = b, S = g, P = performance.now(), f0 = [j, k, I, S, P]), c !== b || u !== C || a !== L || l !== M || r.type === "Range" && N || (f !== null && o.contains(f) || o.focus({ preventScroll: !0 }), d.type === "element"))) {
    if (D0(r, L, b, M, C), !i.has(Gk) && e.isCollapsed() && o !== null && o === document.activeElement) {
      const T = Z(e) && e.anchor.type === "element" ? L.childNodes[b] || null : r.rangeCount > 0 ? r.getRangeAt(0) : null;
      if (T !== null) {
        let A;
        if (T instanceof Text) {
          const B = document.createRange();
          B.selectNode(T), A = B.getBoundingClientRect();
        } else A = T.getBoundingClientRect();
        (function(B, V, J) {
          const H = Z0(J), K = Ap(H);
          if (H === null || K === null) return;
          let { top: ne, bottom: re } = V, te = 0, Q = 0, ce = J;
          for (; ce !== null; ) {
            const pe = ce === H.body;
            if (pe) te = 0, Q = or(B).innerHeight;
            else {
              const ye = ce.getBoundingClientRect();
              te = ye.top, Q = ye.bottom;
            }
            let we = 0;
            if (ne < te ? we = -(te - ne) : re > Q && (we = re - Q), we !== 0) if (pe) K.scrollBy(0, we);
            else {
              const ye = ce.scrollTop;
              ce.scrollTop += we;
              const ve = ce.scrollTop - ye;
              ne -= ve, re -= ve;
            }
            if (pe) break;
            ce = Tl(ce);
          }
        })(n, A, o);
      }
    }
    Pf = !0;
  }
}
function Uk(t) {
  let e = oe() || oa();
  e === null && (e = Ve().selectEnd()), e.insertNodes(t);
}
function Bd(t) {
  let e = t;
  t.isCollapsed() || e.removeText();
  const n = oe();
  Z(n) && (e = n), Z(e) || le(161);
  const r = e.anchor;
  let i = r.getNode(), o = r.offset;
  for (; !nr(i); ) {
    const s = i;
    if ([i, o] = zk(i, o), s.is(i)) break;
  }
  return o;
}
function zk(t, e) {
  const n = t.getParent();
  if (!n) {
    const i = Jn();
    return Ve().append(i), i.select(), [Ve(), 0];
  }
  if (ie(t)) {
    const i = t.splitText(e);
    if (i.length === 0) return [n, t.getIndexWithinParent()];
    const o = e === 0 ? 0 : 1;
    return [n, i[0].getIndexWithinParent() + o];
  }
  if (!X(t) || e === 0) return [n, t.getIndexWithinParent()];
  const r = t.getChildAtIndex(e);
  if (r) {
    const i = new El(On(t.__key, e, "element"), On(t.__key, e, "element"), 0, ""), o = t.insertNewAfter(i);
    o && o.append(r, ...r.getNextSiblings());
  }
  return [n, t.getIndexWithinParent() + 1];
}
function Tw(t, e, n, r, i = "decorators-and-blocks") {
  if (e === "move" && r === "character" && !t.isCollapsed()) {
    const [u, f] = n === t.isBackward() ? [t.focus, t.anchor] : [t.anchor, t.focus];
    return f.set(u.key, u.offset, u.type), !0;
  }
  const o = bi(t.focus, n ? "previous" : "next"), s = r === "lineboundary", a = e === "move";
  let l = o, c = i === "decorators-and-blocks";
  if (!sv(l)) {
    for (const u of l) {
      c = !1;
      const { origin: f } = u;
      if (!Xe(f) || f.isIsolated() || (l = u, !s || !f.isInline())) break;
    }
    if (c) for (const u of Rp(o).iterNodeCarets(e === "extend" ? "shadowRoot" : "root")) {
      if (wr(u)) u.origin.isInline() || (l = u);
      else {
        if (X(u.origin)) continue;
        Xe(u.origin) && !u.origin.isInline() && (l = u);
      }
      break;
    }
  }
  if (l === o) return !1;
  if (a && !s && Xe(l.origin) && l.origin.isKeyboardSelectable()) {
    const u = A0();
    return u.add(l.origin.getKey()), sn(u), !0;
  }
  return l = zr(l), a && rl(t.anchor, l), rl(t.focus, l), c || !s;
}
let Ut = null, zt = null, Dn = !1, qd = !1, yc = 0;
const Aw = { characterData: !0, childList: !0, subtree: !0 };
function sa() {
  return Dn || Ut !== null && Ut._readOnly;
}
function Zt() {
  Dn && le(13);
}
function O0() {
  yc > 99 && le(14);
}
function Qi() {
  return Ut === null && le(195, M0()), Ut;
}
function gt() {
  return zt === null && le(196, M0()), zt;
}
function M0() {
  let t = 0;
  const e = /* @__PURE__ */ new Set(), n = Lu.version;
  if (typeof window < "u") for (const i of document.querySelectorAll("[contenteditable]")) {
    const o = $u(i);
    if (kp(o)) t++;
    else if (o) {
      let s = String(o.constructor.version || "<0.17.1");
      s === n && (s += " (separately built, likely a bundler configuration issue)"), e.add(s);
    }
  }
  let r = ` Detected on the page: ${t} compatible editor(s) with version ${n}`;
  return e.size && (r += ` and incompatible editors with versions ${Array.from(e).join(", ")}`), r;
}
function Vk() {
  return zt;
}
function Dw(t, e, n) {
  const r = e.__type, i = z0(t, r);
  let o = n.get(r);
  o === void 0 && (o = Array.from(i.transforms), n.set(r, o));
  const s = o.length;
  for (let a = 0; a < s && (o[a](e), e.isAttached()); a++) ;
}
function Ow(t, e) {
  return t !== void 0 && t.__key !== e && t.isAttached();
}
function I0(t, e) {
  if (!e) return;
  const n = t._updateTags;
  let r = e;
  Array.isArray(e) || (r = [e]);
  for (const i of r) n.add(i);
}
function R0(t) {
  return wp(t, gt()._nodes);
}
function wp(t, e) {
  const n = t.type, r = e.get(n);
  r === void 0 && le(17, n);
  const i = r.klass;
  t.type !== i.getType() && le(18, i.name);
  const o = i.importJSON(t), s = t.children;
  if (X(o) && Array.isArray(s)) for (let a = 0; a < s.length; a++) {
    const l = wp(s[a], e);
    o.append(l);
  }
  return o;
}
function Mw(t, e, n) {
  const r = Ut, i = Dn, o = zt;
  Ut = e, Dn = !0, zt = t;
  try {
    return n();
  } finally {
    Ut = r, Dn = i, zt = o;
  }
}
function di(t, e) {
  const n = t._pendingEditorState, r = t._rootElement, i = t._headless || r === null;
  if (n === null) return;
  const o = t._editorState, s = o._selection, a = n._selection, l = t._dirtyType !== Ro, c = Ut, u = Dn, f = zt, d = t._updating, h = t._observer;
  let g = null;
  if (t._pendingEditorState = null, t._editorState = n, !i && l && h !== null) {
    zt = t, Ut = n, Dn = !1, t._updating = !0;
    try {
      const N = t._dirtyType, L = t._dirtyElements, M = t._dirtyLeaves;
      h.disconnect(), g = _k(o, n, t, N, L, M);
    } catch (N) {
      if (N instanceof Error && t._onError(N), qd) throw N;
      return U0(t, null, r, n), Jy(t), t._dirtyType = Os, qd = !0, di(t, o), void (qd = !1);
    } finally {
      h.observe(r, Aw), t._updating = d, Ut = c, Dn = u, zt = f;
    }
  }
  n._readOnly || (n._readOnly = !0);
  const w = t._dirtyLeaves, v = t._dirtyElements, _ = t._normalizedNodes, b = t._updateTags, C = t._deferred;
  l && (t._dirtyType = Ro, t._cloneNotNeeded.clear(), t._dirtyLeaves = /* @__PURE__ */ new Set(), t._dirtyElements = /* @__PURE__ */ new Map(), t._normalizedNodes = /* @__PURE__ */ new Set(), t._updateTags = /* @__PURE__ */ new Set()), function(N, L) {
    const M = N._decorators;
    let O = N._pendingDecorators || M;
    const j = L._nodeMap;
    let k;
    for (k in O) j.has(k) || (O === M && (O = W0(N)), delete O[k]);
  }(t, n);
  const D = i ? null : yr(or(t));
  if (t._editable && D !== null && (l || a === null || a.dirty) && r !== null && !b.has(Jk)) {
    zt = t, Ut = n;
    try {
      if (h !== null && h.disconnect(), l || a === null || a.dirty) {
        const N = t._blockCursorElement;
        N !== null && Vf(N, t, r), jk(s, a, t, D, b, r);
      }
      (function(N, L, M) {
        let O = N._blockCursorElement;
        if (Z(M) && M.isCollapsed() && M.anchor.type === "element" && L.contains(document.activeElement)) {
          const j = M.anchor, k = j.getNode(), I = j.offset;
          let S = !1, P = null;
          if (I === k.getChildrenSize())
            Ud(k.getChildAtIndex(I - 1)) && (S = !0);
          else {
            const T = k.getChildAtIndex(I);
            if (T !== null && Ud(T)) {
              const A = T.getPreviousSibling();
              (A === null || Ud(A)) && (S = !0, P = N.getElementByKey(T.__key));
            }
          }
          if (S) {
            const T = N.getElementByKey(k.__key);
            return O === null && (N._blockCursorElement = O = function(A) {
              const B = A.theme, V = document.createElement("div");
              V.contentEditable = "false", V.setAttribute("data-lexical-cursor", "true");
              let J = B.blockCursor;
              if (J !== void 0) {
                if (typeof J == "string") {
                  const H = Pc(J);
                  J = B.blockCursor = H;
                }
                J !== void 0 && V.classList.add(...J);
              }
              return V;
            }(N._config)), L.style.caretColor = "transparent", void (P === null ? T.appendChild(O) : T.insertBefore(O, P));
          }
        }
        O !== null && Vf(O, N, L);
      })(t, r, a);
    } finally {
      h !== null && h.observe(r, Aw), zt = f, Ut = c;
    }
  }
  g !== null && function(N, L, M, O, j) {
    const k = Array.from(N._listeners.mutation), I = k.length;
    for (let S = 0; S < I; S++) {
      const [P, T] = k[S];
      for (const A of T) {
        const B = L.get(A);
        B !== void 0 && P(B, { dirtyLeaves: O, prevEditorState: j, updateTags: M });
      }
    }
  }(t, g, b, w, o), Z(a) || a === null || s !== null && s.is(a) || t.dispatchCommand(Xi, void 0);
  const R = t._pendingDecorators;
  R !== null && (t._decorators = R, t._pendingDecorators = null, Va("decorator", t, !0, R)), function(N, L, M) {
    const O = $w(L), j = $w(M);
    O !== j && Va("textcontent", N, !0, j);
  }(t, e || o, n), Va("update", t, !0, { dirtyElements: v, dirtyLeaves: w, editorState: n, mutatedNodes: g, normalizedNodes: _, prevEditorState: e || o, tags: b }), function(N, L) {
    if (N._deferred = [], L.length !== 0) {
      const M = N._updating;
      N._updating = !0;
      try {
        for (let O = 0; O < L.length; O++) L[O]();
      } finally {
        N._updating = M;
      }
    }
  }(t, C), function(N) {
    const L = N._updates;
    if (L.length !== 0) {
      const M = L.shift();
      if (M) {
        const [O, j] = M;
        Ru(N, O, j);
      }
    }
  }(t);
}
function Va(t, e, n, ...r) {
  const i = e._updating;
  e._updating = n;
  try {
    const o = Array.from(e._listeners[t]);
    for (let s = 0; s < o.length; s++) o[s].apply(null, r);
  } finally {
    e._updating = i;
  }
}
function Iw(t, e) {
  const n = t._updates;
  let r = e || !1;
  for (; n.length !== 0; ) {
    const i = n.shift();
    if (i) {
      const [o, s] = i, a = t._pendingEditorState;
      let l;
      s !== void 0 && (l = s.onUpdate, s.skipTransforms && (r = !0), s.discrete && (a === null && le(191), a._flushSync = !0), l && t._deferred.push(l), I0(t, s.tag)), a == null ? Ru(t, o, s) : o();
    }
  }
  return r;
}
function Ru(t, e, n) {
  const r = t._updateTags;
  let i, o = !1, s = !1;
  n !== void 0 && (i = n.onUpdate, I0(t, n.tag), o = n.skipTransforms || !1, s = n.discrete || !1), i && t._deferred.push(i);
  const a = t._editorState;
  let l = t._pendingEditorState, c = !1;
  (l === null || l._readOnly) && (l = t._pendingEditorState = L0(l || a), c = !0), l._flushSync = s;
  const u = Ut, f = Dn, d = zt, h = t._updating;
  Ut = l, Dn = !1, t._updating = !0, zt = t;
  const g = t._headless || t.getRootElement() === null;
  _p(null);
  try {
    c && (g ? a._selection !== null && (l._selection = a._selection.clone()) : l._selection = function(b, C) {
      const D = b.getEditorState()._selection, R = yr(or(b));
      return Z(D) || D == null ? gp(D, R, b, C) : D.clone();
    }(t, n && n.event || null));
    const v = t._compositionKey;
    e(), o = Iw(t, o), function(b, C) {
      const D = C.getEditorState()._selection, R = b._selection;
      if (Z(R)) {
        const N = R.anchor, L = R.focus;
        let M;
        if (N.type === "text" && (M = N.getNode(), M.selectionTransform(D, R)), L.type === "text") {
          const O = L.getNode();
          M !== O && O.selectionTransform(D, R);
        }
      }
    }(l, t), t._dirtyType !== Ro && (o ? function(b, C) {
      const D = C._dirtyLeaves, R = b._nodeMap;
      for (const N of D) {
        const L = R.get(N);
        ie(L) && L.isAttached() && L.isSimpleText() && !L.isUnmergeable() && cw(L);
      }
    }(l, t) : function(b, C) {
      const D = C._dirtyLeaves, R = C._dirtyElements, N = b._nodeMap, L = Ri(), M = /* @__PURE__ */ new Map();
      let O = D, j = O.size, k = R, I = k.size;
      for (; j > 0 || I > 0; ) {
        if (j > 0) {
          C._dirtyLeaves = /* @__PURE__ */ new Set();
          for (const S of O) {
            const P = N.get(S);
            ie(P) && P.isAttached() && P.isSimpleText() && !P.isUnmergeable() && cw(P), P !== void 0 && Ow(P, L) && Dw(C, P, M), D.add(S);
          }
          if (O = C._dirtyLeaves, j = O.size, j > 0) {
            yc++;
            continue;
          }
        }
        C._dirtyLeaves = /* @__PURE__ */ new Set(), C._dirtyElements = /* @__PURE__ */ new Map(), k.delete("root") && k.set("root", !0);
        for (const S of k) {
          const P = S[0], T = S[1];
          if (R.set(P, T), !T) continue;
          const A = N.get(P);
          A !== void 0 && Ow(A, L) && Dw(C, A, M);
        }
        O = C._dirtyLeaves, j = O.size, k = C._dirtyElements, I = k.size, yc++;
      }
      C._dirtyLeaves = D, C._dirtyElements = R;
    }(l, t), Iw(t), function(b, C, D, R) {
      const N = b._nodeMap, L = C._nodeMap, M = [];
      for (const [O] of R) {
        const j = L.get(O);
        j !== void 0 && (j.isAttached() || (X(j) && Wy(j, O, N, L, M, R), N.has(O) || R.delete(O), M.push(O)));
      }
      for (const O of M) L.delete(O);
      for (const O of D) {
        const j = L.get(O);
        j === void 0 || j.isAttached() || (N.has(O) || D.delete(O), L.delete(O));
      }
    }(a, l, t._dirtyLeaves, t._dirtyElements)), v !== t._compositionKey && (l._flushSync = !0);
    const _ = l._selection;
    if (Z(_)) {
      const b = l._nodeMap, C = _.anchor.key, D = _.focus.key;
      b.get(C) !== void 0 && b.get(D) !== void 0 || le(19);
    } else bn(_) && _._nodes.size === 0 && (l._selection = null);
  } catch (v) {
    return v instanceof Error && t._onError(v), t._pendingEditorState = a, t._dirtyType = Os, t._cloneNotNeeded.clear(), t._dirtyLeaves = /* @__PURE__ */ new Set(), t._dirtyElements.clear(), void di(t);
  } finally {
    Ut = u, Dn = f, zt = d, t._updating = h, yc = 0;
  }
  t._dirtyType !== Ro || t._deferred.length > 0 || function(v, _) {
    const b = _.getEditorState()._selection, C = v._selection;
    if (C !== null) {
      if (C.dirty || !C.is(b)) return !0;
    } else if (b !== null) return !0;
    return !1;
  }(l, t) ? l._flushSync ? (l._flushSync = !1, di(t)) : c && Zk(() => {
    di(t);
  }) : (l._flushSync = !1, c && (r.clear(), t._deferred = [], t._pendingEditorState = null));
}
function Wn(t, e, n) {
  zt === t && n === void 0 ? e() : Ru(t, e, n);
}
let Hk = class vc {
  constructor(e, n, r) {
    this.element = e, this.before = n || null, this.after = r || null;
  }
  withBefore(e) {
    return new vc(this.element, e, this.after);
  }
  withAfter(e) {
    return new vc(this.element, this.before, e);
  }
  withElement(e) {
    return this.element === e ? this : new vc(e, this.before, this.after);
  }
  insertChild(e) {
    const n = this.before || this.getManagedLineBreak();
    return n !== null && n.parentElement !== this.element && le(222), this.element.insertBefore(e, n), this;
  }
  removeChild(e) {
    return e.parentElement !== this.element && le(223), this.element.removeChild(e), this;
  }
  replaceChild(e, n) {
    return n.parentElement !== this.element && le(224), this.element.replaceChild(e, n), this;
  }
  getFirstChild() {
    const e = this.after ? this.after.nextSibling : this.element.firstChild;
    return e === this.before || e === this.getManagedLineBreak() ? null : e;
  }
  getManagedLineBreak() {
    return this.element.__lexicalLineBreak || null;
  }
  setManagedLineBreak(e) {
    if (e === null) this.removeManagedLineBreak();
    else {
      const n = e === "decorator" && (Ds || Xa);
      this.insertManagedLineBreak(n);
    }
  }
  removeManagedLineBreak() {
    const e = this.getManagedLineBreak();
    if (e) {
      const n = this.element, r = e.nodeName === "IMG" ? e.nextSibling : null;
      r && n.removeChild(r), n.removeChild(e), n.__lexicalLineBreak = void 0;
    }
  }
  insertManagedLineBreak(e) {
    const n = this.getManagedLineBreak();
    if (n) {
      if (e === (n.nodeName === "IMG")) return;
      this.removeManagedLineBreak();
    }
    const r = this.element, i = this.before, o = document.createElement("br");
    if (r.insertBefore(o, i), e) {
      const s = document.createElement("img");
      s.setAttribute("data-lexical-linebreak", "true"), s.style.cssText = "display: inline !important; border: 0px !important; margin: 0px !important;", s.alt = "", r.insertBefore(s, o), r.__lexicalLineBreak = s;
    } else r.__lexicalLineBreak = o;
  }
  getFirstChildOffset() {
    let e = 0;
    for (let n = this.after; n !== null; n = n.previousSibling) e++;
    return e;
  }
  resolveChildIndex(e, n, r, i) {
    if (r === this.element) {
      const l = this.getFirstChildOffset();
      return [e, Math.min(l + e.getChildrenSize(), Math.max(l, i))];
    }
    const o = Rw(n, r);
    o.push(i);
    const s = Rw(n, this.element);
    let a = e.getIndexWithinParent();
    for (let l = 0; l < s.length; l++) {
      const c = o[l], u = s[l];
      if (c === void 0 || c < u) break;
      if (c > u) {
        a += 1;
        break;
      }
    }
    return [e.getParentOrThrow(), a];
  }
};
function Rw(t, e) {
  const n = [];
  let r = e;
  for (; r !== t && r !== null; r = r.parentNode) {
    let i = 0;
    for (let o = r.previousSibling; o !== null; o = o.previousSibling) i++;
    n.push(i);
  }
  return r !== t && le(225), n.reverse();
}
let pn = class extends ia {
  constructor(e) {
    super(e), this.__first = null, this.__last = null, this.__size = 0, this.__format = 0, this.__style = "", this.__indent = 0, this.__dir = null, this.__textFormat = 0, this.__textStyle = "";
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__key === e.__key && (this.__first = e.__first, this.__last = e.__last, this.__size = e.__size), this.__indent = e.__indent, this.__format = e.__format, this.__style = e.__style, this.__dir = e.__dir, this.__textFormat = e.__textFormat, this.__textStyle = e.__textStyle;
  }
  getFormat() {
    return this.getLatest().__format;
  }
  getFormatType() {
    const e = this.getFormat();
    return ak[e] || "";
  }
  getStyle() {
    return this.getLatest().__style;
  }
  getIndent() {
    return this.getLatest().__indent;
  }
  getChildren() {
    const e = [];
    let n = this.getFirstChild();
    for (; n !== null; ) e.push(n), n = n.getNextSibling();
    return e;
  }
  getChildrenKeys() {
    const e = [];
    let n = this.getFirstChild();
    for (; n !== null; ) e.push(n.__key), n = n.getNextSibling();
    return e;
  }
  getChildrenSize() {
    return this.getLatest().__size;
  }
  isEmpty() {
    return this.getChildrenSize() === 0;
  }
  isDirty() {
    const e = gt()._dirtyElements;
    return e !== null && e.has(this.__key);
  }
  isLastChild() {
    const e = this.getLatest(), n = this.getParentOrThrow().getLastChild();
    return n !== null && n.is(e);
  }
  getAllTextNodes() {
    const e = [];
    let n = this.getFirstChild();
    for (; n !== null; ) {
      if (ie(n) && e.push(n), X(n)) {
        const r = n.getAllTextNodes();
        e.push(...r);
      }
      n = n.getNextSibling();
    }
    return e;
  }
  getFirstDescendant() {
    let e = this.getFirstChild();
    for (; X(e); ) {
      const n = e.getFirstChild();
      if (n === null) break;
      e = n;
    }
    return e;
  }
  getLastDescendant() {
    let e = this.getLastChild();
    for (; X(e); ) {
      const n = e.getLastChild();
      if (n === null) break;
      e = n;
    }
    return e;
  }
  getDescendantByIndex(e) {
    const n = this.getChildren(), r = n.length;
    if (e >= r) {
      const o = n[r - 1];
      return X(o) && o.getLastDescendant() || o || null;
    }
    const i = n[e];
    return X(i) && i.getFirstDescendant() || i || null;
  }
  getFirstChild() {
    const e = this.getLatest().__first;
    return e === null ? null : Oe(e);
  }
  getFirstChildOrThrow() {
    const e = this.getFirstChild();
    return e === null && le(45, this.__key), e;
  }
  getLastChild() {
    const e = this.getLatest().__last;
    return e === null ? null : Oe(e);
  }
  getLastChildOrThrow() {
    const e = this.getLastChild();
    return e === null && le(96, this.__key), e;
  }
  getChildAtIndex(e) {
    const n = this.getChildrenSize();
    let r, i;
    if (e < n / 2) {
      for (r = this.getFirstChild(), i = 0; r !== null && i <= e; ) {
        if (i === e) return r;
        r = r.getNextSibling(), i++;
      }
      return null;
    }
    for (r = this.getLastChild(), i = n - 1; r !== null && i >= e; ) {
      if (i === e) return r;
      r = r.getPreviousSibling(), i--;
    }
    return null;
  }
  getTextContent() {
    let e = "";
    const n = this.getChildren(), r = n.length;
    for (let i = 0; i < r; i++) {
      const o = n[i];
      e += o.getTextContent(), X(o) && i !== r - 1 && !o.isInline() && (e += mi);
    }
    return e;
  }
  getTextContentSize() {
    let e = 0;
    const n = this.getChildren(), r = n.length;
    for (let i = 0; i < r; i++) {
      const o = n[i];
      e += o.getTextContentSize(), X(o) && i !== r - 1 && !o.isInline() && (e += mi.length);
    }
    return e;
  }
  getDirection() {
    return this.getLatest().__dir;
  }
  getTextFormat() {
    return this.getLatest().__textFormat;
  }
  hasFormat(e) {
    if (e !== "") {
      const n = tw[e];
      return !!(this.getFormat() & n);
    }
    return !1;
  }
  hasTextFormat(e) {
    const n = qi[e];
    return !!(this.getTextFormat() & n);
  }
  getFormatFlags(e, n) {
    return Wc(this.getLatest().__textFormat, e, n);
  }
  getTextStyle() {
    return this.getLatest().__textStyle;
  }
  select(e, n) {
    Zt();
    const r = oe();
    let i = e, o = n;
    const s = this.getChildrenSize();
    if (!this.canBeEmpty()) {
      if (e === 0 && n === 0) {
        const l = this.getFirstChild();
        if (ie(l) || X(l)) return l.select(0, 0);
      } else if (!(e !== void 0 && e !== s || n !== void 0 && n !== s)) {
        const l = this.getLastChild();
        if (ie(l) || X(l)) return l.select();
      }
    }
    i === void 0 && (i = s), o === void 0 && (o = s);
    const a = this.__key;
    return Z(r) ? (r.anchor.set(a, i, "element"), r.focus.set(a, o, "element"), r.dirty = !0, r) : T0(a, i, a, o, "element", "element");
  }
  selectStart() {
    const e = this.getFirstDescendant();
    return e ? e.selectStart() : this.select();
  }
  selectEnd() {
    const e = this.getLastDescendant();
    return e ? e.selectEnd() : this.select();
  }
  clear() {
    const e = this.getWritable();
    return this.getChildren().forEach((n) => n.remove()), e;
  }
  append(...e) {
    return this.splice(this.getChildrenSize(), 0, e);
  }
  setDirection(e) {
    const n = this.getWritable();
    return n.__dir = e, n;
  }
  setFormat(e) {
    return this.getWritable().__format = e !== "" ? tw[e] : 0, this;
  }
  setStyle(e) {
    return this.getWritable().__style = e || "", this;
  }
  setTextFormat(e) {
    const n = this.getWritable();
    return n.__textFormat = e, n;
  }
  setTextStyle(e) {
    const n = this.getWritable();
    return n.__textStyle = e, n;
  }
  setIndent(e) {
    return this.getWritable().__indent = e, this;
  }
  splice(e, n, r) {
    const i = r.length, o = this.getChildrenSize(), s = this.getWritable();
    e + n <= o || le(226, String(e), String(n), String(o));
    const a = s.__key, l = [], c = [], u = this.getChildAtIndex(e + n);
    let f = null, d = o - n + i;
    if (e !== 0) if (e === o) f = this.getLastChild();
    else {
      const g = this.getChildAtIndex(e);
      g !== null && (f = g.getPreviousSibling());
    }
    if (n > 0) {
      let g = f === null ? this.getFirstChild() : f.getNextSibling();
      for (let w = 0; w < n; w++) {
        g === null && le(100);
        const v = g.getNextSibling(), _ = g.__key;
        Eo(g.getWritable()), c.push(_), g = v;
      }
    }
    let h = f;
    for (let g = 0; g < i; g++) {
      const w = r[g];
      h !== null && w.is(h) && (f = h = h.getPreviousSibling());
      const v = w.getWritable();
      v.__parent === a && d--, Eo(v);
      const _ = w.__key;
      if (h === null) s.__first = _, v.__prev = null;
      else {
        const b = h.getWritable();
        b.__next = _, v.__prev = b.__key;
      }
      w.__key === a && le(76), v.__parent = a, l.push(_), h = w;
    }
    if (e + n === o)
      h !== null && (h.getWritable().__next = null, s.__last = h.__key);
    else if (u !== null) {
      const g = u.getWritable();
      if (h !== null) {
        const w = h.getWritable();
        g.__prev = h.__key, w.__next = u.__key;
      } else g.__prev = null;
    }
    if (s.__size = d, c.length) {
      const g = oe();
      if (Z(g)) {
        const w = new Set(c), v = new Set(l), { anchor: _, focus: b } = g;
        Pw(_, w, v) && Hc(_, _.getNode(), this, f, u), Pw(b, w, v) && Hc(b, b.getNode(), this, f, u), d !== 0 || this.canBeEmpty() || Zr(this) || this.remove();
      }
    }
    return s;
  }
  getDOMSlot(e) {
    return new Hk(e);
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    if (it(n)) {
      const r = this.getIndent();
      r > 0 && (n.style.paddingInlineStart = 40 * r + "px");
      const i = this.getDirection();
      i && (n.dir = i);
    }
    return { element: n };
  }
  exportJSON() {
    const e = { children: [], direction: this.getDirection(), format: this.getFormatType(), indent: this.getIndent(), ...super.exportJSON() }, n = this.getTextFormat(), r = this.getTextStyle();
    return n !== 0 && (e.textFormat = n), r !== "" && (e.textStyle = r), e;
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setFormat(e.format).setIndent(e.indent).setDirection(e.direction).setTextFormat(e.textFormat || 0).setTextStyle(e.textStyle || "");
  }
  insertNewAfter(e, n) {
    return null;
  }
  canIndent() {
    return !0;
  }
  collapseAtStart(e) {
    return !1;
  }
  excludeFromCopy(e) {
    return !1;
  }
  canReplaceWith(e) {
    return !0;
  }
  canInsertAfter(e) {
    return !0;
  }
  canBeEmpty() {
    return !0;
  }
  canInsertTextBefore() {
    return !0;
  }
  canInsertTextAfter() {
    return !0;
  }
  isInline() {
    return !1;
  }
  isShadowRoot() {
    return !1;
  }
  canMergeWith(e) {
    return !1;
  }
  extractWithChild(e, n, r) {
    return !1;
  }
  canMergeWhenEmpty() {
    return !1;
  }
  reconcileObservedMutation(e, n) {
    const r = this.getDOMSlot(e);
    let i = r.getFirstChild();
    for (let o = this.getFirstChild(); o; o = o.getNextSibling()) {
      const s = n.getElementByKey(o.getKey());
      s !== null && (i == null ? (r.insertChild(s), i = s) : i !== s && r.replaceChild(s, i), i = i.nextSibling);
    }
  }
};
function X(t) {
  return t instanceof pn;
}
function Pw(t, e, n) {
  let r = t.getNode();
  for (; r; ) {
    const i = r.__key;
    if (e.has(i) && !n.has(i)) return !0;
    r = r.getParent();
  }
  return !1;
}
let Zi = class extends ia {
  decorate(e, n) {
    le(47);
  }
  isIsolated() {
    return !1;
  }
  isInline() {
    return !0;
  }
  isKeyboardSelectable() {
    return !0;
  }
};
function Xe(t) {
  return t instanceof Zi;
}
let mp = class P0 extends pn {
  static getType() {
    return "root";
  }
  static clone() {
    return new P0();
  }
  constructor() {
    super("root"), this.__cachedText = null;
  }
  getTopLevelElementOrThrow() {
    le(51);
  }
  getTextContent() {
    const e = this.__cachedText;
    return !sa() && gt()._dirtyType !== Ro || e === null ? super.getTextContent() : e;
  }
  remove() {
    le(52);
  }
  replace(e) {
    le(53);
  }
  insertBefore(e) {
    le(54);
  }
  insertAfter(e) {
    le(55);
  }
  updateDOM(e, n) {
    return !1;
  }
  splice(e, n, r) {
    for (const i of r) X(i) || Xe(i) || le(282);
    return super.splice(e, n, r);
  }
  static importJSON(e) {
    return Ve().updateFromJSON(e);
  }
  collapseAtStart() {
    return !0;
  }
};
function tn(t) {
  return t instanceof mp;
}
function L0(t) {
  return new F0(new Map(t._nodeMap));
}
function bp() {
  return new F0(/* @__PURE__ */ new Map([["root", new mp()]]));
}
function $0(t) {
  const e = t.exportJSON(), n = t.constructor;
  if (e.type !== n.getType() && le(130, n.name), X(t)) {
    const r = e.children;
    Array.isArray(r) || le(59, n.name);
    const i = t.getChildren();
    for (let o = 0; o < i.length; o++) {
      const s = $0(i[o]);
      r.push(s);
    }
  }
  return e;
}
let F0 = class B0 {
  constructor(e, n) {
    this._nodeMap = e, this._selection = n || null, this._flushSync = !1, this._readOnly = !1;
  }
  isEmpty() {
    return this._nodeMap.size === 1 && this._selection === null;
  }
  read(e, n) {
    return Mw(n && n.editor || null, this, e);
  }
  clone(e) {
    const n = new B0(this._nodeMap, e === void 0 ? this._selection : e);
    return n._readOnly = !0, n;
  }
  toJSON() {
    return Mw(null, this, () => ({ root: $0(Ve()) }));
  }
};
const qf = "historic", Wk = "history-push", Co = "history-merge", q0 = "paste", Kk = "collaboration", Gk = "skip-scroll-into-view", Jk = "skip-dom-selection";
let yp = class extends pn {
  static getType() {
    return "artificial";
  }
  createDOM(e) {
    return document.createElement("div");
  }
}, aa = class j0 extends pn {
  static getType() {
    return "paragraph";
  }
  static clone(e) {
    return new j0(e.__key);
  }
  createDOM(e) {
    const n = document.createElement("p"), r = ys(e.theme, "paragraph");
    return r !== void 0 && n.classList.add(...r), n;
  }
  updateDOM(e, n, r) {
    return !1;
  }
  static importDOM() {
    return { p: (e) => ({ conversion: Xk, priority: 0 }) };
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    if (it(n)) {
      this.isEmpty() && n.append(document.createElement("br"));
      const r = this.getFormatType();
      r && (n.style.textAlign = r);
    }
    return { element: n };
  }
  static importJSON(e) {
    return Jn().updateFromJSON(e);
  }
  exportJSON() {
    return { ...super.exportJSON(), textFormat: this.getTextFormat(), textStyle: this.getTextStyle() };
  }
  insertNewAfter(e, n) {
    const r = Jn();
    r.setTextFormat(e.format), r.setTextStyle(e.style);
    const i = this.getDirection();
    return r.setDirection(i), r.setFormat(this.getFormatType()), r.setStyle(this.getStyle()), this.insertAfter(r, n), r;
  }
  collapseAtStart() {
    const e = this.getChildren();
    if (e.length === 0 || ie(e[0]) && e[0].getTextContent().trim() === "") {
      if (this.getNextSibling() !== null) return this.selectNext(), this.remove(), !0;
      if (this.getPreviousSibling() !== null) return this.selectPrevious(), this.remove(), !0;
    }
    return !1;
  }
};
function Xk(t) {
  const e = Jn();
  return t.style && (e.setFormat(t.style.textAlign), uE(t, e)), { node: e };
}
function Jn() {
  return at(new aa());
}
function vp(t) {
  return t instanceof aa;
}
const ke = 0, Yo = 1, _c = 2, Pu = 3, bs = 4;
function U0(t, e, n, r) {
  const i = t._keyToDOMMap;
  i.clear(), t._editorState = bp(), t._pendingEditorState = r, t._compositionKey = null, t._dirtyType = Ro, t._cloneNotNeeded.clear(), t._dirtyLeaves = /* @__PURE__ */ new Set(), t._dirtyElements.clear(), t._normalizedNodes = /* @__PURE__ */ new Set(), t._updateTags = /* @__PURE__ */ new Set(), t._updates = [], t._blockCursorElement = null;
  const o = t._observer;
  o !== null && (o.disconnect(), t._observer = null), e !== null && (e.textContent = ""), n !== null && (n.textContent = "", i.set("root", n));
}
function Yk(t) {
  const e = t || {}, n = Vk(), r = e.theme || {}, i = t === void 0 ? n : e.parentEditor || null, o = e.disableEvents || !1, s = bp(), a = e.namespace || (i !== null ? i._config.namespace : J0()), l = e.editorState, c = [mp, Gn, xl, Cl, aa, yp, ...e.nodes || []], { onError: u, html: f } = e, d = e.editable === void 0 || e.editable;
  let h;
  if (t === void 0 && n !== null) h = n._nodes;
  else {
    h = /* @__PURE__ */ new Map();
    for (let w = 0; w < c.length; w++) {
      let v = c[w], _ = null, b = null;
      if (typeof v != "function") {
        const L = v;
        v = L.replace, _ = L.with, b = L.withKlass || null;
      }
      const { ownNodeConfig: C } = Op(v), D = v.getType(), R = v.transform(), N = /* @__PURE__ */ new Set();
      C && C.$transform && N.add(C.$transform), R !== null && N.add(R), h.set(D, { exportDOM: f && f.export ? f.export.get(v) : void 0, klass: v, replace: _, replaceWithKlass: b, sharedNodeState: wk(c[w]), transforms: N });
    }
  }
  const g = new Lu(s, i, h, { disableEvents: o, namespace: a, theme: r }, u || console.error, function(w, v) {
    const _ = /* @__PURE__ */ new Map(), b = /* @__PURE__ */ new Set(), C = (D) => {
      Object.keys(D).forEach((R) => {
        let N = _.get(R);
        N === void 0 && (N = [], _.set(R, N)), N.push(D[R]);
      });
    };
    return w.forEach((D) => {
      const R = D.klass.importDOM;
      if (R == null || b.has(R)) return;
      b.add(R);
      const N = R.call(D.klass);
      N !== null && C(N);
    }), v && C(v), _;
  }(h, f ? f.import : void 0), d, t);
  return l !== void 0 && (g._pendingEditorState = l, g._dirtyType = Os), g;
}
let Lu = class {
  constructor(e, n, r, i, o, s, a, l) {
    this._createEditorArgs = l, this._parentEditor = n, this._rootElement = null, this._editorState = e, this._pendingEditorState = null, this._compositionKey = null, this._deferred = [], this._keyToDOMMap = /* @__PURE__ */ new Map(), this._updates = [], this._updating = !1, this._listeners = { decorator: /* @__PURE__ */ new Set(), editable: /* @__PURE__ */ new Set(), mutation: /* @__PURE__ */ new Map(), root: /* @__PURE__ */ new Set(), textcontent: /* @__PURE__ */ new Set(), update: /* @__PURE__ */ new Set() }, this._commands = /* @__PURE__ */ new Map(), this._config = i, this._nodes = r, this._decorators = {}, this._pendingDecorators = null, this._dirtyType = Ro, this._cloneNotNeeded = /* @__PURE__ */ new Set(), this._dirtyLeaves = /* @__PURE__ */ new Set(), this._dirtyElements = /* @__PURE__ */ new Map(), this._normalizedNodes = /* @__PURE__ */ new Set(), this._updateTags = /* @__PURE__ */ new Set(), this._observer = null, this._key = J0(), this._onError = o, this._htmlConversions = s, this._editable = a, this._headless = n !== null && n._headless, this._window = null, this._blockCursorElement = null;
  }
  isComposing() {
    return this._compositionKey != null;
  }
  registerUpdateListener(e) {
    const n = this._listeners.update;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerEditableListener(e) {
    const n = this._listeners.editable;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerDecoratorListener(e) {
    const n = this._listeners.decorator;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerTextContentListener(e) {
    const n = this._listeners.textcontent;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerRootListener(e) {
    const n = this._listeners.root;
    return e(this._rootElement, null), n.add(e), () => {
      e(null, this._rootElement), n.delete(e);
    };
  }
  registerCommand(e, n, r) {
    r === void 0 && le(35);
    const i = this._commands;
    i.has(e) || i.set(e, [/* @__PURE__ */ new Set(), /* @__PURE__ */ new Set(), /* @__PURE__ */ new Set(), /* @__PURE__ */ new Set(), /* @__PURE__ */ new Set()]);
    const o = i.get(e);
    o === void 0 && le(36, String(e));
    const s = o[r];
    return s.add(n), () => {
      s.delete(n), o.every((a) => a.size === 0) && i.delete(e);
    };
  }
  registerMutationListener(e, n, r) {
    const i = this.resolveRegisteredNodeAfterReplacements(this.getRegisteredNode(e)).klass, o = this._listeners.mutation;
    let s = o.get(n);
    s === void 0 && (s = /* @__PURE__ */ new Set(), o.set(n, s)), s.add(i);
    const a = r && r.skipInitialization;
    return a !== void 0 && a || this.initializeMutationListener(n, i), () => {
      s.delete(i), s.size === 0 && o.delete(n);
    };
  }
  getRegisteredNode(e) {
    const n = this._nodes.get(e.getType());
    return n === void 0 && le(37, e.name), n;
  }
  resolveRegisteredNodeAfterReplacements(e) {
    for (; e.replaceWithKlass; ) e = this.getRegisteredNode(e.replaceWithKlass);
    return e;
  }
  initializeMutationListener(e, n) {
    const r = this._editorState, i = Vw(r).get(n.getType());
    if (!i) return;
    const o = /* @__PURE__ */ new Map();
    for (const s of i.keys()) o.set(s, "created");
    o.size > 0 && e(o, { dirtyLeaves: /* @__PURE__ */ new Set(), prevEditorState: r, updateTags: /* @__PURE__ */ new Set(["registerMutationListener"]) });
  }
  registerNodeTransformToKlass(e, n) {
    const r = this.getRegisteredNode(e);
    return r.transforms.add(n), r;
  }
  registerNodeTransform(e, n) {
    const r = this.registerNodeTransformToKlass(e, n), i = [r], o = r.replaceWithKlass;
    if (o != null) {
      const s = this.registerNodeTransformToKlass(o, n);
      i.push(s);
    }
    return function(s, a) {
      const l = Vw(s.getEditorState()), c = [];
      for (const u of a) {
        const f = l.get(u);
        f && c.push(f);
      }
      c.length !== 0 && s.update(() => {
        for (const u of c) for (const f of u.keys()) {
          const d = Oe(f);
          d && d.markDirty();
        }
      }, s._pendingEditorState === null ? { tag: Co } : void 0);
    }(this, i.map((s) => s.klass.getType())), () => {
      i.forEach((s) => s.transforms.delete(n));
    };
  }
  hasNode(e) {
    return this._nodes.has(e.getType());
  }
  hasNodes(e) {
    return e.every(this.hasNode.bind(this));
  }
  dispatchCommand(e, n) {
    return ge(this, e, n);
  }
  getDecorators() {
    return this._decorators;
  }
  getRootElement() {
    return this._rootElement;
  }
  getKey() {
    return this._key;
  }
  setRootElement(e) {
    const n = this._rootElement;
    if (e !== n) {
      const r = ys(this._config.theme, "root"), i = this._pendingEditorState || this._editorState;
      if (this._rootElement = e, U0(this, n, e, i), n !== null && (this._config.disableEvents || Mk(n), r != null && n.classList.remove(...r)), e !== null) {
        const o = Ap(e), s = e.style;
        s.userSelect = "text", s.whiteSpace = "pre-wrap", s.wordBreak = "break-word", e.setAttribute("data-lexical-editor", "true"), this._window = o, this._dirtyType = Os, Jy(this), this._updateTags.add(Co), di(this), this._config.disableEvents || function(a, l) {
          const c = a.ownerDocument, u = zc.get(c);
          (u === void 0 || u < 1) && c.addEventListener("selectionchange", m0), zc.set(c, (u || 0) + 1), a.__lexicalEditor = l;
          const f = w0(a);
          for (let d = 0; d < Rf.length; d++) {
            const [h, g] = Rf[d], w = typeof g == "function" ? (v) => {
              ww(v) || (gw(v), (l.isEditable() || h === "click") && g(v, l));
            } : (v) => {
              if (ww(v)) return;
              gw(v);
              const _ = l.isEditable();
              switch (h) {
                case "cut":
                  return _ && ge(l, Xo, v);
                case "copy":
                  return ge(l, Yi, v);
                case "paste":
                  return _ && ge(l, Jo, v);
                case "dragstart":
                  return _ && ge(l, fp, v);
                case "dragover":
                  return _ && ge(l, l0, v);
                case "dragend":
                  return _ && ge(l, Tk, v);
                case "focus":
                  return _ && ge(l, Ak, v);
                case "blur":
                  return _ && ge(l, Dk, v);
                case "drop":
                  return _ && ge(l, Iu, v);
              }
            };
            a.addEventListener(h, w), f.push(() => {
              a.removeEventListener(h, w);
            });
          }
        }(e, this), r != null && e.classList.add(...r);
      } else this._window = null, this._updateTags.add(Co), di(this);
      Va("root", this, !1, e, n);
    }
  }
  getElementByKey(e) {
    return this._keyToDOMMap.get(e) || null;
  }
  getEditorState() {
    return this._editorState;
  }
  setEditorState(e, n) {
    e.isEmpty() && le(38);
    let r = e;
    r._readOnly && (r = L0(e), r._selection = e._selection ? e._selection.clone() : null), Gy(this);
    const i = this._pendingEditorState, o = this._updateTags, s = n !== void 0 ? n.tag : null;
    i === null || i.isEmpty() || (s != null && o.add(s), di(this)), this._pendingEditorState = r, this._dirtyType = Os, this._dirtyElements.set("root", !1), this._compositionKey = null, s != null && o.add(s), this._updating || di(this);
  }
  parseEditorState(e, n) {
    return function(r, i, o) {
      const s = bp(), a = Ut, l = Dn, c = zt, u = i._dirtyElements, f = i._dirtyLeaves, d = i._cloneNotNeeded, h = i._dirtyType;
      i._dirtyElements = /* @__PURE__ */ new Map(), i._dirtyLeaves = /* @__PURE__ */ new Set(), i._cloneNotNeeded = /* @__PURE__ */ new Set(), i._dirtyType = 0, Ut = s, Dn = !1, zt = i, _p(null);
      try {
        const g = i._nodes;
        wp(r.root, g), o && o(), s._readOnly = !0;
      } catch (g) {
        g instanceof Error && i._onError(g);
      } finally {
        i._dirtyElements = u, i._dirtyLeaves = f, i._cloneNotNeeded = d, i._dirtyType = h, Ut = a, Dn = l, zt = c;
      }
      return s;
    }(typeof e == "string" ? JSON.parse(e) : e, this, n);
  }
  read(e) {
    return di(this), this.getEditorState().read(e, { editor: this });
  }
  update(e, n) {
    (function(r, i, o) {
      r._updating ? r._updates.push([i, o]) : Ru(r, i, o);
    })(this, e, n);
  }
  focus(e, n = {}) {
    const r = this._rootElement;
    r !== null && (r.setAttribute("autocapitalize", "off"), Wn(this, () => {
      const i = oe(), o = Ve();
      i !== null ? i.dirty || sn(i.clone()) : o.getChildrenSize() !== 0 && (n.defaultSelection === "rootStart" ? o.selectStart() : o.selectEnd()), ev("focus"), iE(() => {
        r.removeAttribute("autocapitalize"), e && e();
      });
    }), this._pendingEditorState === null && r.removeAttribute("autocapitalize"));
  }
  blur() {
    const e = this._rootElement;
    e !== null && e.blur();
    const n = yr(this._window);
    n !== null && n.removeAllRanges();
  }
  isEditable() {
    return this._editable;
  }
  setEditable(e) {
    this._editable !== e && (this._editable = e, Va("editable", this, !0, e));
  }
  toJSON() {
    return { editorState: this._editorState.toJSON() };
  }
};
Lu.version = "0.34.0+prod.esm";
let jf = null;
function _p(t) {
  jf = t;
}
let Qk = 1;
function z0(t, e) {
  const n = xp(t, e);
  return n === void 0 && le(30, e), n;
}
function xp(t, e) {
  return t._nodes.get(e);
}
const Zk = typeof queueMicrotask == "function" ? queueMicrotask : (t) => {
  Promise.resolve().then(t);
};
function Lw(t) {
  return Xe(Ui(t));
}
function Cp(t) {
  const e = document.activeElement;
  if (!it(e)) return !1;
  const n = e.nodeName;
  return Xe(Ui(t)) && (n === "INPUT" || n === "TEXTAREA" || e.contentEditable === "true" && $u(e) == null);
}
function Sl(t, e, n) {
  const r = t.getRootElement();
  try {
    return r !== null && r.contains(e) && r.contains(n) && e !== null && !Cp(e) && V0(e) === t;
  } catch {
    return !1;
  }
}
function kp(t) {
  return t instanceof Lu;
}
function V0(t) {
  let e = t;
  for (; e != null; ) {
    const n = $u(e);
    if (kp(n)) return n;
    e = Tl(e);
  }
  return null;
}
function $u(t) {
  return t ? t.__lexicalEditor : null;
}
function ko(t) {
  return x0(t) || t.isToken();
}
function li(t) {
  return ko(t) || t.isSegmented();
}
function ki(t) {
  return Qo(t) && t.nodeType === XC;
}
function eE(t) {
  return Qo(t) && t.nodeType === YC;
}
function Ls(t) {
  let e = t;
  for (; e != null; ) {
    if (ki(e)) return e;
    e = e.firstChild;
  }
  return null;
}
function Wc(t, e, n) {
  const r = qi[e];
  if (n !== null && (t & r) == (n & r)) return t;
  let i = t ^ r;
  return e === "subscript" ? i &= -65 : e === "superscript" ? i &= -33 : e === "lowercase" ? (i &= -513, i &= -1025) : e === "uppercase" ? (i &= -257, i &= -1025) : e === "capitalize" && (i &= -257, i &= -513), i;
}
function tE(t, e) {
  const n = function() {
    const s = jf;
    return jf = null, s;
  }();
  if ((e = e || n && n.__key) != null) return void (t.__key = e);
  Zt(), O0();
  const r = gt(), i = Qi(), o = "" + Qk++;
  i._nodeMap.set(o, t), X(t) ? r._dirtyElements.set(o, !0) : r._dirtyLeaves.add(o), r._cloneNotNeeded.add(o), r._dirtyType = zy, t.__key = o;
}
function Eo(t) {
  const e = t.getParent();
  if (e !== null) {
    const n = t.getWritable(), r = e.getWritable(), i = t.getPreviousSibling(), o = t.getNextSibling(), s = o !== null ? o.__key : null, a = i !== null ? i.__key : null, l = i !== null ? i.getWritable() : null, c = o !== null ? o.getWritable() : null;
    i === null && (r.__first = s), o === null && (r.__last = a), l !== null && (l.__next = s), c !== null && (c.__prev = a), n.__prev = null, n.__next = null, n.__parent = null, r.__size--;
  }
}
function Kc(t) {
  O0();
  const e = t.getLatest(), n = e.__parent, r = Qi(), i = gt(), o = r._nodeMap, s = i._dirtyElements;
  n !== null && function(l, c, u) {
    let f = l;
    for (; f !== null; ) {
      if (u.has(f)) return;
      const d = c.get(f);
      if (d === void 0) break;
      u.set(f, !1), f = d.__parent;
    }
  }(n, o, s);
  const a = e.__key;
  i._dirtyType = zy, X(t) ? s.set(a, !0) : i._dirtyLeaves.add(a);
}
function en(t) {
  Zt();
  const e = gt(), n = e._compositionKey;
  if (t !== n) {
    if (e._compositionKey = t, n !== null) {
      const r = Oe(n);
      r !== null && r.getWritable();
    }
    if (t !== null) {
      const r = Oe(t);
      r !== null && r.getWritable();
    }
  }
}
function Ri() {
  return sa() ? null : gt()._compositionKey;
}
function Oe(t, e) {
  const n = (e || Qi())._nodeMap.get(t);
  return n === void 0 ? null : n;
}
function H0(t, e) {
  const n = Fu(t, gt());
  return n !== void 0 ? Oe(n, e) : null;
}
function Fu(t, e) {
  return t[`__lexicalKey_${e._key}`];
}
function Ui(t, e) {
  let n = t;
  for (; n != null; ) {
    const r = H0(n, e);
    if (r !== null) return r;
    n = Tl(n);
  }
  return null;
}
function W0(t) {
  const e = t._decorators, n = Object.assign({}, e);
  return t._pendingDecorators = n, n;
}
function $w(t) {
  return t.read(() => Ve().getTextContent());
}
function Ve() {
  return K0(Qi());
}
function K0(t) {
  return t._nodeMap.get("root");
}
function sn(t) {
  Zt();
  const e = Qi();
  t !== null && (t.dirty = !0, t.setCachedNodes(null)), e._selection = t;
}
function hs(t) {
  const e = gt(), n = function(r, i) {
    let o = r;
    for (; o != null; ) {
      const s = Fu(o, i);
      if (s !== void 0) return s;
      o = Tl(o);
    }
    return null;
  }(t, e);
  return n === null ? t === e.getRootElement() ? Oe("root") : null : Oe(n);
}
function G0(t) {
  return /[\uD800-\uDBFF][\uDC00-\uDFFF]/g.test(t);
}
function Ep(t) {
  const e = [];
  let n = t;
  for (; n !== null; ) e.push(n), n = n._parentEditor;
  return e;
}
function J0() {
  return Math.random().toString(36).replace(/[^a-z]+/g, "").substring(0, 5);
}
function X0(t) {
  return ki(t) ? t.nodeValue : null;
}
function Np(t, e, n) {
  const r = yr(or(e));
  if (r === null) return;
  const i = r.anchorNode;
  let { anchorOffset: o, focusOffset: s } = r;
  if (i !== null) {
    let a = X0(i);
    const l = Ui(i);
    if (a !== null && ie(l)) {
      if (a === Du && n) {
        const c = n.length;
        a = n, o = c, s = c;
      }
      a !== null && Sp(l, a, o, s, t);
    }
  }
}
function Sp(t, e, n, r, i) {
  let o = t;
  if (o.isAttached() && (i || !o.isDirty())) {
    const s = o.isComposing();
    let a = e;
    (s || i) && e[e.length - 1] === Du && (a = e.slice(0, -1));
    const l = o.getTextContent();
    if (i || a !== l) {
      if (a === "") {
        if (en(null), Xa || Ds || Rc) o.remove();
        else {
          const w = gt();
          setTimeout(() => {
            w.update(() => {
              o.isAttached() && o.remove();
            });
          }, 20);
        }
        return;
      }
      const c = o.getParent(), u = oa(), f = o.getTextContentSize(), d = Ri(), h = o.getKey();
      if (o.isToken() || d !== null && h === d && !s || Z(u) && (c !== null && !c.canInsertTextBefore() && u.anchor.offset === 0 || u.anchor.key === t.__key && u.anchor.offset === 0 && !o.canInsertTextBefore() && !s || u.focus.key === t.__key && u.focus.offset === f && !o.canInsertTextAfter() && !s)) return void o.markDirty();
      const g = oe();
      if (!Z(g) || n === null || r === null) return void Fw(o, a, g);
      if (g.setTextNodeRange(o, n, o, r), o.isSegmented()) {
        const w = Ie(o.getTextContent());
        o.replace(w), o = w;
      }
      Fw(o, a, g);
    }
  }
}
function Fw(t, e, n) {
  if (t.setTextContent(e), Z(n)) {
    const r = t.getKey();
    for (const i of ["anchor", "focus"]) {
      const o = n[i];
      o.type === "text" && o.key === r && (o.offset = Bi(t, o.offset, "clamp"));
    }
  }
}
function ec(t, e, n) {
  const r = e[n] || !1;
  return r === "any" || r === t[n];
}
function nE(t, e) {
  return ec(t, e, "altKey") && ec(t, e, "ctrlKey") && ec(t, e, "shiftKey") && ec(t, e, "metaKey");
}
function et(t, e, n) {
  return nE(t, n) && t.key.toLowerCase() === e.toLowerCase();
}
const ai = { ctrlKey: !Br, metaKey: Br }, Bw = { altKey: Br, ctrlKey: !Br };
function qw(t) {
  return t.key === "Backspace";
}
function jw(t) {
  return et(t, "a", ai);
}
function Y0(t) {
  const e = Ve();
  if (Z(t)) {
    const n = t.anchor, r = t.focus, i = n.getNode().getTopLevelElementOrThrow().getParentOrThrow();
    return n.set(i.getKey(), 0, "element"), r.set(i.getKey(), i.getChildrenSize(), "element"), Ya(t), t;
  }
  {
    const n = e.select(0, e.getChildrenSize());
    return sn(Ya(n)), n;
  }
}
function ys(t, e) {
  t.__lexicalClassNameCache === void 0 && (t.__lexicalClassNameCache = {});
  const n = t.__lexicalClassNameCache, r = n[e];
  if (r !== void 0) return r;
  const i = t[e];
  if (typeof i == "string") {
    const o = Pc(i);
    return n[e] = o, o;
  }
  return i;
}
function Tp(t, e, n, r, i) {
  if (n.size === 0) return;
  const o = r.__type, s = r.__key, a = e.get(o);
  a === void 0 && le(33, o);
  const l = a.klass;
  let c = t.get(l);
  c === void 0 && (c = /* @__PURE__ */ new Map(), t.set(l, c));
  const u = c.get(s), f = u === "destroyed" && i === "created";
  (u === void 0 || f) && c.set(s, f ? "updated" : i);
}
function Uw(t, e, n) {
  const r = t.getParent();
  let i = n, o = t;
  return r !== null && (e && n === 0 ? (i = o.getIndexWithinParent(), o = r) : e || n !== o.getChildrenSize() || (i = o.getIndexWithinParent() + 1, o = r)), o.getChildAtIndex(e ? i - 1 : i);
}
function Uf(t, e) {
  const n = t.offset;
  if (t.type === "element")
    return Uw(t.getNode(), e, n);
  {
    const r = t.getNode();
    if (e && n === 0 || !e && n === r.getTextContentSize()) {
      const i = e ? r.getPreviousSibling() : r.getNextSibling();
      return i === null ? Uw(r.getParentOrThrow(), e, r.getIndexWithinParent() + (e ? 0 : 1)) : i;
    }
  }
  return null;
}
function Q0(t) {
  const e = or(t).event, n = e && e.inputType;
  return n === "insertFromPaste" || n === "insertFromPasteAsQuotation";
}
function ge(t, e, n) {
  return function(r, i, o) {
    const s = Ep(r);
    for (let a = 4; a >= 0; a--) for (let l = 0; l < s.length; l++) {
      const c = s[l], u = c._commands.get(i);
      if (u !== void 0) {
        const f = u[a];
        if (f !== void 0) {
          const d = Array.from(f), h = d.length;
          let g = !1;
          if (Wn(c, () => {
            for (let w = 0; w < h; w++) if (d[w](o, r)) return void (g = !0);
          }), g) return g;
        }
      }
    }
    return !1;
  }(t, e, n);
}
function Bu(t) {
  return !tn(t) && !t.isLastChild() && !t.isInline();
}
function $s(t, e) {
  const n = t._keyToDOMMap.get(e);
  return n === void 0 && le(75, e), n;
}
function Tl(t) {
  const e = t.assignedSlot || t.parentElement;
  return Hf(e) ? e.host : e;
}
function Z0(t) {
  return eE(t) ? t : it(t) ? t.ownerDocument : null;
}
function rE(t) {
  return gt()._updateTags.has(t);
}
function ev(t) {
  Zt(), gt()._updateTags.add(t);
}
function iE(t) {
  Zt(), gt()._deferred.push(t);
}
function zf(t, e) {
  let n = t.getParent();
  for (; n !== null; ) {
    if (n.is(e)) return !0;
    n = n.getParent();
  }
  return !1;
}
function Ap(t) {
  const e = Z0(t);
  return e ? e.defaultView : null;
}
function or(t) {
  const e = t._window;
  return e === null && le(78), e;
}
function oE(t) {
  return X(t) && t.isInline() || Xe(t) && t.isInline();
}
function sE(t) {
  let e = t.getParentOrThrow();
  for (; e !== null; ) {
    if (Zr(e)) return e;
    e = e.getParentOrThrow();
  }
  return e;
}
function Zr(t) {
  return tn(t) || X(t) && t.isShadowRoot();
}
function at(t) {
  const e = gt(), n = t.getType(), r = xp(e, n);
  r === void 0 && le(200, t.constructor.name, n);
  const { replace: i, replaceWithKlass: o } = r;
  if (i !== null) {
    const s = i(t), a = s.constructor;
    return o !== null ? s instanceof o || le(201, o.name, o.getType(), a.name, a.getType(), t.constructor.name, n) : s instanceof t.constructor && a !== t.constructor || le(202, a.name, a.getType(), t.constructor.name, n), s.__key === t.__key && le(203, t.constructor.name, n, a.name, a.getType()), s;
  }
  return t;
}
function jd(t, e) {
  !tn(t.getParent()) || X(e) || Xe(e) || le(99);
}
function aE(t) {
  const e = Oe(t);
  return e === null && le(63, t), e;
}
function Ud(t) {
  return (Xe(t) || X(t) && !t.canBeEmpty()) && !t.isInline();
}
function Vf(t, e, n) {
  n.style.removeProperty("caret-color"), e._blockCursorElement = null;
  const r = t.parentElement;
  r !== null && r.removeChild(t);
}
function yr(t) {
  return Sr ? (t || window).getSelection() : null;
}
function lE(t) {
  const e = Ap(t);
  return e ? e.getSelection() : null;
}
function tv(t) {
  return it(t) && t.tagName === "A";
}
function it(t) {
  return Qo(t) && t.nodeType === JC;
}
function Qo(t) {
  return typeof t == "object" && t !== null && "nodeType" in t && typeof t.nodeType == "number";
}
function Hf(t) {
  return Qo(t) && t.nodeType === QC;
}
function Wf(t) {
  const e = new RegExp(/^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|mark|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var|#text)$/, "i");
  return t.nodeName.match(e) !== null;
}
function Gc(t) {
  const e = new RegExp(/^(address|article|aside|blockquote|canvas|dd|div|dl|dt|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|header|hr|li|main|nav|noscript|ol|p|pre|section|table|td|tfoot|ul|video)$/, "i");
  return t.nodeName.match(e) !== null;
}
function nr(t) {
  if (Xe(t) && !t.isInline()) return !0;
  if (!X(t) || Zr(t)) return !1;
  const e = t.getFirstChild(), n = e === null || xo(e) || ie(e) || e.isInline();
  return !t.isInline() && t.canBeEmpty() !== !1 && n;
}
function zd(t, e) {
  let n = t;
  for (; n !== null && n.getParent() !== null && !e(n); ) n = n.getParentOrThrow();
  return e(n) ? n : null;
}
function qu() {
  return gt();
}
const zw = /* @__PURE__ */ new WeakMap(), cE = /* @__PURE__ */ new Map();
function Vw(t) {
  if (!t._readOnly && t.isEmpty()) return cE;
  t._readOnly || le(192);
  let e = zw.get(t);
  return e || (e = function(n) {
    const r = /* @__PURE__ */ new Map();
    for (const [i, o] of n._nodeMap) {
      const s = o.__type;
      let a = r.get(s);
      a || (a = /* @__PURE__ */ new Map(), r.set(s, a)), a.set(i, o);
    }
    return r;
  }(t), zw.set(t, e)), e;
}
function Dp(t) {
  const e = t.constructor.clone(t);
  return e.afterCloneFrom(t), e;
}
function uE(t, e) {
  const n = parseInt(t.style.paddingInlineStart, 10) || 0, r = Math.round(n / 40);
  e.setIndent(r);
}
function dE(t) {
  t.__lexicalUnmanaged = !0;
}
function fE(t) {
  return t.__lexicalUnmanaged === !0;
}
function Na(t, e) {
  return function(n, r) {
    return Object.prototype.hasOwnProperty.call(n, r);
  }(t, e) && t[e] !== ia[e];
}
function Op(t) {
  const e = nw in t.prototype ? t.prototype[nw]() : void 0, n = /* @__PURE__ */ function(s) {
    return s === Zi || s === pn || s === ia;
  }(t), r = !n && Na(t, "getType") ? t.getType() : void 0;
  let i, o = r;
  if (e) if (r) i = e[r];
  else for (const [s, a] of Object.entries(e)) o = s, i = a;
  if (!n && o && (Na(t, "getType") || (t.getType = () => o), Na(t, "clone") || (t.clone = (s) => (_p(s), new t())), Na(t, "importJSON") || (t.importJSON = i && i.$importJSON || ((s) => new t().updateFromJSON(s))), !Na(t, "importDOM") && i)) {
    const { importDOM: s } = i;
    s && (t.importDOM = () => s);
  }
  return { ownNodeConfig: i, ownNodeType: o };
}
const hE = { next: "previous", previous: "next" };
let Mp = class {
  constructor(e) {
    this.origin = e;
  }
  [Symbol.iterator]() {
    return ju({ hasNext: $o, initial: this.getAdjacentCaret(), map: (e) => e, step: (e) => e.getAdjacentCaret() });
  }
  getAdjacentCaret() {
    return $t(this.getNodeAtCaret(), this.direction);
  }
  getSiblingCaret() {
    return $t(this.origin, this.direction);
  }
  remove() {
    const e = this.getNodeAtCaret();
    return e && e.remove(), this;
  }
  replaceOrInsert(e, n) {
    const r = this.getNodeAtCaret();
    return e.is(this.origin) || e.is(r) || (r === null ? this.insert(e) : r.replace(e, n)), this;
  }
  splice(e, n, r = "next") {
    const i = r === this.direction ? n : Array.from(n).reverse();
    let o = this;
    const s = this.getParentAtCaret(), a = /* @__PURE__ */ new Map();
    for (let l = o.getAdjacentCaret(); l !== null && a.size < e; l = l.getAdjacentCaret()) {
      const c = l.origin.getWritable();
      a.set(c.getKey(), c);
    }
    for (const l of i) {
      if (a.size > 0) {
        const c = o.getNodeAtCaret();
        if (c) {
          if (a.delete(c.getKey()), a.delete(l.getKey()), !(c.is(l) || o.origin.is(l))) {
            const u = l.getParent();
            u && u.is(s) && l.remove(), c.replace(l);
          }
        } else c === null && le(263, Array.from(a).join(" "));
      } else o.insert(l);
      o = $t(l, this.direction);
    }
    for (const l of a.values()) l.remove();
    return this;
  }
}, Kf = class nv extends Mp {
  constructor() {
    super(...arguments);
    Zn(this, "type", "child");
  }
  getLatest() {
    const n = this.origin.getLatest();
    return n === this.origin ? this : vr(n, this.direction);
  }
  getParentCaret(n = "root") {
    return $t(Ip(this.getParentAtCaret(), n), this.direction);
  }
  getFlipped() {
    const n = la(this.direction);
    return $t(this.getNodeAtCaret(), n) || vr(this.origin, n);
  }
  getParentAtCaret() {
    return this.origin;
  }
  getChildCaret() {
    return this;
  }
  isSameNodeCaret(n) {
    return n instanceof nv && this.direction === n.direction && this.origin.is(n.origin);
  }
  isSamePointCaret(n) {
    return this.isSameNodeCaret(n);
  }
};
const pE = { root: tn, shadowRoot: Zr };
function la(t) {
  return hE[t];
}
function Ip(t, e = "root") {
  return pE[e](t) ? null : t;
}
let Jc = class Gf extends Mp {
  constructor() {
    super(...arguments);
    Zn(this, "type", "sibling");
  }
  getLatest() {
    const n = this.origin.getLatest();
    return n === this.origin ? this : $t(n, this.direction);
  }
  getSiblingCaret() {
    return this;
  }
  getParentAtCaret() {
    return this.origin.getParent();
  }
  getChildCaret() {
    return X(this.origin) ? vr(this.origin, this.direction) : null;
  }
  getParentCaret(n = "root") {
    return $t(Ip(this.getParentAtCaret(), n), this.direction);
  }
  getFlipped() {
    const n = la(this.direction);
    return $t(this.getNodeAtCaret(), n) || vr(this.origin.getParentOrThrow(), n);
  }
  isSamePointCaret(n) {
    return n instanceof Gf && this.direction === n.direction && this.origin.is(n.origin);
  }
  isSameNodeCaret(n) {
    return (n instanceof Gf || n instanceof Xc) && this.direction === n.direction && this.origin.is(n.origin);
  }
}, Xc = class Jf extends Mp {
  constructor(n, r) {
    super(n);
    Zn(this, "type", "text");
    this.offset = r;
  }
  getLatest() {
    const n = this.origin.getLatest();
    return n === this.origin ? this : Fo(n, this.direction, this.offset);
  }
  getParentAtCaret() {
    return this.origin.getParent();
  }
  getChildCaret() {
    return null;
  }
  getParentCaret(n = "root") {
    return $t(Ip(this.getParentAtCaret(), n), this.direction);
  }
  getFlipped() {
    return Fo(this.origin, la(this.direction), this.offset);
  }
  isSamePointCaret(n) {
    return n instanceof Jf && this.direction === n.direction && this.origin.is(n.origin) && this.offset === n.offset;
  }
  isSameNodeCaret(n) {
    return (n instanceof Jc || n instanceof Jf) && this.direction === n.direction && this.origin.is(n.origin);
  }
  getSiblingCaret() {
    return $t(this.origin, this.direction);
  }
};
function Fi(t) {
  return t instanceof Xc;
}
function $o(t) {
  return t instanceof Jc;
}
function wr(t) {
  return t instanceof Kf;
}
const gE = { next: class extends Xc {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "next");
  }
  getNodeAtCaret() {
    return this.origin.getNextSibling();
  }
  insert(e) {
    return this.origin.insertAfter(e), this;
  }
}, previous: class extends Xc {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "previous");
  }
  getNodeAtCaret() {
    return this.origin.getPreviousSibling();
  }
  insert(e) {
    return this.origin.insertBefore(e), this;
  }
} }, wE = { next: class extends Jc {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "next");
  }
  getNodeAtCaret() {
    return this.origin.getNextSibling();
  }
  insert(e) {
    return this.origin.insertAfter(e), this;
  }
}, previous: class extends Jc {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "previous");
  }
  getNodeAtCaret() {
    return this.origin.getPreviousSibling();
  }
  insert(e) {
    return this.origin.insertBefore(e), this;
  }
} }, mE = { next: class extends Kf {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "next");
  }
  getNodeAtCaret() {
    return this.origin.getFirstChild();
  }
  insert(e) {
    return this.origin.splice(0, 0, [e]), this;
  }
}, previous: class extends Kf {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "previous");
  }
  getNodeAtCaret() {
    return this.origin.getLastChild();
  }
  insert(e) {
    return this.origin.splice(this.origin.getChildrenSize(), 0, [e]), this;
  }
} };
function $t(t, e) {
  return t ? new wE[e](t) : null;
}
function Fo(t, e, n) {
  return t ? new gE[e](t, Bi(t, n)) : null;
}
function Bi(t, e, n = "error") {
  const r = t.getTextContentSize();
  let i = e === "next" ? r : e === "previous" ? 0 : e;
  return (i < 0 || i > r) && (n !== "clamp" && function(o, ...s) {
    const a = new URL("https://lexical.dev/docs/error"), l = new URLSearchParams();
    l.append("code", o);
    for (const c of s) l.append("v", c);
    a.search = l.toString(), console.warn(`Minified Lexical warning #${o}; visit ${a.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
  }(284, String(e), String(r), t.getKey()), i = i < 0 ? 0 : r), i;
}
function Hw(t, e) {
  return new vE(t, e);
}
function vr(t, e) {
  return X(t) ? new mE[e](t) : null;
}
function bE(t) {
  return t && t.getChildCaret() || t;
}
function nl(t) {
  return t && bE(t.getAdjacentCaret());
}
let yE = class rv {
  constructor(e, n, r) {
    Zn(this, "type", "node-caret-range");
    this.anchor = e, this.focus = n, this.direction = r;
  }
  getLatest() {
    const e = this.anchor.getLatest(), n = this.focus.getLatest();
    return e === this.anchor && n === this.focus ? this : new rv(e, n, this.direction);
  }
  isCollapsed() {
    return this.anchor.isSamePointCaret(this.focus);
  }
  getTextSlices() {
    const e = (i) => {
      const o = this[i].getLatest();
      return Fi(o) ? function(s, a) {
        const { direction: l, origin: c } = s, u = Bi(c, a === "focus" ? la(l) : l);
        return Hw(s, u - s.offset);
      }(o, i) : null;
    }, n = e("anchor"), r = e("focus");
    if (n && r) {
      const { caret: i } = n, { caret: o } = r;
      if (i.isSameNodeCaret(o)) return [Hw(i, o.offset - i.offset), null];
    }
    return [n, r];
  }
  iterNodeCarets(e = "root") {
    const n = Fi(this.anchor) ? this.anchor.getSiblingCaret() : this.anchor.getLatest(), r = this.focus.getLatest(), i = Fi(r), o = (s) => s.isSameNodeCaret(r) ? null : nl(s) || s.getParentCaret(e);
    return ju({ hasNext: (s) => s !== null && !(i && r.isSameNodeCaret(s)), initial: n.isSameNodeCaret(r) ? null : o(n), map: (s) => s, step: o });
  }
  [Symbol.iterator]() {
    return this.iterNodeCarets("root");
  }
}, vE = class {
  constructor(e, n) {
    Zn(this, "type", "slice");
    this.caret = e, this.distance = n;
  }
  getSliceIndices() {
    const { distance: e, caret: { offset: n } } = this, r = n + e;
    return r < n ? [r, n] : [n, r];
  }
  getTextContent() {
    const [e, n] = this.getSliceIndices();
    return this.caret.origin.getTextContent().slice(e, n);
  }
  getTextContentSize() {
    return Math.abs(this.distance);
  }
  removeTextSlice() {
    const { caret: { origin: e, direction: n } } = this, [r, i] = this.getSliceIndices(), o = e.getTextContent();
    return Fo(e.setTextContent(o.slice(0, r) + o.slice(i)), n, r);
  }
};
function Rp(t) {
  return zi(t, $t(Ve(), t.direction));
}
function _E(t) {
  return zi(t, t);
}
function zi(t, e) {
  return t.direction !== e.direction && le(265), new yE(t, e, t.direction);
}
function ju(t) {
  const { initial: e, hasNext: n, step: r, map: i } = t;
  let o = e;
  return { [Symbol.iterator]() {
    return this;
  }, next() {
    if (!n(o)) return { done: !0, value: void 0 };
    const s = { done: !1, value: i(o) };
    return o = r(o), s;
  } };
}
function iv(t, e) {
  const n = Ha(t.origin, e.origin);
  switch (n === null && le(275, t.origin.getKey(), e.origin.getKey()), n.type) {
    case "same": {
      const r = t.type === "text", i = e.type === "text";
      return r && i ? function(o, s) {
        return Math.sign(o - s);
      }(t.offset, e.offset) : t.type === e.type ? 0 : r ? -1 : i ? 1 : t.type === "child" ? -1 : 1;
    }
    case "ancestor":
      return t.type === "child" ? -1 : 1;
    case "descendant":
      return e.type === "child" ? 1 : -1;
    case "branch":
      return ov(n);
  }
}
function ov(t) {
  const { a: e, b: n } = t, r = e.__key, i = n.__key;
  let o = e, s = n;
  for (; o && s; o = o.getNextSibling(), s = s.getNextSibling()) {
    if (o.__key === i) return -1;
    if (s.__key === r) return 1;
  }
  return o === null ? 1 : -1;
}
function tc(t, e) {
  return e.is(t);
}
function Ww(t) {
  return X(t) ? [t.getLatest(), null] : [t.getParent(), t.getLatest()];
}
function Ha(t, e) {
  if (t.is(e)) return { commonAncestor: t, type: "same" };
  const n = /* @__PURE__ */ new Map();
  for (let [r, i] = Ww(t); r; i = r, r = r.getParent()) n.set(r, i);
  for (let [r, i] = Ww(e); r; i = r, r = r.getParent()) {
    const o = n.get(r);
    if (o !== void 0) return o === null ? (tc(t, r) || le(276), { commonAncestor: r, type: "ancestor" }) : i === null ? (tc(e, r) || le(277), { commonAncestor: r, type: "descendant" }) : ((X(o) || tc(t, o)) && (X(i) || tc(e, i)) && r.is(o.getParent()) && r.is(i.getParent()) || le(278), { a: o, b: i, commonAncestor: r, type: "branch" });
  }
  return null;
}
function bi(t, e) {
  const { type: n, key: r, offset: i } = t, o = aE(t.key);
  return n === "text" ? (ie(o) || le(266, o.getType(), r), Fo(o, e, i)) : (X(o) || le(267, o.getType(), r), kE(o, t.offset, e));
}
function rl(t, e) {
  const { origin: n, direction: r } = e, i = r === "next";
  Fi(e) ? t.set(n.getKey(), e.offset, "text") : $o(e) ? ie(n) ? t.set(n.getKey(), Bi(n, r), "text") : t.set(n.getParentOrThrow().getKey(), n.getIndexWithinParent() + (i ? 1 : 0), "element") : (wr(e) && X(n) || le(268), t.set(n.getKey(), i ? 0 : n.getChildrenSize(), "element"));
}
function xE(t) {
  const e = oe(), n = Z(e) ? e : Nl();
  return xc(n, t), sn(n), n;
}
function xc(t, e) {
  rl(t.anchor, e.anchor), rl(t.focus, e.focus);
}
function Kw(t) {
  const { anchor: e, focus: n } = t, r = bi(e, "next"), i = bi(n, "next"), o = iv(r, i) <= 0 ? "next" : "previous";
  return zi(Fs(r, o), Fs(i, o));
}
function Uu(t) {
  const { direction: e, origin: n } = t, r = $t(n, la(e)).getNodeAtCaret();
  return r ? $t(r, e) : vr(n.getParentOrThrow(), e);
}
function Gw(t, e = "root") {
  const n = [t];
  for (let r = wr(t) ? t.getParentCaret(e) : t.getSiblingCaret(); r !== null; r = r.getParentCaret(e)) n.push(Uu(r));
  return n;
}
function Vd(t) {
  return !!t && t.origin.isAttached();
}
function CE(t, e = "removeEmptySlices") {
  if (t.isCollapsed()) return t;
  const n = "root", r = "next";
  let i = e;
  const o = av(t, r), s = Gw(o.anchor, n), a = Gw(o.focus.getFlipped(), n), l = /* @__PURE__ */ new Set(), c = [];
  for (const g of o.iterNodeCarets(n)) if (wr(g)) l.add(g.origin.getKey());
  else if ($o(g)) {
    const { origin: w } = g;
    X(w) && !l.has(w.getKey()) || c.push(w);
  }
  for (const g of c) g.remove();
  for (const g of o.getTextSlices()) {
    if (!g) continue;
    const { origin: w } = g.caret, v = w.getTextContentSize(), _ = Uu($t(w, r)), b = w.getMode();
    if (Math.abs(g.distance) === v && i === "removeEmptySlices" || b === "token" && g.distance !== 0) _.remove();
    else if (g.distance !== 0) {
      i = "removeEmptySlices";
      let C = g.removeTextSlice();
      const D = g.caret.origin;
      if (b === "segmented") {
        const R = C.origin, N = Ie(R.getTextContent()).setStyle(R.getStyle()).setFormat(R.getFormat());
        _.replaceOrInsert(N), C = Fo(N, r, C.offset);
      }
      D.is(s[0].origin) && (s[0] = C), D.is(a[0].origin) && (a[0] = C.getFlipped());
    }
  }
  let u, f;
  for (const g of s) if (Vd(g)) {
    u = zr(g);
    break;
  }
  for (const g of a) if (Vd(g)) {
    f = zr(g);
    break;
  }
  const d = function(g, w, v) {
    if (!g || !w) return null;
    const _ = g.getParentAtCaret(), b = w.getParentAtCaret();
    if (!_ || !b) return null;
    const C = _.getParents().reverse();
    C.push(_);
    const D = b.getParents().reverse();
    D.push(b);
    const R = Math.min(C.length, D.length);
    let N;
    for (N = 0; N < R && C[N] === D[N]; N++) ;
    const L = (j, k) => {
      let I;
      for (let S = N; S < j.length; S++) {
        const P = j[S];
        if (Zr(P)) return;
        !I && k(P) && (I = P);
      }
      return I;
    }, M = L(C, nr), O = M && L(D, (j) => v.has(j.getKey()) && nr(j));
    return M && O ? [M, O] : null;
  }(u, f, l);
  if (d) {
    const [g, w] = d;
    vr(g, "previous").splice(0, w.getChildren()), w.remove();
  }
  const h = [u, f, ...s, ...a].find(Vd);
  if (h)
    return _E(Fs(zr(h), t.direction));
  le(269, JSON.stringify(s.map((g) => g.origin.__key)));
}
function zr(t) {
  const e = function(i) {
    let o = i;
    for (; wr(o); ) {
      const s = nl(o);
      if (!wr(s)) break;
      o = s;
    }
    return o;
  }(t.getLatest()), { direction: n } = e;
  if (ie(e.origin)) return Fi(e) ? e : Fo(e.origin, n, n);
  const r = e.getAdjacentCaret();
  return $o(r) && ie(r.origin) ? Fo(r.origin, n, la(n)) : e;
}
function sv(t) {
  return Fi(t) && t.offset !== Bi(t.origin, t.direction);
}
function Fs(t, e) {
  return t.direction === e ? t : t.getFlipped();
}
function av(t, e) {
  return t.direction === e ? t : zi(Fs(t.focus, e), Fs(t.anchor, e));
}
function kE(t, e, n) {
  let r = vr(t, "next");
  for (let i = 0; i < e; i++) {
    const o = r.getAdjacentCaret();
    if (o === null) break;
    r = o;
  }
  return Fs(r, n);
}
const EE = /* @__PURE__ */ new Map();
function Jw(t) {
  let e = t;
  for (; e != null; ) {
    if (e.nodeType === Node.TEXT_NODE) return e;
    e = e.firstChild;
  }
  return null;
}
function Xw(t) {
  const e = t.parentNode;
  if (e == null) throw new Error("Should never happen");
  return [e, Array.from(e.childNodes).indexOf(t)];
}
function NE(t, e, n, r, i) {
  const o = e.getKey(), s = r.getKey(), a = document.createRange();
  let l = t.getElementByKey(o), c = t.getElementByKey(s), u = n, f = i;
  if (ie(e) && (l = Jw(l)), ie(r) && (c = Jw(c)), e === void 0 || r === void 0 || l === null || c === null) return null;
  l.nodeName === "BR" && ([l, u] = Xw(l)), c.nodeName === "BR" && ([c, f] = Xw(c));
  const d = l.firstChild;
  l === c && d != null && d.nodeName === "BR" && u === 0 && f === 0 && (f = 1);
  try {
    a.setStart(l, u), a.setEnd(c, f);
  } catch {
    return null;
  }
  return !a.collapsed || u === f && o === s || (a.setStart(c, f), a.setEnd(l, u)), a;
}
function SE(t, e) {
  const n = t.getRootElement();
  if (n === null) return [];
  const r = n.getBoundingClientRect(), i = getComputedStyle(n), o = parseFloat(i.paddingLeft) + parseFloat(i.paddingRight), s = Array.from(e.getClientRects());
  let a, l = s.length;
  s.sort((c, u) => {
    const f = c.top - u.top;
    return Math.abs(f) <= 3 ? c.left - u.left : f;
  });
  for (let c = 0; c < l; c++) {
    const u = s[c], f = a && a.top <= u.top && a.top + a.height > u.top && a.left + a.width > u.left, d = u.width + o === r.width;
    f || d ? (s.splice(c--, 1), l--) : a = u;
  }
  return s;
}
function TE(t) {
  const e = {};
  if (!t) return e;
  const n = t.split(";");
  for (const r of n) if (r !== "") {
    const [i, o] = r.split(/:([^]+)/);
    i && o && (e[i.trim()] = o.trim());
  }
  return e;
}
function lv(t, e) {
  const n = t.getStartEndPoints();
  if (e.isSelected(t) && !li(e) && n !== null) {
    const [r, i] = n, o = t.isBackward(), s = r.getNode(), a = i.getNode(), l = e.is(s), c = e.is(a);
    if (l || c) {
      const [u, f] = Ff(t), d = s.is(a), h = e.is(o ? a : s), g = e.is(o ? s : a);
      let w, v = 0;
      d ? (v = u > f ? f : u, w = u > f ? u : f) : h ? (v = o ? f : u, w = void 0) : g && (v = 0, w = o ? u : f), e.__text = e.__text.slice(v, w);
    }
  }
  return e;
}
function AE(t) {
  const e = t.getStyle(), n = TE(e);
  EE.set(e, n);
}
function DE(t, e) {
  const n = t.getFormatType(), r = t.getIndent();
  n !== e.getFormatType() && e.setFormat(n), r !== e.getIndent() && e.setIndent(r);
}
function OE(t, e, n = DE) {
  if (t === null) return;
  const r = t.getStartEndPoints(), i = /* @__PURE__ */ new Map();
  let o = null;
  if (r) {
    const [s, a] = r;
    o = Nl(), o.anchor.set(s.key, s.offset, s.type), o.focus.set(a.key, a.offset, a.type);
    const l = Hd(s.getNode(), nr), c = Hd(a.getNode(), nr);
    X(l) && i.set(l.getKey(), l), X(c) && i.set(c.getKey(), c);
  }
  for (const s of t.getNodes()) if (X(s) && nr(s)) i.set(s.getKey(), s);
  else if (r === null) {
    const a = Hd(s, nr);
    X(a) && i.set(a.getKey(), a);
  }
  for (const [s, a] of i) {
    const l = e();
    n(a, l), a.replace(l, !0), o && (s === o.anchor.key && o.anchor.set(l.getKey(), o.anchor.offset, o.anchor.type), s === o.focus.key && o.focus.set(l.getKey(), o.focus.offset, o.focus.type));
  }
  o && t.is(oe()) && sn(o);
}
function cv(t) {
  const e = t.anchor.getNode(), n = tn(e) ? e : e.getParentOrThrow(), r = qu().getElementByKey(n.getKey());
  if (r === null) return !1;
  const i = r.ownerDocument.defaultView;
  return i === null ? !1 : i.getComputedStyle(r).writingMode === "vertical-rl";
}
function Yc(t, e) {
  let n = cv(t) ? !e : e;
  uv(t) && (n = !n);
  const r = bi(t.focus, n ? "previous" : "next");
  if (sv(r)) return !1;
  for (const i of Rp(r)) {
    if (wr(i)) return !i.origin.isInline();
    if (!X(i.origin)) {
      if (Xe(i.origin)) return !0;
      break;
    }
  }
  return !1;
}
function ME(t, e, n, r) {
  t.modify(e ? "extend" : "move", n, r);
}
function uv(t) {
  const e = t.anchor.getNode();
  return (tn(e) ? e : e.getParentOrThrow()).getDirection() === "rtl";
}
function Qc(t, e, n) {
  const r = uv(t);
  let i;
  i = cv(t) || r ? !n : n, ME(t, e, i, "character");
}
function Hd(t, e) {
  let n = t;
  for (; n !== null && n.getParent() !== null && !e(n); ) n = n.getParentOrThrow();
  return e(n) ? n : null;
}
function IE(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
const Al = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, RE = Al && "documentMode" in document ? document.documentMode : null, PE = Al && /Mac|iPod|iPhone|iPad/.test(navigator.platform), LE = Al && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);
!(!Al || !("InputEvent" in window) || RE) && "getTargetRanges" in new window.InputEvent("input");
function dv(...t) {
  const e = [];
  for (const n of t) if (n && typeof n == "string") for (const [r] of n.matchAll(/\S+/g)) e.push(r);
  return e;
}
function Ht(...t) {
  return () => {
    for (let e = t.length - 1; e >= 0; e--) t[e]();
    t.length = 0;
  };
}
const $E = Al, Xf = PE, FE = LE;
function un(t, ...e) {
  const n = dv(...e);
  n.length > 0 && t.classList.add(...n);
}
function No(t, ...e) {
  const n = dv(...e);
  n.length > 0 && t.classList.remove(...n);
}
function zu(t, e) {
  return Array.from(BE(t));
}
function BE(t, e) {
  return qE("next", t);
}
function qE(t, e, n) {
  const r = Ve(), i = e || r, o = X(i) ? vr(i, t) : $t(i, t), s = jE(i), a = function(c, u) {
    const f = Qw($t(c, u));
    return f && f[0];
  }(i, t);
  let l = s;
  return ju({ hasNext: (c) => c !== null, initial: o, map: (c) => ({ depth: l, node: c.origin }), step: (c) => {
    if (c.isSameNodeCaret(a)) return null;
    wr(c) && l++;
    const u = Qw(c);
    return !u || u[0].isSameNodeCaret(a) ? null : (l += u[1], u[0]);
  } });
}
function jE(t) {
  let e = -1;
  for (let n = t; n !== null; n = n.getParent()) e++;
  return e;
}
function UE(t) {
  const e = _r(t, (n) => X(n) && !n.isInline());
  return X(e) || IE(4, t.__key), e;
}
const _r = (t, e) => {
  let n = t;
  for (; n !== Ve() && n != null; ) {
    if (e(n)) return n;
    n = n.getParent();
  }
  return null;
};
function fv(t, e, n, r) {
  const i = (o) => o instanceof e;
  return t.registerNodeTransform(e, (o) => {
    const s = ((a) => {
      const l = a.getChildren();
      for (let f = 0; f < l.length; f++) {
        const d = l[f];
        if (i(d)) return null;
      }
      let c = a, u = a;
      for (; c !== null; ) if (u = c, c = c.getParent(), i(c)) return { child: u, parent: c };
      return null;
    })(o);
    if (s !== null) {
      const { child: a, parent: l } = s;
      if (a.is(o)) {
        r(l, o);
        const c = a.getNextSiblings(), u = c.length;
        if (l.insertAfter(a), u !== 0) {
          const f = n(l);
          a.insertAfter(f);
          for (let d = 0; d < u; d++) f.append(c[d]);
        }
        l.canBeEmpty() || l.getChildrenSize() !== 0 || l.remove();
      }
    }
  });
}
function gi(t, e) {
  return t !== null && Object.getPrototypeOf(t).constructor.name === e.name;
}
let Wd = !(FE || !$E) && void 0;
function zE(t) {
  let e = 1;
  if (function() {
    if (Wd === void 0) {
      const n = document.createElement("div");
      n.style.cssText = "position: absolute; opacity: 0; width: 100px; left: -1000px;", document.body.appendChild(n);
      const r = n.getBoundingClientRect();
      n.style.setProperty("zoom", "2"), Wd = n.getBoundingClientRect().width === r.width, document.body.removeChild(n);
    }
    return Wd;
  }()) for (; t; ) e *= Number(window.getComputedStyle(t).getPropertyValue("zoom")), t = t.parentElement;
  return e;
}
function hv(t, e) {
  const n = [], r = Array.from(t).reverse();
  for (let i = r.pop(); i !== void 0; i = r.pop()) if (e(i)) n.push(i);
  else if (X(i)) for (const o of VE(i)) r.push(o);
  return n;
}
function VE(t) {
  return HE(vr(t, "previous"));
}
function HE(t) {
  return ju({ hasNext: $o, initial: t.getAdjacentCaret(), map: (e) => e.origin.getLatest(), step: (e) => e.getAdjacentCaret() });
}
function Yw(t) {
  Uu($t(t, "next")).splice(1, t.getChildren());
}
function Qw(t, e = "root") {
  let n = 0, r = t, i = nl(r);
  for (; i === null; ) {
    if (n--, i = r.getParentCaret(e), !i) return null;
    r = i, i = nl(r);
  }
  return i && [i, n];
}
var nc = { exports: {} }, Kd, Zw;
function WE() {
  if (Zw) return Kd;
  Zw = 1;
  var t = -1, e = 1, n = 0;
  function r(k, I, S, P, T) {
    if (k === I)
      return k ? [[n, k]] : [];
    if (S != null) {
      var A = O(k, I, S);
      if (A)
        return A;
    }
    var B = a(k, I), V = k.substring(0, B);
    k = k.substring(B), I = I.substring(B), B = c(k, I);
    var J = k.substring(k.length - B);
    k = k.substring(0, k.length - B), I = I.substring(0, I.length - B);
    var H = i(k, I);
    return V && H.unshift([n, V]), J && H.push([n, J]), b(H, T), P && f(H), H;
  }
  function i(k, I) {
    var S;
    if (!k)
      return [[e, I]];
    if (!I)
      return [[t, k]];
    var P = k.length > I.length ? k : I, T = k.length > I.length ? I : k, A = P.indexOf(T);
    if (A !== -1)
      return S = [
        [e, P.substring(0, A)],
        [n, T],
        [e, P.substring(A + T.length)]
      ], k.length > I.length && (S[0][0] = S[2][0] = t), S;
    if (T.length === 1)
      return [
        [t, k],
        [e, I]
      ];
    var B = u(k, I);
    if (B) {
      var V = B[0], J = B[1], H = B[2], K = B[3], ne = B[4], re = r(V, H), te = r(J, K);
      return re.concat([[n, ne]], te);
    }
    return o(k, I);
  }
  function o(k, I) {
    for (var S = k.length, P = I.length, T = Math.ceil((S + P) / 2), A = T, B = 2 * T, V = new Array(B), J = new Array(B), H = 0; H < B; H++)
      V[H] = -1, J[H] = -1;
    V[A + 1] = 0, J[A + 1] = 0;
    for (var K = S - P, ne = K % 2 !== 0, re = 0, te = 0, Q = 0, ce = 0, pe = 0; pe < T; pe++) {
      for (var we = -pe + re; we <= pe - te; we += 2) {
        var ye = A + we, ve;
        we === -pe || we !== pe && V[ye - 1] < V[ye + 1] ? ve = V[ye + 1] : ve = V[ye - 1] + 1;
        for (var Ee = ve - we; ve < S && Ee < P && k.charAt(ve) === I.charAt(Ee); )
          ve++, Ee++;
        if (V[ye] = ve, ve > S)
          te += 2;
        else if (Ee > P)
          re += 2;
        else if (ne) {
          var de = A + K - we;
          if (de >= 0 && de < B && J[de] !== -1) {
            var Re = S - J[de];
            if (ve >= Re)
              return s(k, I, ve, Ee);
          }
        }
      }
      for (var He = -pe + Q; He <= pe - ce; He += 2) {
        var de = A + He, Re;
        He === -pe || He !== pe && J[de - 1] < J[de + 1] ? Re = J[de + 1] : Re = J[de - 1] + 1;
        for (var ae = Re - He; Re < S && ae < P && k.charAt(S - Re - 1) === I.charAt(P - ae - 1); )
          Re++, ae++;
        if (J[de] = Re, Re > S)
          ce += 2;
        else if (ae > P)
          Q += 2;
        else if (!ne) {
          var ye = A + K - He;
          if (ye >= 0 && ye < B && V[ye] !== -1) {
            var ve = V[ye], Ee = A + ve - ye;
            if (Re = S - Re, ve >= Re)
              return s(k, I, ve, Ee);
          }
        }
      }
    }
    return [
      [t, k],
      [e, I]
    ];
  }
  function s(k, I, S, P) {
    var T = k.substring(0, S), A = I.substring(0, P), B = k.substring(S), V = I.substring(P), J = r(T, A), H = r(B, V);
    return J.concat(H);
  }
  function a(k, I) {
    if (!k || !I || k.charAt(0) !== I.charAt(0))
      return 0;
    for (var S = 0, P = Math.min(k.length, I.length), T = P, A = 0; S < T; )
      k.substring(A, T) == I.substring(A, T) ? (S = T, A = S) : P = T, T = Math.floor((P - S) / 2 + S);
    return C(k.charCodeAt(T - 1)) && T--, T;
  }
  function l(k, I) {
    var S = k.length, P = I.length;
    if (S == 0 || P == 0)
      return 0;
    S > P ? k = k.substring(S - P) : S < P && (I = I.substring(0, S));
    var T = Math.min(S, P);
    if (k == I)
      return T;
    for (var A = 0, B = 1; ; ) {
      var V = k.substring(T - B), J = I.indexOf(V);
      if (J == -1)
        return A;
      B += J, (J == 0 || k.substring(T - B) == I.substring(0, B)) && (A = B, B++);
    }
  }
  function c(k, I) {
    if (!k || !I || k.slice(-1) !== I.slice(-1))
      return 0;
    for (var S = 0, P = Math.min(k.length, I.length), T = P, A = 0; S < T; )
      k.substring(k.length - T, k.length - A) == I.substring(I.length - T, I.length - A) ? (S = T, A = S) : P = T, T = Math.floor((P - S) / 2 + S);
    return D(k.charCodeAt(k.length - T)) && T--, T;
  }
  function u(k, I) {
    var S = k.length > I.length ? k : I, P = k.length > I.length ? I : k;
    if (S.length < 4 || P.length * 2 < S.length)
      return null;
    function T(te, Q, ce) {
      for (var pe = te.substring(ce, ce + Math.floor(te.length / 4)), we = -1, ye = "", ve, Ee, de, Re; (we = Q.indexOf(pe, we + 1)) !== -1; ) {
        var He = a(
          te.substring(ce),
          Q.substring(we)
        ), ae = c(
          te.substring(0, ce),
          Q.substring(0, we)
        );
        ye.length < ae + He && (ye = Q.substring(we - ae, we) + Q.substring(we, we + He), ve = te.substring(0, ce - ae), Ee = te.substring(ce + He), de = Q.substring(0, we - ae), Re = Q.substring(we + He));
      }
      return ye.length * 2 >= te.length ? [
        ve,
        Ee,
        de,
        Re,
        ye
      ] : null;
    }
    var A = T(
      S,
      P,
      Math.ceil(S.length / 4)
    ), B = T(
      S,
      P,
      Math.ceil(S.length / 2)
    ), V;
    if (!A && !B)
      return null;
    B ? A ? V = A[4].length > B[4].length ? A : B : V = B : V = A;
    var J, H, K, ne;
    k.length > I.length ? (J = V[0], H = V[1], K = V[2], ne = V[3]) : (K = V[0], ne = V[1], J = V[2], H = V[3]);
    var re = V[4];
    return [J, H, K, ne, re];
  }
  function f(k) {
    for (var I = !1, S = [], P = 0, T = null, A = 0, B = 0, V = 0, J = 0, H = 0; A < k.length; )
      k[A][0] == n ? (S[P++] = A, B = J, V = H, J = 0, H = 0, T = k[A][1]) : (k[A][0] == e ? J += k[A][1].length : H += k[A][1].length, T && T.length <= Math.max(B, V) && T.length <= Math.max(J, H) && (k.splice(S[P - 1], 0, [
        t,
        T
      ]), k[S[P - 1] + 1][0] = e, P--, P--, A = P > 0 ? S[P - 1] : -1, B = 0, V = 0, J = 0, H = 0, T = null, I = !0)), A++;
    for (I && b(k), _(k), A = 1; A < k.length; ) {
      if (k[A - 1][0] == t && k[A][0] == e) {
        var K = k[A - 1][1], ne = k[A][1], re = l(K, ne), te = l(ne, K);
        re >= te ? (re >= K.length / 2 || re >= ne.length / 2) && (k.splice(A, 0, [
          n,
          ne.substring(0, re)
        ]), k[A - 1][1] = K.substring(
          0,
          K.length - re
        ), k[A + 1][1] = ne.substring(re), A++) : (te >= K.length / 2 || te >= ne.length / 2) && (k.splice(A, 0, [
          n,
          K.substring(0, te)
        ]), k[A - 1][0] = e, k[A - 1][1] = ne.substring(
          0,
          ne.length - te
        ), k[A + 1][0] = t, k[A + 1][1] = K.substring(te), A++), A++;
      }
      A++;
    }
  }
  var d = /[^a-zA-Z0-9]/, h = /\s/, g = /[\r\n]/, w = /\n\r?\n$/, v = /^\r?\n\r?\n/;
  function _(k) {
    function I(te, Q) {
      if (!te || !Q)
        return 6;
      var ce = te.charAt(te.length - 1), pe = Q.charAt(0), we = ce.match(d), ye = pe.match(d), ve = we && ce.match(h), Ee = ye && pe.match(h), de = ve && ce.match(g), Re = Ee && pe.match(g), He = de && te.match(w), ae = Re && Q.match(v);
      return He || ae ? 5 : de || Re ? 4 : we && !ve && Ee ? 3 : ve || Ee ? 2 : we || ye ? 1 : 0;
    }
    for (var S = 1; S < k.length - 1; ) {
      if (k[S - 1][0] == n && k[S + 1][0] == n) {
        var P = k[S - 1][1], T = k[S][1], A = k[S + 1][1], B = c(P, T);
        if (B) {
          var V = T.substring(T.length - B);
          P = P.substring(0, P.length - B), T = V + T.substring(0, T.length - B), A = V + A;
        }
        for (var J = P, H = T, K = A, ne = I(P, T) + I(T, A); T.charAt(0) === A.charAt(0); ) {
          P += T.charAt(0), T = T.substring(1) + A.charAt(0), A = A.substring(1);
          var re = I(P, T) + I(T, A);
          re >= ne && (ne = re, J = P, H = T, K = A);
        }
        k[S - 1][1] != J && (J ? k[S - 1][1] = J : (k.splice(S - 1, 1), S--), k[S][1] = H, K ? k[S + 1][1] = K : (k.splice(S + 1, 1), S--));
      }
      S++;
    }
  }
  function b(k, I) {
    k.push([n, ""]);
    for (var S = 0, P = 0, T = 0, A = "", B = "", V; S < k.length; ) {
      if (S < k.length - 1 && !k[S][1]) {
        k.splice(S, 1);
        continue;
      }
      switch (k[S][0]) {
        case e:
          T++, B += k[S][1], S++;
          break;
        case t:
          P++, A += k[S][1], S++;
          break;
        case n:
          var J = S - T - P - 1;
          if (I) {
            if (J >= 0 && N(k[J][1])) {
              var H = k[J][1].slice(-1);
              if (k[J][1] = k[J][1].slice(
                0,
                -1
              ), A = H + A, B = H + B, !k[J][1]) {
                k.splice(J, 1), S--;
                var K = J - 1;
                k[K] && k[K][0] === e && (T++, B = k[K][1] + B, K--), k[K] && k[K][0] === t && (P++, A = k[K][1] + A, K--), J = K;
              }
            }
            if (R(k[S][1])) {
              var H = k[S][1].charAt(0);
              k[S][1] = k[S][1].slice(1), A += H, B += H;
            }
          }
          if (S < k.length - 1 && !k[S][1]) {
            k.splice(S, 1);
            break;
          }
          if (A.length > 0 || B.length > 0) {
            A.length > 0 && B.length > 0 && (V = a(B, A), V !== 0 && (J >= 0 ? k[J][1] += B.substring(
              0,
              V
            ) : (k.splice(0, 0, [
              n,
              B.substring(0, V)
            ]), S++), B = B.substring(V), A = A.substring(V)), V = c(B, A), V !== 0 && (k[S][1] = B.substring(B.length - V) + k[S][1], B = B.substring(
              0,
              B.length - V
            ), A = A.substring(
              0,
              A.length - V
            )));
            var ne = T + P;
            A.length === 0 && B.length === 0 ? (k.splice(S - ne, ne), S = S - ne) : A.length === 0 ? (k.splice(S - ne, ne, [e, B]), S = S - ne + 1) : B.length === 0 ? (k.splice(S - ne, ne, [t, A]), S = S - ne + 1) : (k.splice(
              S - ne,
              ne,
              [t, A],
              [e, B]
            ), S = S - ne + 2);
          }
          S !== 0 && k[S - 1][0] === n ? (k[S - 1][1] += k[S][1], k.splice(S, 1)) : S++, T = 0, P = 0, A = "", B = "";
          break;
      }
    }
    k[k.length - 1][1] === "" && k.pop();
    var re = !1;
    for (S = 1; S < k.length - 1; )
      k[S - 1][0] === n && k[S + 1][0] === n && (k[S][1].substring(
        k[S][1].length - k[S - 1][1].length
      ) === k[S - 1][1] ? (k[S][1] = k[S - 1][1] + k[S][1].substring(
        0,
        k[S][1].length - k[S - 1][1].length
      ), k[S + 1][1] = k[S - 1][1] + k[S + 1][1], k.splice(S - 1, 1), re = !0) : k[S][1].substring(0, k[S + 1][1].length) == k[S + 1][1] && (k[S - 1][1] += k[S + 1][1], k[S][1] = k[S][1].substring(k[S + 1][1].length) + k[S + 1][1], k.splice(S + 1, 1), re = !0)), S++;
    re && b(k, I);
  }
  function C(k) {
    return k >= 55296 && k <= 56319;
  }
  function D(k) {
    return k >= 56320 && k <= 57343;
  }
  function R(k) {
    return D(k.charCodeAt(0));
  }
  function N(k) {
    return C(k.charCodeAt(k.length - 1));
  }
  function L(k) {
    for (var I = [], S = 0; S < k.length; S++)
      k[S][1].length > 0 && I.push(k[S]);
    return I;
  }
  function M(k, I, S, P) {
    return N(k) || R(P) ? null : L([
      [n, k],
      [t, I],
      [e, S],
      [n, P]
    ]);
  }
  function O(k, I, S) {
    var P = typeof S == "number" ? { index: S, length: 0 } : S.oldRange, T = typeof S == "number" ? null : S.newRange, A = k.length, B = I.length;
    if (P.length === 0 && (T === null || T.length === 0)) {
      var V = P.index, J = k.slice(0, V), H = k.slice(V), K = T ? T.index : null;
      e: {
        var ne = V + B - A;
        if (K !== null && K !== ne || ne < 0 || ne > B)
          break e;
        var re = I.slice(0, ne), te = I.slice(ne);
        if (te !== H)
          break e;
        var Q = Math.min(V, ne), ce = J.slice(0, Q), pe = re.slice(0, Q);
        if (ce !== pe)
          break e;
        var we = J.slice(Q), ye = re.slice(Q);
        return M(ce, we, ye, H);
      }
      e: {
        if (K !== null && K !== V)
          break e;
        var ve = V, re = I.slice(0, ve), te = I.slice(ve);
        if (re !== J)
          break e;
        var Ee = Math.min(A - ve, B - ve), de = H.slice(H.length - Ee), Re = te.slice(te.length - Ee);
        if (de !== Re)
          break e;
        var we = H.slice(0, H.length - Ee), ye = te.slice(0, te.length - Ee);
        return M(J, we, ye, de);
      }
    }
    if (P.length > 0 && T && T.length === 0)
      e: {
        var ce = k.slice(0, P.index), de = k.slice(P.index + P.length), Q = ce.length, Ee = de.length;
        if (B < Q + Ee)
          break e;
        var pe = I.slice(0, Q), Re = I.slice(B - Ee);
        if (ce !== pe || de !== Re)
          break e;
        var we = k.slice(Q, A - Ee), ye = I.slice(Q, B - Ee);
        return M(ce, we, ye, de);
      }
    return null;
  }
  function j(k, I, S, P) {
    return r(k, I, S, P, !0);
  }
  return j.INSERT = e, j.DELETE = t, j.EQUAL = n, Kd = j, Kd;
}
var La = { exports: {} };
La.exports;
var em;
function pv() {
  return em || (em = 1, function(t, e) {
    var n = 200, r = "__lodash_hash_undefined__", i = 9007199254740991, o = "[object Arguments]", s = "[object Array]", a = "[object Boolean]", l = "[object Date]", c = "[object Error]", u = "[object Function]", f = "[object GeneratorFunction]", d = "[object Map]", h = "[object Number]", g = "[object Object]", w = "[object Promise]", v = "[object RegExp]", _ = "[object Set]", b = "[object String]", C = "[object Symbol]", D = "[object WeakMap]", R = "[object ArrayBuffer]", N = "[object DataView]", L = "[object Float32Array]", M = "[object Float64Array]", O = "[object Int8Array]", j = "[object Int16Array]", k = "[object Int32Array]", I = "[object Uint8Array]", S = "[object Uint8ClampedArray]", P = "[object Uint16Array]", T = "[object Uint32Array]", A = /[\\^$.*+?()[\]{}|]/g, B = /\w*$/, V = /^\[object .+?Constructor\]$/, J = /^(?:0|[1-9]\d*)$/, H = {};
    H[o] = H[s] = H[R] = H[N] = H[a] = H[l] = H[L] = H[M] = H[O] = H[j] = H[k] = H[d] = H[h] = H[g] = H[v] = H[_] = H[b] = H[C] = H[I] = H[S] = H[P] = H[T] = !0, H[c] = H[u] = H[D] = !1;
    var K = typeof Mi == "object" && Mi && Mi.Object === Object && Mi, ne = typeof self == "object" && self && self.Object === Object && self, re = K || ne || Function("return this")(), te = e && !e.nodeType && e, Q = te && !0 && t && !t.nodeType && t, ce = Q && Q.exports === te;
    function pe(m, E) {
      return m.set(E[0], E[1]), m;
    }
    function we(m, E) {
      return m.add(E), m;
    }
    function ye(m, E) {
      for (var F = -1, ee = m ? m.length : 0; ++F < ee && E(m[F], F, m) !== !1; )
        ;
      return m;
    }
    function ve(m, E) {
      for (var F = -1, ee = E.length, De = m.length; ++F < ee; )
        m[De + F] = E[F];
      return m;
    }
    function Ee(m, E, F, ee) {
      for (var De = -1, _e = m ? m.length : 0; ++De < _e; )
        F = E(F, m[De], De, m);
      return F;
    }
    function de(m, E) {
      for (var F = -1, ee = Array(m); ++F < m; )
        ee[F] = E(F);
      return ee;
    }
    function Re(m, E) {
      return m == null ? void 0 : m[E];
    }
    function He(m) {
      var E = !1;
      if (m != null && typeof m.toString != "function")
        try {
          E = !!(m + "");
        } catch {
        }
      return E;
    }
    function ae(m) {
      var E = -1, F = Array(m.size);
      return m.forEach(function(ee, De) {
        F[++E] = [De, ee];
      }), F;
    }
    function Te(m, E) {
      return function(F) {
        return m(E(F));
      };
    }
    function Be(m) {
      var E = -1, F = Array(m.size);
      return m.forEach(function(ee) {
        F[++E] = ee;
      }), F;
    }
    var Ge = Array.prototype, rt = Function.prototype, bt = Object.prototype, wt = re["__core-js_shared__"], kt = function() {
      var m = /[^.]+$/.exec(wt && wt.keys && wt.keys.IE_PROTO || "");
      return m ? "Symbol(src)_1." + m : "";
    }(), $e = rt.toString, Dt = bt.hasOwnProperty, lt = bt.toString, ar = RegExp(
      "^" + $e.call(Dt).replace(A, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), Pn = ce ? re.Buffer : void 0, kn = re.Symbol, Ln = re.Uint8Array, Ce = Te(Object.getPrototypeOf, Object), Qe = Object.create, Ot = bt.propertyIsEnumerable, Bt = Ge.splice, $n = Object.getOwnPropertySymbols, Fn = Pn ? Pn.isBuffer : void 0, lr = Te(Object.keys, Object), Bn = fr(re, "DataView"), qn = fr(re, "Map"), Xt = fr(re, "Promise"), jn = fr(re, "Set"), Un = fr(re, "WeakMap"), En = fr(Object, "create"), Ar = mn(Bn), Ze = mn(qn), mt = mn(Xt), gn = mn(jn), wn = mn(Un), cr = kn ? kn.prototype : void 0, Si = cr ? cr.valueOf : void 0;
    function Qn(m) {
      var E = -1, F = m ? m.length : 0;
      for (this.clear(); ++E < F; ) {
        var ee = m[E];
        this.set(ee[0], ee[1]);
      }
    }
    function y() {
      this.__data__ = En ? En(null) : {};
    }
    function x(m) {
      return this.has(m) && delete this.__data__[m];
    }
    function $(m) {
      var E = this.__data__;
      if (En) {
        var F = E[m];
        return F === r ? void 0 : F;
      }
      return Dt.call(E, m) ? E[m] : void 0;
    }
    function W(m) {
      var E = this.__data__;
      return En ? E[m] !== void 0 : Dt.call(E, m);
    }
    function se(m, E) {
      var F = this.__data__;
      return F[m] = En && E === void 0 ? r : E, this;
    }
    Qn.prototype.clear = y, Qn.prototype.delete = x, Qn.prototype.get = $, Qn.prototype.has = W, Qn.prototype.set = se;
    function he(m) {
      var E = -1, F = m ? m.length : 0;
      for (this.clear(); ++E < F; ) {
        var ee = m[E];
        this.set(ee[0], ee[1]);
      }
    }
    function Fe() {
      this.__data__ = [];
    }
    function yt(m) {
      var E = this.__data__, F = is(E, m);
      if (F < 0)
        return !1;
      var ee = E.length - 1;
      return F == ee ? E.pop() : Bt.call(E, F, 1), !0;
    }
    function Nt(m) {
      var E = this.__data__, F = is(E, m);
      return F < 0 ? void 0 : E[F][1];
    }
    function Yt(m) {
      return is(this.__data__, m) > -1;
    }
    function Mt(m, E) {
      var F = this.__data__, ee = is(F, m);
      return ee < 0 ? F.push([m, E]) : F[ee][1] = E, this;
    }
    he.prototype.clear = Fe, he.prototype.delete = yt, he.prototype.get = Nt, he.prototype.has = Yt, he.prototype.set = Mt;
    function pt(m) {
      var E = -1, F = m ? m.length : 0;
      for (this.clear(); ++E < F; ) {
        var ee = m[E];
        this.set(ee[0], ee[1]);
      }
    }
    function zn() {
      this.__data__ = {
        hash: new Qn(),
        map: new (qn || he)(),
        string: new Qn()
      };
    }
    function an(m) {
      return lo(this, m).delete(m);
    }
    function ur(m) {
      return lo(this, m).get(m);
    }
    function Nn(m) {
      return lo(this, m).has(m);
    }
    function dr(m, E) {
      return lo(this, m).set(m, E), this;
    }
    pt.prototype.clear = zn, pt.prototype.delete = an, pt.prototype.get = ur, pt.prototype.has = Nn, pt.prototype.set = dr;
    function St(m) {
      this.__data__ = new he(m);
    }
    function so() {
      this.__data__ = new he();
    }
    function Tt(m) {
      return this.__data__.delete(m);
    }
    function ns(m) {
      return this.__data__.get(m);
    }
    function Dr(m) {
      return this.__data__.has(m);
    }
    function ad(m, E) {
      var F = this.__data__;
      if (F instanceof he) {
        var ee = F.__data__;
        if (!qn || ee.length < n - 1)
          return ee.push([m, E]), this;
        F = this.__data__ = new pt(ee);
      }
      return F.set(m, E), this;
    }
    St.prototype.clear = so, St.prototype.delete = Tt, St.prototype.get = ns, St.prototype.has = Dr, St.prototype.set = ad;
    function rs(m, E) {
      var F = va(m) || ss(m) ? de(m.length, String) : [], ee = F.length, De = !!ee;
      for (var _e in m)
        Dt.call(m, _e) && !(De && (_e == "length" || _d(_e, ee))) && F.push(_e);
      return F;
    }
    function Bl(m, E, F) {
      var ee = m[E];
      (!(Dt.call(m, E) && Vl(ee, F)) || F === void 0 && !(E in m)) && (m[E] = F);
    }
    function is(m, E) {
      for (var F = m.length; F--; )
        if (Vl(m[F][0], E))
          return F;
      return -1;
    }
    function Or(m, E) {
      return m && ya(E, xa(E), m);
    }
    function ma(m, E, F, ee, De, _e, Je) {
      var We;
      if (ee && (We = _e ? ee(m, De, _e, Je) : ee(m)), We !== void 0)
        return We;
      if (!Ir(m))
        return m;
      var At = va(m);
      if (At) {
        if (We = yd(m), !E)
          return wd(m, We);
      } else {
        var Ye = ni(m), ln = Ye == u || Ye == f;
        if (Hl(m))
          return os(m, E);
        if (Ye == g || Ye == o || ln && !_e) {
          if (He(m))
            return _e ? m : {};
          if (We = Mr(ln ? {} : m), !E)
            return md(m, Or(We, m));
        } else {
          if (!H[Ye])
            return _e ? m : {};
          We = vd(m, Ye, ma, E);
        }
      }
      Je || (Je = new St());
      var Sn = Je.get(m);
      if (Sn)
        return Sn;
      if (Je.set(m, We), !At)
        var It = F ? bd(m) : xa(m);
      return ye(It || m, function(cn, Qt) {
        It && (Qt = cn, cn = m[Qt]), Bl(We, Qt, ma(cn, E, F, ee, Qt, m, Je));
      }), We;
    }
    function ld(m) {
      return Ir(m) ? Qe(m) : {};
    }
    function cd(m, E, F) {
      var ee = E(m);
      return va(m) ? ee : ve(ee, F(m));
    }
    function ud(m) {
      return lt.call(m);
    }
    function dd(m) {
      if (!Ir(m) || Cd(m))
        return !1;
      var E = _a(m) || He(m) ? ar : V;
      return E.test(mn(m));
    }
    function fd(m) {
      if (!Ul(m))
        return lr(m);
      var E = [];
      for (var F in Object(m))
        Dt.call(m, F) && F != "constructor" && E.push(F);
      return E;
    }
    function os(m, E) {
      if (E)
        return m.slice();
      var F = new m.constructor(m.length);
      return m.copy(F), F;
    }
    function ba(m) {
      var E = new m.constructor(m.byteLength);
      return new Ln(E).set(new Ln(m)), E;
    }
    function ao(m, E) {
      var F = E ? ba(m.buffer) : m.buffer;
      return new m.constructor(F, m.byteOffset, m.byteLength);
    }
    function ql(m, E, F) {
      var ee = E ? F(ae(m), !0) : ae(m);
      return Ee(ee, pe, new m.constructor());
    }
    function jl(m) {
      var E = new m.constructor(m.source, B.exec(m));
      return E.lastIndex = m.lastIndex, E;
    }
    function hd(m, E, F) {
      var ee = E ? F(Be(m), !0) : Be(m);
      return Ee(ee, we, new m.constructor());
    }
    function pd(m) {
      return Si ? Object(Si.call(m)) : {};
    }
    function gd(m, E) {
      var F = E ? ba(m.buffer) : m.buffer;
      return new m.constructor(F, m.byteOffset, m.length);
    }
    function wd(m, E) {
      var F = -1, ee = m.length;
      for (E || (E = Array(ee)); ++F < ee; )
        E[F] = m[F];
      return E;
    }
    function ya(m, E, F, ee) {
      F || (F = {});
      for (var De = -1, _e = E.length; ++De < _e; ) {
        var Je = E[De], We = void 0;
        Bl(F, Je, We === void 0 ? m[Je] : We);
      }
      return F;
    }
    function md(m, E) {
      return ya(m, ti(m), E);
    }
    function bd(m) {
      return cd(m, xa, ti);
    }
    function lo(m, E) {
      var F = m.__data__;
      return xd(E) ? F[typeof E == "string" ? "string" : "hash"] : F.map;
    }
    function fr(m, E) {
      var F = Re(m, E);
      return dd(F) ? F : void 0;
    }
    var ti = $n ? Te($n, Object) : Ed, ni = ud;
    (Bn && ni(new Bn(new ArrayBuffer(1))) != N || qn && ni(new qn()) != d || Xt && ni(Xt.resolve()) != w || jn && ni(new jn()) != _ || Un && ni(new Un()) != D) && (ni = function(m) {
      var E = lt.call(m), F = E == g ? m.constructor : void 0, ee = F ? mn(F) : void 0;
      if (ee)
        switch (ee) {
          case Ar:
            return N;
          case Ze:
            return d;
          case mt:
            return w;
          case gn:
            return _;
          case wn:
            return D;
        }
      return E;
    });
    function yd(m) {
      var E = m.length, F = m.constructor(E);
      return E && typeof m[0] == "string" && Dt.call(m, "index") && (F.index = m.index, F.input = m.input), F;
    }
    function Mr(m) {
      return typeof m.constructor == "function" && !Ul(m) ? ld(Ce(m)) : {};
    }
    function vd(m, E, F, ee) {
      var De = m.constructor;
      switch (E) {
        case R:
          return ba(m);
        case a:
        case l:
          return new De(+m);
        case N:
          return ao(m, ee);
        case L:
        case M:
        case O:
        case j:
        case k:
        case I:
        case S:
        case P:
        case T:
          return gd(m, ee);
        case d:
          return ql(m, ee, F);
        case h:
        case b:
          return new De(m);
        case v:
          return jl(m);
        case _:
          return hd(m, ee, F);
        case C:
          return pd(m);
      }
    }
    function _d(m, E) {
      return E = E ?? i, !!E && (typeof m == "number" || J.test(m)) && m > -1 && m % 1 == 0 && m < E;
    }
    function xd(m) {
      var E = typeof m;
      return E == "string" || E == "number" || E == "symbol" || E == "boolean" ? m !== "__proto__" : m === null;
    }
    function Cd(m) {
      return !!kt && kt in m;
    }
    function Ul(m) {
      var E = m && m.constructor, F = typeof E == "function" && E.prototype || bt;
      return m === F;
    }
    function mn(m) {
      if (m != null) {
        try {
          return $e.call(m);
        } catch {
        }
        try {
          return m + "";
        } catch {
        }
      }
      return "";
    }
    function zl(m) {
      return ma(m, !0, !0);
    }
    function Vl(m, E) {
      return m === E || m !== m && E !== E;
    }
    function ss(m) {
      return kd(m) && Dt.call(m, "callee") && (!Ot.call(m, "callee") || lt.call(m) == o);
    }
    var va = Array.isArray;
    function as(m) {
      return m != null && Wl(m.length) && !_a(m);
    }
    function kd(m) {
      return Kl(m) && as(m);
    }
    var Hl = Fn || Nd;
    function _a(m) {
      var E = Ir(m) ? lt.call(m) : "";
      return E == u || E == f;
    }
    function Wl(m) {
      return typeof m == "number" && m > -1 && m % 1 == 0 && m <= i;
    }
    function Ir(m) {
      var E = typeof m;
      return !!m && (E == "object" || E == "function");
    }
    function Kl(m) {
      return !!m && typeof m == "object";
    }
    function xa(m) {
      return as(m) ? rs(m) : fd(m);
    }
    function Ed() {
      return [];
    }
    function Nd() {
      return !1;
    }
    t.exports = zl;
  }(La, La.exports)), La.exports;
}
var $a = { exports: {} };
$a.exports;
var tm;
function gv() {
  return tm || (tm = 1, function(t, e) {
    var n = 200, r = "__lodash_hash_undefined__", i = 1, o = 2, s = 9007199254740991, a = "[object Arguments]", l = "[object Array]", c = "[object AsyncFunction]", u = "[object Boolean]", f = "[object Date]", d = "[object Error]", h = "[object Function]", g = "[object GeneratorFunction]", w = "[object Map]", v = "[object Number]", _ = "[object Null]", b = "[object Object]", C = "[object Promise]", D = "[object Proxy]", R = "[object RegExp]", N = "[object Set]", L = "[object String]", M = "[object Symbol]", O = "[object Undefined]", j = "[object WeakMap]", k = "[object ArrayBuffer]", I = "[object DataView]", S = "[object Float32Array]", P = "[object Float64Array]", T = "[object Int8Array]", A = "[object Int16Array]", B = "[object Int32Array]", V = "[object Uint8Array]", J = "[object Uint8ClampedArray]", H = "[object Uint16Array]", K = "[object Uint32Array]", ne = /[\\^$.*+?()[\]{}|]/g, re = /^\[object .+?Constructor\]$/, te = /^(?:0|[1-9]\d*)$/, Q = {};
    Q[S] = Q[P] = Q[T] = Q[A] = Q[B] = Q[V] = Q[J] = Q[H] = Q[K] = !0, Q[a] = Q[l] = Q[k] = Q[u] = Q[I] = Q[f] = Q[d] = Q[h] = Q[w] = Q[v] = Q[b] = Q[R] = Q[N] = Q[L] = Q[j] = !1;
    var ce = typeof Mi == "object" && Mi && Mi.Object === Object && Mi, pe = typeof self == "object" && self && self.Object === Object && self, we = ce || pe || Function("return this")(), ye = e && !e.nodeType && e, ve = ye && !0 && t && !t.nodeType && t, Ee = ve && ve.exports === ye, de = Ee && ce.process, Re = function() {
      try {
        return de && de.binding && de.binding("util");
      } catch {
      }
    }(), He = Re && Re.isTypedArray;
    function ae(m, E) {
      for (var F = -1, ee = m == null ? 0 : m.length, De = 0, _e = []; ++F < ee; ) {
        var Je = m[F];
        E(Je, F, m) && (_e[De++] = Je);
      }
      return _e;
    }
    function Te(m, E) {
      for (var F = -1, ee = E.length, De = m.length; ++F < ee; )
        m[De + F] = E[F];
      return m;
    }
    function Be(m, E) {
      for (var F = -1, ee = m == null ? 0 : m.length; ++F < ee; )
        if (E(m[F], F, m))
          return !0;
      return !1;
    }
    function Ge(m, E) {
      for (var F = -1, ee = Array(m); ++F < m; )
        ee[F] = E(F);
      return ee;
    }
    function rt(m) {
      return function(E) {
        return m(E);
      };
    }
    function bt(m, E) {
      return m.has(E);
    }
    function wt(m, E) {
      return m == null ? void 0 : m[E];
    }
    function kt(m) {
      var E = -1, F = Array(m.size);
      return m.forEach(function(ee, De) {
        F[++E] = [De, ee];
      }), F;
    }
    function $e(m, E) {
      return function(F) {
        return m(E(F));
      };
    }
    function Dt(m) {
      var E = -1, F = Array(m.size);
      return m.forEach(function(ee) {
        F[++E] = ee;
      }), F;
    }
    var lt = Array.prototype, ar = Function.prototype, Pn = Object.prototype, kn = we["__core-js_shared__"], Ln = ar.toString, Ce = Pn.hasOwnProperty, Qe = function() {
      var m = /[^.]+$/.exec(kn && kn.keys && kn.keys.IE_PROTO || "");
      return m ? "Symbol(src)_1." + m : "";
    }(), Ot = Pn.toString, Bt = RegExp(
      "^" + Ln.call(Ce).replace(ne, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), $n = Ee ? we.Buffer : void 0, Fn = we.Symbol, lr = we.Uint8Array, Bn = Pn.propertyIsEnumerable, qn = lt.splice, Xt = Fn ? Fn.toStringTag : void 0, jn = Object.getOwnPropertySymbols, Un = $n ? $n.isBuffer : void 0, En = $e(Object.keys, Object), Ar = ti(we, "DataView"), Ze = ti(we, "Map"), mt = ti(we, "Promise"), gn = ti(we, "Set"), wn = ti(we, "WeakMap"), cr = ti(Object, "create"), Si = mn(Ar), Qn = mn(Ze), y = mn(mt), x = mn(gn), $ = mn(wn), W = Fn ? Fn.prototype : void 0, se = W ? W.valueOf : void 0;
    function he(m) {
      var E = -1, F = m == null ? 0 : m.length;
      for (this.clear(); ++E < F; ) {
        var ee = m[E];
        this.set(ee[0], ee[1]);
      }
    }
    function Fe() {
      this.__data__ = cr ? cr(null) : {}, this.size = 0;
    }
    function yt(m) {
      var E = this.has(m) && delete this.__data__[m];
      return this.size -= E ? 1 : 0, E;
    }
    function Nt(m) {
      var E = this.__data__;
      if (cr) {
        var F = E[m];
        return F === r ? void 0 : F;
      }
      return Ce.call(E, m) ? E[m] : void 0;
    }
    function Yt(m) {
      var E = this.__data__;
      return cr ? E[m] !== void 0 : Ce.call(E, m);
    }
    function Mt(m, E) {
      var F = this.__data__;
      return this.size += this.has(m) ? 0 : 1, F[m] = cr && E === void 0 ? r : E, this;
    }
    he.prototype.clear = Fe, he.prototype.delete = yt, he.prototype.get = Nt, he.prototype.has = Yt, he.prototype.set = Mt;
    function pt(m) {
      var E = -1, F = m == null ? 0 : m.length;
      for (this.clear(); ++E < F; ) {
        var ee = m[E];
        this.set(ee[0], ee[1]);
      }
    }
    function zn() {
      this.__data__ = [], this.size = 0;
    }
    function an(m) {
      var E = this.__data__, F = os(E, m);
      if (F < 0)
        return !1;
      var ee = E.length - 1;
      return F == ee ? E.pop() : qn.call(E, F, 1), --this.size, !0;
    }
    function ur(m) {
      var E = this.__data__, F = os(E, m);
      return F < 0 ? void 0 : E[F][1];
    }
    function Nn(m) {
      return os(this.__data__, m) > -1;
    }
    function dr(m, E) {
      var F = this.__data__, ee = os(F, m);
      return ee < 0 ? (++this.size, F.push([m, E])) : F[ee][1] = E, this;
    }
    pt.prototype.clear = zn, pt.prototype.delete = an, pt.prototype.get = ur, pt.prototype.has = Nn, pt.prototype.set = dr;
    function St(m) {
      var E = -1, F = m == null ? 0 : m.length;
      for (this.clear(); ++E < F; ) {
        var ee = m[E];
        this.set(ee[0], ee[1]);
      }
    }
    function so() {
      this.size = 0, this.__data__ = {
        hash: new he(),
        map: new (Ze || pt)(),
        string: new he()
      };
    }
    function Tt(m) {
      var E = fr(this, m).delete(m);
      return this.size -= E ? 1 : 0, E;
    }
    function ns(m) {
      return fr(this, m).get(m);
    }
    function Dr(m) {
      return fr(this, m).has(m);
    }
    function ad(m, E) {
      var F = fr(this, m), ee = F.size;
      return F.set(m, E), this.size += F.size == ee ? 0 : 1, this;
    }
    St.prototype.clear = so, St.prototype.delete = Tt, St.prototype.get = ns, St.prototype.has = Dr, St.prototype.set = ad;
    function rs(m) {
      var E = -1, F = m == null ? 0 : m.length;
      for (this.__data__ = new St(); ++E < F; )
        this.add(m[E]);
    }
    function Bl(m) {
      return this.__data__.set(m, r), this;
    }
    function is(m) {
      return this.__data__.has(m);
    }
    rs.prototype.add = rs.prototype.push = Bl, rs.prototype.has = is;
    function Or(m) {
      var E = this.__data__ = new pt(m);
      this.size = E.size;
    }
    function ma() {
      this.__data__ = new pt(), this.size = 0;
    }
    function ld(m) {
      var E = this.__data__, F = E.delete(m);
      return this.size = E.size, F;
    }
    function cd(m) {
      return this.__data__.get(m);
    }
    function ud(m) {
      return this.__data__.has(m);
    }
    function dd(m, E) {
      var F = this.__data__;
      if (F instanceof pt) {
        var ee = F.__data__;
        if (!Ze || ee.length < n - 1)
          return ee.push([m, E]), this.size = ++F.size, this;
        F = this.__data__ = new St(ee);
      }
      return F.set(m, E), this.size = F.size, this;
    }
    Or.prototype.clear = ma, Or.prototype.delete = ld, Or.prototype.get = cd, Or.prototype.has = ud, Or.prototype.set = dd;
    function fd(m, E) {
      var F = ss(m), ee = !F && Vl(m), De = !F && !ee && as(m), _e = !F && !ee && !De && Kl(m), Je = F || ee || De || _e, We = Je ? Ge(m.length, String) : [], At = We.length;
      for (var Ye in m)
        Ce.call(m, Ye) && !(Je && // Safari 9 has enumerable `arguments.length` in strict mode.
        (Ye == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        De && (Ye == "offset" || Ye == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        _e && (Ye == "buffer" || Ye == "byteLength" || Ye == "byteOffset") || // Skip index properties.
        vd(Ye, At))) && We.push(Ye);
      return We;
    }
    function os(m, E) {
      for (var F = m.length; F--; )
        if (zl(m[F][0], E))
          return F;
      return -1;
    }
    function ba(m, E, F) {
      var ee = E(m);
      return ss(m) ? ee : Te(ee, F(m));
    }
    function ao(m) {
      return m == null ? m === void 0 ? O : _ : Xt && Xt in Object(m) ? ni(m) : Ul(m);
    }
    function ql(m) {
      return Ir(m) && ao(m) == a;
    }
    function jl(m, E, F, ee, De) {
      return m === E ? !0 : m == null || E == null || !Ir(m) && !Ir(E) ? m !== m && E !== E : hd(m, E, F, ee, jl, De);
    }
    function hd(m, E, F, ee, De, _e) {
      var Je = ss(m), We = ss(E), At = Je ? l : Mr(m), Ye = We ? l : Mr(E);
      At = At == a ? b : At, Ye = Ye == a ? b : Ye;
      var ln = At == b, Sn = Ye == b, It = At == Ye;
      if (It && as(m)) {
        if (!as(E))
          return !1;
        Je = !0, ln = !1;
      }
      if (It && !ln)
        return _e || (_e = new Or()), Je || Kl(m) ? ya(m, E, F, ee, De, _e) : md(m, E, At, F, ee, De, _e);
      if (!(F & i)) {
        var cn = ln && Ce.call(m, "__wrapped__"), Qt = Sn && Ce.call(E, "__wrapped__");
        if (cn || Qt) {
          var Ti = cn ? m.value() : m, ri = Qt ? E.value() : E;
          return _e || (_e = new Or()), De(Ti, ri, F, ee, _e);
        }
      }
      return It ? (_e || (_e = new Or()), bd(m, E, F, ee, De, _e)) : !1;
    }
    function pd(m) {
      if (!Wl(m) || xd(m))
        return !1;
      var E = Hl(m) ? Bt : re;
      return E.test(mn(m));
    }
    function gd(m) {
      return Ir(m) && _a(m.length) && !!Q[ao(m)];
    }
    function wd(m) {
      if (!Cd(m))
        return En(m);
      var E = [];
      for (var F in Object(m))
        Ce.call(m, F) && F != "constructor" && E.push(F);
      return E;
    }
    function ya(m, E, F, ee, De, _e) {
      var Je = F & i, We = m.length, At = E.length;
      if (We != At && !(Je && At > We))
        return !1;
      var Ye = _e.get(m);
      if (Ye && _e.get(E))
        return Ye == E;
      var ln = -1, Sn = !0, It = F & o ? new rs() : void 0;
      for (_e.set(m, E), _e.set(E, m); ++ln < We; ) {
        var cn = m[ln], Qt = E[ln];
        if (ee)
          var Ti = Je ? ee(Qt, cn, ln, E, m, _e) : ee(cn, Qt, ln, m, E, _e);
        if (Ti !== void 0) {
          if (Ti)
            continue;
          Sn = !1;
          break;
        }
        if (It) {
          if (!Be(E, function(ri, co) {
            if (!bt(It, co) && (cn === ri || De(cn, ri, F, ee, _e)))
              return It.push(co);
          })) {
            Sn = !1;
            break;
          }
        } else if (!(cn === Qt || De(cn, Qt, F, ee, _e))) {
          Sn = !1;
          break;
        }
      }
      return _e.delete(m), _e.delete(E), Sn;
    }
    function md(m, E, F, ee, De, _e, Je) {
      switch (F) {
        case I:
          if (m.byteLength != E.byteLength || m.byteOffset != E.byteOffset)
            return !1;
          m = m.buffer, E = E.buffer;
        case k:
          return !(m.byteLength != E.byteLength || !_e(new lr(m), new lr(E)));
        case u:
        case f:
        case v:
          return zl(+m, +E);
        case d:
          return m.name == E.name && m.message == E.message;
        case R:
        case L:
          return m == E + "";
        case w:
          var We = kt;
        case N:
          var At = ee & i;
          if (We || (We = Dt), m.size != E.size && !At)
            return !1;
          var Ye = Je.get(m);
          if (Ye)
            return Ye == E;
          ee |= o, Je.set(m, E);
          var ln = ya(We(m), We(E), ee, De, _e, Je);
          return Je.delete(m), ln;
        case M:
          if (se)
            return se.call(m) == se.call(E);
      }
      return !1;
    }
    function bd(m, E, F, ee, De, _e) {
      var Je = F & i, We = lo(m), At = We.length, Ye = lo(E), ln = Ye.length;
      if (At != ln && !Je)
        return !1;
      for (var Sn = At; Sn--; ) {
        var It = We[Sn];
        if (!(Je ? It in E : Ce.call(E, It)))
          return !1;
      }
      var cn = _e.get(m);
      if (cn && _e.get(E))
        return cn == E;
      var Qt = !0;
      _e.set(m, E), _e.set(E, m);
      for (var Ti = Je; ++Sn < At; ) {
        It = We[Sn];
        var ri = m[It], co = E[It];
        if (ee)
          var Pg = Je ? ee(co, ri, It, E, m, _e) : ee(ri, co, It, m, E, _e);
        if (!(Pg === void 0 ? ri === co || De(ri, co, F, ee, _e) : Pg)) {
          Qt = !1;
          break;
        }
        Ti || (Ti = It == "constructor");
      }
      if (Qt && !Ti) {
        var Gl = m.constructor, Jl = E.constructor;
        Gl != Jl && "constructor" in m && "constructor" in E && !(typeof Gl == "function" && Gl instanceof Gl && typeof Jl == "function" && Jl instanceof Jl) && (Qt = !1);
      }
      return _e.delete(m), _e.delete(E), Qt;
    }
    function lo(m) {
      return ba(m, xa, yd);
    }
    function fr(m, E) {
      var F = m.__data__;
      return _d(E) ? F[typeof E == "string" ? "string" : "hash"] : F.map;
    }
    function ti(m, E) {
      var F = wt(m, E);
      return pd(F) ? F : void 0;
    }
    function ni(m) {
      var E = Ce.call(m, Xt), F = m[Xt];
      try {
        m[Xt] = void 0;
        var ee = !0;
      } catch {
      }
      var De = Ot.call(m);
      return ee && (E ? m[Xt] = F : delete m[Xt]), De;
    }
    var yd = jn ? function(m) {
      return m == null ? [] : (m = Object(m), ae(jn(m), function(E) {
        return Bn.call(m, E);
      }));
    } : Ed, Mr = ao;
    (Ar && Mr(new Ar(new ArrayBuffer(1))) != I || Ze && Mr(new Ze()) != w || mt && Mr(mt.resolve()) != C || gn && Mr(new gn()) != N || wn && Mr(new wn()) != j) && (Mr = function(m) {
      var E = ao(m), F = E == b ? m.constructor : void 0, ee = F ? mn(F) : "";
      if (ee)
        switch (ee) {
          case Si:
            return I;
          case Qn:
            return w;
          case y:
            return C;
          case x:
            return N;
          case $:
            return j;
        }
      return E;
    });
    function vd(m, E) {
      return E = E ?? s, !!E && (typeof m == "number" || te.test(m)) && m > -1 && m % 1 == 0 && m < E;
    }
    function _d(m) {
      var E = typeof m;
      return E == "string" || E == "number" || E == "symbol" || E == "boolean" ? m !== "__proto__" : m === null;
    }
    function xd(m) {
      return !!Qe && Qe in m;
    }
    function Cd(m) {
      var E = m && m.constructor, F = typeof E == "function" && E.prototype || Pn;
      return m === F;
    }
    function Ul(m) {
      return Ot.call(m);
    }
    function mn(m) {
      if (m != null) {
        try {
          return Ln.call(m);
        } catch {
        }
        try {
          return m + "";
        } catch {
        }
      }
      return "";
    }
    function zl(m, E) {
      return m === E || m !== m && E !== E;
    }
    var Vl = ql(/* @__PURE__ */ function() {
      return arguments;
    }()) ? ql : function(m) {
      return Ir(m) && Ce.call(m, "callee") && !Bn.call(m, "callee");
    }, ss = Array.isArray;
    function va(m) {
      return m != null && _a(m.length) && !Hl(m);
    }
    var as = Un || Nd;
    function kd(m, E) {
      return jl(m, E);
    }
    function Hl(m) {
      if (!Wl(m))
        return !1;
      var E = ao(m);
      return E == h || E == g || E == c || E == D;
    }
    function _a(m) {
      return typeof m == "number" && m > -1 && m % 1 == 0 && m <= s;
    }
    function Wl(m) {
      var E = typeof m;
      return m != null && (E == "object" || E == "function");
    }
    function Ir(m) {
      return m != null && typeof m == "object";
    }
    var Kl = He ? rt(He) : gd;
    function xa(m) {
      return va(m) ? fd(m) : wd(m);
    }
    function Ed() {
      return [];
    }
    function Nd() {
      return !1;
    }
    t.exports = kd;
  }($a, $a.exports)), $a.exports;
}
var rc = {}, nm;
function KE() {
  if (nm) return rc;
  nm = 1, Object.defineProperty(rc, "__esModule", { value: !0 });
  const t = pv(), e = gv();
  var n;
  return function(r) {
    function i(l = {}, c = {}, u = !1) {
      typeof l != "object" && (l = {}), typeof c != "object" && (c = {});
      let f = t(c);
      u || (f = Object.keys(f).reduce((d, h) => (f[h] != null && (d[h] = f[h]), d), {}));
      for (const d in l)
        l[d] !== void 0 && c[d] === void 0 && (f[d] = l[d]);
      return Object.keys(f).length > 0 ? f : void 0;
    }
    r.compose = i;
    function o(l = {}, c = {}) {
      typeof l != "object" && (l = {}), typeof c != "object" && (c = {});
      const u = Object.keys(l).concat(Object.keys(c)).reduce((f, d) => (e(l[d], c[d]) || (f[d] = c[d] === void 0 ? null : c[d]), f), {});
      return Object.keys(u).length > 0 ? u : void 0;
    }
    r.diff = o;
    function s(l = {}, c = {}) {
      l = l || {};
      const u = Object.keys(c).reduce((f, d) => (c[d] !== l[d] && l[d] !== void 0 && (f[d] = c[d]), f), {});
      return Object.keys(l).reduce((f, d) => (l[d] !== c[d] && c[d] === void 0 && (f[d] = null), f), u);
    }
    r.invert = s;
    function a(l, c, u = !1) {
      if (typeof l != "object")
        return c;
      if (typeof c != "object")
        return;
      if (!u)
        return c;
      const f = Object.keys(c).reduce((d, h) => (l[h] === void 0 && (d[h] = c[h]), d), {});
      return Object.keys(f).length > 0 ? f : void 0;
    }
    r.transform = a;
  }(n || (n = {})), rc.default = n, rc;
}
var ic = {}, rm;
function wv() {
  if (rm) return ic;
  rm = 1, Object.defineProperty(ic, "__esModule", { value: !0 });
  var t;
  return function(e) {
    function n(r) {
      return typeof r.delete == "number" ? r.delete : typeof r.retain == "number" ? r.retain : typeof r.retain == "object" && r.retain !== null ? 1 : typeof r.insert == "string" ? r.insert.length : 1;
    }
    e.length = n;
  }(t || (t = {})), ic.default = t, ic;
}
var oc = {}, im;
function GE() {
  if (im) return oc;
  im = 1, Object.defineProperty(oc, "__esModule", { value: !0 });
  const t = wv();
  class e {
    constructor(r) {
      this.ops = r, this.index = 0, this.offset = 0;
    }
    hasNext() {
      return this.peekLength() < 1 / 0;
    }
    next(r) {
      r || (r = 1 / 0);
      const i = this.ops[this.index];
      if (i) {
        const o = this.offset, s = t.default.length(i);
        if (r >= s - o ? (r = s - o, this.index += 1, this.offset = 0) : this.offset += r, typeof i.delete == "number")
          return { delete: r };
        {
          const a = {};
          return i.attributes && (a.attributes = i.attributes), typeof i.retain == "number" ? a.retain = r : typeof i.retain == "object" && i.retain !== null ? a.retain = i.retain : typeof i.insert == "string" ? a.insert = i.insert.substr(o, r) : a.insert = i.insert, a;
        }
      } else
        return { retain: 1 / 0 };
    }
    peek() {
      return this.ops[this.index];
    }
    peekLength() {
      return this.ops[this.index] ? t.default.length(this.ops[this.index]) - this.offset : 1 / 0;
    }
    peekType() {
      const r = this.ops[this.index];
      return r ? typeof r.delete == "number" ? "delete" : typeof r.retain == "number" || typeof r.retain == "object" && r.retain !== null ? "retain" : "insert" : "retain";
    }
    rest() {
      if (this.hasNext()) {
        if (this.offset === 0)
          return this.ops.slice(this.index);
        {
          const r = this.offset, i = this.index, o = this.next(), s = this.ops.slice(this.index);
          return this.offset = r, this.index = i, [o].concat(s);
        }
      } else return [];
    }
  }
  return oc.default = e, oc;
}
var om;
function JE() {
  return om || (om = 1, function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }), e.AttributeMap = e.OpIterator = e.Op = void 0;
    const n = WE(), r = pv(), i = gv(), o = KE();
    e.AttributeMap = o.default;
    const s = wv();
    e.Op = s.default;
    const a = GE();
    e.OpIterator = a.default;
    const l = "\0", c = (f, d) => {
      if (typeof f != "object" || f === null)
        throw new Error(`cannot retain a ${typeof f}`);
      if (typeof d != "object" || d === null)
        throw new Error(`cannot retain a ${typeof d}`);
      const h = Object.keys(f)[0];
      if (!h || h !== Object.keys(d)[0])
        throw new Error(`embed types not matched: ${h} != ${Object.keys(d)[0]}`);
      return [h, f[h], d[h]];
    };
    class u {
      constructor(d) {
        Array.isArray(d) ? this.ops = d : d != null && Array.isArray(d.ops) ? this.ops = d.ops : this.ops = [];
      }
      static registerEmbed(d, h) {
        this.handlers[d] = h;
      }
      static unregisterEmbed(d) {
        delete this.handlers[d];
      }
      static getHandler(d) {
        const h = this.handlers[d];
        if (!h)
          throw new Error(`no handlers for embed type "${d}"`);
        return h;
      }
      insert(d, h) {
        const g = {};
        return typeof d == "string" && d.length === 0 ? this : (g.insert = d, h != null && typeof h == "object" && Object.keys(h).length > 0 && (g.attributes = h), this.push(g));
      }
      delete(d) {
        return d <= 0 ? this : this.push({ delete: d });
      }
      retain(d, h) {
        if (typeof d == "number" && d <= 0)
          return this;
        const g = { retain: d };
        return h != null && typeof h == "object" && Object.keys(h).length > 0 && (g.attributes = h), this.push(g);
      }
      push(d) {
        let h = this.ops.length, g = this.ops[h - 1];
        if (d = r(d), typeof g == "object") {
          if (typeof d.delete == "number" && typeof g.delete == "number")
            return this.ops[h - 1] = { delete: g.delete + d.delete }, this;
          if (typeof g.delete == "number" && d.insert != null && (h -= 1, g = this.ops[h - 1], typeof g != "object"))
            return this.ops.unshift(d), this;
          if (i(d.attributes, g.attributes)) {
            if (typeof d.insert == "string" && typeof g.insert == "string")
              return this.ops[h - 1] = { insert: g.insert + d.insert }, typeof d.attributes == "object" && (this.ops[h - 1].attributes = d.attributes), this;
            if (typeof d.retain == "number" && typeof g.retain == "number")
              return this.ops[h - 1] = { retain: g.retain + d.retain }, typeof d.attributes == "object" && (this.ops[h - 1].attributes = d.attributes), this;
          }
        }
        return h === this.ops.length ? this.ops.push(d) : this.ops.splice(h, 0, d), this;
      }
      chop() {
        const d = this.ops[this.ops.length - 1];
        return d && typeof d.retain == "number" && !d.attributes && this.ops.pop(), this;
      }
      filter(d) {
        return this.ops.filter(d);
      }
      forEach(d) {
        this.ops.forEach(d);
      }
      map(d) {
        return this.ops.map(d);
      }
      partition(d) {
        const h = [], g = [];
        return this.forEach((w) => {
          (d(w) ? h : g).push(w);
        }), [h, g];
      }
      reduce(d, h) {
        return this.ops.reduce(d, h);
      }
      changeLength() {
        return this.reduce((d, h) => h.insert ? d + s.default.length(h) : h.delete ? d - h.delete : d, 0);
      }
      length() {
        return this.reduce((d, h) => d + s.default.length(h), 0);
      }
      slice(d = 0, h = 1 / 0) {
        const g = [], w = new a.default(this.ops);
        let v = 0;
        for (; v < h && w.hasNext(); ) {
          let _;
          v < d ? _ = w.next(d - v) : (_ = w.next(h - v), g.push(_)), v += s.default.length(_);
        }
        return new u(g);
      }
      compose(d) {
        const h = new a.default(this.ops), g = new a.default(d.ops), w = [], v = g.peek();
        if (v != null && typeof v.retain == "number" && v.attributes == null) {
          let b = v.retain;
          for (; h.peekType() === "insert" && h.peekLength() <= b; )
            b -= h.peekLength(), w.push(h.next());
          v.retain - b > 0 && g.next(v.retain - b);
        }
        const _ = new u(w);
        for (; h.hasNext() || g.hasNext(); )
          if (g.peekType() === "insert")
            _.push(g.next());
          else if (h.peekType() === "delete")
            _.push(h.next());
          else {
            const b = Math.min(h.peekLength(), g.peekLength()), C = h.next(b), D = g.next(b);
            if (D.retain) {
              const R = {};
              if (typeof C.retain == "number")
                R.retain = typeof D.retain == "number" ? b : D.retain;
              else if (typeof D.retain == "number")
                C.retain == null ? R.insert = C.insert : R.retain = C.retain;
              else {
                const L = C.retain == null ? "insert" : "retain", [M, O, j] = c(C[L], D.retain), k = u.getHandler(M);
                R[L] = {
                  [M]: k.compose(O, j, L === "retain")
                };
              }
              const N = o.default.compose(C.attributes, D.attributes, typeof C.retain == "number");
              if (N && (R.attributes = N), _.push(R), !g.hasNext() && i(_.ops[_.ops.length - 1], R)) {
                const L = new u(h.rest());
                return _.concat(L).chop();
              }
            } else typeof D.delete == "number" && (typeof C.retain == "number" || typeof C.retain == "object" && C.retain !== null) && _.push(D);
          }
        return _.chop();
      }
      concat(d) {
        const h = new u(this.ops.slice());
        return d.ops.length > 0 && (h.push(d.ops[0]), h.ops = h.ops.concat(d.ops.slice(1))), h;
      }
      diff(d, h) {
        if (this.ops === d.ops)
          return new u();
        const g = [this, d].map((C) => C.map((D) => {
          if (D.insert != null)
            return typeof D.insert == "string" ? D.insert : l;
          const R = C === d ? "on" : "with";
          throw new Error("diff() called " + R + " non-document");
        }).join("")), w = new u(), v = n(g[0], g[1], h, !0), _ = new a.default(this.ops), b = new a.default(d.ops);
        return v.forEach((C) => {
          let D = C[1].length;
          for (; D > 0; ) {
            let R = 0;
            switch (C[0]) {
              case n.INSERT:
                R = Math.min(b.peekLength(), D), w.push(b.next(R));
                break;
              case n.DELETE:
                R = Math.min(D, _.peekLength()), _.next(R), w.delete(R);
                break;
              case n.EQUAL:
                R = Math.min(_.peekLength(), b.peekLength(), D);
                const N = _.next(R), L = b.next(R);
                i(N.insert, L.insert) ? w.retain(R, o.default.diff(N.attributes, L.attributes)) : w.push(L).delete(R);
                break;
            }
            D -= R;
          }
        }), w.chop();
      }
      eachLine(d, h = `
`) {
        const g = new a.default(this.ops);
        let w = new u(), v = 0;
        for (; g.hasNext(); ) {
          if (g.peekType() !== "insert")
            return;
          const _ = g.peek(), b = s.default.length(_) - g.peekLength(), C = typeof _.insert == "string" ? _.insert.indexOf(h, b) - b : -1;
          if (C < 0)
            w.push(g.next());
          else if (C > 0)
            w.push(g.next(C));
          else {
            if (d(w, g.next(1).attributes || {}, v) === !1)
              return;
            v += 1, w = new u();
          }
        }
        w.length() > 0 && d(w, {}, v);
      }
      invert(d) {
        const h = new u();
        return this.reduce((g, w) => {
          if (w.insert)
            h.delete(s.default.length(w));
          else {
            if (typeof w.retain == "number" && w.attributes == null)
              return h.retain(w.retain), g + w.retain;
            if (w.delete || typeof w.retain == "number") {
              const v = w.delete || w.retain;
              return d.slice(g, g + v).forEach((b) => {
                w.delete ? h.push(b) : w.retain && w.attributes && h.retain(s.default.length(b), o.default.invert(w.attributes, b.attributes));
              }), g + v;
            } else if (typeof w.retain == "object" && w.retain !== null) {
              const v = d.slice(g, g + 1), _ = new a.default(v.ops).next(), [b, C, D] = c(w.retain, _.insert), R = u.getHandler(b);
              return h.retain({ [b]: R.invert(C, D) }, o.default.invert(w.attributes, _.attributes)), g + 1;
            }
          }
          return g;
        }, 0), h.chop();
      }
      transform(d, h = !1) {
        if (h = !!h, typeof d == "number")
          return this.transformPosition(d, h);
        const g = d, w = new a.default(this.ops), v = new a.default(g.ops), _ = new u();
        for (; w.hasNext() || v.hasNext(); )
          if (w.peekType() === "insert" && (h || v.peekType() !== "insert"))
            _.retain(s.default.length(w.next()));
          else if (v.peekType() === "insert")
            _.push(v.next());
          else {
            const b = Math.min(w.peekLength(), v.peekLength()), C = w.next(b), D = v.next(b);
            if (C.delete)
              continue;
            if (D.delete)
              _.push(D);
            else {
              const R = C.retain, N = D.retain;
              let L = typeof N == "object" && N !== null ? N : b;
              if (typeof R == "object" && R !== null && typeof N == "object" && N !== null) {
                const M = Object.keys(R)[0];
                if (M === Object.keys(N)[0]) {
                  const O = u.getHandler(M);
                  O && (L = {
                    [M]: O.transform(R[M], N[M], h)
                  });
                }
              }
              _.retain(L, o.default.transform(C.attributes, D.attributes, h));
            }
          }
        return _.chop();
      }
      transformPosition(d, h = !1) {
        h = !!h;
        const g = new a.default(this.ops);
        let w = 0;
        for (; g.hasNext() && w <= d; ) {
          const v = g.peekLength(), _ = g.peekType();
          if (g.next(), _ === "delete") {
            d -= Math.min(v, d - w);
            continue;
          } else _ === "insert" && (w < d || !h) && (d += v);
          w += v;
        }
        return d;
      }
    }
    u.Op = s.default, u.OpIterator = a.default, u.AttributeMap = o.default, u.handlers = {}, e.default = u, t.exports = u, t.exports.default = u;
  }(nc, nc.exports)), nc.exports;
}
var XE = JE();
const Fa = /* @__PURE__ */ IC(XE);
var YE = Object.getOwnPropertyNames, QE = Object.getOwnPropertySymbols, ZE = Object.prototype.hasOwnProperty;
function sm(t, e) {
  return function(r, i, o) {
    return t(r, i, o) && e(r, i, o);
  };
}
function sc(t) {
  return function(n, r, i) {
    if (!n || !r || typeof n != "object" || typeof r != "object")
      return t(n, r, i);
    var o = i.cache, s = o.get(n), a = o.get(r);
    if (s && a)
      return s === r && a === n;
    o.set(n, r), o.set(r, n);
    var l = t(n, r, i);
    return o.delete(n), o.delete(r), l;
  };
}
function am(t) {
  return YE(t).concat(QE(t));
}
var eN = Object.hasOwn || function(t, e) {
  return ZE.call(t, e);
};
function Zo(t, e) {
  return t === e || !t && !e && t !== t && e !== e;
}
var tN = "__v", nN = "__o", rN = "_owner", lm = Object.getOwnPropertyDescriptor, cm = Object.keys;
function iN(t, e, n) {
  var r = t.length;
  if (e.length !== r)
    return !1;
  for (; r-- > 0; )
    if (!n.equals(t[r], e[r], r, r, t, e, n))
      return !1;
  return !0;
}
function oN(t, e) {
  return Zo(t.getTime(), e.getTime());
}
function sN(t, e) {
  return t.name === e.name && t.message === e.message && t.cause === e.cause && t.stack === e.stack;
}
function aN(t, e) {
  return t === e;
}
function um(t, e, n) {
  var r = t.size;
  if (r !== e.size)
    return !1;
  if (!r)
    return !0;
  for (var i = new Array(r), o = t.entries(), s, a, l = 0; (s = o.next()) && !s.done; ) {
    for (var c = e.entries(), u = !1, f = 0; (a = c.next()) && !a.done; ) {
      if (i[f]) {
        f++;
        continue;
      }
      var d = s.value, h = a.value;
      if (n.equals(d[0], h[0], l, f, t, e, n) && n.equals(d[1], h[1], d[0], h[0], t, e, n)) {
        u = i[f] = !0;
        break;
      }
      f++;
    }
    if (!u)
      return !1;
    l++;
  }
  return !0;
}
var lN = Zo;
function cN(t, e, n) {
  var r = cm(t), i = r.length;
  if (cm(e).length !== i)
    return !1;
  for (; i-- > 0; )
    if (!mv(t, e, n, r[i]))
      return !1;
  return !0;
}
function Sa(t, e, n) {
  var r = am(t), i = r.length;
  if (am(e).length !== i)
    return !1;
  for (var o, s, a; i-- > 0; )
    if (o = r[i], !mv(t, e, n, o) || (s = lm(t, o), a = lm(e, o), (s || a) && (!s || !a || s.configurable !== a.configurable || s.enumerable !== a.enumerable || s.writable !== a.writable)))
      return !1;
  return !0;
}
function uN(t, e) {
  return Zo(t.valueOf(), e.valueOf());
}
function dN(t, e) {
  return t.source === e.source && t.flags === e.flags;
}
function dm(t, e, n) {
  var r = t.size;
  if (r !== e.size)
    return !1;
  if (!r)
    return !0;
  for (var i = new Array(r), o = t.values(), s, a; (s = o.next()) && !s.done; ) {
    for (var l = e.values(), c = !1, u = 0; (a = l.next()) && !a.done; ) {
      if (!i[u] && n.equals(s.value, a.value, s.value, a.value, t, e, n)) {
        c = i[u] = !0;
        break;
      }
      u++;
    }
    if (!c)
      return !1;
  }
  return !0;
}
function fN(t, e) {
  var n = t.length;
  if (e.length !== n)
    return !1;
  for (; n-- > 0; )
    if (t[n] !== e[n])
      return !1;
  return !0;
}
function hN(t, e) {
  return t.hostname === e.hostname && t.pathname === e.pathname && t.protocol === e.protocol && t.port === e.port && t.hash === e.hash && t.username === e.username && t.password === e.password;
}
function mv(t, e, n, r) {
  return (r === rN || r === nN || r === tN) && (t.$$typeof || e.$$typeof) ? !0 : eN(e, r) && n.equals(t[r], e[r], r, r, t, e, n);
}
var pN = "[object Arguments]", gN = "[object Boolean]", wN = "[object Date]", mN = "[object Error]", bN = "[object Map]", yN = "[object Number]", vN = "[object Object]", _N = "[object RegExp]", xN = "[object Set]", CN = "[object String]", kN = "[object URL]", EN = Array.isArray, fm = typeof ArrayBuffer == "function" && ArrayBuffer.isView ? ArrayBuffer.isView : null, hm = Object.assign, NN = Object.prototype.toString.call.bind(Object.prototype.toString);
function SN(t) {
  var e = t.areArraysEqual, n = t.areDatesEqual, r = t.areErrorsEqual, i = t.areFunctionsEqual, o = t.areMapsEqual, s = t.areNumbersEqual, a = t.areObjectsEqual, l = t.arePrimitiveWrappersEqual, c = t.areRegExpsEqual, u = t.areSetsEqual, f = t.areTypedArraysEqual, d = t.areUrlsEqual;
  return function(g, w, v) {
    if (g === w)
      return !0;
    if (g == null || w == null)
      return !1;
    var _ = typeof g;
    if (_ !== typeof w)
      return !1;
    if (_ !== "object")
      return _ === "number" ? s(g, w, v) : _ === "function" ? i(g, w, v) : !1;
    var b = g.constructor;
    if (b !== w.constructor)
      return !1;
    if (b === Object)
      return a(g, w, v);
    if (EN(g))
      return e(g, w, v);
    if (fm != null && fm(g))
      return f(g, w, v);
    if (b === Date)
      return n(g, w, v);
    if (b === RegExp)
      return c(g, w, v);
    if (b === Map)
      return o(g, w, v);
    if (b === Set)
      return u(g, w, v);
    var C = NN(g);
    return C === wN ? n(g, w, v) : C === _N ? c(g, w, v) : C === bN ? o(g, w, v) : C === xN ? u(g, w, v) : C === vN ? typeof g.then != "function" && typeof w.then != "function" && a(g, w, v) : C === kN ? d(g, w, v) : C === mN ? r(g, w, v) : C === pN ? a(g, w, v) : C === gN || C === yN || C === CN ? l(g, w, v) : !1;
  };
}
function TN(t) {
  var e = t.circular, n = t.createCustomConfig, r = t.strict, i = {
    areArraysEqual: r ? Sa : iN,
    areDatesEqual: oN,
    areErrorsEqual: sN,
    areFunctionsEqual: aN,
    areMapsEqual: r ? sm(um, Sa) : um,
    areNumbersEqual: lN,
    areObjectsEqual: r ? Sa : cN,
    arePrimitiveWrappersEqual: uN,
    areRegExpsEqual: dN,
    areSetsEqual: r ? sm(dm, Sa) : dm,
    areTypedArraysEqual: r ? Sa : fN,
    areUrlsEqual: hN
  };
  if (n && (i = hm({}, i, n(i))), e) {
    var o = sc(i.areArraysEqual), s = sc(i.areMapsEqual), a = sc(i.areObjectsEqual), l = sc(i.areSetsEqual);
    i = hm({}, i, {
      areArraysEqual: o,
      areMapsEqual: s,
      areObjectsEqual: a,
      areSetsEqual: l
    });
  }
  return i;
}
function AN(t) {
  return function(e, n, r, i, o, s, a) {
    return t(e, n, a);
  };
}
function DN(t) {
  var e = t.circular, n = t.comparator, r = t.createState, i = t.equals, o = t.strict;
  if (r)
    return function(l, c) {
      var u = r(), f = u.cache, d = f === void 0 ? e ? /* @__PURE__ */ new WeakMap() : void 0 : f, h = u.meta;
      return n(l, c, {
        cache: d,
        equals: i,
        meta: h,
        strict: o
      });
    };
  if (e)
    return function(l, c) {
      return n(l, c, {
        cache: /* @__PURE__ */ new WeakMap(),
        equals: i,
        meta: void 0,
        strict: o
      });
    };
  var s = {
    cache: void 0,
    equals: i,
    meta: void 0,
    strict: o
  };
  return function(l, c) {
    return n(l, c, s);
  };
}
var ui = eo();
eo({ strict: !0 });
eo({ circular: !0 });
eo({
  circular: !0,
  strict: !0
});
eo({
  createInternalComparator: function() {
    return Zo;
  }
});
eo({
  strict: !0,
  createInternalComparator: function() {
    return Zo;
  }
});
eo({
  circular: !0,
  createInternalComparator: function() {
    return Zo;
  }
});
eo({
  circular: !0,
  createInternalComparator: function() {
    return Zo;
  },
  strict: !0
});
function eo(t) {
  t === void 0 && (t = {});
  var e = t.circular, n = e === void 0 ? !1 : e, r = t.createInternalComparator, i = t.createState, o = t.strict, s = o === void 0 ? !1 : o, a = TN(t), l = SN(a), c = r ? r(l) : AN(l);
  return DN({ circular: n, comparator: l, createState: i, equals: c, strict: s });
}
const bv = gl(null);
function ON(t, e) {
  return { getTheme: function() {
    return e ?? null;
  } };
}
function Le() {
  const t = wl(bv);
  return t == null && function(e, ...n) {
    const r = new URL("https://lexical.dev/docs/error"), i = new URLSearchParams();
    i.append("code", e);
    for (const o of n) i.append("v", o);
    throw r.search = i.toString(), Error(`Minified Lexical error #${e}; visit ${r.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
  }(8), t;
}
function MN(t, e) {
  const n = e.body ? e.body.childNodes : [];
  let r = [];
  const i = [];
  for (let o = 0; o < n.length; o++) {
    const s = n[o];
    if (!_v.has(s.nodeName)) {
      const a = xv(s, t, i, !1);
      a !== null && (r = r.concat(a));
    }
  }
  return function(o) {
    for (const s of o) s.getNextSibling() instanceof yp && s.insertAfter(Lo());
    for (const s of o) {
      const a = s.getChildren();
      for (const l of a) s.insertBefore(l);
      s.remove();
    }
  }(i), r;
}
function yv(t, e) {
  if (typeof document > "u" || typeof window > "u" && global.window === void 0) throw new Error("To use $generateHtmlFromNodes in headless mode please initialize a headless browser implementation such as JSDom before calling this function.");
  const n = document.createElement("div"), r = Ve().getChildren();
  for (let i = 0; i < r.length; i++)
    vv(t, r[i], n, e);
  return n.innerHTML;
}
function vv(t, e, n, r = null) {
  let i = r === null || e.isSelected(r);
  const o = X(e) && e.excludeFromCopy("html");
  let s = e;
  if (r !== null) {
    let h = Dp(e);
    h = ie(h) && r !== null ? lv(r, h) : h, s = h;
  }
  const a = X(s) ? s.getChildren() : [], l = xp(t, s.getType());
  let c;
  c = l && l.exportDOM !== void 0 ? l.exportDOM(t, s) : s.exportDOM(t);
  const { element: u, after: f } = c;
  if (!u) return !1;
  const d = document.createDocumentFragment();
  for (let h = 0; h < a.length; h++) {
    const g = a[h], w = vv(t, g, d, r);
    !i && X(e) && w && e.extractWithChild(g, r, "html") && (i = !0);
  }
  if (i && !o) {
    if ((it(u) || Hf(u)) && u.append(d), n.append(u), f) {
      const h = f.call(s, u);
      h && (Hf(u) ? u.replaceChildren(h) : u.replaceWith(h));
    }
  } else n.append(d);
  return i;
}
const _v = /* @__PURE__ */ new Set(["STYLE", "SCRIPT"]);
function xv(t, e, n, r, i = /* @__PURE__ */ new Map(), o) {
  let s = [];
  if (_v.has(t.nodeName)) return s;
  let a = null;
  const l = function(g, w) {
    const { nodeName: v } = g, _ = w._htmlConversions.get(v.toLowerCase());
    let b = null;
    if (_ !== void 0) for (const C of _) {
      const D = C(g);
      D !== null && (b === null || (b.priority || 0) <= (D.priority || 0)) && (b = D);
    }
    return b !== null ? b.conversion : null;
  }(t, e), c = l ? l(t) : null;
  let u = null;
  if (c !== null) {
    u = c.after;
    const g = c.node;
    if (a = Array.isArray(g) ? g[g.length - 1] : g, a !== null) {
      for (const [, w] of i) if (a = w(a, o), !a) break;
      a && s.push(...Array.isArray(g) ? g : [a]);
    }
    c.forChild != null && i.set(t.nodeName, c.forChild);
  }
  const f = t.childNodes;
  let d = [];
  const h = (a == null || !Zr(a)) && (a != null && Bf(a) || r);
  for (let g = 0; g < f.length; g++) d.push(...xv(f[g], e, n, h, new Map(i), a));
  return u != null && (d = u(d)), Gc(t) && (d = IN(t, d, h ? () => {
    const g = new yp();
    return n.push(g), g;
  } : Jn)), a == null ? d.length > 0 ? s = s.concat(d) : Gc(t) && function(g) {
    return g.nextSibling == null || g.previousSibling == null ? !1 : Wf(g.nextSibling) && Wf(g.previousSibling);
  }(t) && (s = s.concat(Lo())) : X(a) && a.append(...d), s;
}
function IN(t, e, n) {
  const r = t.style.textAlign, i = [];
  let o = [];
  for (let s = 0; s < e.length; s++) {
    const a = e[s];
    if (Bf(a)) r && !a.getFormat() && a.setFormat(r), i.push(a);
    else if (o.push(a), s === e.length - 1 || s < e.length - 1 && Bf(e[s + 1])) {
      const l = n();
      l.setFormat(r), l.append(...o), i.push(l), o = [];
    }
  }
  return i;
}
const RN = /* @__PURE__ */ new Set(["http:", "https:", "mailto:", "sms:", "tel:"]);
let Cv = class kv extends pn {
  static getType() {
    return "link";
  }
  static clone(e) {
    return new kv(e.__url, { rel: e.__rel, target: e.__target, title: e.__title }, e.__key);
  }
  constructor(e = "", n = {}, r) {
    super(r);
    const { target: i = null, rel: o = null, title: s = null } = n;
    this.__url = e, this.__target = i, this.__rel = o, this.__title = s;
  }
  createDOM(e) {
    const n = document.createElement("a");
    return this.updateLinkDOM(null, n, e), un(n, e.theme.link), n;
  }
  updateLinkDOM(e, n, r) {
    if (tv(n)) {
      e && e.__url === this.__url || (n.href = this.sanitizeUrl(this.__url));
      for (const i of ["target", "rel", "title"]) {
        const o = `__${i}`, s = this[o];
        e && e[o] === s || (s ? n[i] = s : n.removeAttribute(i));
      }
    }
  }
  updateDOM(e, n, r) {
    return this.updateLinkDOM(e, n, r), !1;
  }
  static importDOM() {
    return { a: (e) => ({ conversion: PN, priority: 1 }) };
  }
  static importJSON(e) {
    return Yf().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setURL(e.url).setRel(e.rel || null).setTarget(e.target || null).setTitle(e.title || null);
  }
  sanitizeUrl(e) {
    e = pm(e);
    try {
      const n = new URL(pm(e));
      if (!RN.has(n.protocol)) return "about:blank";
    } catch {
      return e;
    }
    return e;
  }
  exportJSON() {
    return { ...super.exportJSON(), rel: this.getRel(), target: this.getTarget(), title: this.getTitle(), url: this.getURL() };
  }
  getURL() {
    return this.getLatest().__url;
  }
  setURL(e) {
    const n = this.getWritable();
    return n.__url = e, n;
  }
  getTarget() {
    return this.getLatest().__target;
  }
  setTarget(e) {
    const n = this.getWritable();
    return n.__target = e, n;
  }
  getRel() {
    return this.getLatest().__rel;
  }
  setRel(e) {
    const n = this.getWritable();
    return n.__rel = e, n;
  }
  getTitle() {
    return this.getLatest().__title;
  }
  setTitle(e) {
    const n = this.getWritable();
    return n.__title = e, n;
  }
  insertNewAfter(e, n = !0) {
    const r = Yf(this.__url, { rel: this.__rel, target: this.__target, title: this.__title });
    return this.insertAfter(r, n), r;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
  extractWithChild(e, n, r) {
    if (!Z(n)) return !1;
    const i = n.anchor.getNode(), o = n.focus.getNode();
    return this.isParentOf(i) && this.isParentOf(o) && n.getTextContent().length > 0;
  }
  isEmailURI() {
    return this.__url.startsWith("mailto:");
  }
  isWebSiteURI() {
    return this.__url.startsWith("https://") || this.__url.startsWith("http://");
  }
};
function PN(t) {
  let e = null;
  if (tv(t)) {
    const n = t.textContent;
    (n !== null && n !== "" || t.children.length > 0) && (e = Yf(t.getAttribute("href") || "", { rel: t.getAttribute("rel"), target: t.getAttribute("target"), title: t.getAttribute("title") }));
  }
  return { node: e };
}
function Yf(t = "", e) {
  return at(new Cv(t, e));
}
function LN(t) {
  return t instanceof Cv;
}
const $N = /^\+?[0-9\s()-]{5,}$/;
function pm(t) {
  return t.match(/^[a-z][a-z0-9+.-]*:/i) || t.match(/^[/#.]/) ? t : t.includes("@") ? `mailto:${t}` : $N.test(t) ? `tel:${t}` : `https://${t}`;
}
const Ev = [];
let Nv = class Sv extends pn {
  static getType() {
    return "mark";
  }
  static clone(e) {
    return new Sv(e.__ids, e.__key);
  }
  static importDOM() {
    return null;
  }
  static importJSON(e) {
    return gm().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setIDs(e.ids);
  }
  exportJSON() {
    return { ...super.exportJSON(), ids: this.getIDs() };
  }
  constructor(e = Ev, n) {
    super(n), this.__ids = e;
  }
  createDOM(e) {
    const n = document.createElement("mark");
    return un(n, e.theme.mark), this.__ids.length > 1 && un(n, e.theme.markOverlap), n;
  }
  updateDOM(e, n, r) {
    const i = e.__ids, o = this.__ids, s = i.length, a = o.length, l = r.theme.markOverlap;
    return s !== a && (s === 1 ? a === 2 && un(n, l) : a === 1 && No(n, l)), !1;
  }
  hasID(e) {
    return this.getIDs().includes(e);
  }
  getIDs() {
    return Array.from(this.getLatest().__ids);
  }
  setIDs(e) {
    const n = this.getWritable();
    return n.__ids = e, n;
  }
  addID(e) {
    const n = this.getWritable();
    return n.__ids.includes(e) ? n : n.setIDs([...n.__ids, e]);
  }
  deleteID(e) {
    const n = this.getWritable(), r = n.__ids.indexOf(e);
    if (r === -1) return n;
    const i = Array.from(n.__ids);
    return i.splice(r, 1), n.setIDs(i);
  }
  insertNewAfter(e, n = !0) {
    const r = gm(this.__ids);
    return this.insertAfter(r, n), r;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
  extractWithChild(e, n, r) {
    if (!Z(n) || r === "html") return !1;
    const i = n.anchor, o = n.focus, s = i.getNode(), a = o.getNode(), l = n.isBackward() ? i.offset - o.offset : o.offset - i.offset;
    return this.isParentOf(s) && this.isParentOf(a) && this.getTextContent().length === l;
  }
  excludeFromCopy(e) {
    return e !== "clone";
  }
};
function gm(t = Ev) {
  return at(new Nv(t));
}
function FN(t) {
  return t instanceof Nv;
}
function Zc(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
function Tv(t, e = oe()) {
  return e == null && Zc(166), Z(e) && e.isCollapsed() || e.getNodes().length === 0 ? "" : yv(t, e);
}
function BN(t, e = oe()) {
  return e == null && Zc(166), Z(e) && e.isCollapsed() || e.getNodes().length === 0 ? null : JSON.stringify(qN(t, e));
}
function wm(t, e) {
  const n = t.getData("text/plain") || t.getData("text/uri-list");
  n != null && e.insertRawText(n);
}
function mm(t, e, n) {
  const r = t.getData("application/x-lexical-editor");
  if (r) try {
    const a = JSON.parse(r);
    if (a.namespace === n._config.namespace && Array.isArray(a.nodes))
      return bm(n, jN(a.nodes), e);
  } catch {
  }
  const i = t.getData("text/html"), o = t.getData("text/plain");
  if (i && o !== i) try {
    const a = new DOMParser().parseFromString(function(l) {
      return window.trustedTypes && window.trustedTypes.createPolicy ? window.trustedTypes.createPolicy("lexical", { createHTML: (c) => c }).createHTML(l) : l;
    }(i), "text/html");
    return bm(n, MN(n, a), e);
  } catch {
  }
  const s = o || t.getData("text/uri-list");
  if (s != null) if (Z(e)) {
    const a = s.split(/(\r?\n|\t)/);
    a[a.length - 1] === "" && a.pop();
    for (let l = 0; l < a.length; l++) {
      const c = oe();
      if (Z(c)) {
        const u = a[l];
        u === `
` || u === `\r
` ? c.insertParagraph() : u === "	" ? c.insertNodes([kl()]) : c.insertText(u);
      }
    }
  } else e.insertRawText(s);
}
function bm(t, e, n) {
  t.dispatchCommand(xk, { nodes: e, selection: n }) || (n.insertNodes(e), function(r) {
    if (Z(r) && r.isCollapsed()) {
      const i = r.anchor;
      let o = null;
      const s = bi(i, "previous");
      if (s) if (Fi(s)) o = s.origin;
      else {
        const a = zi(s, vr(Ve(), "next").getFlipped());
        for (const l of a) {
          if (ie(l.origin)) {
            o = l.origin;
            break;
          }
          if (X(l.origin) && !l.origin.isInline()) break;
        }
      }
      if (o && ie(o)) {
        const a = o.getFormat(), l = o.getStyle();
        r.format === a && r.style === l || (r.format = a, r.style = l, r.dirty = !0);
      }
    }
  }(n));
}
function Av(t, e, n, r = []) {
  let i = e === null || n.isSelected(e);
  const o = X(n) && n.excludeFromCopy("html");
  let s = n;
  if (e !== null) {
    let c = Dp(n);
    c = ie(c) && e !== null ? lv(e, c) : c, s = c;
  }
  const a = X(s) ? s.getChildren() : [], l = function(c) {
    const u = c.exportJSON(), f = c.constructor;
    if (u.type !== f.getType() && Zc(58, f.name), X(c)) {
      const d = u.children;
      Array.isArray(d) || Zc(59, f.name);
    }
    return u;
  }(s);
  if (ie(s)) {
    const c = s.__text;
    c.length > 0 ? l.text = c : i = !1;
  }
  for (let c = 0; c < a.length; c++) {
    const u = a[c], f = Av(t, e, u, l.children);
    !i && X(n) && f && n.extractWithChild(u, e, "clone") && (i = !0);
  }
  if (i && !o) r.push(l);
  else if (Array.isArray(l.children)) for (let c = 0; c < l.children.length; c++) {
    const u = l.children[c];
    r.push(u);
  }
  return i;
}
function qN(t, e) {
  const n = [], r = Ve().getChildren();
  for (let i = 0; i < r.length; i++)
    Av(t, e, r[i], n);
  return { namespace: t._config.namespace, nodes: n };
}
function jN(t) {
  const e = [];
  for (let n = 0; n < t.length; n++) {
    const r = t[n], i = R0(r);
    ie(i) && AE(i), e.push(i);
  }
  return e;
}
let cs = null;
async function ym(t, e, n) {
  if (cs !== null) return !1;
  if (e !== null) return new Promise((c, u) => {
    t.update(() => {
      c(vm(t, e, n));
    });
  });
  const r = t.getRootElement(), i = t._window || window, o = window.document, s = yr(i);
  if (r === null || s === null) return !1;
  const a = o.createElement("span");
  a.style.cssText = "position: fixed; top: -1000px;", a.append(o.createTextNode("#")), r.append(a);
  const l = new Range();
  return l.setStart(a, 0), l.setEnd(a, 1), s.removeAllRanges(), s.addRange(l), new Promise((c, u) => {
    const f = t.registerCommand(Yi, (d) => (gi(d, ClipboardEvent) && (f(), cs !== null && (window.clearTimeout(cs), cs = null), c(vm(t, d, n))), !0), bs);
    cs = window.setTimeout(() => {
      f(), cs = null, c(!1);
    }, 50), o.execCommand("copy"), a.remove();
  });
}
function vm(t, e, n) {
  if (n === void 0) {
    const i = yr(t._window);
    if (!i) return !1;
    const o = i.anchorNode, s = i.focusNode;
    if (o !== null && s !== null && !Sl(t, o, s)) return !1;
    const a = oe();
    if (a === null) return !1;
    n = zN(a);
  }
  e.preventDefault();
  const r = e.clipboardData;
  return r !== null && (VN(r, n), !0);
}
const UN = [["text/html", Tv], ["application/x-lexical-editor", BN]];
function zN(t = oe()) {
  const e = { "text/plain": t ? t.getTextContent() : "" };
  if (t) {
    const n = qu();
    for (const [r, i] of UN) {
      const o = i(n, t);
      o !== null && (e[r] = o);
    }
  }
  return e;
}
function VN(t, e) {
  for (const n in e) {
    const r = e[n];
    r !== void 0 && t.setData(n, r);
  }
}
const Pp = /^(\d+(?:\.\d+)?)px$/, vs = { BOTH: 3, NO_STATUS: 0, ROW: 1 };
let Lp = class Dv extends pn {
  static getType() {
    return "tablecell";
  }
  static clone(e) {
    return new Dv(e.__headerState, e.__colSpan, e.__width, e.__key);
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__rowSpan = e.__rowSpan, this.__backgroundColor = e.__backgroundColor, this.__verticalAlign = e.__verticalAlign;
  }
  static importDOM() {
    return { td: (e) => ({ conversion: _m, priority: 0 }), th: (e) => ({ conversion: _m, priority: 0 }) };
  }
  static importJSON(e) {
    return Ov().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setHeaderStyles(e.headerState).setColSpan(e.colSpan || 1).setRowSpan(e.rowSpan || 1).setWidth(e.width || void 0).setBackgroundColor(e.backgroundColor || null).setVerticalAlign(e.verticalAlign || void 0);
  }
  constructor(e = vs.NO_STATUS, n = 1, r, i) {
    super(i), this.__colSpan = n, this.__rowSpan = 1, this.__headerState = e, this.__width = r, this.__backgroundColor = null, this.__verticalAlign = void 0;
  }
  createDOM(e) {
    const n = document.createElement(this.getTag());
    return this.__width && (n.style.width = `${this.__width}px`), this.__colSpan > 1 && (n.colSpan = this.__colSpan), this.__rowSpan > 1 && (n.rowSpan = this.__rowSpan), this.__backgroundColor !== null && (n.style.backgroundColor = this.__backgroundColor), Qf(this.__verticalAlign) && (n.style.verticalAlign = this.__verticalAlign), un(n, e.theme.tableCell, this.hasHeader() && e.theme.tableCellHeader), n;
  }
  exportDOM(e) {
    const n = super.exportDOM(e);
    if (it(n.element)) {
      const r = n.element;
      r.setAttribute("data-temporary-table-cell-lexical-key", this.getKey()), r.style.border = "1px solid black", this.__colSpan > 1 && (r.colSpan = this.__colSpan), this.__rowSpan > 1 && (r.rowSpan = this.__rowSpan), r.style.width = `${this.getWidth() || 75}px`, r.style.verticalAlign = this.getVerticalAlign() || "top", r.style.textAlign = "start", this.__backgroundColor === null && this.hasHeader() && (r.style.backgroundColor = "#f2f3f5");
    }
    return n;
  }
  exportJSON() {
    return { ...super.exportJSON(), ...Qf(this.__verticalAlign) && { verticalAlign: this.__verticalAlign }, backgroundColor: this.getBackgroundColor(), colSpan: this.__colSpan, headerState: this.__headerState, rowSpan: this.__rowSpan, width: this.getWidth() };
  }
  getColSpan() {
    return this.getLatest().__colSpan;
  }
  setColSpan(e) {
    const n = this.getWritable();
    return n.__colSpan = e, n;
  }
  getRowSpan() {
    return this.getLatest().__rowSpan;
  }
  setRowSpan(e) {
    const n = this.getWritable();
    return n.__rowSpan = e, n;
  }
  getTag() {
    return this.hasHeader() ? "th" : "td";
  }
  setHeaderStyles(e, n = vs.BOTH) {
    const r = this.getWritable();
    return r.__headerState = e & n | r.__headerState & ~n, r;
  }
  getHeaderStyles() {
    return this.getLatest().__headerState;
  }
  setWidth(e) {
    const n = this.getWritable();
    return n.__width = e, n;
  }
  getWidth() {
    return this.getLatest().__width;
  }
  getBackgroundColor() {
    return this.getLatest().__backgroundColor;
  }
  setBackgroundColor(e) {
    const n = this.getWritable();
    return n.__backgroundColor = e, n;
  }
  getVerticalAlign() {
    return this.getLatest().__verticalAlign;
  }
  setVerticalAlign(e) {
    const n = this.getWritable();
    return n.__verticalAlign = e || void 0, n;
  }
  toggleHeaderStyle(e) {
    const n = this.getWritable();
    return (n.__headerState & e) === e ? n.__headerState -= e : n.__headerState += e, n;
  }
  hasHeaderState(e) {
    return (this.getHeaderStyles() & e) === e;
  }
  hasHeader() {
    return this.getLatest().__headerState !== vs.NO_STATUS;
  }
  updateDOM(e) {
    return e.__headerState !== this.__headerState || e.__width !== this.__width || e.__colSpan !== this.__colSpan || e.__rowSpan !== this.__rowSpan || e.__backgroundColor !== this.__backgroundColor || e.__verticalAlign !== this.__verticalAlign;
  }
  isShadowRoot() {
    return !0;
  }
  collapseAtStart() {
    return !0;
  }
  canBeEmpty() {
    return !1;
  }
  canIndent() {
    return !1;
  }
};
function Qf(t) {
  return t === "middle" || t === "bottom";
}
function _m(t) {
  const e = t, n = t.nodeName.toLowerCase();
  let r;
  Pp.test(e.style.width) && (r = parseFloat(e.style.width));
  const i = Ov(n === "th" ? vs.ROW : vs.NO_STATUS, e.colSpan, r);
  i.__rowSpan = e.rowSpan;
  const o = e.style.backgroundColor;
  o !== "" && (i.__backgroundColor = o);
  const s = e.style.verticalAlign;
  Qf(s) && (i.__verticalAlign = s);
  const a = e.style, l = (a && a.textDecoration || "").split(" "), c = a.fontWeight === "700" || a.fontWeight === "bold", u = l.includes("line-through"), f = a.fontStyle === "italic", d = l.includes("underline");
  return { after: (h) => {
    const g = [];
    let w = null;
    const v = () => {
      if (w) {
        const _ = w.getFirstChild();
        xo(_) && w.getChildrenSize() === 1 && _.remove();
      }
    };
    for (const _ of h) oE(_) || ie(_) || xo(_) ? (ie(_) && (c && _.toggleFormat("bold"), u && _.toggleFormat("strikethrough"), f && _.toggleFormat("italic"), d && _.toggleFormat("underline")), w ? w.append(_) : (w = Jn().append(_), g.push(w))) : (g.push(_), v(), w = null);
    return v(), g.length === 0 && g.push(Jn()), g;
  }, node: i };
}
function Ov(t = vs.NO_STATUS, e = 1, n) {
  return at(new Lp(t, e, n));
}
function Kn(t) {
  return t instanceof Lp;
}
function Pt(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
let Mv = class Iv extends pn {
  static getType() {
    return "tablerow";
  }
  static clone(e) {
    return new Iv(e.__height, e.__key);
  }
  static importDOM() {
    return { tr: (e) => ({ conversion: HN, priority: 0 }) };
  }
  static importJSON(e) {
    return Rv().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setHeight(e.height);
  }
  constructor(e, n) {
    super(n), this.__height = e;
  }
  exportJSON() {
    const e = this.getHeight();
    return { ...super.exportJSON(), ...e === void 0 ? void 0 : { height: e } };
  }
  createDOM(e) {
    const n = document.createElement("tr");
    return this.__height && (n.style.height = `${this.__height}px`), un(n, e.theme.tableRow), n;
  }
  extractWithChild(e, n, r) {
    return r === "html";
  }
  isShadowRoot() {
    return !0;
  }
  setHeight(e) {
    const n = this.getWritable();
    return n.__height = e, n;
  }
  getHeight() {
    return this.getLatest().__height;
  }
  updateDOM(e) {
    return e.__height !== this.__height;
  }
  canBeEmpty() {
    return !1;
  }
  canIndent() {
    return !1;
  }
};
function HN(t) {
  const e = t;
  let n;
  return Pp.test(e.style.height) && (n = parseFloat(e.style.height)), { after: (r) => hv(r, Kn), node: Rv(n) };
}
function Rv(t) {
  return at(new Mv(t));
}
function Dl(t) {
  return t instanceof Mv;
}
const Pv = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, WN = Pv && "documentMode" in document ? document.documentMode : null;
Pv && "InputEvent" in window && !WN && new window.InputEvent("input");
function KN(t, e, n) {
  const [r, i, o] = Lv(t, e, n);
  return i === null && Pt(207), o === null && Pt(208), [r, i, o];
}
function Lv(t, e, n) {
  const r = [];
  let i = null, o = null;
  function s(l) {
    let c = r[l];
    return c === void 0 && (r[l] = c = []), c;
  }
  const a = t.getChildren();
  for (let l = 0; l < a.length; l++) {
    const c = a[l];
    Dl(c) || Pt(209);
    const u = s(l);
    for (let f = c.getFirstChild(), d = 0; f != null; f = f.getNextSibling()) {
      for (Kn(f) || Pt(147); u[d] !== void 0; ) d++;
      const h = { cell: f, startColumn: d, startRow: l }, { __rowSpan: g, __colSpan: w } = f;
      for (let v = 0; v < g && !(l + v >= a.length); v++) {
        const _ = s(l + v);
        for (let b = 0; b < w; b++) _[d + b] = h;
      }
      e !== null && i === null && e.is(f) && (i = h), n !== null && o === null && n.is(f) && (o = h);
    }
  }
  return [r, i, o];
}
function GN(t) {
  let e;
  if (t instanceof Lp) e = t;
  else if ("__type" in t) {
    const i = _r(t, Kn);
    Kn(i) || Pt(148), e = i;
  } else {
    const i = _r(t.getNode(), Kn);
    Kn(i) || Pt(148), e = i;
  }
  const n = e.getParent();
  Dl(n) || Pt(149);
  const r = n.getParent();
  return qv(r) || Pt(210), [e, n, r];
}
function JN(t, e, n) {
  let r, i = Math.min(e.startColumn, n.startColumn), o = Math.min(e.startRow, n.startRow), s = Math.max(e.startColumn + e.cell.__colSpan - 1, n.startColumn + n.cell.__colSpan - 1), a = Math.max(e.startRow + e.cell.__rowSpan - 1, n.startRow + n.cell.__rowSpan - 1);
  do {
    r = !1;
    for (let l = 0; l < t.length; l++) for (let c = 0; c < t[0].length; c++) {
      const u = t[l][c];
      if (!u) continue;
      const f = u.startColumn + u.cell.__colSpan - 1, d = u.startRow + u.cell.__rowSpan - 1, h = u.startColumn <= s && f >= i, g = u.startRow <= a && d >= o;
      if (h && g) {
        const w = Math.min(i, u.startColumn), v = Math.max(s, f), _ = Math.min(o, u.startRow), b = Math.max(a, d);
        w === i && v === s && _ === o && b === a || (i = w, s = v, o = _, a = b, r = !0);
      }
    }
  } while (r);
  return { maxColumn: s, maxRow: a, minColumn: i, minRow: o };
}
function xm(t) {
  const [e, , n] = GN(t), r = n.getChildren(), i = r.length, o = r[0].getChildren().length, s = new Array(i);
  for (let a = 0; a < i; a++) s[a] = new Array(o);
  for (let a = 0; a < i; a++) {
    const l = r[a].getChildren();
    let c = 0;
    for (let u = 0; u < l.length; u++) {
      for (; s[a][c]; ) c++;
      const f = l[u], d = f.__rowSpan || 1, h = f.__colSpan || 1;
      for (let g = 0; g < d; g++) for (let w = 0; w < h; w++) s[a + g][c + w] = f;
      if (e === f) return { colSpan: h, columnIndex: c, rowIndex: a, rowSpan: d };
      c += h;
    }
  }
  return null;
}
function Cm(t) {
  const [[e, n, r, i], [o, s, a, l]] = ["anchor", "focus"].map((c) => {
    const u = t[c].getNode(), f = _r(u, Kn);
    Kn(f) || Pt(238, c, u.getKey(), u.getType());
    const d = f.getParent();
    Dl(d) || Pt(239, c);
    const h = d.getParent();
    return qv(h) || Pt(240, c), [u, f, d, h];
  });
  return i.is(l) || Pt(241), { anchorCell: n, anchorNode: e, anchorRow: r, anchorTable: i, focusCell: s, focusNode: o, focusRow: a, focusTable: l };
}
let XN = class $v {
  constructor(e, n, r) {
    this.anchor = n, this.focus = r, n._selection = this, r._selection = this, this._cachedNodes = null, this.dirty = !1, this.tableKey = e;
  }
  getStartEndPoints() {
    return [this.anchor, this.focus];
  }
  isValid() {
    return this.tableKey !== "root" && this.anchor.key !== "root" && this.anchor.type === "element" && this.focus.key !== "root" && this.focus.type === "element";
  }
  isBackward() {
    return this.focus.isBefore(this.anchor);
  }
  getCachedNodes() {
    return this._cachedNodes;
  }
  setCachedNodes(e) {
    this._cachedNodes = e;
  }
  is(e) {
    return Fv(e) && this.tableKey === e.tableKey && this.anchor.is(e.anchor) && this.focus.is(e.focus);
  }
  set(e, n, r) {
    this.dirty = this.dirty || e !== this.tableKey || n !== this.anchor.key || r !== this.focus.key, this.tableKey = e, this.anchor.key = n, this.focus.key = r, this._cachedNodes = null;
  }
  clone() {
    return new $v(this.tableKey, On(this.anchor.key, this.anchor.offset, this.anchor.type), On(this.focus.key, this.focus.offset, this.focus.type));
  }
  isCollapsed() {
    return !1;
  }
  extract() {
    return this.getNodes();
  }
  insertRawText(e) {
  }
  insertText() {
  }
  hasFormat(e) {
    let n = 0;
    this.getNodes().filter(Kn).forEach((i) => {
      const o = i.getFirstChild();
      vp(o) && (n |= o.getTextFormat());
    });
    const r = qi[e];
    return !!(n & r);
  }
  insertNodes(e) {
    const n = this.focus.getNode();
    X(n) || Pt(151), Ya(n.select(0, n.getChildrenSize())).insertNodes(e);
  }
  getShape() {
    const { anchorCell: e, focusCell: n } = Cm(this), r = xm(e);
    r === null && Pt(153);
    const i = xm(n);
    i === null && Pt(155);
    const o = Math.min(r.columnIndex, i.columnIndex), s = Math.max(r.columnIndex + r.colSpan - 1, i.columnIndex + i.colSpan - 1), a = Math.min(r.rowIndex, i.rowIndex), l = Math.max(r.rowIndex + r.rowSpan - 1, i.rowIndex + i.rowSpan - 1);
    return { fromX: Math.min(o, s), fromY: Math.min(a, l), toX: Math.max(o, s), toY: Math.max(a, l) };
  }
  getNodes() {
    if (!this.isValid()) return [];
    const e = this._cachedNodes;
    if (e !== null) return e;
    const { anchorTable: n, anchorCell: r, focusCell: i } = Cm(this), o = i.getParents()[1];
    if (o !== n) {
      if (n.isParentOf(i)) {
        const v = o.getParent();
        v == null && Pt(159), this.set(this.tableKey, i.getKey(), v.getKey());
      } else {
        const v = n.getParent();
        v == null && Pt(158), this.set(this.tableKey, v.getKey(), i.getKey());
      }
      return this.getNodes();
    }
    const [s, a, l] = KN(n, r, i), { minColumn: c, maxColumn: u, minRow: f, maxRow: d } = JN(s, a, l), h = /* @__PURE__ */ new Map([[n.getKey(), n]]);
    let g = null;
    for (let v = f; v <= d; v++) for (let _ = c; _ <= u; _++) {
      const { cell: b } = s[v][_], C = b.getParent();
      Dl(C) || Pt(160), C !== g && (h.set(C.getKey(), C), g = C), h.has(b.getKey()) || YN(b, (D) => {
        h.set(D.getKey(), D);
      });
    }
    const w = Array.from(h.values());
    return sa() || (this._cachedNodes = w), w;
  }
  getTextContent() {
    const e = this.getNodes().filter((r) => Kn(r));
    let n = "";
    for (let r = 0; r < e.length; r++) {
      const i = e[r], o = i.__parent, s = (e[r + 1] || {}).__parent;
      n += i.getTextContent() + (s !== o ? `
` : "	");
    }
    return n;
  }
};
function Fv(t) {
  return t instanceof XN;
}
function YN(t, e) {
  const n = [[t]];
  for (let r = n.at(-1); r !== void 0 && n.length > 0; r = n.at(-1)) {
    const i = r.pop();
    i === void 0 ? n.pop() : e(i) !== !1 && X(i) && n.push(i.getChildren());
  }
}
function Ta(t) {
  return it(t) && t.nodeName === "TABLE";
}
function QN(t, e) {
  for (let n = e, r = null; n !== null; n = n.getParent()) {
    if (t.is(n)) return r;
    Kn(n) && (r = n);
  }
  return null;
}
function ZN(t, e, n) {
  return QN(t, Ui(e, n));
}
function km(t, e, n) {
  if (!e.theme.tableAlignment) return;
  const r = [], i = [];
  for (const o of ["center", "right"]) {
    const s = e.theme.tableAlignment[o];
    s && (o === n ? i : r).push(s);
  }
  No(t, ...r), un(t, ...i);
}
const eS = /* @__PURE__ */ new WeakSet();
function Em(t = qu()) {
  return eS.has(t);
}
class Vu extends pn {
  static getType() {
    return "table";
  }
  getColWidths() {
    return this.getLatest().__colWidths;
  }
  setColWidths(e) {
    const n = this.getWritable();
    return n.__colWidths = e, n;
  }
  static clone(e) {
    return new Vu(e.__key);
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__colWidths = e.__colWidths, this.__rowStriping = e.__rowStriping, this.__frozenColumnCount = e.__frozenColumnCount, this.__frozenRowCount = e.__frozenRowCount;
  }
  static importDOM() {
    return { table: (e) => ({ conversion: tS, priority: 1 }) };
  }
  static importJSON(e) {
    return Bv().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setRowStriping(e.rowStriping || !1).setFrozenColumns(e.frozenColumnCount || 0).setFrozenRows(e.frozenRowCount || 0).setColWidths(e.colWidths);
  }
  constructor(e) {
    super(e), this.__rowStriping = !1, this.__frozenColumnCount = 0, this.__frozenRowCount = 0;
  }
  exportJSON() {
    return { ...super.exportJSON(), colWidths: this.getColWidths(), frozenColumnCount: this.__frozenColumnCount ? this.__frozenColumnCount : void 0, frozenRowCount: this.__frozenRowCount ? this.__frozenRowCount : void 0, rowStriping: this.__rowStriping ? this.__rowStriping : void 0 };
  }
  extractWithChild(e, n, r) {
    return r === "html";
  }
  getDOMSlot(e) {
    const n = Ta(e) ? e : e.querySelector("table");
    return Ta(n) || Pt(229), super.getDOMSlot(e).withElement(n).withAfter(n.querySelector("colgroup"));
  }
  createDOM(e, n) {
    const r = document.createElement("table");
    this.__style && (r.style.cssText = this.__style);
    const i = document.createElement("colgroup");
    if (r.appendChild(i), dE(i), un(r, e.theme.table), this.updateTableElement(null, r, e), Em(n)) {
      const o = document.createElement("div"), s = e.theme.tableScrollableWrapper;
      return s ? un(o, s) : o.style.cssText = "overflow-x: auto;", o.appendChild(r), this.updateTableWrapper(null, o, r, e), o;
    }
    return r;
  }
  updateTableWrapper(e, n, r, i) {
    this.__frozenColumnCount !== (e ? e.__frozenColumnCount : 0) && function(o, s, a, l) {
      l > 0 ? (un(o, a.theme.tableFrozenColumn), s.setAttribute("data-lexical-frozen-column", "true")) : (No(o, a.theme.tableFrozenColumn), s.removeAttribute("data-lexical-frozen-column"));
    }(n, r, i, this.__frozenColumnCount), this.__frozenRowCount !== (e ? e.__frozenRowCount : 0) && function(o, s, a, l) {
      l > 0 ? (un(o, a.theme.tableFrozenRow), s.setAttribute("data-lexical-frozen-row", "true")) : (No(o, a.theme.tableFrozenRow), s.removeAttribute("data-lexical-frozen-row"));
    }(n, r, i, this.__frozenRowCount);
  }
  updateTableElement(e, n, r) {
    this.__style !== (e ? e.__style : "") && (n.style.cssText = this.__style), this.__rowStriping !== (!!e && e.__rowStriping) && function(i, o, s) {
      s ? (un(i, o.theme.tableRowStriping), i.setAttribute("data-lexical-row-striping", "true")) : (No(i, o.theme.tableRowStriping), i.removeAttribute("data-lexical-row-striping"));
    }(n, r, this.__rowStriping), function(i, o, s, a) {
      const l = i.querySelector("colgroup");
      if (!l) return;
      const c = [];
      for (let u = 0; u < s; u++) {
        const f = document.createElement("col"), d = a && a[u];
        d && (f.style.width = `${d}px`), c.push(f);
      }
      l.replaceChildren(...c);
    }(n, 0, this.getColumnCount(), this.getColWidths()), km(n, r, this.getFormatType());
  }
  updateDOM(e, n, r) {
    const i = this.getDOMSlot(n).element;
    return n === i === Em() || (it(o = n) && o.nodeName === "DIV" && this.updateTableWrapper(e, n, i, r), this.updateTableElement(e, i, r), !1);
    var o;
  }
  exportDOM(e) {
    const n = super.exportDOM(e), { element: r } = n;
    return { after: (i) => {
      if (n.after && (i = n.after(i)), !Ta(i) && it(i) && (i = i.querySelector("table")), !Ta(i)) return null;
      km(i, e._config, this.getFormatType());
      const [o] = Lv(this, null, null), s = /* @__PURE__ */ new Map();
      for (const u of o) for (const f of u) {
        const d = f.cell.getKey();
        s.has(d) || s.set(d, { colSpan: f.cell.getColSpan(), startColumn: f.startColumn });
      }
      const a = /* @__PURE__ */ new Set();
      for (const u of i.querySelectorAll(":scope > tr > [data-temporary-table-cell-lexical-key]")) {
        const f = u.getAttribute("data-temporary-table-cell-lexical-key");
        if (f) {
          const d = s.get(f);
          if (u.removeAttribute("data-temporary-table-cell-lexical-key"), d) {
            s.delete(f);
            for (let h = 0; h < d.colSpan; h++) a.add(h + d.startColumn);
          }
        }
      }
      const l = i.querySelector(":scope > colgroup");
      if (l) {
        const u = Array.from(i.querySelectorAll(":scope > colgroup > col")).filter((f, d) => a.has(d));
        l.replaceChildren(...u);
      }
      const c = i.querySelectorAll(":scope > tr");
      if (c.length > 0) {
        const u = document.createElement("tbody");
        for (const f of c) u.appendChild(f);
        i.append(u);
      }
      return i;
    }, element: !Ta(r) && it(r) ? r.querySelector("table") : r };
  }
  canBeEmpty() {
    return !1;
  }
  isShadowRoot() {
    return !0;
  }
  getCordsFromCellNode(e, n) {
    const { rows: r, domRows: i } = n;
    for (let o = 0; o < r; o++) {
      const s = i[o];
      if (s != null) for (let a = 0; a < s.length; a++) {
        const l = s[a];
        if (l == null) continue;
        const { elem: c } = l, u = ZN(this, c);
        if (u !== null && e.is(u)) return { x: a, y: o };
      }
    }
    throw new Error("Cell not found in table.");
  }
  getDOMCellFromCords(e, n, r) {
    const { domRows: i } = r, o = i[n];
    if (o == null) return null;
    const s = o[e < o.length ? e : o.length - 1];
    return s ?? null;
  }
  getDOMCellFromCordsOrThrow(e, n, r) {
    const i = this.getDOMCellFromCords(e, n, r);
    if (!i) throw new Error("Cell not found at cords.");
    return i;
  }
  getCellNodeFromCords(e, n, r) {
    const i = this.getDOMCellFromCords(e, n, r);
    if (i == null) return null;
    const o = Ui(i.elem);
    return Kn(o) ? o : null;
  }
  getCellNodeFromCordsOrThrow(e, n, r) {
    const i = this.getCellNodeFromCords(e, n, r);
    if (!i) throw new Error("Node at cords not TableCellNode.");
    return i;
  }
  getRowStriping() {
    return !!this.getLatest().__rowStriping;
  }
  setRowStriping(e) {
    const n = this.getWritable();
    return n.__rowStriping = e, n;
  }
  setFrozenColumns(e) {
    const n = this.getWritable();
    return n.__frozenColumnCount = e, n;
  }
  getFrozenColumns() {
    return this.getLatest().__frozenColumnCount;
  }
  setFrozenRows(e) {
    const n = this.getWritable();
    return n.__frozenRowCount = e, n;
  }
  getFrozenRows() {
    return this.getLatest().__frozenRowCount;
  }
  canSelectBefore() {
    return !0;
  }
  canIndent() {
    return !1;
  }
  getColumnCount() {
    const e = this.getFirstChild();
    if (!e) return 0;
    let n = 0;
    return e.getChildren().forEach((r) => {
      Kn(r) && (n += r.getColSpan());
    }), n;
  }
}
function tS(t) {
  const e = Bv();
  t.hasAttribute("data-lexical-row-striping") && e.setRowStriping(!0), t.hasAttribute("data-lexical-frozen-column") && e.setFrozenColumns(1), t.hasAttribute("data-lexical-frozen-row") && e.setFrozenRows(1);
  const n = t.querySelector(":scope > colgroup");
  if (n) {
    let r = [];
    for (const i of n.querySelectorAll(":scope > col")) {
      let o = i.style.width || "";
      if (!Pp.test(o) && (o = i.getAttribute("width") || "", !/^\d+$/.test(o))) {
        r = void 0;
        break;
      }
      r.push(parseFloat(o));
    }
    r && e.setColWidths(r);
  }
  return { after: (r) => hv(r, Dl), node: e };
}
function Bv() {
  return at(new Vu());
}
function qv(t) {
  return t instanceof Vu;
}
const jv = Object.freeze({ "	": "\\t", "\n": "\\n" }), Nm = new RegExp(Object.keys(jv).join("|"), "g"), qr = Object.freeze({ ancestorHasNextSibling: "|", ancestorIsLastChild: " ", hasNextSibling: "├", isLastChild: "└", selectedChar: "^", selectedLine: ">" }), nS = [(t) => t.hasFormat("bold") && "Bold", (t) => t.hasFormat("code") && "Code", (t) => t.hasFormat("italic") && "Italic", (t) => t.hasFormat("strikethrough") && "Strikethrough", (t) => t.hasFormat("subscript") && "Subscript", (t) => t.hasFormat("superscript") && "Superscript", (t) => t.hasFormat("underline") && "Underline", (t) => t.hasFormat("highlight") && "Highlight"], rS = [(t) => t.hasTextFormat("bold") && "Bold", (t) => t.hasTextFormat("code") && "Code", (t) => t.hasTextFormat("italic") && "Italic", (t) => t.hasTextFormat("strikethrough") && "Strikethrough", (t) => t.hasTextFormat("subscript") && "Subscript", (t) => t.hasTextFormat("superscript") && "Superscript", (t) => t.hasTextFormat("underline") && "Underline", (t) => t.hasTextFormat("highlight") && "Highlight"], iS = [(t) => t.isDirectionless() && "Directionless", (t) => t.isUnmergeable() && "Unmergeable"], oS = [(t) => t.isToken() && "Token", (t) => t.isSegmented() && "Segmented"];
function sS(t, e, n, r, i = !1) {
  const o = t.getEditorState(), s = t._config, a = t._compositionKey, l = t._editable;
  if (n) {
    let d = "";
    return o.read(() => {
      d = function(h) {
        const g = document.createElement("div");
        return g.innerHTML = h.trim(), zv(g, 0).innerHTML;
      }(yv(t));
    }), d;
  }
  let c = ` root
`;
  const u = o.read(() => {
    const d = oe();
    return Uv(Ve(), (h, g) => {
      const w = `(${h.getKey()})`, v = h.getType() || "", _ = h.isSelected();
      c += `${_ ? qr.selectedLine : " "} ${g.join(" ")} ${w} ${v} ${function(b, C, D = !1) {
        const R = C ? C(b, D) : void 0;
        if (R !== void 0 && R.length > 0) return R;
        if (ie(b)) {
          const N = b.getTextContent(), L = N.length === 0 ? "(empty)" : `"${Sm(N, D)}"`, M = function(O) {
            return [Tm(O), aS(O), lS(O), Am(O)].filter(Boolean).join(", ");
          }(b);
          return [L, M.length !== 0 ? `{ ${M} }` : null].filter(Boolean).join(" ").trim();
        }
        if (LN(b)) {
          const N = b.getURL(), L = N.length === 0 ? "(empty)" : `"${Sm(N, D)}"`, M = function(O) {
            return [cS(O), uS(O), dS(O), Am(O)].filter(Boolean).join(", ");
          }(b);
          return [L, M.length !== 0 ? `{ ${M} }` : null].filter(Boolean).join(" ").trim();
        }
        if (FN(b)) return `ids: [ ${b.getIDs().join(", ")} ]`;
        if (vp(b)) {
          const N = function(M) {
            let O = rS.map((j) => j(M)).filter(Boolean).join(", ").toLocaleLowerCase();
            return O !== "" && (O = "format: " + O), O;
          }(b);
          let L = N !== "" ? `{ ${N} }` : "";
          return L += b.__style ? `(${b.__style})` : "", L;
        }
        return "";
      }(h, r, i)}
`, c += function({ indent: b, isSelected: C, node: D, nodeKeyDisplay: R, selection: N, typeDisplay: L }) {
        if (!ie(D) || !Z(N) || !C || X(D)) return "";
        const M = N.anchor, O = N.focus;
        if (D.getTextContent() === "" || M.getNode() === N.focus.getNode() && M.offset === O.offset) return "";
        const [j, k] = function(V, J) {
          const H = J.getStartEndPoints();
          if (bn(J) || H === null) return [-1, -1];
          const [K, ne] = H, re = V.getTextContent(), te = re.length;
          let Q = -1, ce = -1;
          if (K.type === "text" && ne.type === "text") {
            const ye = K.getNode(), ve = ne.getNode();
            ye === ve && V === ye && K.offset !== ne.offset ? [Q, ce] = K.offset < ne.offset ? [K.offset, ne.offset] : [ne.offset, K.offset] : [Q, ce] = V === ye ? ye.isBefore(ve) ? [K.offset, te] : [0, K.offset] : V === ve ? ve.isBefore(ye) ? [ne.offset, te] : [0, ne.offset] : [0, te];
          }
          const pe = (re.slice(0, Q).match(Nm) || []).length, we = (re.slice(Q, ce).match(Nm) || []).length;
          return [Q + pe, ce + pe + we];
        }(D, N);
        if (j === k) return "";
        const I = b[b.length - 1] === qr.hasNextSibling ? qr.ancestorHasNextSibling : qr.ancestorIsLastChild, S = [...b.slice(0, b.length - 1), I], P = Array(j + 1).fill(" "), T = Array(k - j).fill(qr.selectedChar), A = L.length + 2, B = Array(R.length + A).fill(" ");
        return [qr.selectedLine, S.join(" "), [...B, ...P, ...T].join("")].join(" ") + `
`;
      }({ indent: g, isSelected: _, node: h, nodeKeyDisplay: w, selection: d, typeDisplay: v });
    }), d === null ? ": null" : Z(d) ? function(h) {
      let g = "";
      const w = Tm(h);
      g += `: range ${w !== "" ? `{ ${w} }` : ""} ${h.style !== "" ? `{ style: ${h.style} } ` : ""}`;
      const v = h.anchor, _ = h.focus, b = v.offset, C = _.offset;
      return g += `
  ├ anchor { key: ${v.key}, offset: ${b === null ? "null" : b}, type: ${v.type} }`, g += `
  └ focus { key: ${_.key}, offset: ${C === null ? "null" : C}, type: ${_.type} }`, g;
    }(d) : Fv(d) ? function(h) {
      return `: table
  └ { table: ${h.tableKey}, anchorCell: ${h.anchor.key}, focusCell: ${h.focus.key} }`;
    }(d) : function(h) {
      return bn(h) ? `: node
  └ [${Array.from(h._nodes).join(", ")}]` : "";
    }(d);
  });
  if (c += `
 selection` + u, c += `

 commands:`, e.length) for (const { index: d, type: h, payload: g } of e) c += `
  └ ${d}. { type: ${h}, payload: ${g instanceof Event ? g.constructor.name : g} }`;
  else c += `
  └ None dispatched.`;
  const { version: f } = t.constructor;
  return c += `

 editor${f ? ` (v${f})` : ""}:`, c += `
  └ namespace ${s.namespace}`, a !== null && (c += `
  └ compositionKey ${a}`), c += `
  └ editable ${String(l)}`, c;
}
function Uv(t, e, n = []) {
  const r = t.getChildren(), i = r.length;
  r.forEach((o, s) => {
    e(o, n.concat(s === i - 1 ? qr.isLastChild : qr.hasNextSibling)), X(o) && Uv(o, e, n.concat(s === i - 1 ? qr.ancestorIsLastChild : qr.ancestorHasNextSibling));
  });
}
function Sm(t, e = !1) {
  const n = Object.entries(jv).reduce((r, [i, o]) => r.replace(new RegExp(i, "g"), String(o)), t);
  return e ? n.replace(/[^\s]/g, "*") : n;
}
function aS(t) {
  let e = iS.map((n) => n(t)).filter(Boolean).join(", ").toLocaleLowerCase();
  return e !== "" && (e = "detail: " + e), e;
}
function lS(t) {
  let e = oS.map((n) => n(t)).filter(Boolean).join(", ").toLocaleLowerCase();
  return e !== "" && (e = "mode: " + e), e;
}
function Tm(t) {
  let e = nS.map((n) => n(t)).filter(Boolean).join(", ").toLocaleLowerCase();
  return e !== "" && (e = "format: " + e), e;
}
function cS(t) {
  let e = t.getTarget();
  return e != null && (e = "target: " + e), e;
}
function uS(t) {
  let e = t.getRel();
  return e != null && (e = "rel: " + e), e;
}
function dS(t) {
  let e = t.getTitle();
  return e != null && (e = "title: " + e), e;
}
function Am(t) {
  if (!t.__state) return !1;
  const e = [];
  for (const [r, i] of t.__state.knownState.entries()) {
    if (r.isEqual(i, r.defaultValue)) continue;
    const o = JSON.stringify(r.unparse(i));
    e.push(`[${r.key}: ${o}]`);
  }
  let n = e.join(",");
  return n !== "" && (n = "state: " + n), n;
}
function zv(t, e) {
  const n = new Array(1 + e++).join("  "), r = new Array(e - 1).join("  ");
  let i;
  for (let o = 0; o < t.children.length; o++) i = document.createTextNode(`
` + n), t.insertBefore(i, t.children[o]), zv(t.children[o], e), t.lastElementChild === t.children[o] && (i = document.createTextNode(`
` + r), t.appendChild(i));
  return t;
}
const fS = Yn(function({ treeTypeButtonClassName: t, timeTravelButtonClassName: e, timeTravelPanelSliderClassName: n, timeTravelPanelButtonClassName: r, viewClassName: i, timeTravelPanelClassName: o, editorState: s, setEditorState: a, setEditorReadOnly: l, generateContent: c, commandsLog: u = [] }, f) {
  const [d, h] = fe([]), [g, w] = fe(""), [v, _] = fe(!1), [b, C] = fe(!1), D = xe(0), R = xe(null), [N, L] = fe(!1), [M, O] = fe(!1), [j, k] = fe(!1), I = xe(), S = xe([]), P = xe(0), T = be((B) => {
    const V = ++P.current;
    c(B).then((J) => {
      V === P.current && w(J);
    }).catch((J) => {
      V === P.current && w(`Error rendering tree: ${J.message}

Stack:
${J.stack}`);
    });
  }, [c]);
  ue(() => {
    if (!(!j && s._nodeMap.size > 1e3 && (O(!0), !j)) && (I.current !== s || S.current !== u)) {
      const B = I.current !== s;
      I.current = s, S.current = u, T(b), !v && B && h((V) => [...V, [Date.now(), s]]);
    }
  }, [s, T, b, j, v, u]);
  const A = d.length;
  return ue(() => {
    if (N) {
      let B;
      const V = () => {
        const J = D.current;
        if (J === A - 1) return void L(!1);
        const H = d[J][0], K = d[J + 1][0];
        B = setTimeout(() => {
          D.current++;
          const ne = D.current, re = R.current;
          re !== null && (re.value = String(ne)), a(d[ne][1]), V();
        }, K - H);
      };
      return V(), () => {
        clearTimeout(B);
      };
    }
  }, [d, N, A, a]), q("div", { className: i, children: [!j && M ? q("div", { style: { padding: 20 }, children: [p("span", { style: { marginRight: 20 }, children: "Detected large EditorState, this can impact debugging performance." }), p("button", { onClick: () => {
    k(!0);
  }, style: { background: "transparent", border: "1px solid white", color: "white", cursor: "pointer", padding: 5 }, children: "Show full tree" })] }) : null, j ? null : p("button", { onClick: () => (T(!b), void C(!b)), className: t, type: "button", children: b ? "Tree" : "Export DOM" }), !v && (j || !M) && A > 2 && p("button", { onClick: () => {
    l(!0), D.current = A - 1, _(!0);
  }, className: e, type: "button", children: "Time Travel" }), (j || !M) && p("pre", { ref: f, children: g }), v && (j || !M) && q("div", { className: o, children: [p("button", { className: r, onClick: () => {
    D.current === A - 1 && (D.current = 1), L(!N);
  }, type: "button", children: N ? "Pause" : "Play" }), p("input", { className: n, ref: R, onChange: (B) => {
    const V = Number(B.target.value), J = d[V];
    J && (D.current = V, a(J[1]));
  }, type: "range", min: "1", max: A - 1 }), p("button", { className: r, onClick: () => {
    l(!1);
    const B = d.length - 1, V = d[B];
    a(V[1]);
    const J = R.current;
    J !== null && (J.value = String(B)), _(!1), L(!1);
  }, type: "button", children: "Exit" })] })] });
});
function hS(t, e) {
  const n = /* @__PURE__ */ new Set();
  let r = 0;
  for (const [i] of t._commands) n.add(t.registerCommand(i, (o) => (e((s) => {
    r += 1;
    const a = [...s];
    return a.push({ index: r, payload: o, type: i.type ? i.type : "UNKNOWN" }), a.length > 10 && a.shift(), a;
  }), !1), bs));
  return () => n.forEach((i) => i());
}
function pS(t) {
  const [e, n] = fe([]);
  return ue(() => hS(t, n), [t]), Ne(() => e, [e]);
}
function gS({ treeTypeButtonClassName: t, timeTravelButtonClassName: e, timeTravelPanelSliderClassName: n, timeTravelPanelButtonClassName: r, timeTravelPanelClassName: i, viewClassName: o, editor: s, customPrintNode: a }) {
  const l = ps.createRef(), [c, u] = fe(s.getEditorState()), f = pS(s);
  return ue(() => Ht(s.registerUpdateListener(({ editorState: d }) => {
    u(d);
  }), s.registerEditableListener(() => {
    u(s.getEditorState());
  })), [s]), ue(() => {
    const d = l.current;
    if (d !== null) return d.__lexicalEditor = s, () => {
      d.__lexicalEditor = null;
    };
  }, [s, l]), p(fS, { treeTypeButtonClassName: t, timeTravelButtonClassName: e, timeTravelPanelSliderClassName: n, timeTravelPanelButtonClassName: r, viewClassName: o, timeTravelPanelClassName: i, setEditorReadOnly: (d) => {
    const h = s.getRootElement();
    h != null && (h.contentEditable = d ? "false" : "true");
  }, editorState: c, setEditorState: (d) => s.setEditorState(d), generateContent: async function(d) {
    return sS(s, f, d, a);
  }, ref: l, commandsLog: f });
}
const Vv = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, wS = Vv ? Cn : ue, ac = { tag: Co };
function Hv({ initialConfig: t, children: e }) {
  const n = Ne(() => {
    const { theme: r, namespace: i, nodes: o, onError: s, editorState: a, html: l } = t, c = ON(null, r), u = Yk({ editable: t.editable, html: l, namespace: i, nodes: o, onError: (f) => s(f, u), theme: r });
    return function(f, d) {
      if (d !== null) {
        if (d === void 0) f.update(() => {
          const h = Ve();
          if (h.isEmpty()) {
            const g = Jn();
            h.append(g);
            const w = Vv ? document.activeElement : null;
            (oe() !== null || w !== null && w === f.getRootElement()) && g.select();
          }
        }, ac);
        else if (d !== null) switch (typeof d) {
          case "string": {
            const h = f.parseEditorState(d);
            f.setEditorState(h, ac);
            break;
          }
          case "object":
            f.setEditorState(d, ac);
            break;
          case "function":
            f.update(() => {
              Ve().isEmpty() && d(f);
            }, ac);
        }
      }
    }(u, a), [u, c];
  }, []);
  return wS(() => {
    const r = t.editable, [i] = n;
    i.setEditable(r === void 0 || r);
  }, []), p(bv.Provider, { value: n, children: e });
}
function Wv() {
  return Ve().getTextContent();
}
function Kv(t, e = !0) {
  if (t) return !1;
  let n = Wv();
  return e && (n = n.trim()), n === "";
}
function mS(t) {
  if (!Kv(t, !1)) return !1;
  const e = Ve().getChildren(), n = e.length;
  if (n > 1) return !1;
  for (let r = 0; r < n; r++) {
    const i = e[r];
    if (Xe(i)) return !1;
    if (X(i)) {
      if (!vp(i) || i.__indent !== 0) return !1;
      const o = i.getChildren(), s = o.length;
      for (let a = 0; a < s; a++) {
        const l = o[r];
        if (!ie(l)) return !1;
      }
    }
  }
  return !0;
}
function $p(t) {
  return () => mS(t);
}
const Gv = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function bS({ editor: t, ariaActiveDescendant: e, ariaAutoComplete: n, ariaControls: r, ariaDescribedBy: i, ariaErrorMessage: o, ariaExpanded: s, ariaInvalid: a, ariaLabel: l, ariaLabelledBy: c, ariaMultiline: u, ariaOwns: f, ariaRequired: d, autoCapitalize: h, className: g, id: w, role: v = "textbox", spellCheck: _ = !0, style: b, tabIndex: C, "data-testid": D, ...R }, N) {
  const [L, M] = fe(t.isEditable()), O = be((k) => {
    k && k.ownerDocument && k.ownerDocument.defaultView ? t.setRootElement(k) : t.setRootElement(null);
  }, [t]), j = Ne(() => /* @__PURE__ */ function(...k) {
    return (I) => {
      k.forEach((S) => {
        typeof S == "function" ? S(I) : S != null && (S.current = I);
      });
    };
  }(N, O), [O, N]);
  return Gv(() => (M(t.isEditable()), t.registerEditableListener((k) => {
    M(k);
  })), [t]), p("div", { "aria-activedescendant": L ? e : void 0, "aria-autocomplete": L ? n : "none", "aria-controls": L ? r : void 0, "aria-describedby": i, ...o != null ? { "aria-errormessage": o } : {}, "aria-expanded": L && v === "combobox" ? !!s : void 0, ...a != null ? { "aria-invalid": a } : {}, "aria-label": l, "aria-labelledby": c, "aria-multiline": u, "aria-owns": L ? f : void 0, "aria-readonly": !L || void 0, "aria-required": d, autoCapitalize: h, className: g, contentEditable: L, "data-testid": D, id: w, ref: j, role: v, spellCheck: _, style: b, tabIndex: C, ...R });
}
const yS = Yn(bS);
function Dm(t) {
  return t.getEditorState().read($p(t.isComposing()));
}
const Jv = Yn(vS);
function vS(t, e) {
  const { placeholder: n, ...r } = t, [i] = Le();
  return q(Lt, { children: [p(yS, { editor: i, ...r, ref: e }), n != null && p(_S, { editor: i, content: n })] });
}
function _S({ content: t, editor: e }) {
  const n = function(s) {
    const [a, l] = fe(() => Dm(s));
    return Gv(() => {
      function c() {
        const u = Dm(s);
        l(u);
      }
      return c(), Ht(s.registerUpdateListener(() => {
        c();
      }), s.registerEditableListener(() => {
        c();
      }));
    }, [s]), a;
  }(e), [r, i] = fe(e.isEditable());
  if (Cn(() => (i(e.isEditable()), e.registerEditableListener((s) => {
    i(s);
  })), [e]), !n) return null;
  let o = null;
  return typeof t == "function" ? o = t(r) : t !== null && (o = t), o === null ? null : p("div", { "aria-hidden": !0, children: o });
}
function Xv({ editorRef: t }) {
  const [e] = Le();
  return ps.useEffect(() => {
    typeof t == "function" ? t(e) : typeof t == "object" && (t.current = e);
  }, [e]), null;
}
function Zf(t, e) {
  return Zf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, Zf(t, e);
}
var Om = { error: null }, xS = function(t) {
  var e, n;
  function r() {
    for (var o, s = arguments.length, a = new Array(s), l = 0; l < s; l++) a[l] = arguments[l];
    return (o = t.call.apply(t, [this].concat(a)) || this).state = Om, o.resetErrorBoundary = function() {
      for (var c, u = arguments.length, f = new Array(u), d = 0; d < u; d++) f[d] = arguments[d];
      o.props.onReset == null || (c = o.props).onReset.apply(c, f), o.reset();
    }, o;
  }
  n = t, (e = r).prototype = Object.create(n.prototype), e.prototype.constructor = e, Zf(e, n), r.getDerivedStateFromError = function(o) {
    return { error: o };
  };
  var i = r.prototype;
  return i.reset = function() {
    this.setState(Om);
  }, i.componentDidCatch = function(o, s) {
    var a, l;
    (a = (l = this.props).onError) == null || a.call(l, o, s);
  }, i.componentDidUpdate = function(o, s) {
    var a, l, c, u, f = this.state.error, d = this.props.resetKeys;
    f !== null && s.error !== null && ((c = o.resetKeys) === void 0 && (c = []), (u = d) === void 0 && (u = []), c.length !== u.length || c.some(function(h, g) {
      return !Object.is(h, u[g]);
    })) && ((a = (l = this.props).onResetKeysChange) == null || a.call(l, o.resetKeys, d), this.reset());
  }, i.render = function() {
    var o = this.state.error, s = this.props, a = s.fallbackRender, l = s.FallbackComponent, c = s.fallback;
    if (o !== null) {
      var u = { error: o, resetErrorBoundary: this.resetErrorBoundary };
      if (ps.isValidElement(c)) return c;
      if (typeof a == "function") return a(u);
      if (l) return ps.createElement(l, u);
      throw new Error("react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop");
    }
    return this.props.children;
  }, r;
}(ps.Component);
function Yv({ children: t, onError: e }) {
  return p(xS, { fallback: p("div", { style: { border: "1px solid #f00", color: "#f00", padding: "8px" }, children: "An error was thrown." }), onError: e, children: t });
}
const lc = 0, eh = 1, th = 2, hr = 0, CS = 1, Mm = 2, kS = 3, ES = 4;
function NS(t, e, n, r, i) {
  if (t === null || n.size === 0 && r.size === 0 && !i) return hr;
  const o = e._selection, s = t._selection;
  if (i) return CS;
  if (!(Z(o) && Z(s) && s.isCollapsed() && o.isCollapsed())) return hr;
  const a = function(_, b, C) {
    const D = _._nodeMap, R = [];
    for (const N of b) {
      const L = D.get(N);
      L !== void 0 && R.push(L);
    }
    for (const [N, L] of C) {
      if (!L) continue;
      const M = D.get(N);
      M === void 0 || tn(M) || R.push(M);
    }
    return R;
  }(e, n, r);
  if (a.length === 0) return hr;
  if (a.length > 1) {
    const _ = e._nodeMap, b = _.get(o.anchor.key), C = _.get(s.anchor.key);
    return b && C && !t._nodeMap.has(b.__key) && ie(b) && b.__text.length === 1 && o.anchor.offset === 1 ? Mm : hr;
  }
  const l = a[0], c = t._nodeMap.get(l.__key);
  if (!ie(c) || !ie(l) || c.__mode !== l.__mode) return hr;
  const u = c.__text, f = l.__text;
  if (u === f) return hr;
  const d = o.anchor, h = s.anchor;
  if (d.key !== h.key || d.type !== "text") return hr;
  const g = d.offset, w = h.offset, v = f.length - u.length;
  return v === 1 && w === g - 1 ? Mm : v === -1 && w === g + 1 ? kS : v === -1 && w === g ? ES : hr;
}
function SS(t, e) {
  let n = Date.now(), r = hr;
  return (i, o, s, a, l, c) => {
    const u = Date.now();
    if (c.has(qf)) return r = hr, n = u, th;
    const f = NS(i, o, a, l, t.isComposing()), d = (() => {
      const h = s === null || s.editor === t, g = c.has(Wk);
      if (!g && h && c.has(Co)) return lc;
      if (i === null) return eh;
      const w = o._selection;
      return a.size > 0 || l.size > 0 ? g === !1 && f !== hr && f === r && u < n + e && h || a.size === 1 && function(v, _, b) {
        const C = _._nodeMap.get(v), D = b._nodeMap.get(v), R = _._selection, N = b._selection;
        return !(Z(R) && Z(N) && R.anchor.type === "element" && R.focus.type === "element" && N.anchor.type === "text" && N.focus.type === "text" || !ie(C) || !ie(D) || C.__parent !== D.__parent) && JSON.stringify(_.read(() => C.exportJSON())) === JSON.stringify(b.read(() => D.exportJSON()));
      }(Array.from(a)[0], i, o) ? lc : eh : w !== null ? lc : th;
    })();
    return n = u, r = f, d;
  };
}
function Im(t) {
  t.undoStack = [], t.redoStack = [], t.current = null;
}
function TS(t, e, n) {
  const r = SS(t, n);
  return Ht(t.registerCommand(vl, () => (function(o, s) {
    const a = s.redoStack, l = s.undoStack;
    if (l.length !== 0) {
      const c = s.current, u = l.pop();
      c !== null && (a.push(c), o.dispatchCommand(Ra, !0)), l.length === 0 && o.dispatchCommand(Pa, !1), s.current = u || null, u && u.editor.setEditorState(u.editorState, { tag: qf });
    }
  }(t, e), !0), ke), t.registerCommand(_l, () => (function(o, s) {
    const a = s.redoStack, l = s.undoStack;
    if (a.length !== 0) {
      const c = s.current;
      c !== null && (l.push(c), o.dispatchCommand(Pa, !0));
      const u = a.pop();
      a.length === 0 && o.dispatchCommand(Ra, !1), s.current = u || null, u && u.editor.setEditorState(u.editorState, { tag: qf });
    }
  }(t, e), !0), ke), t.registerCommand(hp, () => (Im(e), !1), ke), t.registerCommand(c0, () => (Im(e), t.dispatchCommand(Ra, !1), t.dispatchCommand(Pa, !1), !0), ke), t.registerUpdateListener(({ editorState: o, prevEditorState: s, dirtyLeaves: a, dirtyElements: l, tags: c }) => {
    const u = e.current, f = e.redoStack, d = e.undoStack, h = u === null ? null : u.editorState;
    if (u !== null && o === h) return;
    const g = r(s, o, u, a, l, c);
    if (g === eh) f.length !== 0 && (e.redoStack = [], t.dispatchCommand(Ra, !1)), u !== null && (d.push({ ...u }), t.dispatchCommand(Pa, !0));
    else if (g === th) return;
    e.current = { editor: t, editorState: o };
  }));
}
function AS() {
  return { current: null, redoStack: [], undoStack: [] };
}
function Qv({ delay: t, externalHistoryState: e }) {
  const [n] = Le();
  return function(r, i, o = 1e3) {
    const s = Ne(() => i || AS(), [i]);
    ue(() => TS(r, s, o), [o, r, s]);
  }(n, e, t), null;
}
const DS = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function OS(t) {
  return { initialValueFn: () => t.isEditable(), subscribe: (e) => t.registerEditableListener(e) };
}
function Zv() {
  return function(t) {
    const [e] = Le(), n = Ne(() => t(e), [e, t]), [r, i] = fe(() => n.initialValueFn()), o = xe(r);
    return DS(() => {
      const { initialValueFn: s, subscribe: a } = n, l = s();
      return o.current !== l && (o.current = l, i(l)), a((c) => {
        o.current = c, i(c);
      });
    }, [n, t]), r;
  }(OS);
}
function e_(t) {
  const e = window.location.origin, n = (r) => {
    if (r.origin !== e) return;
    const i = t.getRootElement();
    if (document.activeElement !== i) return;
    const o = r.data;
    if (typeof o == "string") {
      let s;
      try {
        s = JSON.parse(o);
      } catch {
        return;
      }
      if (s && s.protocol === "nuanria_messaging" && s.type === "request") {
        const a = s.payload;
        if (a && a.functionId === "makeChanges") {
          const l = a.args;
          if (l) {
            const [c, u, f, d, h, g] = l;
            t.update(() => {
              const w = oe();
              if (Z(w)) {
                const v = w.anchor;
                let _ = v.getNode(), b = 0, C = 0;
                if (ie(_) && c >= 0 && u >= 0 && (b = c, C = c + u, w.setTextNodeRange(_, b, _, C)), b === C && f === "" || (w.insertRawText(f), _ = v.getNode()), ie(_)) {
                  b = d, C = d + h;
                  const D = _.getTextContentSize();
                  b = b > D ? D : b, C = C > D ? D : C, w.setTextNodeRange(_, b, _, C);
                }
                r.stopImmediatePropagation();
              }
            });
          }
        }
      }
    }
  };
  return window.addEventListener("message", n, !0), () => {
    window.removeEventListener("message", n, !0);
  };
}
function Rm(t, e) {
  if (document.caretRangeFromPoint !== void 0) {
    const n = document.caretRangeFromPoint(t, e);
    return n === null ? null : { node: n.startContainer, offset: n.startOffset };
  }
  if (document.caretPositionFromPoint !== "undefined") {
    const n = document.caretPositionFromPoint(t, e);
    return n === null ? null : { node: n.offsetNode, offset: n.offset };
  }
  return null;
}
const ca = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, MS = ca && "documentMode" in document ? document.documentMode : null, IS = !(!ca || !("InputEvent" in window) || MS) && "getTargetRanges" in new window.InputEvent("input"), RS = ca && /Version\/[\d.]+.*Safari/.test(navigator.userAgent), Pm = ca && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream, PS = ca && /^(?=.*Chrome).*/i.test(navigator.userAgent), LS = ca && /AppleWebKit\/[\d.]+/.test(navigator.userAgent) && !PS, Lm = Se("DRAG_DROP_PASTE_FILE");
function cc(t) {
  let e = null;
  if (gi(t, DragEvent) ? e = t.dataTransfer : gi(t, ClipboardEvent) && (e = t.clipboardData), e === null) return [!1, [], !1];
  const n = e.types, r = n.includes("Files"), i = n.includes("text/html") || n.includes("text/plain");
  return [r, Array.from(e.files), i];
}
function $m(t) {
  const e = oe();
  if (!Z(e)) return !1;
  const n = /* @__PURE__ */ new Set(), r = e.getNodes();
  for (let i = 0; i < r.length; i++) {
    const o = r[i], s = o.getKey();
    if (n.has(s)) continue;
    const a = _r(o, (c) => X(c) && !c.isInline());
    if (a === null) continue;
    const l = a.getKey();
    a.canIndent() && !n.has(l) && (n.add(l), t(a));
  }
  return n.size > 0;
}
function Fm(t) {
  const e = Ui(t);
  return Xe(e);
}
function Gd(t) {
  for (const e of ["lowercase", "uppercase", "capitalize"]) t.hasFormat(e) && t.toggleFormat(e);
}
function $S(t) {
  return Ht(t.registerCommand(s0, (e) => {
    const n = oe();
    return !!bn(n) && (n.clear(), !0);
  }, ke), t.registerCommand(Vr, (e) => {
    const n = oe();
    return Z(n) ? (n.deleteCharacter(e), !0) : !!bn(n) && (n.deleteNodes(), !0);
  }, ke), t.registerCommand(Is, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteWord(e), !0);
  }, ke), t.registerCommand(Rs, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteLine(e), !0);
  }, ke), t.registerCommand(_o, (e) => {
    const n = oe();
    if (typeof e == "string") n !== null && n.insertText(e);
    else {
      if (n === null) return !1;
      const r = e.dataTransfer;
      if (r != null) mm(r, n, t);
      else if (Z(n)) {
        const i = e.data;
        return i && n.insertText(i), !0;
      }
    }
    return !0;
  }, ke), t.registerCommand(jc, () => {
    const e = oe();
    return !!Z(e) && (e.removeText(), !0);
  }, ke), t.registerCommand(Ii, (e) => {
    const n = oe();
    return !!Z(n) && (n.formatText(e), !0);
  }, ke), t.registerCommand(Sk, (e) => {
    const n = oe();
    if (!Z(n) && !bn(n)) return !1;
    const r = n.getNodes();
    for (const i of r) {
      const o = _r(i, (s) => X(s) && !s.isInline());
      o !== null && o.setFormat(e);
    }
    return !0;
  }, ke), t.registerCommand($i, (e) => {
    const n = oe();
    return !!Z(n) && (n.insertLineBreak(e), !0);
  }, ke), t.registerCommand(tl, () => {
    const e = oe();
    return !!Z(e) && (e.insertParagraph(), !0);
  }, ke), t.registerCommand(Ek, () => (Uk([kl()]), !0), ke), t.registerCommand(Nk, () => $m((e) => {
    const n = e.getIndent();
    e.setIndent(n + 1);
  }), ke), t.registerCommand(fw, () => $m((e) => {
    const n = e.getIndent();
    n > 0 && e.setIndent(Math.max(0, n - 1));
  }), ke), t.registerCommand(ap, (e) => {
    const n = oe();
    if (bn(n)) {
      const r = n.getNodes();
      if (r.length > 0) return r[0].selectPrevious(), !0;
    } else if (Z(n)) {
      const r = Uf(n.focus, !0);
      if (!e.shiftKey && Xe(r) && !r.isIsolated() && !r.isInline()) return r.selectPrevious(), e.preventDefault(), !0;
    }
    return !1;
  }, ke), t.registerCommand(lp, (e) => {
    const n = oe();
    if (bn(n)) {
      const r = n.getNodes();
      if (r.length > 0) return r[0].selectNext(0, 0), !0;
    } else if (Z(n)) {
      if (function(i) {
        const o = i.focus;
        return o.key === "root" && o.offset === Ve().getChildrenSize();
      }(n)) return e.preventDefault(), !0;
      const r = Uf(n.focus, !1);
      if (!e.shiftKey && Xe(r) && !r.isIsolated() && !r.isInline()) return r.selectNext(), e.preventDefault(), !0;
    }
    return !1;
  }, ke), t.registerCommand(sp, (e) => {
    const n = oe();
    if (bn(n)) {
      const r = n.getNodes();
      if (r.length > 0) return e.preventDefault(), r[0].selectPrevious(), !0;
    }
    if (!Z(n)) return !1;
    if (Yc(n, !0)) {
      const r = e.shiftKey;
      return e.preventDefault(), Qc(n, r, !0), !0;
    }
    return !1;
  }, ke), t.registerCommand(op, (e) => {
    const n = oe();
    if (bn(n)) {
      const i = n.getNodes();
      if (i.length > 0) return e.preventDefault(), i[0].selectNext(0, 0), !0;
    }
    if (!Z(n)) return !1;
    const r = e.shiftKey;
    return !!Yc(n, !1) && (e.preventDefault(), Qc(n, r, !1), !0);
  }, ke), t.registerCommand(cp, (e) => {
    if (Fm(e.target)) return !1;
    const n = oe();
    if (Z(n)) {
      if (function(r) {
        if (!r.isCollapsed()) return !1;
        const { anchor: i } = r;
        if (i.offset !== 0) return !1;
        const o = i.getNode();
        if (tn(o)) return !1;
        const s = UE(o);
        return s.getIndent() > 0 && (s.is(o) || o.is(s.getFirstDescendant()));
      }(n)) return e.preventDefault(), t.dispatchCommand(fw, void 0);
      if (Pm && navigator.language === "ko-KR") return !1;
    } else if (!bn(n)) return !1;
    return e.preventDefault(), t.dispatchCommand(Vr, !0);
  }, ke), t.registerCommand(up, (e) => {
    if (Fm(e.target)) return !1;
    const n = oe();
    return !(!Z(n) && !bn(n)) && (e.preventDefault(), t.dispatchCommand(Vr, !1));
  }, ke), t.registerCommand(Ps, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    if (Gd(n), e !== null) {
      if ((Pm || RS || LS) && IS) return !1;
      if (e.preventDefault(), e.shiftKey) return t.dispatchCommand($i, !1);
    }
    return t.dispatchCommand(tl, void 0);
  }, ke), t.registerCommand(Mu, () => {
    const e = oe();
    return !!Z(e) && (t.blur(), !0);
  }, ke), t.registerCommand(Iu, (e) => {
    const [, n] = cc(e);
    if (n.length > 0) {
      const i = Rm(e.clientX, e.clientY);
      if (i !== null) {
        const { offset: o, node: s } = i, a = Ui(s);
        if (a !== null) {
          const l = Nl();
          if (ie(a)) l.anchor.set(a.getKey(), o, "text"), l.focus.set(a.getKey(), o, "text");
          else {
            const u = a.getParentOrThrow().getKey(), f = a.getIndexWithinParent() + 1;
            l.anchor.set(u, f, "element"), l.focus.set(u, f, "element");
          }
          const c = Ya(l);
          sn(c);
        }
        t.dispatchCommand(Lm, n);
      }
      return e.preventDefault(), !0;
    }
    const r = oe();
    return !!Z(r);
  }, ke), t.registerCommand(fp, (e) => {
    const [n] = cc(e), r = oe();
    return !(n && !Z(r));
  }, ke), t.registerCommand(l0, (e) => {
    const [n] = cc(e), r = oe();
    if (n && !Z(r)) return !1;
    const i = Rm(e.clientX, e.clientY);
    if (i !== null) {
      const o = Ui(i.node);
      Xe(o) && e.preventDefault();
    }
    return !0;
  }, ke), t.registerCommand(Uc, () => (Y0(), !0), ke), t.registerCommand(Yi, (e) => (ym(t, gi(e, ClipboardEvent) ? e : null), !0), ke), t.registerCommand(Xo, (e) => (async function(n, r) {
    await ym(r, gi(n, ClipboardEvent) ? n : null), r.update(() => {
      const i = oe();
      Z(i) ? i.removeText() : bn(i) && i.getNodes().forEach((o) => o.remove());
    });
  }(e, t), !0), ke), t.registerCommand(Jo, (e) => {
    const [, n, r] = cc(e);
    return n.length > 0 && !r ? (t.dispatchCommand(Lm, n), !0) : Qo(e.target) && Cp(e.target) ? !1 : oe() !== null && (function(i, o) {
      i.preventDefault(), o.update(() => {
        const s = oe(), a = gi(i, InputEvent) || gi(i, KeyboardEvent) ? null : i.clipboardData;
        a != null && s !== null && mm(a, s, o);
      }, { tag: q0 });
    }(e, t), !0);
  }, ke), t.registerCommand(a0, (e) => {
    const n = oe();
    return Z(n) && Gd(n), !1;
  }, ke), t.registerCommand(dp, (e) => {
    const n = oe();
    return Z(n) && Gd(n), !1;
  }, ke));
}
const nh = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function Bm(t) {
  return t.getEditorState().read($p(t.isComposing()));
}
function FS({ contentEditable: t, placeholder: e = null, ErrorBoundary: n }) {
  const [r] = Le(), i = function(o, s) {
    const [a, l] = fe(() => o.getDecorators());
    return nh(() => o.registerDecoratorListener((c) => {
      my(() => {
        l(c);
      });
    }), [o]), ue(() => {
      l(o.getDecorators());
    }, [o]), Ne(() => {
      const c = [], u = Object.keys(a);
      for (let f = 0; f < u.length; f++) {
        const d = u[f], h = p(s, { onError: (w) => o._onError(w), children: p(cy, { fallback: null, children: a[d] }) }), g = o.getElementByKey(d);
        g !== null && c.push(fi(h, g, d));
      }
      return c;
    }, [s, a, o]);
  }(r, n);
  return function(o) {
    nh(() => Ht($S(o), e_(o)), [o]);
  }(r), q(Lt, { children: [t, p(BS, { content: e }), i] });
}
function BS({ content: t }) {
  const [e] = Le(), n = function(i) {
    const [o, s] = fe(() => Bm(i));
    return nh(() => {
      function a() {
        const l = Bm(i);
        s(l);
      }
      return a(), Ht(i.registerUpdateListener(() => {
        a();
      }), i.registerEditableListener(() => {
        a();
      }));
    }, [i]), o;
  }(e), r = Zv();
  return n ? typeof t == "function" ? t(r) : t : null;
}
const eu = Math.min, So = Math.max, tu = Math.round, uc = Math.floor, Hr = (t) => ({
  x: t,
  y: t
}), qS = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, jS = {
  start: "end",
  end: "start"
};
function qm(t, e, n) {
  return So(t, eu(e, n));
}
function Fp(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function Bs(t) {
  return t.split("-")[0];
}
function Bp(t) {
  return t.split("-")[1];
}
function t_(t) {
  return t === "x" ? "y" : "x";
}
function n_(t) {
  return t === "y" ? "height" : "width";
}
const US = /* @__PURE__ */ new Set(["top", "bottom"]);
function bo(t) {
  return US.has(Bs(t)) ? "y" : "x";
}
function r_(t) {
  return t_(bo(t));
}
function zS(t, e, n) {
  n === void 0 && (n = !1);
  const r = Bp(t), i = r_(t), o = n_(i);
  let s = i === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return e.reference[o] > e.floating[o] && (s = nu(s)), [s, nu(s)];
}
function VS(t) {
  const e = nu(t);
  return [rh(t), e, rh(e)];
}
function rh(t) {
  return t.replace(/start|end/g, (e) => jS[e]);
}
const jm = ["left", "right"], Um = ["right", "left"], HS = ["top", "bottom"], WS = ["bottom", "top"];
function KS(t, e, n) {
  switch (t) {
    case "top":
    case "bottom":
      return n ? e ? Um : jm : e ? jm : Um;
    case "left":
    case "right":
      return e ? HS : WS;
    default:
      return [];
  }
}
function GS(t, e, n, r) {
  const i = Bp(t);
  let o = KS(Bs(t), n === "start", r);
  return i && (o = o.map((s) => s + "-" + i), e && (o = o.concat(o.map(rh)))), o;
}
function nu(t) {
  return t.replace(/left|right|bottom|top/g, (e) => qS[e]);
}
function JS(t) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...t
  };
}
function XS(t) {
  return typeof t != "number" ? JS(t) : {
    top: t,
    right: t,
    bottom: t,
    left: t
  };
}
function ru(t) {
  const {
    x: e,
    y: n,
    width: r,
    height: i
  } = t;
  return {
    width: r,
    height: i,
    top: n,
    left: e,
    right: e + r,
    bottom: n + i,
    x: e,
    y: n
  };
}
function zm(t, e, n) {
  let {
    reference: r,
    floating: i
  } = t;
  const o = bo(e), s = r_(e), a = n_(s), l = Bs(e), c = o === "y", u = r.x + r.width / 2 - i.width / 2, f = r.y + r.height / 2 - i.height / 2, d = r[a] / 2 - i[a] / 2;
  let h;
  switch (l) {
    case "top":
      h = {
        x: u,
        y: r.y - i.height
      };
      break;
    case "bottom":
      h = {
        x: u,
        y: r.y + r.height
      };
      break;
    case "right":
      h = {
        x: r.x + r.width,
        y: f
      };
      break;
    case "left":
      h = {
        x: r.x - i.width,
        y: f
      };
      break;
    default:
      h = {
        x: r.x,
        y: r.y
      };
  }
  switch (Bp(e)) {
    case "start":
      h[s] -= d * (n && c ? -1 : 1);
      break;
    case "end":
      h[s] += d * (n && c ? -1 : 1);
      break;
  }
  return h;
}
const YS = async (t, e, n) => {
  const {
    placement: r = "bottom",
    strategy: i = "absolute",
    middleware: o = [],
    platform: s
  } = n, a = o.filter(Boolean), l = await (s.isRTL == null ? void 0 : s.isRTL(e));
  let c = await s.getElementRects({
    reference: t,
    floating: e,
    strategy: i
  }), {
    x: u,
    y: f
  } = zm(c, r, l), d = r, h = {}, g = 0;
  for (let w = 0; w < a.length; w++) {
    const {
      name: v,
      fn: _
    } = a[w], {
      x: b,
      y: C,
      data: D,
      reset: R
    } = await _({
      x: u,
      y: f,
      initialPlacement: r,
      placement: d,
      strategy: i,
      middlewareData: h,
      rects: c,
      platform: s,
      elements: {
        reference: t,
        floating: e
      }
    });
    u = b ?? u, f = C ?? f, h = {
      ...h,
      [v]: {
        ...h[v],
        ...D
      }
    }, R && g <= 50 && (g++, typeof R == "object" && (R.placement && (d = R.placement), R.rects && (c = R.rects === !0 ? await s.getElementRects({
      reference: t,
      floating: e,
      strategy: i
    }) : R.rects), {
      x: u,
      y: f
    } = zm(c, d, l)), w = -1);
  }
  return {
    x: u,
    y: f,
    placement: d,
    strategy: i,
    middlewareData: h
  };
};
async function i_(t, e) {
  var n;
  e === void 0 && (e = {});
  const {
    x: r,
    y: i,
    platform: o,
    rects: s,
    elements: a,
    strategy: l
  } = t, {
    boundary: c = "clippingAncestors",
    rootBoundary: u = "viewport",
    elementContext: f = "floating",
    altBoundary: d = !1,
    padding: h = 0
  } = Fp(e, t), g = XS(h), v = a[d ? f === "floating" ? "reference" : "floating" : f], _ = ru(await o.getClippingRect({
    element: (n = await (o.isElement == null ? void 0 : o.isElement(v))) == null || n ? v : v.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(a.floating)),
    boundary: c,
    rootBoundary: u,
    strategy: l
  })), b = f === "floating" ? {
    x: r,
    y: i,
    width: s.floating.width,
    height: s.floating.height
  } : s.reference, C = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(a.floating)), D = await (o.isElement == null ? void 0 : o.isElement(C)) ? await (o.getScale == null ? void 0 : o.getScale(C)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, R = ru(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: a,
    rect: b,
    offsetParent: C,
    strategy: l
  }) : b);
  return {
    top: (_.top - R.top + g.top) / D.y,
    bottom: (R.bottom - _.bottom + g.bottom) / D.y,
    left: (_.left - R.left + g.left) / D.x,
    right: (R.right - _.right + g.right) / D.x
  };
}
const QS = function(t) {
  return t === void 0 && (t = {}), {
    name: "flip",
    options: t,
    async fn(e) {
      var n, r;
      const {
        placement: i,
        middlewareData: o,
        rects: s,
        initialPlacement: a,
        platform: l,
        elements: c
      } = e, {
        mainAxis: u = !0,
        crossAxis: f = !0,
        fallbackPlacements: d,
        fallbackStrategy: h = "bestFit",
        fallbackAxisSideDirection: g = "none",
        flipAlignment: w = !0,
        ...v
      } = Fp(t, e);
      if ((n = o.arrow) != null && n.alignmentOffset)
        return {};
      const _ = Bs(i), b = bo(a), C = Bs(a) === a, D = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)), R = d || (C || !w ? [nu(a)] : VS(a)), N = g !== "none";
      !d && N && R.push(...GS(a, w, g, D));
      const L = [a, ...R], M = await i_(e, v), O = [];
      let j = ((r = o.flip) == null ? void 0 : r.overflows) || [];
      if (u && O.push(M[_]), f) {
        const P = zS(i, s, D);
        O.push(M[P[0]], M[P[1]]);
      }
      if (j = [...j, {
        placement: i,
        overflows: O
      }], !O.every((P) => P <= 0)) {
        var k, I;
        const P = (((k = o.flip) == null ? void 0 : k.index) || 0) + 1, T = L[P];
        if (T && (!(f === "alignment" ? b !== bo(T) : !1) || // We leave the current main axis only if every placement on that axis
        // overflows the main axis.
        j.every((V) => bo(V.placement) === b ? V.overflows[0] > 0 : !0)))
          return {
            data: {
              index: P,
              overflows: j
            },
            reset: {
              placement: T
            }
          };
        let A = (I = j.filter((B) => B.overflows[0] <= 0).sort((B, V) => B.overflows[1] - V.overflows[1])[0]) == null ? void 0 : I.placement;
        if (!A)
          switch (h) {
            case "bestFit": {
              var S;
              const B = (S = j.filter((V) => {
                if (N) {
                  const J = bo(V.placement);
                  return J === b || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  J === "y";
                }
                return !0;
              }).map((V) => [V.placement, V.overflows.filter((J) => J > 0).reduce((J, H) => J + H, 0)]).sort((V, J) => V[1] - J[1])[0]) == null ? void 0 : S[0];
              B && (A = B);
              break;
            }
            case "initialPlacement":
              A = a;
              break;
          }
        if (i !== A)
          return {
            reset: {
              placement: A
            }
          };
      }
      return {};
    }
  };
}, ZS = function(t) {
  return t === void 0 && (t = {}), {
    name: "shift",
    options: t,
    async fn(e) {
      const {
        x: n,
        y: r,
        placement: i
      } = e, {
        mainAxis: o = !0,
        crossAxis: s = !1,
        limiter: a = {
          fn: (v) => {
            let {
              x: _,
              y: b
            } = v;
            return {
              x: _,
              y: b
            };
          }
        },
        ...l
      } = Fp(t, e), c = {
        x: n,
        y: r
      }, u = await i_(e, l), f = bo(Bs(i)), d = t_(f);
      let h = c[d], g = c[f];
      if (o) {
        const v = d === "y" ? "top" : "left", _ = d === "y" ? "bottom" : "right", b = h + u[v], C = h - u[_];
        h = qm(b, h, C);
      }
      if (s) {
        const v = f === "y" ? "top" : "left", _ = f === "y" ? "bottom" : "right", b = g + u[v], C = g - u[_];
        g = qm(b, g, C);
      }
      const w = a.fn({
        ...e,
        [d]: h,
        [f]: g
      });
      return {
        ...w,
        data: {
          x: w.x - n,
          y: w.y - r,
          enabled: {
            [d]: o,
            [f]: s
          }
        }
      };
    }
  };
};
function Hu() {
  return typeof window < "u";
}
function ua(t) {
  return o_(t) ? (t.nodeName || "").toLowerCase() : "#document";
}
function Xn(t) {
  var e;
  return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
}
function ei(t) {
  var e;
  return (e = (o_(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
}
function o_(t) {
  return Hu() ? t instanceof Node || t instanceof Xn(t).Node : !1;
}
function xr(t) {
  return Hu() ? t instanceof Element || t instanceof Xn(t).Element : !1;
}
function Xr(t) {
  return Hu() ? t instanceof HTMLElement || t instanceof Xn(t).HTMLElement : !1;
}
function Vm(t) {
  return !Hu() || typeof ShadowRoot > "u" ? !1 : t instanceof ShadowRoot || t instanceof Xn(t).ShadowRoot;
}
const eT = /* @__PURE__ */ new Set(["inline", "contents"]);
function Ol(t) {
  const {
    overflow: e,
    overflowX: n,
    overflowY: r,
    display: i
  } = Cr(t);
  return /auto|scroll|overlay|hidden|clip/.test(e + r + n) && !eT.has(i);
}
const tT = /* @__PURE__ */ new Set(["table", "td", "th"]);
function nT(t) {
  return tT.has(ua(t));
}
const rT = [":popover-open", ":modal"];
function Wu(t) {
  return rT.some((e) => {
    try {
      return t.matches(e);
    } catch {
      return !1;
    }
  });
}
const iT = ["transform", "translate", "scale", "rotate", "perspective"], oT = ["transform", "translate", "scale", "rotate", "perspective", "filter"], sT = ["paint", "layout", "strict", "content"];
function qp(t) {
  const e = jp(), n = xr(t) ? Cr(t) : t;
  return iT.some((r) => n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !e && (n.filter ? n.filter !== "none" : !1) || oT.some((r) => (n.willChange || "").includes(r)) || sT.some((r) => (n.contain || "").includes(r));
}
function aT(t) {
  let e = Vi(t);
  for (; Xr(e) && !qs(e); ) {
    if (qp(e))
      return e;
    if (Wu(e))
      return null;
    e = Vi(e);
  }
  return null;
}
function jp() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
const lT = /* @__PURE__ */ new Set(["html", "body", "#document"]);
function qs(t) {
  return lT.has(ua(t));
}
function Cr(t) {
  return Xn(t).getComputedStyle(t);
}
function Ku(t) {
  return xr(t) ? {
    scrollLeft: t.scrollLeft,
    scrollTop: t.scrollTop
  } : {
    scrollLeft: t.scrollX,
    scrollTop: t.scrollY
  };
}
function Vi(t) {
  if (ua(t) === "html")
    return t;
  const e = (
    // Step into the shadow DOM of the parent of a slotted node.
    t.assignedSlot || // DOM Element detected.
    t.parentNode || // ShadowRoot detected.
    Vm(t) && t.host || // Fallback.
    ei(t)
  );
  return Vm(e) ? e.host : e;
}
function s_(t) {
  const e = Vi(t);
  return qs(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : Xr(e) && Ol(e) ? e : s_(e);
}
function il(t, e, n) {
  var r;
  e === void 0 && (e = []), n === void 0 && (n = !0);
  const i = s_(t), o = i === ((r = t.ownerDocument) == null ? void 0 : r.body), s = Xn(i);
  if (o) {
    const a = ih(s);
    return e.concat(s, s.visualViewport || [], Ol(i) ? i : [], a && n ? il(a) : []);
  }
  return e.concat(i, il(i, [], n));
}
function ih(t) {
  return t.parent && Object.getPrototypeOf(t.parent) ? t.frameElement : null;
}
function a_(t) {
  const e = Cr(t);
  let n = parseFloat(e.width) || 0, r = parseFloat(e.height) || 0;
  const i = Xr(t), o = i ? t.offsetWidth : n, s = i ? t.offsetHeight : r, a = tu(n) !== o || tu(r) !== s;
  return a && (n = o, r = s), {
    width: n,
    height: r,
    $: a
  };
}
function Up(t) {
  return xr(t) ? t : t.contextElement;
}
function _s(t) {
  const e = Up(t);
  if (!Xr(e))
    return Hr(1);
  const n = e.getBoundingClientRect(), {
    width: r,
    height: i,
    $: o
  } = a_(e);
  let s = (o ? tu(n.width) : n.width) / r, a = (o ? tu(n.height) : n.height) / i;
  return (!s || !Number.isFinite(s)) && (s = 1), (!a || !Number.isFinite(a)) && (a = 1), {
    x: s,
    y: a
  };
}
const cT = /* @__PURE__ */ Hr(0);
function l_(t) {
  const e = Xn(t);
  return !jp() || !e.visualViewport ? cT : {
    x: e.visualViewport.offsetLeft,
    y: e.visualViewport.offsetTop
  };
}
function uT(t, e, n) {
  return e === void 0 && (e = !1), !n || e && n !== Xn(t) ? !1 : e;
}
function Bo(t, e, n, r) {
  e === void 0 && (e = !1), n === void 0 && (n = !1);
  const i = t.getBoundingClientRect(), o = Up(t);
  let s = Hr(1);
  e && (r ? xr(r) && (s = _s(r)) : s = _s(t));
  const a = uT(o, n, r) ? l_(o) : Hr(0);
  let l = (i.left + a.x) / s.x, c = (i.top + a.y) / s.y, u = i.width / s.x, f = i.height / s.y;
  if (o) {
    const d = Xn(o), h = r && xr(r) ? Xn(r) : r;
    let g = d, w = ih(g);
    for (; w && r && h !== g; ) {
      const v = _s(w), _ = w.getBoundingClientRect(), b = Cr(w), C = _.left + (w.clientLeft + parseFloat(b.paddingLeft)) * v.x, D = _.top + (w.clientTop + parseFloat(b.paddingTop)) * v.y;
      l *= v.x, c *= v.y, u *= v.x, f *= v.y, l += C, c += D, g = Xn(w), w = ih(g);
    }
  }
  return ru({
    width: u,
    height: f,
    x: l,
    y: c
  });
}
function Gu(t, e) {
  const n = Ku(t).scrollLeft;
  return e ? e.left + n : Bo(ei(t)).left + n;
}
function c_(t, e) {
  const n = t.getBoundingClientRect(), r = n.left + e.scrollLeft - Gu(t, n), i = n.top + e.scrollTop;
  return {
    x: r,
    y: i
  };
}
function dT(t) {
  let {
    elements: e,
    rect: n,
    offsetParent: r,
    strategy: i
  } = t;
  const o = i === "fixed", s = ei(r), a = e ? Wu(e.floating) : !1;
  if (r === s || a && o)
    return n;
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = Hr(1);
  const u = Hr(0), f = Xr(r);
  if ((f || !f && !o) && ((ua(r) !== "body" || Ol(s)) && (l = Ku(r)), Xr(r))) {
    const h = Bo(r);
    c = _s(r), u.x = h.x + r.clientLeft, u.y = h.y + r.clientTop;
  }
  const d = s && !f && !o ? c_(s, l) : Hr(0);
  return {
    width: n.width * c.x,
    height: n.height * c.y,
    x: n.x * c.x - l.scrollLeft * c.x + u.x + d.x,
    y: n.y * c.y - l.scrollTop * c.y + u.y + d.y
  };
}
function fT(t) {
  return Array.from(t.getClientRects());
}
function hT(t) {
  const e = ei(t), n = Ku(t), r = t.ownerDocument.body, i = So(e.scrollWidth, e.clientWidth, r.scrollWidth, r.clientWidth), o = So(e.scrollHeight, e.clientHeight, r.scrollHeight, r.clientHeight);
  let s = -n.scrollLeft + Gu(t);
  const a = -n.scrollTop;
  return Cr(r).direction === "rtl" && (s += So(e.clientWidth, r.clientWidth) - i), {
    width: i,
    height: o,
    x: s,
    y: a
  };
}
const Hm = 25;
function pT(t, e) {
  const n = Xn(t), r = ei(t), i = n.visualViewport;
  let o = r.clientWidth, s = r.clientHeight, a = 0, l = 0;
  if (i) {
    o = i.width, s = i.height;
    const u = jp();
    (!u || u && e === "fixed") && (a = i.offsetLeft, l = i.offsetTop);
  }
  const c = Gu(r);
  if (c <= 0) {
    const u = r.ownerDocument, f = u.body, d = getComputedStyle(f), h = u.compatMode === "CSS1Compat" && parseFloat(d.marginLeft) + parseFloat(d.marginRight) || 0, g = Math.abs(r.clientWidth - f.clientWidth - h);
    g <= Hm && (o -= g);
  } else c <= Hm && (o += c);
  return {
    width: o,
    height: s,
    x: a,
    y: l
  };
}
const gT = /* @__PURE__ */ new Set(["absolute", "fixed"]);
function wT(t, e) {
  const n = Bo(t, !0, e === "fixed"), r = n.top + t.clientTop, i = n.left + t.clientLeft, o = Xr(t) ? _s(t) : Hr(1), s = t.clientWidth * o.x, a = t.clientHeight * o.y, l = i * o.x, c = r * o.y;
  return {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function Wm(t, e, n) {
  let r;
  if (e === "viewport")
    r = pT(t, n);
  else if (e === "document")
    r = hT(ei(t));
  else if (xr(e))
    r = wT(e, n);
  else {
    const i = l_(t);
    r = {
      x: e.x - i.x,
      y: e.y - i.y,
      width: e.width,
      height: e.height
    };
  }
  return ru(r);
}
function u_(t, e) {
  const n = Vi(t);
  return n === e || !xr(n) || qs(n) ? !1 : Cr(n).position === "fixed" || u_(n, e);
}
function mT(t, e) {
  const n = e.get(t);
  if (n)
    return n;
  let r = il(t, [], !1).filter((a) => xr(a) && ua(a) !== "body"), i = null;
  const o = Cr(t).position === "fixed";
  let s = o ? Vi(t) : t;
  for (; xr(s) && !qs(s); ) {
    const a = Cr(s), l = qp(s);
    !l && a.position === "fixed" && (i = null), (o ? !l && !i : !l && a.position === "static" && !!i && gT.has(i.position) || Ol(s) && !l && u_(t, s)) ? r = r.filter((u) => u !== s) : i = a, s = Vi(s);
  }
  return e.set(t, r), r;
}
function bT(t) {
  let {
    element: e,
    boundary: n,
    rootBoundary: r,
    strategy: i
  } = t;
  const s = [...n === "clippingAncestors" ? Wu(e) ? [] : mT(e, this._c) : [].concat(n), r], a = s[0], l = s.reduce((c, u) => {
    const f = Wm(e, u, i);
    return c.top = So(f.top, c.top), c.right = eu(f.right, c.right), c.bottom = eu(f.bottom, c.bottom), c.left = So(f.left, c.left), c;
  }, Wm(e, a, i));
  return {
    width: l.right - l.left,
    height: l.bottom - l.top,
    x: l.left,
    y: l.top
  };
}
function yT(t) {
  const {
    width: e,
    height: n
  } = a_(t);
  return {
    width: e,
    height: n
  };
}
function vT(t, e, n) {
  const r = Xr(e), i = ei(e), o = n === "fixed", s = Bo(t, !0, o, e);
  let a = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const l = Hr(0);
  function c() {
    l.x = Gu(i);
  }
  if (r || !r && !o)
    if ((ua(e) !== "body" || Ol(i)) && (a = Ku(e)), r) {
      const h = Bo(e, !0, o, e);
      l.x = h.x + e.clientLeft, l.y = h.y + e.clientTop;
    } else i && c();
  o && !r && i && c();
  const u = i && !r && !o ? c_(i, a) : Hr(0), f = s.left + a.scrollLeft - l.x - u.x, d = s.top + a.scrollTop - l.y - u.y;
  return {
    x: f,
    y: d,
    width: s.width,
    height: s.height
  };
}
function Jd(t) {
  return Cr(t).position === "static";
}
function Km(t, e) {
  if (!Xr(t) || Cr(t).position === "fixed")
    return null;
  if (e)
    return e(t);
  let n = t.offsetParent;
  return ei(t) === n && (n = n.ownerDocument.body), n;
}
function d_(t, e) {
  const n = Xn(t);
  if (Wu(t))
    return n;
  if (!Xr(t)) {
    let i = Vi(t);
    for (; i && !qs(i); ) {
      if (xr(i) && !Jd(i))
        return i;
      i = Vi(i);
    }
    return n;
  }
  let r = Km(t, e);
  for (; r && nT(r) && Jd(r); )
    r = Km(r, e);
  return r && qs(r) && Jd(r) && !qp(r) ? n : r || aT(t) || n;
}
const _T = async function(t) {
  const e = this.getOffsetParent || d_, n = this.getDimensions, r = await n(t.floating);
  return {
    reference: vT(t.reference, await e(t.floating), t.strategy),
    floating: {
      x: 0,
      y: 0,
      width: r.width,
      height: r.height
    }
  };
};
function xT(t) {
  return Cr(t).direction === "rtl";
}
const CT = {
  convertOffsetParentRelativeRectToViewportRelativeRect: dT,
  getDocumentElement: ei,
  getClippingRect: bT,
  getOffsetParent: d_,
  getElementRects: _T,
  getClientRects: fT,
  getDimensions: yT,
  getScale: _s,
  isElement: xr,
  isRTL: xT
};
function f_(t, e) {
  return t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height;
}
function kT(t, e) {
  let n = null, r;
  const i = ei(t);
  function o() {
    var a;
    clearTimeout(r), (a = n) == null || a.disconnect(), n = null;
  }
  function s(a, l) {
    a === void 0 && (a = !1), l === void 0 && (l = 1), o();
    const c = t.getBoundingClientRect(), {
      left: u,
      top: f,
      width: d,
      height: h
    } = c;
    if (a || e(), !d || !h)
      return;
    const g = uc(f), w = uc(i.clientWidth - (u + d)), v = uc(i.clientHeight - (f + h)), _ = uc(u), C = {
      rootMargin: -g + "px " + -w + "px " + -v + "px " + -_ + "px",
      threshold: So(0, eu(1, l)) || 1
    };
    let D = !0;
    function R(N) {
      const L = N[0].intersectionRatio;
      if (L !== l) {
        if (!D)
          return s();
        L ? s(!1, L) : r = setTimeout(() => {
          s(!1, 1e-7);
        }, 1e3);
      }
      L === 1 && !f_(c, t.getBoundingClientRect()) && s(), D = !1;
    }
    try {
      n = new IntersectionObserver(R, {
        ...C,
        // Handle <iframe>s
        root: i.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(R, C);
    }
    n.observe(t);
  }
  return s(!0), o;
}
function ET(t, e, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: i = !0,
    ancestorResize: o = !0,
    elementResize: s = typeof ResizeObserver == "function",
    layoutShift: a = typeof IntersectionObserver == "function",
    animationFrame: l = !1
  } = r, c = Up(t), u = i || o ? [...c ? il(c) : [], ...il(e)] : [];
  u.forEach((_) => {
    i && _.addEventListener("scroll", n, {
      passive: !0
    }), o && _.addEventListener("resize", n);
  });
  const f = c && a ? kT(c, n) : null;
  let d = -1, h = null;
  s && (h = new ResizeObserver((_) => {
    let [b] = _;
    b && b.target === c && h && (h.unobserve(e), cancelAnimationFrame(d), d = requestAnimationFrame(() => {
      var C;
      (C = h) == null || C.observe(e);
    })), n();
  }), c && !l && h.observe(c), h.observe(e));
  let g, w = l ? Bo(t) : null;
  l && v();
  function v() {
    const _ = Bo(t);
    w && !f_(w, _) && n(), w = _, g = requestAnimationFrame(v);
  }
  return n(), () => {
    var _;
    u.forEach((b) => {
      i && b.removeEventListener("scroll", n), o && b.removeEventListener("resize", n);
    }), f == null || f(), (_ = h) == null || _.disconnect(), h = null, l && cancelAnimationFrame(g);
  };
}
const NT = ZS, ST = QS, TT = (t, e, n) => {
  const r = /* @__PURE__ */ new Map(), i = {
    platform: CT,
    ...n
  }, o = {
    ...i.platform,
    _c: r
  };
  return YS(t, e, {
    ...i,
    platform: o
  });
}, oh = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, AT = oh ? Cn : ue;
let DT = class {
  constructor(e) {
    this.key = e, this.ref = { current: null }, this.setRefElement = this.setRefElement.bind(this);
  }
  setRefElement(e) {
    this.ref = { current: e };
  }
};
const Gm = (t) => {
  const e = document.getElementById("typeahead-menu");
  if (!e) return;
  const n = e.getBoundingClientRect();
  n.top + n.height > window.innerHeight && e.scrollIntoView({ block: "center" }), n.top < 0 && e.scrollIntoView({ block: "center" }), t.scrollIntoView({ block: "nearest" });
};
function Jm(t, e) {
  const n = t.getBoundingClientRect(), r = e.getBoundingClientRect();
  return n.top > r.top && n.top < r.bottom;
}
function OT(t, e, n, r) {
  const [i] = Le();
  ue(() => {
    if (e != null && t != null) {
      const o = i.getRootElement(), s = o != null ? function(f, d) {
        let h = getComputedStyle(f);
        const g = h.position === "absolute", w = /(auto|scroll)/;
        if (h.position === "fixed") return document.body;
        for (let v = f; v = v.parentElement; ) if (h = getComputedStyle(v), (!g || h.position !== "static") && w.test(h.overflow + h.overflowY + h.overflowX)) return v;
        return document.body;
      }(o) : document.body;
      let a = !1, l = Jm(e, s);
      const c = function() {
        a || (window.requestAnimationFrame(function() {
          n(), a = !1;
        }), a = !0);
        const f = Jm(e, s);
        f !== l && (l = f, r != null && r(f));
      }, u = new ResizeObserver(n);
      return window.addEventListener("resize", n), document.addEventListener("scroll", c, { capture: !0, passive: !0 }), u.observe(e), () => {
        u.unobserve(e), window.removeEventListener("resize", n), document.removeEventListener("scroll", c, !0);
      };
    }
  }, [e, i, r, n, t]);
}
const Xm = Se("SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND");
function MT({ close: t, editor: e, anchorElementRef: n, resolution: r, options: i, menuRenderFn: o, onSelectOption: s, shouldSplitNodeWithQuery: a = !1, commandPriority: l = Yo, preselectFirstItem: c = !0 }) {
  const [u, f] = fe(null), d = r.match && r.match.matchingString;
  ue(() => {
    c && f(0);
  }, [d, c]);
  const h = be((w) => {
    e.update(() => {
      const v = r.match != null && a ? function(_) {
        const b = oe();
        if (!Z(b) || !b.isCollapsed()) return null;
        const C = b.anchor;
        if (C.type !== "text") return null;
        const D = C.getNode();
        if (!D.isSimpleText()) return null;
        const R = C.offset, N = D.getTextContent().slice(0, R), L = _.replaceableString.length, M = R - function(j, k, I) {
          let S = I;
          for (let P = S; P <= k.length; P++) j.slice(-P) === k.substring(0, P) && (S = P);
          return S;
        }(N, _.matchingString, L);
        if (M < 0) return null;
        let O;
        return M === 0 ? [O] = D.splitText(R) : [, O] = D.splitText(M, R), O;
      }(r.match) : null;
      s(w, v, t, r.match ? r.match.matchingString : "");
    });
  }, [e, a, r.match, s, t]), g = be((w) => {
    const v = e.getRootElement();
    v !== null && (v.setAttribute("aria-activedescendant", "typeahead-item-" + w), f(w));
  }, [e]);
  return ue(() => () => {
    const w = e.getRootElement();
    w !== null && w.removeAttribute("aria-activedescendant");
  }, [e]), AT(() => {
    i === null ? f(null) : u === null && c && g(0);
  }, [i, u, g, c]), ue(() => Ht(e.registerCommand(Xm, ({ option: w }) => !(!w.ref || w.ref.current == null) && (Gm(w.ref.current), !0), l)), [e, g, l]), ue(() => Ht(e.registerCommand(lp, (w) => {
    const v = w;
    if (i !== null && i.length) {
      const _ = u === null ? 0 : u !== i.length - 1 ? u + 1 : 0;
      g(_);
      const b = i[_];
      b.ref != null && b.ref.current && e.dispatchCommand(Xm, { index: _, option: b }), v.preventDefault(), v.stopImmediatePropagation();
    }
    return !0;
  }, l), e.registerCommand(ap, (w) => {
    const v = w;
    if (i !== null && i.length) {
      const _ = u === null ? i.length - 1 : u !== 0 ? u - 1 : i.length - 1;
      g(_);
      const b = i[_];
      b.ref != null && b.ref.current && Gm(b.ref.current), v.preventDefault(), v.stopImmediatePropagation();
    }
    return !0;
  }, l), e.registerCommand(Mu, (w) => {
    const v = w;
    return v.preventDefault(), v.stopImmediatePropagation(), t(), !0;
  }, l), e.registerCommand(dp, (w) => {
    const v = w;
    return i !== null && u !== null && i[u] != null && (v.preventDefault(), v.stopImmediatePropagation(), h(i[u]), !0);
  }, l), e.registerCommand(Ps, (w) => i !== null && u !== null && i[u] != null && (w !== null && (w.preventDefault(), w.stopImmediatePropagation()), h(i[u]), !0), l)), [h, t, e, i, u, g, l]), o(n, Ne(() => ({ options: i, selectOptionAndCleanUp: h, selectedIndex: u, setHighlightedIndex: f }), [h, u, i]), r.match ? r.match.matchingString : "");
}
function Ym(t, e) {
  e != null && (t.className = e), t.setAttribute("aria-label", "Typeahead menu"), t.setAttribute("role", "listbox"), t.style.display = "block", t.style.position = "absolute";
}
function IT({ options: t, onWillOpen: e, onClose: n, onOpen: r, onSelectOption: i, menuRenderFn: o, anchorClassName: s, commandPriority: a = Yo, parent: l }) {
  const [c] = Le(), [u, f] = fe(null), d = ps.useRef(null), h = function(b, C, D, R = oh ? document.body : void 0, N = !0) {
    const [L] = Le(), M = oh ? document.createElement("div") : null, O = xe(M), j = be(() => {
      if (O.current === null || R === void 0) return;
      O.current.style.top = O.current.style.bottom;
      const I = L.getRootElement(), S = O.current, P = S.firstChild;
      if (I !== null && b !== null) {
        const { left: T, top: A, width: B, height: V } = b.getRect(), J = O.current.offsetHeight;
        if (S.style.top = `${A + J + 3 + (N ? window.pageYOffset : 0)}px`, S.style.left = `${T + window.pageXOffset}px`, S.style.height = `${V}px`, S.style.width = `${B}px`, P !== null) {
          P.style.top = `${A}`;
          const H = P.getBoundingClientRect(), K = H.height, ne = H.width, re = I.getBoundingClientRect();
          T + ne > re.right && (S.style.left = `${re.right - ne + window.pageXOffset}px`), (A + K > window.innerHeight || A + K > re.bottom) && A - re.top > K + V && (S.style.top = `${A - K - V + (N ? window.pageYOffset : 0)}px`);
        }
        S.isConnected || (Ym(S, D), R.append(S)), S.setAttribute("id", "typeahead-menu"), I.setAttribute("aria-controls", "typeahead-menu");
      }
    }, [L, b, N, D, R]);
    ue(() => {
      const I = L.getRootElement();
      return b !== null && j(), () => {
        I !== null && I.removeAttribute("aria-controls");
        const S = O.current;
        S !== null && S.isConnected && (S.remove(), S.removeAttribute("id"));
      };
    }, [L, j, b]);
    const k = be((I) => {
      b !== null && (I || C(null));
    }, [b, C]);
    return OT(b, O.current, j, k), M != null && M === O.current && (Ym(M, D), R != null && R.append(M)), O;
  }(u, f, s, l), g = be(() => {
    f(null), n != null && u !== null && n();
  }, [n, u]), w = be((b) => {
    f(b), r != null && u === null && r(b);
  }, [r, u]), v = be((b) => {
    b.preventDefault(), e != null && e(b);
    const C = zE(b.target);
    w({ getRect: () => new DOMRect(b.clientX / C, b.clientY / C, 1, 1) });
  }, [w, e]), _ = be((b) => {
    u !== null && d.current != null && b.target != null && Qo(b.target) && !d.current.contains(b.target) && g();
  }, [g, u]);
  return ue(() => {
    const b = c.getRootElement();
    if (b) return b.addEventListener("contextmenu", v), () => b.removeEventListener("contextmenu", v);
  }, [c, v]), ue(() => (document.addEventListener("click", _), () => document.removeEventListener("click", _)), [c, _]), h.current === null || u === null || c === null ? null : p(MT, { close: g, resolution: u, editor: c, anchorElementRef: h, options: t, menuRenderFn: (b, C) => o(b, C, { setMenuRef: (D) => {
    d.current = D;
  } }), onSelectOption: i, commandPriority: a });
}
function RT({ defaultSelection: t }) {
  const [e] = Le();
  return ue(() => {
    e.focus(() => {
      const n = document.activeElement, r = e.getRootElement();
      r === null || n !== null && r.contains(n) || r.focus({ preventScroll: !0 });
    }, { defaultSelection: t });
  }, [t, e]), null;
}
const PT = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function LT({ onClear: t }) {
  const [e] = Le();
  return PT(() => e.registerCommand(hp, (n) => (e.update(() => {
    if (t == null) {
      const r = Ve(), i = oe(), o = Jn();
      r.clear(), r.append(o), i !== null && o.select(), Z(i) && (i.format = 0);
    } else t();
  }), !0), ke), [e, t]), null;
}
const Qm = [["Cat", "rgb(125, 50, 0)"], ["Dog", "rgb(100, 0, 0)"], ["Rabbit", "rgb(150, 0, 0)"], ["Frog", "rgb(200, 0, 0)"], ["Fox", "rgb(200, 75, 0)"], ["Hedgehog", "rgb(0, 75, 0)"], ["Pigeon", "rgb(0, 125, 0)"], ["Squirrel", "rgb(75, 100, 0)"], ["Bear", "rgb(125, 100, 0)"], ["Tiger", "rgb(0, 0, 150)"], ["Leopard", "rgb(0, 0, 200)"], ["Zebra", "rgb(0, 0, 250)"], ["Wolf", "rgb(0, 100, 150)"], ["Owl", "rgb(0, 100, 100)"], ["Gull", "rgb(100, 0, 100)"], ["Squid", "rgb(150, 0, 150)"]], Zm = Qm[Math.floor(Math.random() * Qm.length)], $T = gl({ clientID: 0, color: Zm[1], isCollabActive: !1, name: Zm[0], yjsDocMap: /* @__PURE__ */ new Map() });
function h_(t, e) {
  return wl($T);
}
const FT = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function BT({ ignoreHistoryMergeTagChange: t = !0, ignoreSelectionChange: e = !1, onChange: n }) {
  const [r] = Le();
  return FT(() => {
    if (n) return r.registerUpdateListener(({ editorState: i, dirtyElements: o, dirtyLeaves: s, prevEditorState: a, tags: l }) => {
      e && o.size === 0 && s.size === 0 || t && l.has(Co) || a.isEmpty() || n(i, r, l);
    });
  }, [r, t, e, n]), null;
}
const da = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, qT = da && "documentMode" in document ? document.documentMode : null, jT = !(!da || !("InputEvent" in window) || qT) && "getTargetRanges" in new window.InputEvent("input"), UT = da && /Version\/[\d.]+.*Safari/.test(navigator.userAgent), eb = da && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream, zT = da && /^(?=.*Chrome).*/i.test(navigator.userAgent), VT = da && /AppleWebKit\/[\d.]+/.test(navigator.userAgent) && !zT;
function tb(t, e) {
  e.update(() => {
    if (t !== null) {
      const n = gi(t, KeyboardEvent) ? null : t.clipboardData, r = oe();
      if (r !== null && n != null) {
        t.preventDefault();
        const i = Tv(e);
        i !== null && n.setData("text/html", i), n.setData("text/plain", r.getTextContent());
      }
    }
  });
}
function HT(t) {
  return Ht(t.registerCommand(Vr, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteCharacter(e), !0);
  }, ke), t.registerCommand(Is, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteWord(e), !0);
  }, ke), t.registerCommand(Rs, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteLine(e), !0);
  }, ke), t.registerCommand(_o, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    if (typeof e == "string") n.insertText(e);
    else {
      const r = e.dataTransfer;
      if (r != null) wm(r, n);
      else {
        const i = e.data;
        i && n.insertText(i);
      }
    }
    return !0;
  }, ke), t.registerCommand(jc, () => {
    const e = oe();
    return !!Z(e) && (e.removeText(), !0);
  }, ke), t.registerCommand($i, (e) => {
    const n = oe();
    return !!Z(n) && (n.insertLineBreak(e), !0);
  }, ke), t.registerCommand(tl, () => {
    const e = oe();
    return !!Z(e) && (e.insertLineBreak(), !0);
  }, ke), t.registerCommand(sp, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    const r = e, i = r.shiftKey;
    return !!Yc(n, !0) && (r.preventDefault(), Qc(n, i, !0), !0);
  }, ke), t.registerCommand(op, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    const r = e, i = r.shiftKey;
    return !!Yc(n, !1) && (r.preventDefault(), Qc(n, i, !1), !0);
  }, ke), t.registerCommand(cp, (e) => {
    const n = oe();
    return !!Z(n) && (!eb || navigator.language !== "ko-KR") && (e.preventDefault(), t.dispatchCommand(Vr, !0));
  }, ke), t.registerCommand(up, (e) => {
    const n = oe();
    return !!Z(n) && (e.preventDefault(), t.dispatchCommand(Vr, !1));
  }, ke), t.registerCommand(Ps, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    if (e !== null) {
      if ((eb || UT || VT) && jT) return !1;
      e.preventDefault();
    }
    return t.dispatchCommand($i, !1);
  }, ke), t.registerCommand(Uc, () => (Y0(), !0), ke), t.registerCommand(Yi, (e) => {
    const n = oe();
    return !!Z(n) && (tb(e, t), !0);
  }, ke), t.registerCommand(Xo, (e) => {
    const n = oe();
    return !!Z(n) && (function(r, i) {
      tb(r, i), i.update(() => {
        const o = oe();
        Z(o) && o.removeText();
      });
    }(e, t), !0);
  }, ke), t.registerCommand(Jo, (e) => {
    const n = oe();
    return !!Z(n) && (function(r, i) {
      r.preventDefault(), i.update(() => {
        const o = oe(), s = gi(r, ClipboardEvent) ? r.clipboardData : null;
        s != null && Z(o) && wm(s, o);
      }, { tag: q0 });
    }(e, t), !0);
  }, ke), t.registerCommand(Iu, (e) => {
    const n = oe();
    return !!Z(n) && (e.preventDefault(), !0);
  }, ke), t.registerCommand(fp, (e) => {
    const n = oe();
    return !!Z(n) && (e.preventDefault(), !0);
  }, ke));
}
const sh = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function nb(t) {
  return t.getEditorState().read($p(t.isComposing()));
}
function WT({ contentEditable: t, placeholder: e = null, ErrorBoundary: n }) {
  const [r] = Le(), i = function(o, s) {
    const [a, l] = fe(() => o.getDecorators());
    return sh(() => o.registerDecoratorListener((c) => {
      my(() => {
        l(c);
      });
    }), [o]), ue(() => {
      l(o.getDecorators());
    }, [o]), Ne(() => {
      const c = [], u = Object.keys(a);
      for (let f = 0; f < u.length; f++) {
        const d = u[f], h = p(s, { onError: (w) => o._onError(w), children: p(cy, { fallback: null, children: a[d] }) }), g = o.getElementByKey(d);
        g !== null && c.push(fi(h, g, d));
      }
      return c;
    }, [s, a, o]);
  }(r, n);
  return function(o) {
    sh(() => Ht(HT(o), e_(o)), [o]);
  }(r), q(Lt, { children: [t, p(KT, { content: e }), i] });
}
function KT({ content: t }) {
  const [e] = Le(), n = function(i) {
    const [o, s] = fe(() => nb(i));
    return sh(() => {
      function a() {
        const l = nb(i);
        s(l);
      }
      return a(), Ht(i.registerUpdateListener(() => {
        a();
      }), i.registerEditableListener(() => {
        a();
      }));
    }, [i]), o;
  }(e), r = Zv();
  return n ? typeof t == "function" ? t(r) : t : null;
}
const Wr = () => /* @__PURE__ */ new Map(), ah = (t) => {
  const e = Wr();
  return t.forEach((n, r) => {
    e.set(r, n);
  }), e;
}, fa = (t, e, n) => {
  let r = t.get(e);
  return r === void 0 && t.set(e, r = n()), r;
}, GT = (t, e) => {
  const n = [];
  for (const [r, i] of t)
    n.push(e(i, r));
  return n;
}, JT = (t, e) => {
  for (const [n, r] of t)
    if (e(r, n))
      return !0;
  return !1;
}, js = () => /* @__PURE__ */ new Set(), Xd = (t) => t[t.length - 1], Us = Array.from, XT = Array.isArray;
class YT {
  constructor() {
    this._observers = Wr();
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  on(e, n) {
    return fa(
      this._observers,
      /** @type {string} */
      e,
      js
    ).add(n), n;
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  once(e, n) {
    const r = (...i) => {
      this.off(
        e,
        /** @type {any} */
        r
      ), n(...i);
    };
    this.on(
      e,
      /** @type {any} */
      r
    );
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  off(e, n) {
    const r = this._observers.get(e);
    r !== void 0 && (r.delete(n), r.size === 0 && this._observers.delete(e));
  }
  /**
   * Emit a named event. All registered event listeners that listen to the
   * specified name will receive the event.
   *
   * @todo This should catch exceptions
   *
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name The event name.
   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.
   */
  emit(e, n) {
    return Us((this._observers.get(e) || Wr()).values()).forEach((r) => r(...n));
  }
  destroy() {
    this._observers = Wr();
  }
}
const qo = Math.floor, Cc = Math.abs, p_ = (t, e) => t < e ? t : e, ha = (t, e) => t > e ? t : e, QT = (t) => t !== 0 ? t < 0 : 1 / t < 0, rb = 1, ib = 2, Yd = 4, Qd = 8, ZT = 32, g_ = 64, iu = 128, eA = 31, ob = 63, Wa = 127, tA = 2147483647, nA = Number.isInteger || ((t) => typeof t == "number" && isFinite(t) && qo(t) === t), rA = (t) => t.toLowerCase(), iA = /^\s*/g, oA = (t) => t.replace(iA, ""), sA = /([A-Z])/g, sb = (t, e) => oA(t.replace(sA, (n) => `${e}${rA(n)}`)), aA = (t) => {
  const e = unescape(encodeURIComponent(t)), n = e.length, r = new Uint8Array(n);
  for (let i = 0; i < n; i++)
    r[i] = /** @type {number} */
    e.codePointAt(i);
  return r;
}, ol = (
  /** @type {TextEncoder} */
  typeof TextEncoder < "u" ? new TextEncoder() : null
), lA = (t) => ol.encode(t), cA = ol ? lA : aA;
let Zd = typeof TextDecoder > "u" ? null : new TextDecoder("utf-8", { fatal: !0, ignoreBOM: !0 });
Zd && Zd.decode(new Uint8Array()).length === 1 && (Zd = null);
class Ml {
  constructor() {
    this.cpos = 0, this.cbuf = new Uint8Array(100), this.bufs = [];
  }
}
const zp = () => new Ml(), uA = (t) => {
  let e = t.cpos;
  for (let n = 0; n < t.bufs.length; n++)
    e += t.bufs[n].length;
  return e;
}, wi = (t) => {
  const e = new Uint8Array(uA(t));
  let n = 0;
  for (let r = 0; r < t.bufs.length; r++) {
    const i = t.bufs[r];
    e.set(i, n), n += i.length;
  }
  return e.set(new Uint8Array(t.cbuf.buffer, 0, t.cpos), n), e;
}, dA = (t, e) => {
  const n = t.cbuf.length;
  n - t.cpos < e && (t.bufs.push(new Uint8Array(t.cbuf.buffer, 0, t.cpos)), t.cbuf = new Uint8Array(ha(n, e) * 2), t.cpos = 0);
}, jt = (t, e) => {
  const n = t.cbuf.length;
  t.cpos === n && (t.bufs.push(t.cbuf), t.cbuf = new Uint8Array(n * 2), t.cpos = 0), t.cbuf[t.cpos++] = e;
}, lh = jt, ot = (t, e) => {
  for (; e > Wa; )
    jt(t, iu | Wa & e), e = qo(e / 128);
  jt(t, Wa & e);
}, Vp = (t, e) => {
  const n = QT(e);
  for (n && (e = -e), jt(t, (e > ob ? iu : 0) | (n ? g_ : 0) | ob & e), e = qo(e / 64); e > 0; )
    jt(t, (e > Wa ? iu : 0) | Wa & e), e = qo(e / 128);
}, ch = new Uint8Array(3e4), fA = ch.length / 3, hA = (t, e) => {
  if (e.length < fA) {
    const n = ol.encodeInto(e, ch).written || 0;
    ot(t, n);
    for (let r = 0; r < n; r++)
      jt(t, ch[r]);
  } else
    Hn(t, cA(e));
}, pA = (t, e) => {
  const n = unescape(encodeURIComponent(e)), r = n.length;
  ot(t, r);
  for (let i = 0; i < r; i++)
    jt(
      t,
      /** @type {number} */
      n.codePointAt(i)
    );
}, xs = ol && /** @type {any} */
ol.encodeInto ? hA : pA, Hp = (t, e) => {
  const n = t.cbuf.length, r = t.cpos, i = p_(n - r, e.length), o = e.length - i;
  t.cbuf.set(e.subarray(0, i), r), t.cpos += i, o > 0 && (t.bufs.push(t.cbuf), t.cbuf = new Uint8Array(ha(n * 2, o)), t.cbuf.set(e.subarray(i)), t.cpos = o);
}, Hn = (t, e) => {
  ot(t, e.byteLength), Hp(t, e);
}, Wp = (t, e) => {
  dA(t, e);
  const n = new DataView(t.cbuf.buffer, t.cpos, e);
  return t.cpos += e, n;
}, gA = (t, e) => Wp(t, 4).setFloat32(0, e, !1), wA = (t, e) => Wp(t, 8).setFloat64(0, e, !1), mA = (t, e) => (
  /** @type {any} */
  Wp(t, 8).setBigInt64(0, e, !1)
), ab = new DataView(new ArrayBuffer(4)), bA = (t) => (ab.setFloat32(0, t), ab.getFloat32(0) === t), sl = (t, e) => {
  switch (typeof e) {
    case "string":
      jt(t, 119), xs(t, e);
      break;
    case "number":
      nA(e) && Cc(e) <= tA ? (jt(t, 125), Vp(t, e)) : bA(e) ? (jt(t, 124), gA(t, e)) : (jt(t, 123), wA(t, e));
      break;
    case "bigint":
      jt(t, 122), mA(t, e);
      break;
    case "object":
      if (e === null)
        jt(t, 126);
      else if (XT(e)) {
        jt(t, 117), ot(t, e.length);
        for (let n = 0; n < e.length; n++)
          sl(t, e[n]);
      } else if (e instanceof Uint8Array)
        jt(t, 116), Hn(t, e);
      else {
        jt(t, 118);
        const n = Object.keys(e);
        ot(t, n.length);
        for (let r = 0; r < n.length; r++) {
          const i = n[r];
          xs(t, i), sl(t, e[i]);
        }
      }
      break;
    case "boolean":
      jt(t, e ? 120 : 121);
      break;
    default:
      jt(t, 127);
  }
};
class lb extends Ml {
  /**
   * @param {function(Encoder, T):void} writer
   */
  constructor(e) {
    super(), this.w = e, this.s = null, this.count = 0;
  }
  /**
   * @param {T} v
   */
  write(e) {
    this.s === e ? this.count++ : (this.count > 0 && ot(this, this.count - 1), this.count = 1, this.w(this, e), this.s = e);
  }
}
const cb = (t) => {
  t.count > 0 && (Vp(t.encoder, t.count === 1 ? t.s : -t.s), t.count > 1 && ot(t.encoder, t.count - 2));
};
class kc {
  constructor() {
    this.encoder = new Ml(), this.s = 0, this.count = 0;
  }
  /**
   * @param {number} v
   */
  write(e) {
    this.s === e ? this.count++ : (cb(this), this.count = 1, this.s = e);
  }
  /**
   * Flush the encoded state and transform this to a Uint8Array.
   *
   * Note that this should only be called once.
   */
  toUint8Array() {
    return cb(this), wi(this.encoder);
  }
}
const ub = (t) => {
  if (t.count > 0) {
    const e = t.diff * 2 + (t.count === 1 ? 0 : 1);
    Vp(t.encoder, e), t.count > 1 && ot(t.encoder, t.count - 2);
  }
};
class ef {
  constructor() {
    this.encoder = new Ml(), this.s = 0, this.count = 0, this.diff = 0;
  }
  /**
   * @param {number} v
   */
  write(e) {
    this.diff === e - this.s ? (this.s = e, this.count++) : (ub(this), this.count = 1, this.diff = e - this.s, this.s = e);
  }
  /**
   * Flush the encoded state and transform this to a Uint8Array.
   *
   * Note that this should only be called once.
   */
  toUint8Array() {
    return ub(this), wi(this.encoder);
  }
}
class yA {
  constructor() {
    this.sarr = [], this.s = "", this.lensE = new kc();
  }
  /**
   * @param {string} string
   */
  write(e) {
    this.s += e, this.s.length > 19 && (this.sarr.push(this.s), this.s = ""), this.lensE.write(e.length);
  }
  toUint8Array() {
    const e = new Ml();
    return this.sarr.push(this.s), this.s = "", xs(e, this.sarr.join("")), Hp(e, this.lensE.toUint8Array()), wi(e);
  }
}
const zs = (t) => new Error(t), Kr = () => {
  throw zs("Method unimplemented");
}, jo = () => {
  throw zs("Unexpected case");
}, vA = crypto.getRandomValues.bind(crypto), w_ = () => vA(new Uint32Array(1))[0], _A = "10000000-1000-4000-8000" + -1e11, xA = () => _A.replace(
  /[018]/g,
  /** @param {number} c */
  (t) => (t ^ w_() & 15 >> t / 4).toString(16)
), db = (t) => (
  /** @type {Promise<T>} */
  new Promise(t)
);
Promise.all.bind(Promise);
const fb = (t) => t === void 0 ? null : t;
class CA {
  constructor() {
    this.map = /* @__PURE__ */ new Map();
  }
  /**
   * @param {string} key
   * @param {any} newValue
   */
  setItem(e, n) {
    this.map.set(e, n);
  }
  /**
   * @param {string} key
   */
  getItem(e) {
    return this.map.get(e);
  }
}
let m_ = new CA(), kA = !0;
try {
  typeof localStorage < "u" && localStorage && (m_ = localStorage, kA = !1);
} catch {
}
const EA = m_, NA = Object.assign, SA = Object.keys, TA = (t, e) => {
  for (const n in t)
    e(t[n], n);
}, hb = (t) => SA(t).length, AA = (t) => {
  for (const e in t)
    return !1;
  return !0;
}, DA = (t, e) => {
  for (const n in t)
    if (!e(t[n], n))
      return !1;
  return !0;
}, OA = (t, e) => Object.prototype.hasOwnProperty.call(t, e), MA = (t, e) => t === e || hb(t) === hb(e) && DA(t, (n, r) => (n !== void 0 || OA(e, r)) && e[r] === n), IA = Object.freeze, b_ = (t) => {
  for (const e in t) {
    const n = t[e];
    (typeof n == "object" || typeof n == "function") && b_(t[e]);
  }
  return IA(t);
}, Kp = (t, e, n = 0) => {
  try {
    for (; n < t.length; n++)
      t[n](...e);
  } finally {
    n < t.length && Kp(t, e, n + 1);
  }
}, RA = (t, e) => e.includes(t), al = typeof process < "u" && process.release && /node|io\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process < "u" ? process : 0) === "[object process]";
let Rr;
const PA = () => {
  if (Rr === void 0)
    if (al) {
      Rr = Wr();
      const t = process.argv;
      let e = null;
      for (let n = 0; n < t.length; n++) {
        const r = t[n];
        r[0] === "-" ? (e !== null && Rr.set(e, ""), e = r) : e !== null && (Rr.set(e, r), e = null);
      }
      e !== null && Rr.set(e, "");
    } else typeof location == "object" ? (Rr = Wr(), (location.search || "?").slice(1).split("&").forEach((t) => {
      if (t.length !== 0) {
        const [e, n] = t.split("=");
        Rr.set(`--${sb(e, "-")}`, n), Rr.set(`-${sb(e, "-")}`, n);
      }
    })) : Rr = Wr();
  return Rr;
}, uh = (t) => PA().has(t), ou = (t) => fb(al ? process.env[t.toUpperCase().replaceAll("-", "_")] : EA.getItem(t)), y_ = (t) => uh("--" + t) || ou(t) !== null;
y_("production");
const LA = al && RA(process.env.FORCE_COLOR, ["true", "1", "2"]), $A = LA || !uh("--no-colors") && // @todo deprecate --no-colors
!y_("no-color") && (!al || process.stdout.isTTY) && (!al || uh("--color") || ou("COLORTERM") !== null || (ou("TERM") || "").includes("color"));
class FA {
  /**
   * @param {L} left
   * @param {R} right
   */
  constructor(e, n) {
    this.left = e, this.right = n;
  }
}
const si = (t, e) => new FA(t, e);
typeof DOMParser < "u" && new DOMParser();
const BA = (t) => GT(t, (e, n) => `${n}:${e};`).join(""), Ei = Symbol, v_ = Ei(), __ = Ei(), qA = Ei(), jA = Ei(), UA = Ei(), x_ = Ei(), zA = Ei(), Gp = Ei(), VA = Ei(), HA = (t) => {
  var i;
  t.length === 1 && ((i = t[0]) == null ? void 0 : i.constructor) === Function && (t = /** @type {Array<string|Symbol|Object|number>} */
  /** @type {[function]} */
  t[0]());
  const e = [], n = [];
  let r = 0;
  for (; r < t.length; r++) {
    const o = t[r];
    if (o === void 0)
      break;
    if (o.constructor === String || o.constructor === Number)
      e.push(o);
    else if (o.constructor === Object)
      break;
  }
  for (r > 0 && n.push(e.join("")); r < t.length; r++) {
    const o = t[r];
    o instanceof Symbol || n.push(o);
  }
  return n;
}, WA = {
  [v_]: si("font-weight", "bold"),
  [__]: si("font-weight", "normal"),
  [qA]: si("color", "blue"),
  [UA]: si("color", "green"),
  [jA]: si("color", "grey"),
  [x_]: si("color", "red"),
  [zA]: si("color", "purple"),
  [Gp]: si("color", "orange"),
  // not well supported in chrome when debugging node with inspector - TODO: deprecate
  [VA]: si("color", "black")
}, KA = (t) => {
  var s;
  t.length === 1 && ((s = t[0]) == null ? void 0 : s.constructor) === Function && (t = /** @type {Array<string|Symbol|Object|number>} */
  /** @type {[function]} */
  t[0]());
  const e = [], n = [], r = Wr();
  let i = [], o = 0;
  for (; o < t.length; o++) {
    const a = t[o], l = WA[a];
    if (l !== void 0)
      r.set(l.left, l.right);
    else {
      if (a === void 0)
        break;
      if (a.constructor === String || a.constructor === Number) {
        const c = BA(r);
        o > 0 || c.length > 0 ? (e.push("%c" + a), n.push(c)) : e.push(a);
      } else
        break;
    }
  }
  for (o > 0 && (i = n, i.unshift(e.join(""))); o < t.length; o++) {
    const a = t[o];
    a instanceof Symbol || i.push(a);
  }
  return i;
}, C_ = $A ? KA : HA, GA = (...t) => {
  console.log(...C_(t)), k_.forEach((e) => e.print(t));
}, JA = (...t) => {
  console.warn(...C_(t)), t.unshift(Gp), k_.forEach((e) => e.print(t));
}, k_ = js(), E_ = (t) => ({
  /**
   * @return {IterableIterator<T>}
   */
  [Symbol.iterator]() {
    return this;
  },
  // @ts-ignore
  next: t
}), XA = (t, e) => E_(() => {
  let n;
  do
    n = t.next();
  while (!n.done && !e(n.value));
  return n;
}), tf = (t, e) => E_(() => {
  const { done: n, value: r } = t.next();
  return { done: n, value: n ? void 0 : e(r) };
});
class YA {
  /**
   * @param {number} clock
   * @param {number} len
   */
  constructor(e, n) {
    this.clock = e, this.len = n;
  }
}
class QA {
  constructor() {
    this.clients = /* @__PURE__ */ new Map();
  }
}
const N_ = (t, e, n) => e.clients.forEach((r, i) => {
  const o = (
    /** @type {Array<GC|Item>} */
    t.doc.store.clients.get(i)
  );
  if (o != null) {
    const s = o[o.length - 1], a = s.id.clock + s.length;
    for (let l = 0, c = r[l]; l < r.length && c.clock < a; c = r[++l])
      I_(t, o, c.clock, c.len, n);
  }
}), ZA = (t, e) => {
  let n = 0, r = t.length - 1;
  for (; n <= r; ) {
    const i = qo((n + r) / 2), o = t[i], s = o.clock;
    if (s <= e) {
      if (e < s + o.len)
        return i;
      n = i + 1;
    } else
      r = i - 1;
  }
  return null;
}, S_ = (t, e) => {
  const n = t.clients.get(e.client);
  return n !== void 0 && ZA(n, e.clock) !== null;
}, T_ = (t) => {
  t.clients.forEach((e) => {
    e.sort((i, o) => i.clock - o.clock);
    let n, r;
    for (n = 1, r = 1; n < e.length; n++) {
      const i = e[r - 1], o = e[n];
      i.clock + i.len >= o.clock ? i.len = ha(i.len, o.clock + o.len - i.clock) : (r < n && (e[r] = o), r++);
    }
    e.length = r;
  });
}, A_ = (t, e, n, r) => {
  fa(t.clients, e, () => (
    /** @type {Array<DeleteItem>} */
    []
  )).push(new YA(n, r));
}, eD = (t, e) => {
  ot(t.restEncoder, e.clients.size), Us(e.clients.entries()).sort((n, r) => r[0] - n[0]).forEach(([n, r]) => {
    t.resetDsCurVal(), ot(t.restEncoder, n);
    const i = r.length;
    ot(t.restEncoder, i);
    for (let o = 0; o < i; o++) {
      const s = r[o];
      t.writeDsClock(s.clock), t.writeDsLen(s.len);
    }
  });
}, D_ = w_;
class Il extends YT {
  /**
   * @param {DocOpts} opts configuration
   */
  constructor({ guid: e = xA(), collectionid: n = null, gc: r = !0, gcFilter: i = () => !0, meta: o = null, autoLoad: s = !1, shouldLoad: a = !0 } = {}) {
    super(), this.gc = r, this.gcFilter = i, this.clientID = D_(), this.guid = e, this.collectionid = n, this.share = /* @__PURE__ */ new Map(), this.store = new uD(), this._transaction = null, this._transactionCleanups = [], this.subdocs = /* @__PURE__ */ new Set(), this._item = null, this.shouldLoad = a, this.autoLoad = s, this.meta = o, this.isLoaded = !1, this.isSynced = !1, this.isDestroyed = !1, this.whenLoaded = db((c) => {
      this.on("load", () => {
        this.isLoaded = !0, c(this);
      });
    });
    const l = () => db((c) => {
      const u = (f) => {
        (f === void 0 || f === !0) && (this.off("sync", u), c());
      };
      this.on("sync", u);
    });
    this.on("sync", (c) => {
      c === !1 && this.isSynced && (this.whenSynced = l()), this.isSynced = c === void 0 || c === !0, this.isSynced && !this.isLoaded && this.emit("load", [this]);
    }), this.whenSynced = l();
  }
  /**
   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).
   *
   * `load()` might be used in the future to request any provider to load the most current data.
   *
   * It is safe to call `load()` multiple times.
   */
  load() {
    const e = this._item;
    e !== null && !this.shouldLoad && ct(
      /** @type {any} */
      e.parent.doc,
      (n) => {
        n.subdocsLoaded.add(this);
      },
      null,
      !0
    ), this.shouldLoad = !0;
  }
  getSubdocs() {
    return this.subdocs;
  }
  getSubdocGuids() {
    return new Set(Us(this.subdocs).map((e) => e.guid));
  }
  /**
   * Changes that happen inside of a transaction are bundled. This means that
   * the observer fires _after_ the transaction is finished and that all changes
   * that happened inside of the transaction are sent as one message to the
   * other peers.
   *
   * @template T
   * @param {function(Transaction):T} f The function that should be executed as a transaction
   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin
   * @return T
   *
   * @public
   */
  transact(e, n = null) {
    return ct(this, e, n);
  }
  /**
   * Define a shared data type.
   *
   * Multiple calls of `ydoc.get(name, TypeConstructor)` yield the same result
   * and do not overwrite each other. I.e.
   * `ydoc.get(name, Y.Array) === ydoc.get(name, Y.Array)`
   *
   * After this method is called, the type is also available on `ydoc.share.get(name)`.
   *
   * *Best Practices:*
   * Define all types right after the Y.Doc instance is created and store them in a separate object.
   * Also use the typed methods `getText(name)`, `getArray(name)`, ..
   *
   * @template {typeof AbstractType<any>} Type
   * @example
   *   const ydoc = new Y.Doc(..)
   *   const appState = {
   *     document: ydoc.getText('document')
   *     comments: ydoc.getArray('comments')
   *   }
   *
   * @param {string} name
   * @param {Type} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...
   * @return {InstanceType<Type>} The created type. Constructed with TypeConstructor
   *
   * @public
   */
  get(e, n = (
    /** @type {any} */
    rn
  )) {
    const r = fa(this.share, e, () => {
      const o = new n();
      return o._integrate(this, null), o;
    }), i = r.constructor;
    if (n !== rn && i !== n)
      if (i === rn) {
        const o = new n();
        o._map = r._map, r._map.forEach(
          /** @param {Item?} n */
          (s) => {
            for (; s !== null; s = s.left)
              s.parent = o;
          }
        ), o._start = r._start;
        for (let s = o._start; s !== null; s = s.right)
          s.parent = o;
        return o._length = r._length, this.share.set(e, o), o._integrate(this, null), /** @type {InstanceType<Type>} */
        o;
      } else
        throw new Error(`Type with the name ${e} has already been defined with a different constructor`);
    return (
      /** @type {InstanceType<Type>} */
      r
    );
  }
  /**
   * @template T
   * @param {string} [name]
   * @return {YArray<T>}
   *
   * @public
   */
  getArray(e = "") {
    return (
      /** @type {YArray<T>} */
      this.get(e, To)
    );
  }
  /**
   * @param {string} [name]
   * @return {YText}
   *
   * @public
   */
  getText(e = "") {
    return this.get(e, lu);
  }
  /**
   * @template T
   * @param {string} [name]
   * @return {YMap<T>}
   *
   * @public
   */
  getMap(e = "") {
    return (
      /** @type {YMap<T>} */
      this.get(e, Vs)
    );
  }
  /**
   * @param {string} [name]
   * @return {YXmlElement}
   *
   * @public
   */
  getXmlElement(e = "") {
    return (
      /** @type {YXmlElement<{[key:string]:string}>} */
      this.get(e, ul)
    );
  }
  /**
   * @param {string} [name]
   * @return {YXmlFragment}
   *
   * @public
   */
  getXmlFragment(e = "") {
    return this.get(e, Hs);
  }
  /**
   * Converts the entire document into a js object, recursively traversing each yjs type
   * Doesn't log types that have not been defined (using ydoc.getType(..)).
   *
   * @deprecated Do not use this method and rather call toJSON directly on the shared types.
   *
   * @return {Object<string, any>}
   */
  toJSON() {
    const e = {};
    return this.share.forEach((n, r) => {
      e[r] = n.toJSON();
    }), e;
  }
  /**
   * Emit `destroy` event and unregister all event handlers.
   */
  destroy() {
    this.isDestroyed = !0, Us(this.subdocs).forEach((n) => n.destroy());
    const e = this._item;
    if (e !== null) {
      this._item = null;
      const n = (
        /** @type {ContentDoc} */
        e.content
      );
      n.doc = new Il({ guid: this.guid, ...n.opts, shouldLoad: !1 }), n.doc._item = e, ct(
        /** @type {any} */
        e.parent.doc,
        (r) => {
          const i = n.doc;
          e.deleted || r.subdocsAdded.add(i), r.subdocsRemoved.add(this);
        },
        null,
        !0
      );
    }
    this.emit("destroyed", [!0]), this.emit("destroy", [this]), super.destroy();
  }
}
class tD {
  constructor() {
    this.restEncoder = zp();
  }
  toUint8Array() {
    return wi(this.restEncoder);
  }
  resetDsCurVal() {
  }
  /**
   * @param {number} clock
   */
  writeDsClock(e) {
    ot(this.restEncoder, e);
  }
  /**
   * @param {number} len
   */
  writeDsLen(e) {
    ot(this.restEncoder, e);
  }
}
class nD extends tD {
  /**
   * @param {ID} id
   */
  writeLeftID(e) {
    ot(this.restEncoder, e.client), ot(this.restEncoder, e.clock);
  }
  /**
   * @param {ID} id
   */
  writeRightID(e) {
    ot(this.restEncoder, e.client), ot(this.restEncoder, e.clock);
  }
  /**
   * Use writeClient and writeClock instead of writeID if possible.
   * @param {number} client
   */
  writeClient(e) {
    ot(this.restEncoder, e);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeInfo(e) {
    lh(this.restEncoder, e);
  }
  /**
   * @param {string} s
   */
  writeString(e) {
    xs(this.restEncoder, e);
  }
  /**
   * @param {boolean} isYKey
   */
  writeParentInfo(e) {
    ot(this.restEncoder, e ? 1 : 0);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeTypeRef(e) {
    ot(this.restEncoder, e);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @param {number} len
   */
  writeLen(e) {
    ot(this.restEncoder, e);
  }
  /**
   * @param {any} any
   */
  writeAny(e) {
    sl(this.restEncoder, e);
  }
  /**
   * @param {Uint8Array} buf
   */
  writeBuf(e) {
    Hn(this.restEncoder, e);
  }
  /**
   * @param {any} embed
   */
  writeJSON(e) {
    xs(this.restEncoder, JSON.stringify(e));
  }
  /**
   * @param {string} key
   */
  writeKey(e) {
    xs(this.restEncoder, e);
  }
}
class rD {
  constructor() {
    this.restEncoder = zp(), this.dsCurrVal = 0;
  }
  toUint8Array() {
    return wi(this.restEncoder);
  }
  resetDsCurVal() {
    this.dsCurrVal = 0;
  }
  /**
   * @param {number} clock
   */
  writeDsClock(e) {
    const n = e - this.dsCurrVal;
    this.dsCurrVal = e, ot(this.restEncoder, n);
  }
  /**
   * @param {number} len
   */
  writeDsLen(e) {
    e === 0 && jo(), ot(this.restEncoder, e - 1), this.dsCurrVal += e;
  }
}
class iD extends rD {
  constructor() {
    super(), this.keyMap = /* @__PURE__ */ new Map(), this.keyClock = 0, this.keyClockEncoder = new ef(), this.clientEncoder = new kc(), this.leftClockEncoder = new ef(), this.rightClockEncoder = new ef(), this.infoEncoder = new lb(lh), this.stringEncoder = new yA(), this.parentInfoEncoder = new lb(lh), this.typeRefEncoder = new kc(), this.lenEncoder = new kc();
  }
  toUint8Array() {
    const e = zp();
    return ot(e, 0), Hn(e, this.keyClockEncoder.toUint8Array()), Hn(e, this.clientEncoder.toUint8Array()), Hn(e, this.leftClockEncoder.toUint8Array()), Hn(e, this.rightClockEncoder.toUint8Array()), Hn(e, wi(this.infoEncoder)), Hn(e, this.stringEncoder.toUint8Array()), Hn(e, wi(this.parentInfoEncoder)), Hn(e, this.typeRefEncoder.toUint8Array()), Hn(e, this.lenEncoder.toUint8Array()), Hp(e, wi(this.restEncoder)), wi(e);
  }
  /**
   * @param {ID} id
   */
  writeLeftID(e) {
    this.clientEncoder.write(e.client), this.leftClockEncoder.write(e.clock);
  }
  /**
   * @param {ID} id
   */
  writeRightID(e) {
    this.clientEncoder.write(e.client), this.rightClockEncoder.write(e.clock);
  }
  /**
   * @param {number} client
   */
  writeClient(e) {
    this.clientEncoder.write(e);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeInfo(e) {
    this.infoEncoder.write(e);
  }
  /**
   * @param {string} s
   */
  writeString(e) {
    this.stringEncoder.write(e);
  }
  /**
   * @param {boolean} isYKey
   */
  writeParentInfo(e) {
    this.parentInfoEncoder.write(e ? 1 : 0);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeTypeRef(e) {
    this.typeRefEncoder.write(e);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @param {number} len
   */
  writeLen(e) {
    this.lenEncoder.write(e);
  }
  /**
   * @param {any} any
   */
  writeAny(e) {
    sl(this.restEncoder, e);
  }
  /**
   * @param {Uint8Array} buf
   */
  writeBuf(e) {
    Hn(this.restEncoder, e);
  }
  /**
   * This is mainly here for legacy purposes.
   *
   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.
   *
   * @param {any} embed
   */
  writeJSON(e) {
    sl(this.restEncoder, e);
  }
  /**
   * Property keys are often reused. For example, in y-prosemirror the key `bold` might
   * occur very often. For a 3d application, the key `position` might occur very often.
   *
   * We cache these keys in a Map and refer to them via a unique number.
   *
   * @param {string} key
   */
  writeKey(e) {
    const n = this.keyMap.get(e);
    n === void 0 ? (this.keyClockEncoder.write(this.keyClock++), this.stringEncoder.write(e)) : this.keyClockEncoder.write(n);
  }
}
const oD = (t, e, n, r) => {
  r = ha(r, e[0].id.clock);
  const i = yi(e, r);
  ot(t.restEncoder, e.length - i), t.writeClient(n), ot(t.restEncoder, r);
  const o = e[i];
  o.write(t, r - o.id.clock);
  for (let s = i + 1; s < e.length; s++)
    e[s].write(t, 0);
}, sD = (t, e, n) => {
  const r = /* @__PURE__ */ new Map();
  n.forEach((i, o) => {
    An(e, o) > i && r.set(o, i);
  }), Jp(e).forEach((i, o) => {
    n.has(o) || r.set(o, 0);
  }), ot(t.restEncoder, r.size), Us(r.entries()).sort((i, o) => o[0] - i[0]).forEach(([i, o]) => {
    oD(
      t,
      /** @type {Array<GC|Item>} */
      e.clients.get(i),
      i,
      o
    );
  });
}, aD = (t, e) => sD(t, e.doc.store, e.beforeState);
class lD {
  constructor() {
    this.l = [];
  }
}
const pb = () => new lD(), gb = (t, e) => t.l.push(e), wb = (t, e) => {
  const n = t.l, r = n.length;
  t.l = n.filter((i) => e !== i), r === t.l.length && console.error("[yjs] Tried to remove event handler that doesn't exist.");
}, O_ = (t, e, n) => Kp(t.l, [e, n]);
class Ec {
  /**
   * @param {number} client client id
   * @param {number} clock unique per client id, continuous number
   */
  constructor(e, n) {
    this.client = e, this.clock = n;
  }
}
const dc = (t, e) => t === e || t !== null && e !== null && t.client === e.client && t.clock === e.clock, _t = (t, e) => new Ec(t, e), cD = (t) => {
  for (const [e, n] of t.doc.share.entries())
    if (n === t)
      return e;
  throw jo();
}, ds = (t, e) => e === void 0 ? !t.deleted : e.sv.has(t.id.client) && (e.sv.get(t.id.client) || 0) > t.id.clock && !S_(e.ds, t.id), dh = (t, e) => {
  const n = fa(t.meta, dh, js), r = t.doc.store;
  n.has(e) || (e.sv.forEach((i, o) => {
    i < An(r, o) && Hi(t, _t(o, i));
  }), N_(t, e.ds, (i) => {
  }), n.add(e));
};
class uD {
  constructor() {
    this.clients = /* @__PURE__ */ new Map(), this.pendingStructs = null, this.pendingDs = null;
  }
}
const Jp = (t) => {
  const e = /* @__PURE__ */ new Map();
  return t.clients.forEach((n, r) => {
    const i = n[n.length - 1];
    e.set(r, i.id.clock + i.length);
  }), e;
}, An = (t, e) => {
  const n = t.clients.get(e);
  if (n === void 0)
    return 0;
  const r = n[n.length - 1];
  return r.id.clock + r.length;
}, M_ = (t, e) => {
  let n = t.clients.get(e.id.client);
  if (n === void 0)
    n = [], t.clients.set(e.id.client, n);
  else {
    const r = n[n.length - 1];
    if (r.id.clock + r.length !== e.id.clock)
      throw jo();
  }
  n.push(e);
}, yi = (t, e) => {
  let n = 0, r = t.length - 1, i = t[r], o = i.id.clock;
  if (o === e)
    return r;
  let s = qo(e / (o + i.length - 1) * r);
  for (; n <= r; ) {
    if (i = t[s], o = i.id.clock, o <= e) {
      if (e < o + i.length)
        return s;
      n = s + 1;
    } else
      r = s - 1;
    s = qo((n + r) / 2);
  }
  throw jo();
}, dD = (t, e) => {
  const n = t.clients.get(e.client);
  return n[yi(n, e.clock)];
}, nf = (
  /** @type {function(StructStore,ID):Item} */
  dD
), fh = (t, e, n) => {
  const r = yi(e, n), i = e[r];
  return i.id.clock < n && i instanceof dn ? (e.splice(r + 1, 0, Q_(t, i, n - i.id.clock)), r + 1) : r;
}, Hi = (t, e) => {
  const n = (
    /** @type {Array<Item>} */
    t.doc.store.clients.get(e.client)
  );
  return n[fh(t, n, e.clock)];
}, mb = (t, e, n) => {
  const r = e.clients.get(n.client), i = yi(r, n.clock), o = r[i];
  return n.clock !== o.id.clock + o.length - 1 && o.constructor !== Oi && r.splice(i + 1, 0, Q_(t, o, n.clock - o.id.clock + 1)), o;
}, fD = (t, e, n) => {
  const r = (
    /** @type {Array<GC|Item>} */
    t.clients.get(e.id.client)
  );
  r[yi(r, e.id.clock)] = n;
}, I_ = (t, e, n, r, i) => {
  if (r === 0)
    return;
  const o = n + r;
  let s = fh(t, e, n), a;
  do
    a = e[s++], o < a.id.clock + a.length && fh(t, e, o), i(a);
  while (s < e.length && e[s].id.clock < o);
};
class hD {
  /**
   * @param {Doc} doc
   * @param {any} origin
   * @param {boolean} local
   */
  constructor(e, n, r) {
    this.doc = e, this.deleteSet = new QA(), this.beforeState = Jp(e.store), this.afterState = /* @__PURE__ */ new Map(), this.changed = /* @__PURE__ */ new Map(), this.changedParentTypes = /* @__PURE__ */ new Map(), this._mergeStructs = [], this.origin = n, this.meta = /* @__PURE__ */ new Map(), this.local = r, this.subdocsAdded = /* @__PURE__ */ new Set(), this.subdocsRemoved = /* @__PURE__ */ new Set(), this.subdocsLoaded = /* @__PURE__ */ new Set(), this._needFormattingCleanup = !1;
  }
}
const bb = (t, e) => e.deleteSet.clients.size === 0 && !JT(e.afterState, (n, r) => e.beforeState.get(r) !== n) ? !1 : (T_(e.deleteSet), aD(t, e), eD(t, e.deleteSet), !0), yb = (t, e, n) => {
  const r = e._item;
  (r === null || r.id.clock < (t.beforeState.get(r.id.client) || 0) && !r.deleted) && fa(t.changed, e, js).add(n);
}, Nc = (t, e) => {
  let n = t[e], r = t[e - 1], i = e;
  for (; i > 0; n = r, r = t[--i - 1]) {
    if (r.deleted === n.deleted && r.constructor === n.constructor && r.mergeWith(n)) {
      n instanceof dn && n.parentSub !== null && /** @type {AbstractType<any>} */
      n.parent._map.get(n.parentSub) === n && n.parent._map.set(
        n.parentSub,
        /** @type {Item} */
        r
      );
      continue;
    }
    break;
  }
  const o = e - i;
  return o && t.splice(e + 1 - o, o), o;
}, pD = (t, e, n) => {
  for (const [r, i] of t.clients.entries()) {
    const o = (
      /** @type {Array<GC|Item>} */
      e.clients.get(r)
    );
    for (let s = i.length - 1; s >= 0; s--) {
      const a = i[s], l = a.clock + a.len;
      for (let c = yi(o, a.clock), u = o[c]; c < o.length && u.id.clock < l; u = o[++c]) {
        const f = o[c];
        if (a.clock + a.len <= f.id.clock)
          break;
        f instanceof dn && f.deleted && !f.keep && n(f) && f.gc(e, !1);
      }
    }
  }
}, gD = (t, e) => {
  t.clients.forEach((n, r) => {
    const i = (
      /** @type {Array<GC|Item>} */
      e.clients.get(r)
    );
    for (let o = n.length - 1; o >= 0; o--) {
      const s = n[o], a = p_(i.length - 1, 1 + yi(i, s.clock + s.len - 1));
      for (let l = a, c = i[l]; l > 0 && c.id.clock >= s.clock; c = i[l])
        l -= 1 + Nc(i, l);
    }
  });
}, R_ = (t, e) => {
  if (e < t.length) {
    const n = t[e], r = n.doc, i = r.store, o = n.deleteSet, s = n._mergeStructs;
    try {
      T_(o), n.afterState = Jp(n.doc.store), r.emit("beforeObserverCalls", [n, r]);
      const a = [];
      n.changed.forEach(
        (l, c) => a.push(() => {
          (c._item === null || !c._item.deleted) && c._callObserver(n, l);
        })
      ), a.push(() => {
        n.changedParentTypes.forEach((l, c) => {
          c._dEH.l.length > 0 && (c._item === null || !c._item.deleted) && (l = l.filter(
            (u) => u.target._item === null || !u.target._item.deleted
          ), l.forEach((u) => {
            u.currentTarget = c, u._path = null;
          }), l.sort((u, f) => u.path.length - f.path.length), O_(c._dEH, l, n));
        });
      }), a.push(() => r.emit("afterTransaction", [n, r])), Kp(a, []), n._needFormattingCleanup && ND(n);
    } finally {
      r.gc && pD(o, i, r.gcFilter), gD(o, i), n.afterState.forEach((u, f) => {
        const d = n.beforeState.get(f) || 0;
        if (d !== u) {
          const h = (
            /** @type {Array<GC|Item>} */
            i.clients.get(f)
          ), g = ha(yi(h, d), 1);
          for (let w = h.length - 1; w >= g; )
            w -= 1 + Nc(h, w);
        }
      });
      for (let u = s.length - 1; u >= 0; u--) {
        const { client: f, clock: d } = s[u].id, h = (
          /** @type {Array<GC|Item>} */
          i.clients.get(f)
        ), g = yi(h, d);
        g + 1 < h.length && Nc(h, g + 1) > 1 || g > 0 && Nc(h, g);
      }
      if (!n.local && n.afterState.get(r.clientID) !== n.beforeState.get(r.clientID) && (GA(Gp, v_, "[yjs] ", __, x_, "Changed the client-id because another client seems to be using it."), r.clientID = D_()), r.emit("afterTransactionCleanup", [n, r]), r._observers.has("update")) {
        const u = new nD();
        bb(u, n) && r.emit("update", [u.toUint8Array(), n.origin, r, n]);
      }
      if (r._observers.has("updateV2")) {
        const u = new iD();
        bb(u, n) && r.emit("updateV2", [u.toUint8Array(), n.origin, r, n]);
      }
      const { subdocsAdded: a, subdocsLoaded: l, subdocsRemoved: c } = n;
      (a.size > 0 || c.size > 0 || l.size > 0) && (a.forEach((u) => {
        u.clientID = r.clientID, u.collectionid == null && (u.collectionid = r.collectionid), r.subdocs.add(u);
      }), c.forEach((u) => r.subdocs.delete(u)), r.emit("subdocs", [{ loaded: l, added: a, removed: c }, r, n]), c.forEach((u) => u.destroy())), t.length <= e + 1 ? (r._transactionCleanups = [], r.emit("afterAllTransactions", [r, t])) : R_(t, e + 1);
    }
  }
}, ct = (t, e, n = null, r = !0) => {
  const i = t._transactionCleanups;
  let o = !1, s = null;
  t._transaction === null && (o = !0, t._transaction = new hD(t, n, r), i.push(t._transaction), i.length === 1 && t.emit("beforeAllTransactions", [t]), t.emit("beforeTransaction", [t._transaction, t]));
  try {
    s = e(t._transaction);
  } finally {
    if (o) {
      const a = t._transaction === i[0];
      t._transaction = null, a && R_(i, 0);
    }
  }
  return s;
}, vb = "You must not compute changes after the event-handler fired.";
class Ju {
  /**
   * @param {T} target The changed type.
   * @param {Transaction} transaction
   */
  constructor(e, n) {
    this.target = e, this.currentTarget = e, this.transaction = n, this._changes = null, this._keys = null, this._delta = null, this._path = null;
  }
  /**
   * Computes the path from `y` to the changed type.
   *
   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.
   *
   * The following property holds:
   * @example
   *   let type = y
   *   event.path.forEach(dir => {
   *     type = type.get(dir)
   *   })
   *   type === event.target // => true
   */
  get path() {
    return this._path || (this._path = wD(this.currentTarget, this.target));
  }
  /**
   * Check if a struct is deleted by this event.
   *
   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.
   *
   * @param {AbstractStruct} struct
   * @return {boolean}
   */
  deletes(e) {
    return S_(this.transaction.deleteSet, e.id);
  }
  /**
   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}
   */
  get keys() {
    if (this._keys === null) {
      if (this.transaction.doc._transactionCleanups.length === 0)
        throw zs(vb);
      const e = /* @__PURE__ */ new Map(), n = this.target;
      /** @type Set<string|null> */
      this.transaction.changed.get(n).forEach((i) => {
        if (i !== null) {
          const o = (
            /** @type {Item} */
            n._map.get(i)
          );
          let s, a;
          if (this.adds(o)) {
            let l = o.left;
            for (; l !== null && this.adds(l); )
              l = l.left;
            if (this.deletes(o))
              if (l !== null && this.deletes(l))
                s = "delete", a = Xd(l.content.getContent());
              else
                return;
            else
              l !== null && this.deletes(l) ? (s = "update", a = Xd(l.content.getContent())) : (s = "add", a = void 0);
          } else if (this.deletes(o))
            s = "delete", a = Xd(
              /** @type {Item} */
              o.content.getContent()
            );
          else
            return;
          e.set(i, { action: s, oldValue: a });
        }
      }), this._keys = e;
    }
    return this._keys;
  }
  /**
   * This is a computed property. Note that this can only be safely computed during the
   * event call. Computing this property after other changes happened might result in
   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes
   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.
   *
   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}
   */
  get delta() {
    return this.changes.delta;
  }
  /**
   * Check if a struct is added by this event.
   *
   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.
   *
   * @param {AbstractStruct} struct
   * @return {boolean}
   */
  adds(e) {
    return e.id.clock >= (this.transaction.beforeState.get(e.id.client) || 0);
  }
  /**
   * This is a computed property. Note that this can only be safely computed during the
   * event call. Computing this property after other changes happened might result in
   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes
   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.
   *
   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}
   */
  get changes() {
    let e = this._changes;
    if (e === null) {
      if (this.transaction.doc._transactionCleanups.length === 0)
        throw zs(vb);
      const n = this.target, r = js(), i = js(), o = [];
      if (e = {
        added: r,
        deleted: i,
        delta: o,
        keys: this.keys
      }, /** @type Set<string|null> */
      this.transaction.changed.get(n).has(null)) {
        let a = null;
        const l = () => {
          a && o.push(a);
        };
        for (let c = n._start; c !== null; c = c.right)
          c.deleted ? this.deletes(c) && !this.adds(c) && ((a === null || a.delete === void 0) && (l(), a = { delete: 0 }), a.delete += c.length, i.add(c)) : this.adds(c) ? ((a === null || a.insert === void 0) && (l(), a = { insert: [] }), a.insert = a.insert.concat(c.content.getContent()), r.add(c)) : ((a === null || a.retain === void 0) && (l(), a = { retain: 0 }), a.retain += c.length);
        a !== null && a.retain === void 0 && l();
      }
      this._changes = e;
    }
    return (
      /** @type {any} */
      e
    );
  }
}
const wD = (t, e) => {
  const n = [];
  for (; e._item !== null && e !== t; ) {
    if (e._item.parentSub !== null)
      n.unshift(e._item.parentSub);
    else {
      let r = 0, i = (
        /** @type {AbstractType<any>} */
        e._item.parent._start
      );
      for (; i !== e._item && i !== null; )
        !i.deleted && i.countable && (r += i.length), i = i.right;
      n.unshift(r);
    }
    e = /** @type {AbstractType<any>} */
    e._item.parent;
  }
  return n;
}, hn = () => {
  JA("Invalid access: Add Yjs type to a document before reading data.");
}, P_ = 80;
let Xp = 0;
class mD {
  /**
   * @param {Item} p
   * @param {number} index
   */
  constructor(e, n) {
    e.marker = !0, this.p = e, this.index = n, this.timestamp = Xp++;
  }
}
const bD = (t) => {
  t.timestamp = Xp++;
}, L_ = (t, e, n) => {
  t.p.marker = !1, t.p = e, e.marker = !0, t.index = n, t.timestamp = Xp++;
}, yD = (t, e, n) => {
  if (t.length >= P_) {
    const r = t.reduce((i, o) => i.timestamp < o.timestamp ? i : o);
    return L_(r, e, n), r;
  } else {
    const r = new mD(e, n);
    return t.push(r), r;
  }
}, Xu = (t, e) => {
  if (t._start === null || e === 0 || t._searchMarker === null)
    return null;
  const n = t._searchMarker.length === 0 ? null : t._searchMarker.reduce((o, s) => Cc(e - o.index) < Cc(e - s.index) ? o : s);
  let r = t._start, i = 0;
  for (n !== null && (r = n.p, i = n.index, bD(n)); r.right !== null && i < e; ) {
    if (!r.deleted && r.countable) {
      if (e < i + r.length)
        break;
      i += r.length;
    }
    r = r.right;
  }
  for (; r.left !== null && i > e; )
    r = r.left, !r.deleted && r.countable && (i -= r.length);
  for (; r.left !== null && r.left.id.client === r.id.client && r.left.id.clock + r.left.length === r.id.clock; )
    r = r.left, !r.deleted && r.countable && (i -= r.length);
  return n !== null && Cc(n.index - i) < /** @type {YText|YArray<any>} */
  r.parent.length / P_ ? (L_(n, r, i), n) : yD(t._searchMarker, r, i);
}, ll = (t, e, n) => {
  for (let r = t.length - 1; r >= 0; r--) {
    const i = t[r];
    if (n > 0) {
      let o = i.p;
      for (o.marker = !1; o && (o.deleted || !o.countable); )
        o = o.left, o && !o.deleted && o.countable && (i.index -= o.length);
      if (o === null || o.marker === !0) {
        t.splice(r, 1);
        continue;
      }
      i.p = o, o.marker = !0;
    }
    (e < i.index || n > 0 && e === i.index) && (i.index = ha(e, i.index + n));
  }
}, Yu = (t, e, n) => {
  const r = t, i = e.changedParentTypes;
  for (; fa(i, t, () => []).push(n), t._item !== null; )
    t = /** @type {AbstractType<any>} */
    t._item.parent;
  O_(r._eH, n, e);
};
class rn {
  constructor() {
    this._item = null, this._map = /* @__PURE__ */ new Map(), this._start = null, this.doc = null, this._length = 0, this._eH = pb(), this._dEH = pb(), this._searchMarker = null;
  }
  /**
   * @return {AbstractType<any>|null}
   */
  get parent() {
    return this._item ? (
      /** @type {AbstractType<any>} */
      this._item.parent
    ) : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item|null} item
   */
  _integrate(e, n) {
    this.doc = e, this._item = n;
  }
  /**
   * @return {AbstractType<EventType>}
   */
  _copy() {
    throw Kr();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {AbstractType<EventType>}
   */
  clone() {
    throw Kr();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder
   */
  _write(e) {
  }
  /**
   * The first non-deleted item
   */
  get _first() {
    let e = this._start;
    for (; e !== null && e.deleted; )
      e = e.right;
    return e;
  }
  /**
   * Creates YEvent and calls all type observers.
   * Must be implemented by each type.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    !e.local && this._searchMarker && (this._searchMarker.length = 0);
  }
  /**
   * Observe all events that are created on this type.
   *
   * @param {function(EventType, Transaction):void} f Observer function
   */
  observe(e) {
    gb(this._eH, e);
  }
  /**
   * Observe all events that are created by this type and its children.
   *
   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function
   */
  observeDeep(e) {
    gb(this._dEH, e);
  }
  /**
   * Unregister an observer function.
   *
   * @param {function(EventType,Transaction):void} f Observer function
   */
  unobserve(e) {
    wb(this._eH, e);
  }
  /**
   * Unregister an observer function.
   *
   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function
   */
  unobserveDeep(e) {
    wb(this._dEH, e);
  }
  /**
   * @abstract
   * @return {any}
   */
  toJSON() {
  }
}
const $_ = (t, e, n) => {
  t.doc ?? hn(), e < 0 && (e = t._length + e), n < 0 && (n = t._length + n);
  let r = n - e;
  const i = [];
  let o = t._start;
  for (; o !== null && r > 0; ) {
    if (o.countable && !o.deleted) {
      const s = o.content.getContent();
      if (s.length <= e)
        e -= s.length;
      else {
        for (let a = e; a < s.length && r > 0; a++)
          i.push(s[a]), r--;
        e = 0;
      }
    }
    o = o.right;
  }
  return i;
}, F_ = (t) => {
  t.doc ?? hn();
  const e = [];
  let n = t._start;
  for (; n !== null; ) {
    if (n.countable && !n.deleted) {
      const r = n.content.getContent();
      for (let i = 0; i < r.length; i++)
        e.push(r[i]);
    }
    n = n.right;
  }
  return e;
}, cl = (t, e) => {
  let n = 0, r = t._start;
  for (t.doc ?? hn(); r !== null; ) {
    if (r.countable && !r.deleted) {
      const i = r.content.getContent();
      for (let o = 0; o < i.length; o++)
        e(i[o], n++, t);
    }
    r = r.right;
  }
}, B_ = (t, e) => {
  const n = [];
  return cl(t, (r, i) => {
    n.push(e(r, i, t));
  }), n;
}, vD = (t) => {
  let e = t._start, n = null, r = 0;
  return {
    [Symbol.iterator]() {
      return this;
    },
    next: () => {
      if (n === null) {
        for (; e !== null && e.deleted; )
          e = e.right;
        if (e === null)
          return {
            done: !0,
            value: void 0
          };
        n = e.content.getContent(), r = 0, e = e.right;
      }
      const i = n[r++];
      return n.length <= r && (n = null), {
        done: !1,
        value: i
      };
    }
  };
}, q_ = (t, e) => {
  t.doc ?? hn();
  const n = Xu(t, e);
  let r = t._start;
  for (n !== null && (r = n.p, e -= n.index); r !== null; r = r.right)
    if (!r.deleted && r.countable) {
      if (e < r.length)
        return r.content.getContent()[e];
      e -= r.length;
    }
}, su = (t, e, n, r) => {
  let i = n;
  const o = t.doc, s = o.clientID, a = o.store, l = n === null ? e._start : n.right;
  let c = [];
  const u = () => {
    c.length > 0 && (i = new dn(_t(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new Ws(c)), i.integrate(t, 0), c = []);
  };
  r.forEach((f) => {
    if (f === null)
      c.push(f);
    else
      switch (f.constructor) {
        case Number:
        case Object:
        case Boolean:
        case Array:
        case String:
          c.push(f);
          break;
        default:
          switch (u(), f.constructor) {
            case Uint8Array:
            case ArrayBuffer:
              i = new dn(_t(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new Qu(new Uint8Array(
                /** @type {Uint8Array} */
                f
              ))), i.integrate(t, 0);
              break;
            case Il:
              i = new dn(_t(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new Zu(
                /** @type {Doc} */
                f
              )), i.integrate(t, 0);
              break;
            default:
              if (f instanceof rn)
                i = new dn(_t(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new to(f)), i.integrate(t, 0);
              else
                throw new Error("Unexpected content type in insert operation");
          }
      }
  }), u();
}, j_ = () => zs("Length exceeded!"), U_ = (t, e, n, r) => {
  if (n > e._length)
    throw j_();
  if (n === 0)
    return e._searchMarker && ll(e._searchMarker, n, r.length), su(t, e, null, r);
  const i = n, o = Xu(e, n);
  let s = e._start;
  for (o !== null && (s = o.p, n -= o.index, n === 0 && (s = s.prev, n += s && s.countable && !s.deleted ? s.length : 0)); s !== null; s = s.right)
    if (!s.deleted && s.countable) {
      if (n <= s.length) {
        n < s.length && Hi(t, _t(s.id.client, s.id.clock + n));
        break;
      }
      n -= s.length;
    }
  return e._searchMarker && ll(e._searchMarker, i, r.length), su(t, e, s, r);
}, _D = (t, e, n) => {
  let i = (e._searchMarker || []).reduce((o, s) => s.index > o.index ? s : o, { index: 0, p: e._start }).p;
  if (i)
    for (; i.right; )
      i = i.right;
  return su(t, e, i, n);
}, z_ = (t, e, n, r) => {
  if (r === 0)
    return;
  const i = n, o = r, s = Xu(e, n);
  let a = e._start;
  for (s !== null && (a = s.p, n -= s.index); a !== null && n > 0; a = a.right)
    !a.deleted && a.countable && (n < a.length && Hi(t, _t(a.id.client, a.id.clock + n)), n -= a.length);
  for (; r > 0 && a !== null; )
    a.deleted || (r < a.length && Hi(t, _t(a.id.client, a.id.clock + r)), a.delete(t), r -= a.length), a = a.right;
  if (r > 0)
    throw j_();
  e._searchMarker && ll(
    e._searchMarker,
    i,
    -o + r
    /* in case we remove the above exception */
  );
}, au = (t, e, n) => {
  const r = e._map.get(n);
  r !== void 0 && r.delete(t);
}, Yp = (t, e, n, r) => {
  const i = e._map.get(n) || null, o = t.doc, s = o.clientID;
  let a;
  if (r == null)
    a = new Ws([r]);
  else
    switch (r.constructor) {
      case Number:
      case Object:
      case Boolean:
      case Array:
      case String:
      case Date:
      case BigInt:
        a = new Ws([r]);
        break;
      case Uint8Array:
        a = new Qu(
          /** @type {Uint8Array} */
          r
        );
        break;
      case Il:
        a = new Zu(
          /** @type {Doc} */
          r
        );
        break;
      default:
        if (r instanceof rn)
          a = new to(r);
        else
          throw new Error("Unexpected content type");
    }
  new dn(_t(s, An(o.store, s)), i, i && i.lastId, null, null, e, n, a).integrate(t, 0);
}, Qp = (t, e) => {
  t.doc ?? hn();
  const n = t._map.get(e);
  return n !== void 0 && !n.deleted ? n.content.getContent()[n.length - 1] : void 0;
}, V_ = (t) => {
  const e = {};
  return t.doc ?? hn(), t._map.forEach((n, r) => {
    n.deleted || (e[r] = n.content.getContent()[n.length - 1]);
  }), e;
}, H_ = (t, e) => {
  t.doc ?? hn();
  const n = t._map.get(e);
  return n !== void 0 && !n.deleted;
}, xD = (t, e) => {
  const n = {};
  return t._map.forEach((r, i) => {
    let o = r;
    for (; o !== null && (!e.sv.has(o.id.client) || o.id.clock >= (e.sv.get(o.id.client) || 0)); )
      o = o.left;
    o !== null && ds(o, e) && (n[i] = o.content.getContent()[o.length - 1]);
  }), n;
}, fc = (t) => (t.doc ?? hn(), XA(
  t._map.entries(),
  /** @param {any} entry */
  (e) => !e[1].deleted
));
class W_ extends Ju {
}
class To extends rn {
  constructor() {
    super(), this._prelimContent = [], this._searchMarker = [];
  }
  /**
   * Construct a new YArray containing the specified items.
   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T
   * @param {Array<T>} items
   * @return {YArray<T>}
   */
  static from(e) {
    const n = new To();
    return n.push(e), n;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this.insert(
      0,
      /** @type {Array<any>} */
      this._prelimContent
    ), this._prelimContent = null;
  }
  /**
   * @return {YArray<T>}
   */
  _copy() {
    return new To();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YArray<T>}
   */
  clone() {
    const e = new To();
    return e.insert(0, this.toArray().map(
      (n) => n instanceof rn ? (
        /** @type {typeof el} */
        n.clone()
      ) : n
    )), e;
  }
  get length() {
    return this.doc ?? hn(), this._length;
  }
  /**
   * Creates YArrayEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    super._callObserver(e, n), Yu(this, e, new W_(this, e));
  }
  /**
   * Inserts new content at an index.
   *
   * Important: This function expects an array of content. Not just a content
   * object. The reason for this "weirdness" is that inserting several elements
   * is very efficient when it is done as a single operation.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  yarray.insert(0, ['a'])
   *  // Insert numbers 1, 2 at position 1
   *  yarray.insert(1, [1, 2])
   *
   * @param {number} index The index to insert content at.
   * @param {Array<T>} content The array of content
   */
  insert(e, n) {
    this.doc !== null ? ct(this.doc, (r) => {
      U_(
        r,
        this,
        e,
        /** @type {any} */
        n
      );
    }) : this._prelimContent.splice(e, 0, ...n);
  }
  /**
   * Appends content to this YArray.
   *
   * @param {Array<T>} content Array of content to append.
   *
   * @todo Use the following implementation in all types.
   */
  push(e) {
    this.doc !== null ? ct(this.doc, (n) => {
      _D(
        n,
        this,
        /** @type {any} */
        e
      );
    }) : this._prelimContent.push(...e);
  }
  /**
   * Prepends content to this YArray.
   *
   * @param {Array<T>} content Array of content to prepend.
   */
  unshift(e) {
    this.insert(0, e);
  }
  /**
   * Deletes elements starting from an index.
   *
   * @param {number} index Index at which to start deleting elements
   * @param {number} length The number of elements to remove. Defaults to 1.
   */
  delete(e, n = 1) {
    this.doc !== null ? ct(this.doc, (r) => {
      z_(r, this, e, n);
    }) : this._prelimContent.splice(e, n);
  }
  /**
   * Returns the i-th element from a YArray.
   *
   * @param {number} index The index of the element to return from the YArray
   * @return {T}
   */
  get(e) {
    return q_(this, e);
  }
  /**
   * Transforms this YArray to a JavaScript Array.
   *
   * @return {Array<T>}
   */
  toArray() {
    return F_(this);
  }
  /**
   * Returns a portion of this YArray into a JavaScript Array selected
   * from start to end (end not included).
   *
   * @param {number} [start]
   * @param {number} [end]
   * @return {Array<T>}
   */
  slice(e = 0, n = this.length) {
    return $_(this, e, n);
  }
  /**
   * Transforms this Shared Type to a JSON object.
   *
   * @return {Array<any>}
   */
  toJSON() {
    return this.map((e) => e instanceof rn ? e.toJSON() : e);
  }
  /**
   * Returns an Array with the result of calling a provided function on every
   * element of this YArray.
   *
   * @template M
   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array
   * @return {Array<M>} A new array with each element being the result of the
   *                 callback function
   */
  map(e) {
    return B_(
      this,
      /** @type {any} */
      e
    );
  }
  /**
   * Executes a provided function once on every element of this YArray.
   *
   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    cl(this, e);
  }
  /**
   * @return {IterableIterator<T>}
   */
  [Symbol.iterator]() {
    return vD(this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(MD);
  }
}
class CD extends Ju {
  /**
   * @param {YMap<T>} ymap The YArray that changed.
   * @param {Transaction} transaction
   * @param {Set<any>} subs The keys that changed.
   */
  constructor(e, n, r) {
    super(e, n), this.keysChanged = r;
  }
}
class Vs extends rn {
  /**
   *
   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap
   */
  constructor(e) {
    super(), this._prelimContent = null, e === void 0 ? this._prelimContent = /* @__PURE__ */ new Map() : this._prelimContent = new Map(e);
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this._prelimContent.forEach((r, i) => {
      this.set(i, r);
    }), this._prelimContent = null;
  }
  /**
   * @return {YMap<MapType>}
   */
  _copy() {
    return new Vs();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YMap<MapType>}
   */
  clone() {
    const e = new Vs();
    return this.forEach((n, r) => {
      e.set(r, n instanceof rn ? (
        /** @type {typeof value} */
        n.clone()
      ) : n);
    }), e;
  }
  /**
   * Creates YMapEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    Yu(this, e, new CD(this, e, n));
  }
  /**
   * Transforms this Shared Type to a JSON object.
   *
   * @return {Object<string,any>}
   */
  toJSON() {
    this.doc ?? hn();
    const e = {};
    return this._map.forEach((n, r) => {
      if (!n.deleted) {
        const i = n.content.getContent()[n.length - 1];
        e[r] = i instanceof rn ? i.toJSON() : i;
      }
    }), e;
  }
  /**
   * Returns the size of the YMap (count of key/value pairs)
   *
   * @return {number}
   */
  get size() {
    return [...fc(this)].length;
  }
  /**
   * Returns the keys for each element in the YMap Type.
   *
   * @return {IterableIterator<string>}
   */
  keys() {
    return tf(
      fc(this),
      /** @param {any} v */
      (e) => e[0]
    );
  }
  /**
   * Returns the values for each element in the YMap Type.
   *
   * @return {IterableIterator<MapType>}
   */
  values() {
    return tf(
      fc(this),
      /** @param {any} v */
      (e) => e[1].content.getContent()[e[1].length - 1]
    );
  }
  /**
   * Returns an Iterator of [key, value] pairs
   *
   * @return {IterableIterator<[string, MapType]>}
   */
  entries() {
    return tf(
      fc(this),
      /** @param {any} v */
      (e) => (
        /** @type {any} */
        [e[0], e[1].content.getContent()[e[1].length - 1]]
      )
    );
  }
  /**
   * Executes a provided function on once on every key-value pair.
   *
   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    this.doc ?? hn(), this._map.forEach((n, r) => {
      n.deleted || e(n.content.getContent()[n.length - 1], r, this);
    });
  }
  /**
   * Returns an Iterator of [key, value] pairs
   *
   * @return {IterableIterator<[string, MapType]>}
   */
  [Symbol.iterator]() {
    return this.entries();
  }
  /**
   * Remove a specified element from this YMap.
   *
   * @param {string} key The key of the element to remove.
   */
  delete(e) {
    this.doc !== null ? ct(this.doc, (n) => {
      au(n, this, e);
    }) : this._prelimContent.delete(e);
  }
  /**
   * Adds or updates an element with a specified key and value.
   * @template {MapType} VAL
   *
   * @param {string} key The key of the element to add to this YMap
   * @param {VAL} value The value of the element to add
   * @return {VAL}
   */
  set(e, n) {
    return this.doc !== null ? ct(this.doc, (r) => {
      Yp(
        r,
        this,
        e,
        /** @type {any} */
        n
      );
    }) : this._prelimContent.set(e, n), n;
  }
  /**
   * Returns a specified element from this YMap.
   *
   * @param {string} key
   * @return {MapType|undefined}
   */
  get(e) {
    return (
      /** @type {any} */
      Qp(this, e)
    );
  }
  /**
   * Returns a boolean indicating whether the specified key exists or not.
   *
   * @param {string} key The key to test.
   * @return {boolean}
   */
  has(e) {
    return H_(this, e);
  }
  /**
   * Removes all elements from this YMap.
   */
  clear() {
    this.doc !== null ? ct(this.doc, (e) => {
      this.forEach(function(n, r, i) {
        au(e, i, r);
      });
    }) : this._prelimContent.clear();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(ID);
  }
}
const Pi = (t, e) => t === e || typeof t == "object" && typeof e == "object" && t && e && MA(t, e);
class hh {
  /**
   * @param {Item|null} left
   * @param {Item|null} right
   * @param {number} index
   * @param {Map<string,any>} currentAttributes
   */
  constructor(e, n, r, i) {
    this.left = e, this.right = n, this.index = r, this.currentAttributes = i;
  }
  /**
   * Only call this if you know that this.right is defined
   */
  forward() {
    switch (this.right === null && jo(), this.right.content.constructor) {
      case Wt:
        this.right.deleted || pa(
          this.currentAttributes,
          /** @type {ContentFormat} */
          this.right.content
        );
        break;
      default:
        this.right.deleted || (this.index += this.right.length);
        break;
    }
    this.left = this.right, this.right = this.right.right;
  }
}
const _b = (t, e, n) => {
  for (; e.right !== null && n > 0; ) {
    switch (e.right.content.constructor) {
      case Wt:
        e.right.deleted || pa(
          e.currentAttributes,
          /** @type {ContentFormat} */
          e.right.content
        );
        break;
      default:
        e.right.deleted || (n < e.right.length && Hi(t, _t(e.right.id.client, e.right.id.clock + n)), e.index += e.right.length, n -= e.right.length);
        break;
    }
    e.left = e.right, e.right = e.right.right;
  }
  return e;
}, hc = (t, e, n, r) => {
  const i = /* @__PURE__ */ new Map(), o = r ? Xu(e, n) : null;
  if (o) {
    const s = new hh(o.p.left, o.p, o.index, i);
    return _b(t, s, n - o.index);
  } else {
    const s = new hh(null, e._start, 0, i);
    return _b(t, s, n);
  }
}, K_ = (t, e, n, r) => {
  for (; n.right !== null && (n.right.deleted === !0 || n.right.content.constructor === Wt && Pi(
    r.get(
      /** @type {ContentFormat} */
      n.right.content.key
    ),
    /** @type {ContentFormat} */
    n.right.content.value
  )); )
    n.right.deleted || r.delete(
      /** @type {ContentFormat} */
      n.right.content.key
    ), n.forward();
  const i = t.doc, o = i.clientID;
  r.forEach((s, a) => {
    const l = n.left, c = n.right, u = new dn(_t(o, An(i.store, o)), l, l && l.lastId, c, c && c.id, e, null, new Wt(a, s));
    u.integrate(t, 0), n.right = u, n.forward();
  });
}, pa = (t, e) => {
  const { key: n, value: r } = e;
  r === null ? t.delete(n) : t.set(n, r);
}, G_ = (t, e) => {
  for (; t.right !== null; ) {
    if (!(t.right.deleted || t.right.content.constructor === Wt && Pi(
      e[
        /** @type {ContentFormat} */
        t.right.content.key
      ] ?? null,
      /** @type {ContentFormat} */
      t.right.content.value
    ))) break;
    t.forward();
  }
}, J_ = (t, e, n, r) => {
  const i = t.doc, o = i.clientID, s = /* @__PURE__ */ new Map();
  for (const a in r) {
    const l = r[a], c = n.currentAttributes.get(a) ?? null;
    if (!Pi(c, l)) {
      s.set(a, c);
      const { left: u, right: f } = n;
      n.right = new dn(_t(o, An(i.store, o)), u, u && u.lastId, f, f && f.id, e, null, new Wt(a, l)), n.right.integrate(t, 0), n.forward();
    }
  }
  return s;
}, rf = (t, e, n, r, i) => {
  n.currentAttributes.forEach((d, h) => {
    i[h] === void 0 && (i[h] = null);
  });
  const o = t.doc, s = o.clientID;
  G_(n, i);
  const a = J_(t, e, n, i), l = r.constructor === String ? new vi(
    /** @type {string} */
    r
  ) : r instanceof rn ? new to(r) : new ga(r);
  let { left: c, right: u, index: f } = n;
  e._searchMarker && ll(e._searchMarker, n.index, l.getLength()), u = new dn(_t(s, An(o.store, s)), c, c && c.lastId, u, u && u.id, e, null, l), u.integrate(t, 0), n.right = u, n.index = f, n.forward(), K_(t, e, n, a);
}, xb = (t, e, n, r, i) => {
  const o = t.doc, s = o.clientID;
  G_(n, i);
  const a = J_(t, e, n, i);
  e: for (; n.right !== null && (r > 0 || a.size > 0 && (n.right.deleted || n.right.content.constructor === Wt)); ) {
    if (!n.right.deleted)
      switch (n.right.content.constructor) {
        case Wt: {
          const { key: l, value: c } = (
            /** @type {ContentFormat} */
            n.right.content
          ), u = i[l];
          if (u !== void 0) {
            if (Pi(u, c))
              a.delete(l);
            else {
              if (r === 0)
                break e;
              a.set(l, c);
            }
            n.right.delete(t);
          } else
            n.currentAttributes.set(l, c);
          break;
        }
        default:
          r < n.right.length && Hi(t, _t(n.right.id.client, n.right.id.clock + r)), r -= n.right.length;
          break;
      }
    n.forward();
  }
  if (r > 0) {
    let l = "";
    for (; r > 0; r--)
      l += `
`;
    n.right = new dn(_t(s, An(o.store, s)), n.left, n.left && n.left.lastId, n.right, n.right && n.right.id, e, null, new vi(l)), n.right.integrate(t, 0), n.forward();
  }
  K_(t, e, n, a);
}, X_ = (t, e, n, r, i) => {
  let o = e;
  const s = Wr();
  for (; o && (!o.countable || o.deleted); ) {
    if (!o.deleted && o.content.constructor === Wt) {
      const c = (
        /** @type {ContentFormat} */
        o.content
      );
      s.set(c.key, c);
    }
    o = o.right;
  }
  let a = 0, l = !1;
  for (; e !== o; ) {
    if (n === e && (l = !0), !e.deleted) {
      const c = e.content;
      switch (c.constructor) {
        case Wt: {
          const { key: u, value: f } = (
            /** @type {ContentFormat} */
            c
          ), d = r.get(u) ?? null;
          (s.get(u) !== c || d === f) && (e.delete(t), a++, !l && (i.get(u) ?? null) === f && d !== f && (d === null ? i.delete(u) : i.set(u, d))), !l && !e.deleted && pa(
            i,
            /** @type {ContentFormat} */
            c
          );
          break;
        }
      }
    }
    e = /** @type {Item} */
    e.right;
  }
  return a;
}, kD = (t, e) => {
  for (; e && e.right && (e.right.deleted || !e.right.countable); )
    e = e.right;
  const n = /* @__PURE__ */ new Set();
  for (; e && (e.deleted || !e.countable); ) {
    if (!e.deleted && e.content.constructor === Wt) {
      const r = (
        /** @type {ContentFormat} */
        e.content.key
      );
      n.has(r) ? e.delete(t) : n.add(r);
    }
    e = e.left;
  }
}, ED = (t) => {
  let e = 0;
  return ct(
    /** @type {Doc} */
    t.doc,
    (n) => {
      let r = (
        /** @type {Item} */
        t._start
      ), i = t._start, o = Wr();
      const s = ah(o);
      for (; i; ) {
        if (i.deleted === !1)
          switch (i.content.constructor) {
            case Wt:
              pa(
                s,
                /** @type {ContentFormat} */
                i.content
              );
              break;
            default:
              e += X_(n, r, i, o, s), o = ah(s), r = i;
              break;
          }
        i = i.right;
      }
    }
  ), e;
}, ND = (t) => {
  const e = /* @__PURE__ */ new Set(), n = t.doc;
  for (const [r, i] of t.afterState.entries()) {
    const o = t.beforeState.get(r) || 0;
    i !== o && I_(
      t,
      /** @type {Array<Item|GC>} */
      n.store.clients.get(r),
      o,
      i,
      (s) => {
        !s.deleted && /** @type {Item} */
        s.content.constructor === Wt && s.constructor !== Oi && e.add(
          /** @type {any} */
          s.parent
        );
      }
    );
  }
  ct(n, (r) => {
    N_(t, t.deleteSet, (i) => {
      if (i instanceof Oi || !/** @type {YText} */
      i.parent._hasFormatting || e.has(
        /** @type {YText} */
        i.parent
      ))
        return;
      const o = (
        /** @type {YText} */
        i.parent
      );
      i.content.constructor === Wt ? e.add(o) : kD(r, i);
    });
    for (const i of e)
      ED(i);
  });
}, Cb = (t, e, n) => {
  const r = n, i = ah(e.currentAttributes), o = e.right;
  for (; n > 0 && e.right !== null; ) {
    if (e.right.deleted === !1)
      switch (e.right.content.constructor) {
        case to:
        case ga:
        case vi:
          n < e.right.length && Hi(t, _t(e.right.id.client, e.right.id.clock + n)), n -= e.right.length, e.right.delete(t);
          break;
      }
    e.forward();
  }
  o && X_(t, o, e.right, i, e.currentAttributes);
  const s = (
    /** @type {AbstractType<any>} */
    /** @type {Item} */
    (e.left || e.right).parent
  );
  return s._searchMarker && ll(s._searchMarker, e.index, -r + n), e;
};
class SD extends Ju {
  /**
   * @param {YText} ytext
   * @param {Transaction} transaction
   * @param {Set<any>} subs The keys that changed
   */
  constructor(e, n, r) {
    super(e, n), this.childListChanged = !1, this.keysChanged = /* @__PURE__ */ new Set(), r.forEach((i) => {
      i === null ? this.childListChanged = !0 : this.keysChanged.add(i);
    });
  }
  /**
   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}
   */
  get changes() {
    if (this._changes === null) {
      const e = {
        keys: this.keys,
        delta: this.delta,
        added: /* @__PURE__ */ new Set(),
        deleted: /* @__PURE__ */ new Set()
      };
      this._changes = e;
    }
    return (
      /** @type {any} */
      this._changes
    );
  }
  /**
   * Compute the changes in the delta format.
   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.
   *
   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}
   *
   * @public
   */
  get delta() {
    if (this._delta === null) {
      const e = (
        /** @type {Doc} */
        this.target.doc
      ), n = [];
      ct(e, (r) => {
        const i = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map();
        let s = this.target._start, a = null;
        const l = {};
        let c = "", u = 0, f = 0;
        const d = () => {
          if (a !== null) {
            let h = null;
            switch (a) {
              case "delete":
                f > 0 && (h = { delete: f }), f = 0;
                break;
              case "insert":
                (typeof c == "object" || c.length > 0) && (h = { insert: c }, i.size > 0 && (h.attributes = {}, i.forEach((g, w) => {
                  g !== null && (h.attributes[w] = g);
                }))), c = "";
                break;
              case "retain":
                u > 0 && (h = { retain: u }, AA(l) || (h.attributes = NA({}, l))), u = 0;
                break;
            }
            h && n.push(h), a = null;
          }
        };
        for (; s !== null; ) {
          switch (s.content.constructor) {
            case to:
            case ga:
              this.adds(s) ? this.deletes(s) || (d(), a = "insert", c = s.content.getContent()[0], d()) : this.deletes(s) ? (a !== "delete" && (d(), a = "delete"), f += 1) : s.deleted || (a !== "retain" && (d(), a = "retain"), u += 1);
              break;
            case vi:
              this.adds(s) ? this.deletes(s) || (a !== "insert" && (d(), a = "insert"), c += /** @type {ContentString} */
              s.content.str) : this.deletes(s) ? (a !== "delete" && (d(), a = "delete"), f += s.length) : s.deleted || (a !== "retain" && (d(), a = "retain"), u += s.length);
              break;
            case Wt: {
              const { key: h, value: g } = (
                /** @type {ContentFormat} */
                s.content
              );
              if (this.adds(s)) {
                if (!this.deletes(s)) {
                  const w = i.get(h) ?? null;
                  Pi(w, g) ? g !== null && s.delete(r) : (a === "retain" && d(), Pi(g, o.get(h) ?? null) ? delete l[h] : l[h] = g);
                }
              } else if (this.deletes(s)) {
                o.set(h, g);
                const w = i.get(h) ?? null;
                Pi(w, g) || (a === "retain" && d(), l[h] = w);
              } else if (!s.deleted) {
                o.set(h, g);
                const w = l[h];
                w !== void 0 && (Pi(w, g) ? w !== null && s.delete(r) : (a === "retain" && d(), g === null ? delete l[h] : l[h] = g));
              }
              s.deleted || (a === "insert" && d(), pa(
                i,
                /** @type {ContentFormat} */
                s.content
              ));
              break;
            }
          }
          s = s.right;
        }
        for (d(); n.length > 0; ) {
          const h = n[n.length - 1];
          if (h.retain !== void 0 && h.attributes === void 0)
            n.pop();
          else
            break;
        }
      }), this._delta = n;
    }
    return (
      /** @type {any} */
      this._delta
    );
  }
}
class lu extends rn {
  /**
   * @param {String} [string] The initial value of the YText.
   */
  constructor(e) {
    super(), this._pending = e !== void 0 ? [() => this.insert(0, e)] : [], this._searchMarker = [], this._hasFormatting = !1;
  }
  /**
   * Number of characters of this text type.
   *
   * @type {number}
   */
  get length() {
    return this.doc ?? hn(), this._length;
  }
  /**
   * @param {Doc} y
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n);
    try {
      this._pending.forEach((r) => r());
    } catch (r) {
      console.error(r);
    }
    this._pending = null;
  }
  _copy() {
    return new lu();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YText}
   */
  clone() {
    const e = new lu();
    return e.applyDelta(this.toDelta()), e;
  }
  /**
   * Creates YTextEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    super._callObserver(e, n);
    const r = new SD(this, e, n);
    Yu(this, e, r), !e.local && this._hasFormatting && (e._needFormattingCleanup = !0);
  }
  /**
   * Returns the unformatted string representation of this YText type.
   *
   * @public
   */
  toString() {
    this.doc ?? hn();
    let e = "", n = this._start;
    for (; n !== null; )
      !n.deleted && n.countable && n.content.constructor === vi && (e += /** @type {ContentString} */
      n.content.str), n = n.right;
    return e;
  }
  /**
   * Returns the unformatted string representation of this YText type.
   *
   * @return {string}
   * @public
   */
  toJSON() {
    return this.toString();
  }
  /**
   * Apply a {@link Delta} on this shared YText type.
   *
   * @param {Array<any>} delta The changes to apply on this element.
   * @param {object}  opts
   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.
   *
   *
   * @public
   */
  applyDelta(e, { sanitize: n = !0 } = {}) {
    this.doc !== null ? ct(this.doc, (r) => {
      const i = new hh(null, this._start, 0, /* @__PURE__ */ new Map());
      for (let o = 0; o < e.length; o++) {
        const s = e[o];
        if (s.insert !== void 0) {
          const a = !n && typeof s.insert == "string" && o === e.length - 1 && i.right === null && s.insert.slice(-1) === `
` ? s.insert.slice(0, -1) : s.insert;
          (typeof a != "string" || a.length > 0) && rf(r, this, i, a, s.attributes || {});
        } else s.retain !== void 0 ? xb(r, this, i, s.retain, s.attributes || {}) : s.delete !== void 0 && Cb(r, i, s.delete);
      }
    }) : this._pending.push(() => this.applyDelta(e));
  }
  /**
   * Returns the Delta representation of this YText type.
   *
   * @param {Snapshot} [snapshot]
   * @param {Snapshot} [prevSnapshot]
   * @param {function('removed' | 'added', ID):any} [computeYChange]
   * @return {any} The Delta representation of this type.
   *
   * @public
   */
  toDelta(e, n, r) {
    this.doc ?? hn();
    const i = [], o = /* @__PURE__ */ new Map(), s = (
      /** @type {Doc} */
      this.doc
    );
    let a = "", l = this._start;
    function c() {
      if (a.length > 0) {
        const f = {};
        let d = !1;
        o.forEach((g, w) => {
          d = !0, f[w] = g;
        });
        const h = { insert: a };
        d && (h.attributes = f), i.push(h), a = "";
      }
    }
    const u = () => {
      for (; l !== null; ) {
        if (ds(l, e) || n !== void 0 && ds(l, n))
          switch (l.content.constructor) {
            case vi: {
              const f = o.get("ychange");
              e !== void 0 && !ds(l, e) ? (f === void 0 || f.user !== l.id.client || f.type !== "removed") && (c(), o.set("ychange", r ? r("removed", l.id) : { type: "removed" })) : n !== void 0 && !ds(l, n) ? (f === void 0 || f.user !== l.id.client || f.type !== "added") && (c(), o.set("ychange", r ? r("added", l.id) : { type: "added" })) : f !== void 0 && (c(), o.delete("ychange")), a += /** @type {ContentString} */
              l.content.str;
              break;
            }
            case to:
            case ga: {
              c();
              const f = {
                insert: l.content.getContent()[0]
              };
              if (o.size > 0) {
                const d = (
                  /** @type {Object<string,any>} */
                  {}
                );
                f.attributes = d, o.forEach((h, g) => {
                  d[g] = h;
                });
              }
              i.push(f);
              break;
            }
            case Wt:
              ds(l, e) && (c(), pa(
                o,
                /** @type {ContentFormat} */
                l.content
              ));
              break;
          }
        l = l.right;
      }
      c();
    };
    return e || n ? ct(s, (f) => {
      e && dh(f, e), n && dh(f, n), u();
    }, "cleanup") : u(), i;
  }
  /**
   * Insert text at a given index.
   *
   * @param {number} index The index at which to start inserting.
   * @param {String} text The text to insert at the specified position.
   * @param {TextAttributes} [attributes] Optionally define some formatting
   *                                    information to apply on the inserted
   *                                    Text.
   * @public
   */
  insert(e, n, r) {
    if (n.length <= 0)
      return;
    const i = this.doc;
    i !== null ? ct(i, (o) => {
      const s = hc(o, this, e, !r);
      r || (r = {}, s.currentAttributes.forEach((a, l) => {
        r[l] = a;
      })), rf(o, this, s, n, r);
    }) : this._pending.push(() => this.insert(e, n, r));
  }
  /**
   * Inserts an embed at a index.
   *
   * @param {number} index The index to insert the embed at.
   * @param {Object | AbstractType<any>} embed The Object that represents the embed.
   * @param {TextAttributes} [attributes] Attribute information to apply on the
   *                                    embed
   *
   * @public
   */
  insertEmbed(e, n, r) {
    const i = this.doc;
    i !== null ? ct(i, (o) => {
      const s = hc(o, this, e, !r);
      rf(o, this, s, n, r || {});
    }) : this._pending.push(() => this.insertEmbed(e, n, r || {}));
  }
  /**
   * Deletes text starting from an index.
   *
   * @param {number} index Index at which to start deleting.
   * @param {number} length The number of characters to remove. Defaults to 1.
   *
   * @public
   */
  delete(e, n) {
    if (n === 0)
      return;
    const r = this.doc;
    r !== null ? ct(r, (i) => {
      Cb(i, hc(i, this, e, !0), n);
    }) : this._pending.push(() => this.delete(e, n));
  }
  /**
   * Assigns properties to a range of text.
   *
   * @param {number} index The position where to start formatting.
   * @param {number} length The amount of characters to assign properties to.
   * @param {TextAttributes} attributes Attribute information to apply on the
   *                                    text.
   *
   * @public
   */
  format(e, n, r) {
    if (n === 0)
      return;
    const i = this.doc;
    i !== null ? ct(i, (o) => {
      const s = hc(o, this, e, !1);
      s.right !== null && xb(o, this, s, n, r);
    }) : this._pending.push(() => this.format(e, n, r));
  }
  /**
   * Removes an attribute.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that is to be removed.
   *
   * @public
   */
  removeAttribute(e) {
    this.doc !== null ? ct(this.doc, (n) => {
      au(n, this, e);
    }) : this._pending.push(() => this.removeAttribute(e));
  }
  /**
   * Sets or updates an attribute.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that is to be set.
   * @param {any} attributeValue The attribute value that is to be set.
   *
   * @public
   */
  setAttribute(e, n) {
    this.doc !== null ? ct(this.doc, (r) => {
      Yp(r, this, e, n);
    }) : this._pending.push(() => this.setAttribute(e, n));
  }
  /**
   * Returns an attribute value that belongs to the attribute name.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that identifies the
   *                               queried value.
   * @return {any} The queried attribute value.
   *
   * @public
   */
  getAttribute(e) {
    return (
      /** @type {any} */
      Qp(this, e)
    );
  }
  /**
   * Returns all attribute name/value pairs in a JSON Object.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @return {Object<string, any>} A JSON Object that describes the attributes.
   *
   * @public
   */
  getAttributes() {
    return V_(this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(RD);
  }
}
class of {
  /**
   * @param {YXmlFragment | YXmlElement} root
   * @param {function(AbstractType<any>):boolean} [f]
   */
  constructor(e, n = () => !0) {
    this._filter = n, this._root = e, this._currentNode = /** @type {Item} */
    e._start, this._firstCall = !0, e.doc ?? hn();
  }
  [Symbol.iterator]() {
    return this;
  }
  /**
   * Get the next node.
   *
   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.
   *
   * @public
   */
  next() {
    let e = this._currentNode, n = e && e.content && /** @type {any} */
    e.content.type;
    if (e !== null && (!this._firstCall || e.deleted || !this._filter(n)))
      do
        if (n = /** @type {any} */
        e.content.type, !e.deleted && (n.constructor === ul || n.constructor === Hs) && n._start !== null)
          e = n._start;
        else
          for (; e !== null; ) {
            const r = e.next;
            if (r !== null) {
              e = r;
              break;
            } else e.parent === this._root ? e = null : e = /** @type {AbstractType<any>} */
            e.parent._item;
          }
      while (e !== null && (e.deleted || !this._filter(
        /** @type {ContentType} */
        e.content.type
      )));
    return this._firstCall = !1, e === null ? { value: void 0, done: !0 } : (this._currentNode = e, { value: (
      /** @type {any} */
      e.content.type
    ), done: !1 });
  }
}
class Hs extends rn {
  constructor() {
    super(), this._prelimContent = [];
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get firstChild() {
    const e = this._first;
    return e ? e.content.getContent()[0] : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this.insert(
      0,
      /** @type {Array<any>} */
      this._prelimContent
    ), this._prelimContent = null;
  }
  _copy() {
    return new Hs();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlFragment}
   */
  clone() {
    const e = new Hs();
    return e.insert(0, this.toArray().map((n) => n instanceof rn ? n.clone() : n)), e;
  }
  get length() {
    return this.doc ?? hn(), this._prelimContent === null ? this._length : this._prelimContent.length;
  }
  /**
   * Create a subtree of childNodes.
   *
   * @example
   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')
   * for (let node in walker) {
   *   // `node` is a div node
   *   nop(node)
   * }
   *
   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and
   *                          returns a Boolean indicating whether the child
   *                          is to be included in the subtree.
   * @return {YXmlTreeWalker} A subtree and a position within it.
   *
   * @public
   */
  createTreeWalker(e) {
    return new of(this, e);
  }
  /**
   * Returns the first YXmlElement that matches the query.
   * Similar to DOM's {@link querySelector}.
   *
   * Query support:
   *   - tagname
   * TODO:
   *   - id
   *   - attribute
   *
   * @param {CSS_Selector} query The query on the children.
   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.
   *
   * @public
   */
  querySelector(e) {
    e = e.toUpperCase();
    const r = new of(this, (i) => i.nodeName && i.nodeName.toUpperCase() === e).next();
    return r.done ? null : r.value;
  }
  /**
   * Returns all YXmlElements that match the query.
   * Similar to Dom's {@link querySelectorAll}.
   *
   * @todo Does not yet support all queries. Currently only query by tagName.
   *
   * @param {CSS_Selector} query The query on the children
   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.
   *
   * @public
   */
  querySelectorAll(e) {
    return e = e.toUpperCase(), Us(new of(this, (n) => n.nodeName && n.nodeName.toUpperCase() === e));
  }
  /**
   * Creates YXmlEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    Yu(this, e, new TD(this, n, e));
  }
  /**
   * Get the string representation of all the children of this YXmlFragment.
   *
   * @return {string} The string representation of all children.
   */
  toString() {
    return B_(this, (e) => e.toString()).join("");
  }
  /**
   * @return {string}
   */
  toJSON() {
    return this.toString();
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, r) {
    const i = e.createDocumentFragment();
    return r !== void 0 && r._createAssociation(i, this), cl(this, (o) => {
      i.insertBefore(o.toDOM(e, n, r), null);
    }), i;
  }
  /**
   * Inserts new content at an index.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  xml.insert(0, [new Y.XmlText('text')])
   *
   * @param {number} index The index to insert content at
   * @param {Array<YXmlElement|YXmlText>} content The array of content
   */
  insert(e, n) {
    this.doc !== null ? ct(this.doc, (r) => {
      U_(r, this, e, n);
    }) : this._prelimContent.splice(e, 0, ...n);
  }
  /**
   * Inserts new content at an index.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  xml.insert(0, [new Y.XmlText('text')])
   *
   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at
   * @param {Array<YXmlElement|YXmlText>} content The array of content
   */
  insertAfter(e, n) {
    if (this.doc !== null)
      ct(this.doc, (r) => {
        const i = e && e instanceof rn ? e._item : e;
        su(r, this, i, n);
      });
    else {
      const r = (
        /** @type {Array<any>} */
        this._prelimContent
      ), i = e === null ? 0 : r.findIndex((o) => o === e) + 1;
      if (i === 0 && e !== null)
        throw zs("Reference item not found");
      r.splice(i, 0, ...n);
    }
  }
  /**
   * Deletes elements starting from an index.
   *
   * @param {number} index Index at which to start deleting elements
   * @param {number} [length=1] The number of elements to remove. Defaults to 1.
   */
  delete(e, n = 1) {
    this.doc !== null ? ct(this.doc, (r) => {
      z_(r, this, e, n);
    }) : this._prelimContent.splice(e, n);
  }
  /**
   * Transforms this YArray to a JavaScript Array.
   *
   * @return {Array<YXmlElement|YXmlText|YXmlHook>}
   */
  toArray() {
    return F_(this);
  }
  /**
   * Appends content to this YArray.
   *
   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.
   */
  push(e) {
    this.insert(this.length, e);
  }
  /**
   * Prepends content to this YArray.
   *
   * @param {Array<YXmlElement|YXmlText>} content Array of content to prepend.
   */
  unshift(e) {
    this.insert(0, e);
  }
  /**
   * Returns the i-th element from a YArray.
   *
   * @param {number} index The index of the element to return from the YArray
   * @return {YXmlElement|YXmlText}
   */
  get(e) {
    return q_(this, e);
  }
  /**
   * Returns a portion of this YXmlFragment into a JavaScript Array selected
   * from start to end (end not included).
   *
   * @param {number} [start]
   * @param {number} [end]
   * @return {Array<YXmlElement|YXmlText>}
   */
  slice(e = 0, n = this.length) {
    return $_(this, e, n);
  }
  /**
   * Executes a provided function on once on every child element.
   *
   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    cl(this, e);
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(LD);
  }
}
class ul extends Hs {
  constructor(e = "UNDEFINED") {
    super(), this.nodeName = e, this._prelimAttrs = /* @__PURE__ */ new Map();
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get nextSibling() {
    const e = this._item ? this._item.next : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get prevSibling() {
    const e = this._item ? this._item.prev : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), /** @type {Map<string, any>} */
    this._prelimAttrs.forEach((r, i) => {
      this.setAttribute(i, r);
    }), this._prelimAttrs = null;
  }
  /**
   * Creates an Item with the same effect as this Item (without position effect)
   *
   * @return {YXmlElement}
   */
  _copy() {
    return new ul(this.nodeName);
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlElement<KV>}
   */
  clone() {
    const e = new ul(this.nodeName), n = this.getAttributes();
    return TA(n, (r, i) => {
      typeof r == "string" && e.setAttribute(i, r);
    }), e.insert(0, this.toArray().map((r) => r instanceof rn ? r.clone() : r)), e;
  }
  /**
   * Returns the XML serialization of this YXmlElement.
   * The attributes are ordered by attribute-name, so you can easily use this
   * method to compare YXmlElements
   *
   * @return {string} The string representation of this type.
   *
   * @public
   */
  toString() {
    const e = this.getAttributes(), n = [], r = [];
    for (const a in e)
      r.push(a);
    r.sort();
    const i = r.length;
    for (let a = 0; a < i; a++) {
      const l = r[a];
      n.push(l + '="' + e[l] + '"');
    }
    const o = this.nodeName.toLocaleLowerCase(), s = n.length > 0 ? " " + n.join(" ") : "";
    return `<${o}${s}>${super.toString()}</${o}>`;
  }
  /**
   * Removes an attribute from this YXmlElement.
   *
   * @param {string} attributeName The attribute name that is to be removed.
   *
   * @public
   */
  removeAttribute(e) {
    this.doc !== null ? ct(this.doc, (n) => {
      au(n, this, e);
    }) : this._prelimAttrs.delete(e);
  }
  /**
   * Sets or updates an attribute.
   *
   * @template {keyof KV & string} KEY
   *
   * @param {KEY} attributeName The attribute name that is to be set.
   * @param {KV[KEY]} attributeValue The attribute value that is to be set.
   *
   * @public
   */
  setAttribute(e, n) {
    this.doc !== null ? ct(this.doc, (r) => {
      Yp(r, this, e, n);
    }) : this._prelimAttrs.set(e, n);
  }
  /**
   * Returns an attribute value that belongs to the attribute name.
   *
   * @template {keyof KV & string} KEY
   *
   * @param {KEY} attributeName The attribute name that identifies the
   *                               queried value.
   * @return {KV[KEY]|undefined} The queried attribute value.
   *
   * @public
   */
  getAttribute(e) {
    return (
      /** @type {any} */
      Qp(this, e)
    );
  }
  /**
   * Returns whether an attribute exists
   *
   * @param {string} attributeName The attribute name to check for existence.
   * @return {boolean} whether the attribute exists.
   *
   * @public
   */
  hasAttribute(e) {
    return (
      /** @type {any} */
      H_(this, e)
    );
  }
  /**
   * Returns all attribute name/value pairs in a JSON Object.
   *
   * @param {Snapshot} [snapshot]
   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.
   *
   * @public
   */
  getAttributes(e) {
    return (
      /** @type {any} */
      e ? xD(this, e) : V_(this)
    );
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, r) {
    const i = e.createElement(this.nodeName), o = this.getAttributes();
    for (const s in o) {
      const a = o[s];
      typeof a == "string" && i.setAttribute(s, a);
    }
    return cl(this, (s) => {
      i.appendChild(s.toDOM(e, n, r));
    }), r !== void 0 && r._createAssociation(i, this), i;
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(PD), e.writeKey(this.nodeName);
  }
}
class TD extends Ju {
  /**
   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.
   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the
   *                   child list changed.
   * @param {Transaction} transaction The transaction instance with which the
   *                                  change was created.
   */
  constructor(e, n, r) {
    super(e, r), this.childListChanged = !1, this.attributesChanged = /* @__PURE__ */ new Set(), n.forEach((i) => {
      i === null ? this.childListChanged = !0 : this.attributesChanged.add(i);
    });
  }
}
class Y_ {
  /**
   * @param {ID} id
   * @param {number} length
   */
  constructor(e, n) {
    this.id = e, this.length = n;
  }
  /**
   * @type {boolean}
   */
  get deleted() {
    throw Kr();
  }
  /**
   * Merge this struct with the item to the right.
   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.
   * Also this method does *not* remove right from StructStore!
   * @param {AbstractStruct} right
   * @return {boolean} whether this merged with right
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   * @param {number} offset
   * @param {number} encodingRef
   */
  write(e, n, r) {
    throw Kr();
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    throw Kr();
  }
}
const AD = 0;
class Oi extends Y_ {
  get deleted() {
    return !0;
  }
  delete() {
  }
  /**
   * @param {GC} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.constructor !== e.constructor ? !1 : (this.length += e.length, !0);
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    n > 0 && (this.id.clock += n, this.length -= n), M_(e.doc.store, this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeInfo(AD), e.writeLen(this.length - n);
  }
  /**
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    return null;
  }
}
class Qu {
  /**
   * @param {Uint8Array} content
   */
  constructor(e) {
    this.content = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.content];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentBinary}
   */
  copy() {
    return new Qu(this.content);
  }
  /**
   * @param {number} offset
   * @return {ContentBinary}
   */
  splice(e) {
    throw Kr();
  }
  /**
   * @param {ContentBinary} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeBuf(this.content);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 3;
  }
}
class cu {
  /**
   * @param {number} len
   */
  constructor(e) {
    this.len = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.len;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !1;
  }
  /**
   * @return {ContentDeleted}
   */
  copy() {
    return new cu(this.len);
  }
  /**
   * @param {number} offset
   * @return {ContentDeleted}
   */
  splice(e) {
    const n = new cu(this.len - e);
    return this.len = e, n;
  }
  /**
   * @param {ContentDeleted} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.len += e.len, !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    A_(e.deleteSet, n.id.client, n.id.clock, this.len), n.markDeleted();
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeLen(this.len - n);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 1;
  }
}
const DD = (t, e) => new Il({ guid: t, ...e, shouldLoad: e.shouldLoad || e.autoLoad || !1 });
class Zu {
  /**
   * @param {Doc} doc
   */
  constructor(e) {
    e._item && console.error("This document was already integrated as a sub-document. You should create a second instance instead with the same guid."), this.doc = e;
    const n = {};
    this.opts = n, e.gc || (n.gc = !1), e.autoLoad && (n.autoLoad = !0), e.meta !== null && (n.meta = e.meta);
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.doc];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentDoc}
   */
  copy() {
    return new Zu(DD(this.doc.guid, this.opts));
  }
  /**
   * @param {number} offset
   * @return {ContentDoc}
   */
  splice(e) {
    throw Kr();
  }
  /**
   * @param {ContentDoc} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    this.doc._item = n, e.subdocsAdded.add(this.doc), this.doc.shouldLoad && e.subdocsLoaded.add(this.doc);
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
    e.subdocsAdded.has(this.doc) ? e.subdocsAdded.delete(this.doc) : e.subdocsRemoved.add(this.doc);
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeString(this.doc.guid), e.writeAny(this.opts);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 9;
  }
}
class ga {
  /**
   * @param {Object} embed
   */
  constructor(e) {
    this.embed = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.embed];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentEmbed}
   */
  copy() {
    return new ga(this.embed);
  }
  /**
   * @param {number} offset
   * @return {ContentEmbed}
   */
  splice(e) {
    throw Kr();
  }
  /**
   * @param {ContentEmbed} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeJSON(this.embed);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 5;
  }
}
class Wt {
  /**
   * @param {string} key
   * @param {Object} value
   */
  constructor(e, n) {
    this.key = e, this.value = n;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !1;
  }
  /**
   * @return {ContentFormat}
   */
  copy() {
    return new Wt(this.key, this.value);
  }
  /**
   * @param {number} _offset
   * @return {ContentFormat}
   */
  splice(e) {
    throw Kr();
  }
  /**
   * @param {ContentFormat} _right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} _transaction
   * @param {Item} item
   */
  integrate(e, n) {
    const r = (
      /** @type {YText} */
      n.parent
    );
    r._searchMarker = null, r._hasFormatting = !0;
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeKey(this.key), e.writeJSON(this.value);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 6;
  }
}
const OD = ou("node_env") === "development";
class Ws {
  /**
   * @param {Array<any>} arr
   */
  constructor(e) {
    this.arr = e, OD && b_(e);
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.arr.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.arr;
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentAny}
   */
  copy() {
    return new Ws(this.arr);
  }
  /**
   * @param {number} offset
   * @return {ContentAny}
   */
  splice(e) {
    const n = new Ws(this.arr.slice(e));
    return this.arr = this.arr.slice(0, e), n;
  }
  /**
   * @param {ContentAny} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.arr = this.arr.concat(e.arr), !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    const r = this.arr.length;
    e.writeLen(r - n);
    for (let i = n; i < r; i++) {
      const o = this.arr[i];
      e.writeAny(o);
    }
  }
  /**
   * @return {number}
   */
  getRef() {
    return 8;
  }
}
class vi {
  /**
   * @param {string} str
   */
  constructor(e) {
    this.str = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.str.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.str.split("");
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentString}
   */
  copy() {
    return new vi(this.str);
  }
  /**
   * @param {number} offset
   * @return {ContentString}
   */
  splice(e) {
    const n = new vi(this.str.slice(e));
    this.str = this.str.slice(0, e);
    const r = this.str.charCodeAt(e - 1);
    return r >= 55296 && r <= 56319 && (this.str = this.str.slice(0, e - 1) + "�", n.str = "�" + n.str.slice(1)), n;
  }
  /**
   * @param {ContentString} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.str += e.str, !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeString(n === 0 ? this.str : this.str.slice(n));
  }
  /**
   * @return {number}
   */
  getRef() {
    return 4;
  }
}
const MD = 0, ID = 1, RD = 2, PD = 3, LD = 4;
class to {
  /**
   * @param {AbstractType<any>} type
   */
  constructor(e) {
    this.type = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.type];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentType}
   */
  copy() {
    return new to(this.type._copy());
  }
  /**
   * @param {number} offset
   * @return {ContentType}
   */
  splice(e) {
    throw Kr();
  }
  /**
   * @param {ContentType} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    this.type._integrate(e.doc, n);
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
    let n = this.type._start;
    for (; n !== null; )
      n.deleted ? n.id.clock < (e.beforeState.get(n.id.client) || 0) && e._mergeStructs.push(n) : n.delete(e), n = n.right;
    this.type._map.forEach((r) => {
      r.deleted ? r.id.clock < (e.beforeState.get(r.id.client) || 0) && e._mergeStructs.push(r) : r.delete(e);
    }), e.changed.delete(this.type);
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
    let n = this.type._start;
    for (; n !== null; )
      n.gc(e, !0), n = n.right;
    this.type._start = null, this.type._map.forEach(
      /** @param {Item | null} item */
      (r) => {
        for (; r !== null; )
          r.gc(e, !0), r = r.left;
      }
    ), this.type._map = /* @__PURE__ */ new Map();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    this.type._write(e);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 7;
  }
}
const Q_ = (t, e, n) => {
  const { client: r, clock: i } = e.id, o = new dn(
    _t(r, i + n),
    e,
    _t(r, i + n - 1),
    e.right,
    e.rightOrigin,
    e.parent,
    e.parentSub,
    e.content.splice(n)
  );
  return e.deleted && o.markDeleted(), e.keep && (o.keep = !0), e.redone !== null && (o.redone = _t(e.redone.client, e.redone.clock + n)), e.right = o, o.right !== null && (o.right.left = o), t._mergeStructs.push(o), o.parentSub !== null && o.right === null && o.parent._map.set(o.parentSub, o), e.length = n, o;
};
class dn extends Y_ {
  /**
   * @param {ID} id
   * @param {Item | null} left
   * @param {ID | null} origin
   * @param {Item | null} right
   * @param {ID | null} rightOrigin
   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.
   * @param {string | null} parentSub
   * @param {AbstractContent} content
   */
  constructor(e, n, r, i, o, s, a, l) {
    super(e, l.getLength()), this.origin = r, this.left = n, this.right = i, this.rightOrigin = o, this.parent = s, this.parentSub = a, this.redone = null, this.content = l, this.info = this.content.isCountable() ? ib : 0;
  }
  /**
   * This is used to mark the item as an indexed fast-search marker
   *
   * @type {boolean}
   */
  set marker(e) {
    (this.info & Qd) > 0 !== e && (this.info ^= Qd);
  }
  get marker() {
    return (this.info & Qd) > 0;
  }
  /**
   * If true, do not garbage collect this Item.
   */
  get keep() {
    return (this.info & rb) > 0;
  }
  set keep(e) {
    this.keep !== e && (this.info ^= rb);
  }
  get countable() {
    return (this.info & ib) > 0;
  }
  /**
   * Whether this item was deleted or not.
   * @type {Boolean}
   */
  get deleted() {
    return (this.info & Yd) > 0;
  }
  set deleted(e) {
    this.deleted !== e && (this.info ^= Yd);
  }
  markDeleted() {
    this.info |= Yd;
  }
  /**
   * Return the creator clientID of the missing op or define missing items and return null.
   *
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= An(n, this.origin.client))
      return this.origin.client;
    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= An(n, this.rightOrigin.client))
      return this.rightOrigin.client;
    if (this.parent && this.parent.constructor === Ec && this.id.client !== this.parent.client && this.parent.clock >= An(n, this.parent.client))
      return this.parent.client;
    if (this.origin && (this.left = mb(e, n, this.origin), this.origin = this.left.lastId), this.rightOrigin && (this.right = Hi(e, this.rightOrigin), this.rightOrigin = this.right.id), this.left && this.left.constructor === Oi || this.right && this.right.constructor === Oi)
      this.parent = null;
    else if (!this.parent)
      this.left && this.left.constructor === dn ? (this.parent = this.left.parent, this.parentSub = this.left.parentSub) : this.right && this.right.constructor === dn && (this.parent = this.right.parent, this.parentSub = this.right.parentSub);
    else if (this.parent.constructor === Ec) {
      const r = nf(n, this.parent);
      r.constructor === Oi ? this.parent = null : this.parent = /** @type {ContentType} */
      r.content.type;
    }
    return null;
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    if (n > 0 && (this.id.clock += n, this.left = mb(e, e.doc.store, _t(this.id.client, this.id.clock - 1)), this.origin = this.left.lastId, this.content = this.content.splice(n), this.length -= n), this.parent) {
      if (!this.left && (!this.right || this.right.left !== null) || this.left && this.left.right !== this.right) {
        let r = this.left, i;
        if (r !== null)
          i = r.right;
        else if (this.parentSub !== null)
          for (i = /** @type {AbstractType<any>} */
          this.parent._map.get(this.parentSub) || null; i !== null && i.left !== null; )
            i = i.left;
        else
          i = /** @type {AbstractType<any>} */
          this.parent._start;
        const o = /* @__PURE__ */ new Set(), s = /* @__PURE__ */ new Set();
        for (; i !== null && i !== this.right; ) {
          if (s.add(i), o.add(i), dc(this.origin, i.origin)) {
            if (i.id.client < this.id.client)
              r = i, o.clear();
            else if (dc(this.rightOrigin, i.rightOrigin))
              break;
          } else if (i.origin !== null && s.has(nf(e.doc.store, i.origin)))
            o.has(nf(e.doc.store, i.origin)) || (r = i, o.clear());
          else
            break;
          i = i.right;
        }
        this.left = r;
      }
      if (this.left !== null) {
        const r = this.left.right;
        this.right = r, this.left.right = this;
      } else {
        let r;
        if (this.parentSub !== null)
          for (r = /** @type {AbstractType<any>} */
          this.parent._map.get(this.parentSub) || null; r !== null && r.left !== null; )
            r = r.left;
        else
          r = /** @type {AbstractType<any>} */
          this.parent._start, this.parent._start = this;
        this.right = r;
      }
      this.right !== null ? this.right.left = this : this.parentSub !== null && (this.parent._map.set(this.parentSub, this), this.left !== null && this.left.delete(e)), this.parentSub === null && this.countable && !this.deleted && (this.parent._length += this.length), M_(e.doc.store, this), this.content.integrate(e, this), yb(
        e,
        /** @type {AbstractType<any>} */
        this.parent,
        this.parentSub
      ), /** @type {AbstractType<any>} */
      (this.parent._item !== null && /** @type {AbstractType<any>} */
      this.parent._item.deleted || this.parentSub !== null && this.right !== null) && this.delete(e);
    } else
      new Oi(this.id, this.length).integrate(e, 0);
  }
  /**
   * Returns the next non-deleted item
   */
  get next() {
    let e = this.right;
    for (; e !== null && e.deleted; )
      e = e.right;
    return e;
  }
  /**
   * Returns the previous non-deleted item
   */
  get prev() {
    let e = this.left;
    for (; e !== null && e.deleted; )
      e = e.left;
    return e;
  }
  /**
   * Computes the last content address of this Item.
   */
  get lastId() {
    return this.length === 1 ? this.id : _t(this.id.client, this.id.clock + this.length - 1);
  }
  /**
   * Try to merge two items
   *
   * @param {Item} right
   * @return {boolean}
   */
  mergeWith(e) {
    if (this.constructor === e.constructor && dc(e.origin, this.lastId) && this.right === e && dc(this.rightOrigin, e.rightOrigin) && this.id.client === e.id.client && this.id.clock + this.length === e.id.clock && this.deleted === e.deleted && this.redone === null && e.redone === null && this.content.constructor === e.content.constructor && this.content.mergeWith(e.content)) {
      const n = (
        /** @type {AbstractType<any>} */
        this.parent._searchMarker
      );
      return n && n.forEach((r) => {
        r.p === e && (r.p = this, !this.deleted && this.countable && (r.index -= this.length));
      }), e.keep && (this.keep = !0), this.right = e.right, this.right !== null && (this.right.left = this), this.length += e.length, !0;
    }
    return !1;
  }
  /**
   * Mark this Item as deleted.
   *
   * @param {Transaction} transaction
   */
  delete(e) {
    if (!this.deleted) {
      const n = (
        /** @type {AbstractType<any>} */
        this.parent
      );
      this.countable && this.parentSub === null && (n._length -= this.length), this.markDeleted(), A_(e.deleteSet, this.id.client, this.id.clock, this.length), yb(e, n, this.parentSub), this.content.delete(e);
    }
  }
  /**
   * @param {StructStore} store
   * @param {boolean} parentGCd
   */
  gc(e, n) {
    if (!this.deleted)
      throw jo();
    this.content.gc(e), n ? fD(e, this, new Oi(this.id, this.length)) : this.content = new cu(this.length);
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   * @param {number} offset
   */
  write(e, n) {
    const r = n > 0 ? _t(this.id.client, this.id.clock + n - 1) : this.origin, i = this.rightOrigin, o = this.parentSub, s = this.content.getRef() & eA | (r === null ? 0 : iu) | // origin is defined
    (i === null ? 0 : g_) | // right origin is defined
    (o === null ? 0 : ZT);
    if (e.writeInfo(s), r !== null && e.writeLeftID(r), i !== null && e.writeRightID(i), r === null && i === null) {
      const a = (
        /** @type {AbstractType<any>} */
        this.parent
      );
      if (a._item !== void 0) {
        const l = a._item;
        if (l === null) {
          const c = cD(a);
          e.writeParentInfo(!0), e.writeString(c);
        } else
          e.writeParentInfo(!1), e.writeLeftID(l.id);
      } else a.constructor === String ? (e.writeParentInfo(!0), e.writeString(a)) : a.constructor === Ec ? (e.writeParentInfo(!1), e.writeLeftID(a)) : jo();
      o !== null && e.writeString(o);
    }
    this.content.write(e, n);
  }
}
const Z_ = (
  /** @type {any} */
  typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : {}
), ex = "__ $YJS$ __";
Z_[ex] === !0 && console.error("Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438");
Z_[ex] = !0;
const $D = Se("TOGGLE_CONNECT_COMMAND");
var FD = Object.defineProperty, BD = (t, e, n) => e in t ? FD(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, me = (t, e, n) => BD(t, typeof e != "symbol" ? e + "" : e, n);
const sf = (t) => at(R0(t)), Wi = Xy("cid", {
  parse: (t) => typeof t == "string" ? t : void 0
}), Ks = Xy("segment", {
  parse: (t) => typeof t == "string" ? t : void 0
}), ph = "unknown", tx = 1;
class es extends pn {
  constructor(e = "", n = "", r, i) {
    super(i), me(this, "__tag"), me(this, "__marker"), me(this, "__unknownAttributes"), this.__tag = e, this.__marker = n, this.__unknownAttributes = r;
  }
  static getType() {
    return "unknown";
  }
  static clone(e) {
    const { __tag: n, __marker: r, __unknownAttributes: i, __key: o } = e;
    return new es(n, r, i, o);
  }
  static importDOM() {
    return {
      [ph]: (e) => jD(e) ? {
        conversion: qD,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return nx().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTag(e.tag).setMarker(e.marker).setUnknownAttributes(e.unknownAttributes);
  }
  setTag(e) {
    if (this.__tag === e)
      return this;
    const n = this.getWritable();
    return n.__tag = e, n;
  }
  getTag() {
    return this.getLatest().__tag;
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement(ph);
    return e.style.display = "none", e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM() {
    return { element: null };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      tag: this.getTag(),
      marker: this.getMarker(),
      unknownAttributes: this.getUnknownAttributes(),
      version: tx
    };
  }
  // Mutation
  canBeEmpty() {
    return !0;
  }
  isInline() {
    return !0;
  }
  extractWithChild() {
    return !1;
  }
  excludeFromCopy(e) {
    return e !== "clone";
  }
}
function qD(t) {
  const e = t.getAttribute("data-tag") ?? "", n = t.getAttribute("data-marker") ?? "";
  return { node: nx(e, n) };
}
function nx(t, e, n) {
  return at(new es(t, e, n));
}
function jD(t) {
  return (t == null ? void 0 : t.tagName) === ph;
}
function Rl(t) {
  return t instanceof es;
}
const ed = "id", rx = 1;
class sr extends pn {
  constructor(e = "", n, r) {
    super(r), me(this, "__marker", ed), me(this, "__code"), me(this, "__unknownAttributes"), this.__code = e, this.__unknownAttributes = n;
  }
  static getType() {
    return "book";
  }
  static clone(e) {
    const { __code: n, __unknownAttributes: r, __key: i } = e;
    return new sr(n, r, i);
  }
  static importJSON(e) {
    const { code: n } = e;
    return ix(n).updateFromJSON(e);
  }
  static isValidBookCode(e) {
    return qC(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setCode(e.code).setUnknownAttributes(e.unknownAttributes);
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setCode(e) {
    if (this.__code === e)
      return this;
    const n = this.getWritable();
    return n.__code = e, n;
  }
  /**
   * Get the book code (ID).
   * @returns the book code (ID).
   */
  getCode() {
    return this.getLatest().__code;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("p");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e.setAttribute("data-code", this.__code), e;
  }
  updateDOM() {
    return !1;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      code: this.getCode(),
      unknownAttributes: this.getUnknownAttributes(),
      version: rx
    };
  }
}
function ix(t, e) {
  return at(new sr(t, e));
}
function Gr(t) {
  return t instanceof sr;
}
function UD(t) {
  return (t == null ? void 0 : t.type) === sr.getType();
}
const st = " ", gh = "​", Zp = `${st}|`, eg = "p", Uo = "+", tg = "-", uu = "chapter", wh = "verse", kb = "invalid", zD = "text-spacing", VD = "formatted-font", HD = "marker-", ng = "external-usj-mutation", ox = "selection-change", mh = "cursor-change", bh = "annotation-change", yh = "delta-change", WD = [
  ng,
  ox,
  mh,
  bh,
  yh
], rg = "c", sx = 1;
class Tr extends pn {
  constructor(e = "", n, r, i, o, s) {
    super(s), me(this, "__marker"), me(this, "__number"), me(this, "__sid"), me(this, "__altnumber"), me(this, "__pubnumber"), me(this, "__unknownAttributes"), this.__marker = rg, this.__number = e, this.__sid = n, this.__altnumber = r, this.__pubnumber = i, this.__unknownAttributes = o;
  }
  static getType() {
    return "chapter";
  }
  static clone(e) {
    const { __number: n, __sid: r, __altnumber: i, __pubnumber: o, __unknownAttributes: s, __key: a } = e;
    return new Tr(n, r, i, o, s, a);
  }
  static importJSON(e) {
    return ax().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("p");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(uu, `usfm_${this.__marker}`), e.setAttribute("data-number", this.__number), e;
  }
  updateDOM() {
    return !1;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: sx
    };
  }
}
function ax(t, e, n, r, i) {
  return at(new Tr(t, e, n, r, i));
}
function ig(t) {
  return t instanceof Tr;
}
function KD(t) {
  return (t == null ? void 0 : t.type) === Tr.getType();
}
const lx = [
  "fr",
  "fq",
  "fqa",
  "fk",
  "ft",
  "fl",
  "fw",
  "fp",
  "fv",
  "fdc",
  "fm"
], cx = [
  "xo",
  "xop",
  "xk",
  "xq",
  "xt",
  "xta",
  "xot",
  "xnt",
  "xdc"
], GD = [
  // Chapter & Verse
  "ca",
  "cp",
  "va",
  "vp",
  // Text Features
  "add",
  "bk",
  "dc",
  "em",
  "jmp",
  "k",
  "nd",
  "ord",
  "pn",
  "png",
  "qt",
  "rb",
  "rq",
  // "ref", // This has its own tag and is not a Char
  "sig",
  "sls",
  "tl",
  "w",
  "wa",
  "wg",
  "wh",
  "wj",
  // Note there are 2 deprecated markers intentionally not listed here: "addpn", "pro"
  // Text Formatting
  "bd",
  "it",
  "bdit",
  "no",
  "sc",
  "sup",
  // Introductions
  "ior",
  "iqt",
  // Poetry
  "qac",
  "qs",
  // Lists
  "litl",
  "lik",
  "liv",
  "liv1",
  "liv2",
  "liv3",
  "liv4",
  "liv5",
  ...lx,
  ...cx
], ux = 1;
class Et extends pn {
  constructor(e = "", n, r) {
    super(r), me(this, "__marker"), me(this, "__unknownAttributes"), this.__marker = e, this.__unknownAttributes = n;
  }
  static getType() {
    return "char";
  }
  static clone(e) {
    const { __marker: n, __unknownAttributes: r, __key: i } = e;
    return new Et(n, r, i);
  }
  static isValidMarker(e) {
    return e !== void 0 && GD.includes(e);
  }
  static isValidFootnoteMarker(e) {
    return e !== void 0 && lx.includes(e);
  }
  static isValidCrossReferenceMarker(e) {
    return e !== void 0 && cx.includes(e);
  }
  static importDOM() {
    return {
      span: (e) => XD(e) ? {
        conversion: JD,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return jr().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.setAttribute("title", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(this.getType(), `usfm_${this.getMarker()}`)), { element: n };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      unknownAttributes: this.getUnknownAttributes(),
      version: ux
    };
  }
  // Mutation
  insertNewAfter(e, n) {
    const r = jr(this.getMarker());
    return r.setTextFormat(e.format), r.setTextStyle(e.style), r.setDirection(this.getDirection()), r.setFormat(this.getFormatType()), r.setStyle(this.getTextStyle()), this.insertAfter(r, n), r;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
}
function JD(t) {
  const e = t.getAttribute("data-marker") ?? "f";
  return { node: jr(e) };
}
function jr(t, e) {
  return at(new Et(t, e));
}
function XD(t) {
  if (!t)
    return !1;
  const e = t.getAttribute("data-marker") ?? "";
  return Et.isValidMarker(e) && t.classList.contains(Et.getType());
}
function Ct(t) {
  return t instanceof Et;
}
function YD(t) {
  return (t == null ? void 0 : t.type) === Et.getType();
}
const dx = 1, QD = "c", fx = "span";
class Ni extends Zi {
  constructor(e = "", n = !1, r, i, o, s, a) {
    super(a), me(this, "__marker"), me(this, "__number"), me(this, "__showMarker"), me(this, "__sid"), me(this, "__altnumber"), me(this, "__pubnumber"), me(this, "__unknownAttributes"), this.__marker = QD, this.__number = e, this.__showMarker = n, this.__sid = r, this.__altnumber = i, this.__pubnumber = o, this.__unknownAttributes = s;
  }
  static getType() {
    return "immutable-chapter";
  }
  static clone(e) {
    const { __number: n, __showMarker: r, __sid: i, __altnumber: o, __pubnumber: s, __unknownAttributes: a, __key: l } = e;
    return new Ni(n, r, i, o, s, a, l);
  }
  static importDOM() {
    return {
      span: (e) => hx(e) ? {
        conversion: ZD,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return og().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setShowMarker(e.showMarker).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setShowMarker(e = !1) {
    if (this.__showMarker === e)
      return this;
    const n = this.getWritable();
    return n.__showMarker = e, n;
  }
  getShowMarker() {
    return this.getLatest().__showMarker;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement(fx);
    return e.setAttribute("data-marker", this.__marker), e.classList.add(uu, `usfm_${this.__marker}`), this.__showMarker && e.classList.add("marker"), e.setAttribute("data-number", this.__number), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(uu, `usfm_${this.getMarker()}`), n.setAttribute("data-number", this.getNumber())), { element: n };
  }
  decorate() {
    return this.getShowMarker() ? Ll(this.getMarker(), this.getNumber()) : this.getNumber();
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      showMarker: this.getShowMarker(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: dx
    };
  }
  // Mutation
  isInline() {
    return !1;
  }
  isKeyboardSelectable() {
    return !1;
  }
}
function ZD(t) {
  const e = t.getAttribute("data-number") ?? "0";
  return { node: og(e) };
}
function og(t, e, n, r, i, o) {
  return at(new Ni(t, e, n, r, i, o));
}
function hx(t) {
  return t ? t.classList.contains(uu) && t.tagName.toLowerCase() === fx : !1;
}
function Pl(t) {
  return t instanceof Ni;
}
function eO(t) {
  return (t == null ? void 0 : t.type) === Ni.getType();
}
const px = 1;
class Ki extends aa {
  static getType() {
    return "implied-para";
  }
  static clone(e) {
    return new Ki(e.__key);
  }
  static importJSON(e) {
    return mr().updateFromJSON(e);
  }
  getMarker() {
    return eg;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      version: px
    };
  }
  // Mutation
  insertNewAfter(e, n) {
    const r = mr();
    return r.setTextFormat(e.format), r.setTextStyle(e.style), r.setDirection(this.getDirection()), r.setFormat(this.getFormatType()), r.setStyle(this.getTextStyle()), this.insertAfter(r, n), r;
  }
}
function mr() {
  return at(new Ki());
}
function _i(t) {
  return t instanceof Ki;
}
function sg(t) {
  return (t == null ? void 0 : t.type) === Ki.getType();
}
const zo = "zmsc-s", Cs = "zmsc-e", tO = [zo, Cs], nO = [
  "ts-s",
  "ts-e",
  "t-s",
  "t-e",
  "ts",
  "qt1-s",
  "qt1-e",
  "qt2-s",
  "qt2-e",
  "qt3-s",
  "qt3-e",
  "qt4-s",
  "qt4-e",
  "qt5-s",
  "qt5-e",
  "qt-s",
  "qt-e",
  // custom markers used for annotations
  zo,
  Cs
], gx = 1;
class Yr extends Zi {
  constructor(e = "", n, r, i, o) {
    super(o), me(this, "__marker"), me(this, "__sid"), me(this, "__eid"), me(this, "__unknownAttributes"), this.__marker = e, this.__sid = n, this.__eid = r, this.__unknownAttributes = i;
  }
  static getType() {
    return "ms";
  }
  static clone(e) {
    const { __marker: n, __sid: r, __eid: i, __unknownAttributes: o, __key: s } = e;
    return new Yr(n, r, i, o, s);
  }
  static importJSON(e) {
    return wx().updateFromJSON(e);
  }
  static isValidMarker(e) {
    return e !== void 0 && (nO.includes(e) || e.startsWith("z"));
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setSid(e.sid).setEid(e.eid).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setEid(e) {
    if (this.__eid === e)
      return this;
    const n = this.getWritable();
    return n.__eid = e, n;
  }
  getEid() {
    return this.getLatest().__eid;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e;
  }
  updateDOM() {
    return !1;
  }
  decorate() {
    return "";
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      sid: this.getSid(),
      eid: this.getEid(),
      unknownAttributes: this.getUnknownAttributes(),
      version: gx
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function rO(t) {
  return tO.includes(t);
}
function wx(t, e, n, r) {
  return at(new Yr(t, e, n, r));
}
function td(t) {
  return t instanceof Yr;
}
const mx = "f", iO = [
  // Footnote
  mx,
  "fe",
  "ef",
  "efe",
  // Cross Reference
  "x",
  "ex"
], bx = 1;
class Kt extends pn {
  constructor(e = mx, n, r = !0, i, o, s) {
    super(s), me(this, "__marker"), me(this, "__caller"), me(this, "__isCollapsed"), me(this, "__category"), me(this, "__unknownAttributes"), this.__marker = e, this.__caller = n ?? (e === "x" || e === "ex" ? tg : Uo), this.__isCollapsed = r, this.__category = i, this.__unknownAttributes = o;
  }
  static getType() {
    return "note";
  }
  static clone(e) {
    const { __marker: n, __caller: r, __isCollapsed: i, __category: o, __unknownAttributes: s, __key: a } = e;
    return new Kt(n, r, i, o, s, a);
  }
  static importDOM() {
    return {
      span: (e) => sO(e) ? {
        conversion: oO,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return ag().updateFromJSON(e);
  }
  static isValidMarker(e) {
    return e !== void 0 && iO.includes(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setCaller(e.caller).setIsCollapsed(e.isCollapsed).setCategory(e.category).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setCaller(e) {
    if (this.__caller === e)
      return this;
    const n = this.getWritable();
    return n.__caller = e, n;
  }
  getCaller() {
    return this.getLatest().__caller;
  }
  setIsCollapsed(e) {
    if (this.__isCollapsed === e)
      return this;
    const n = this.getWritable();
    return n.__isCollapsed = e, n;
  }
  toggleIsCollapsed() {
    const e = this.getWritable();
    return e.__isCollapsed = !e.__isCollapsed, e;
  }
  getIsCollapsed() {
    return this.getLatest().__isCollapsed;
  }
  setCategory(e) {
    if (this.__category === e)
      return this;
    const n = this.getWritable();
    return n.__category = e, n;
  }
  getCategory() {
    return this.getLatest().__category;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`, this.__isCollapsed ? "collapsed" : "expanded"), e.setAttribute("data-caller", this.__caller), e;
  }
  updateDOM(e) {
    return e.__isCollapsed !== this.__isCollapsed;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(this.getType(), `usfm_${this.getMarker()}`, this.getIsCollapsed() ? "collapsed" : "expanded"), n.setAttribute("data-caller", this.getCaller())), { element: n };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      caller: this.getCaller(),
      isCollapsed: this.getIsCollapsed(),
      category: this.getCategory(),
      unknownAttributes: this.getUnknownAttributes(),
      version: bx
    };
  }
  // Mutation
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
}
function oO(t) {
  const e = t.getAttribute("data-marker") ?? "f", n = t.getAttribute("data-caller") ?? "", r = t.classList.contains("collapsed");
  return { node: ag(e, n, r) };
}
function ag(t, e, n, r, i) {
  return at(new Kt(t, e, n, r, i));
}
function sO(t) {
  if (!t)
    return !1;
  const e = t.getAttribute("data-marker") ?? "";
  return Kt.isValidMarker(e) && t.classList.contains(Kt.getType());
}
function ze(t) {
  return t instanceof Kt;
}
const aO = [
  // Identification
  "ide",
  "sts",
  "rem",
  "h",
  "toc1",
  "toc2",
  "toc3",
  "toca1",
  "toca2",
  "toca3",
  // Introductions
  "imt",
  "imt1",
  "imt2",
  "imt3",
  "imt4",
  "is",
  "is1",
  "is2",
  "ip",
  "ipi",
  "im",
  "imi",
  "ipq",
  "imq",
  "ipr",
  "iq",
  "iq1",
  "iq2",
  "iq3",
  "ili",
  "ili1",
  "ili2",
  "ib",
  "iot",
  "io",
  "io1",
  "io2",
  "io3",
  "io4",
  "iex",
  "imte",
  "imte1",
  "imte2",
  "ie",
  // Titles and Headings
  "mt",
  "mt1",
  "mt2",
  "mt3",
  "mt4",
  "mte",
  "mte1",
  "mte2",
  "cl",
  "cd",
  "ms",
  "ms1",
  "ms2",
  "ms3",
  "mr",
  "s",
  "s1",
  "s2",
  "s3",
  "s4",
  "sr",
  "r",
  "d",
  "sp",
  "sd",
  "sd1",
  "sd2",
  "sd3",
  "sd4",
  // Body Paragraphs
  eg,
  "m",
  "po",
  "cls",
  "pr",
  "pc",
  "pm",
  "pmo",
  "pmc",
  "pmr",
  "pi",
  "pi1",
  "pi2",
  "pi3",
  "mi",
  "lit",
  "nb",
  // Note there is 1 deprecated marker not listed here: "ph#"
  // Poetry
  "q",
  "q1",
  "q2",
  "q3",
  "q4",
  "qr",
  "qc",
  "qa",
  "qm",
  "qm1",
  "qm2",
  "qm3",
  "qd",
  "b",
  // Lists
  "lh",
  "li",
  "li1",
  "li2",
  "li3",
  "li4",
  "lf",
  "lim",
  "lim1",
  "lim2",
  "lim3",
  "lim4",
  // Breaks - see https://docs.usfm.bible/usfm/3.1/char/breaks/pb.html
  "pb"
], yx = 1;
class Mn extends aa {
  constructor(e = eg, n, r) {
    super(r), me(this, "__marker"), me(this, "__unknownAttributes"), this.__marker = e, this.__unknownAttributes = n;
  }
  static getType() {
    return "para";
  }
  static clone(e) {
    const { __marker: n, __unknownAttributes: r, __key: i } = e;
    return new Mn(n, r, i);
  }
  static isValidMarker(e) {
    return e !== void 0 && aO.includes(e);
  }
  static importDOM() {
    return {
      p: () => ({
        conversion: lO,
        priority: 1
      })
    };
  }
  static importJSON(e) {
    return dl().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("p");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(this.getType(), `usfm_${this.getMarker()}`)), { element: n };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      unknownAttributes: this.getUnknownAttributes(),
      version: yx
    };
  }
  // Mutation
  insertNewAfter(e, n) {
    const r = dl(this.getMarker());
    return r.setTextFormat(e.format), r.setTextStyle(e.style), r.setDirection(this.getDirection()), r.setFormat(this.getFormatType()), r.setStyle(this.getTextStyle()), this.insertAfter(r, n), r;
  }
}
function lO(t) {
  const e = t.getAttribute("data-marker") ?? void 0, n = dl(e);
  if (t.style) {
    n.setFormat(t.style.textAlign);
    const r = parseInt(t.style.textIndent, 10) / 20;
    r > 0 && n.setIndent(r);
  }
  return { node: n };
}
function dl(t, e) {
  return at(new Mn(t, e));
}
function fn(t) {
  return t instanceof Mn;
}
function cO(t) {
  return (t == null ? void 0 : t.type) === Mn.getType();
}
const lg = "v", vx = 1;
class _n extends Gn {
  constructor(e = "", n, r, i, o, s, a) {
    super(n ?? e, a), me(this, "__marker"), me(this, "__number"), me(this, "__sid"), me(this, "__altnumber"), me(this, "__pubnumber"), me(this, "__unknownAttributes"), this.__marker = lg, this.__number = e, this.__sid = r, this.__altnumber = i, this.__pubnumber = o, this.__unknownAttributes = s;
  }
  static getType() {
    return "verse";
  }
  static clone(e) {
    const { __number: n, __text: r, __sid: i, __altnumber: o, __pubnumber: s, __unknownAttributes: a, __key: l } = e;
    return new _n(n, r, i, o, s, a, l);
  }
  static importJSON(e) {
    return _x().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM(e) {
    const n = super.createDOM(e);
    return n.setAttribute("data-marker", this.__marker), n.classList.add(wh, `usfm_${this.__marker}`), n.setAttribute("data-number", this.__number), n;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: vx
    };
  }
}
function _x(t, e, n, r, i, o) {
  return at(new _n(t, e, n, r, i, o));
}
function cg(t) {
  return t instanceof _n;
}
function uO(t) {
  return (t == null ? void 0 : t.type) === _n.getType();
}
function dO(t) {
  return KD(t) || eO(t);
}
function rr(t) {
  return ig(t) || Pl(t);
}
function fO(t, e) {
  return t.find((n) => rr(n) && n.getNumber() === e.toString());
}
function hO(t, e = !1) {
  return t.find((n, r) => (!e || r > 0) && rr(n));
}
function ug(t) {
  var e;
  if (!t)
    return;
  if (rr(t))
    return t;
  let n = (e = t.getTopLevelElement()) == null ? void 0 : e.getPreviousSibling();
  for (; n && !rr(n); )
    n = n.getPreviousSibling();
  if (n && rr(n))
    return n;
}
function xx(t) {
  let e = t;
  for (; e !== null; ) {
    if (ze(e))
      return e;
    e = e.getParent();
  }
}
function pO(t) {
  return Gr(t) || ig(t) || Ct(t) || Pl(t) || _i(t) || td(t) || fn(t) || ze(t) || cg(t) || Rl(t);
}
function gO(t) {
  var e;
  if (t.anchor.type === "element") {
    const r = t.anchor.getNode(), i = t.anchor.offset;
    if (i < r.getChildrenSize())
      return r.getChildAtIndex(i);
  }
  const n = t.anchor.getNode();
  return n.getNextSibling() ?? ((e = n.getParent()) == null ? void 0 : e.getNextSibling()) ?? null;
}
function wO(t) {
  var e;
  const n = t.anchor.offset;
  if (t.anchor.type === "element" && n > 0)
    return t.anchor.getNode().getChildAtIndex(n - 1);
  const r = t.anchor.getNode();
  return r.getPreviousSibling() ?? ((e = r.getParent()) == null ? void 0 : e.getPreviousSibling()) ?? null;
}
function pr(t) {
  return fn(t) || _i(t);
}
function mO(t, e) {
  let n = t.getParent();
  for (; n; ) {
    if (n.getKey() === e)
      return !0;
    n = n.getParent();
  }
  return !1;
}
function vh(t, e) {
  const n = Ms(e, Wi), r = !!(t.cid && n), i = !t.cid && !n;
  return t.style === e.getMarker() && (i || r && t.cid === n);
}
function bO(t, e) {
  const n = X(t) ? t : t.getParent(), r = X(e) ? e : e.getParent(), i = n && r ? Ha(n, r) : void 0;
  return i ? i.commonAncestor : void 0;
}
function yO(t) {
  const e = t.getStartEndPoints();
  if (!e)
    return;
  const [n, r] = e, i = t.isBackward() ? n : r;
  t.focus.set(i.key, i.offset, i.type), t.anchor.set(i.key, i.offset, i.type);
}
function dg(t) {
  return (t == null ? void 0 : t.type) === Gn.getType();
}
function vO(t, e) {
  if (!e)
    return;
  const n = t.findIndex((r) => r === e);
  n && (t.length = n);
}
function _O(t, e) {
  if (!e)
    return t;
  const n = e.getIndexWithinParent();
  return t.splice(n + 1, t.length - n - 1);
}
function no(t) {
  return `\\${t}`;
}
function fl(t) {
  return `\\${t}*`;
}
function Cx(t, e, n) {
  const r = no(t);
  if (e != null && e.startsWith(r)) {
    const i = parseInt(e.slice(r.length), 10);
    isNaN(i) || (n = i.toString());
  }
  return n;
}
function Ll(t, e) {
  let n = no(t);
  return e && (n += `${st}${e}`), n += " ", n;
}
function kx(t) {
  return dg(t) ? t.text : YD(t) ? t.children.map((e) => kx(e)).join("") : "";
}
function xO(t) {
  return t.map((e) => kx(e)).join(" ").trim();
}
function fg(t) {
  return st + t + " ";
}
function hg(t) {
  return t.reduce((e, n) => e + (Ct(n) ? ` ${n.getTextContent()}` : ""), "").trim();
}
function Gt(t, e = BC) {
  const n = { ...t };
  return e.forEach((r) => {
    Reflect.deleteProperty(n, r);
  }), Object.keys(n).length === 0 ? void 0 : n;
}
function CO(t, e) {
  const n = e.getElementByKey(t.getKey());
  return n ? n.tagName.toLowerCase() : void 0;
}
function Ft(t) {
  return Object.fromEntries(Object.entries(t).filter(([, e]) => e !== void 0));
}
function Ex(t) {
  if (!t)
    return;
  const e = t.getNodes();
  if (e.length > 0)
    return t.isBackward() ? e[e.length - 1] : e[0];
}
function _h(t, e) {
  if (!e)
    return (t + 1).toString();
  const n = e.split("-");
  if (n.length === 2)
    return parseInt(n[1]) ? `${parseInt(n[1]) + 1}` : `${parseInt(n[0]) + 1}`;
  const r = RegExp(/^(\d+)([a-yA-Y]{1,3})$/).exec(e);
  if (!r)
    return (parseInt(e) + 1).toString();
  const i = String.fromCharCode(r[2].charCodeAt(0) + 1);
  return `${r[1]}${i}`;
}
function pg(t, e) {
  if (!e)
    return !1;
  const n = e.split("-").map((r) => parseInt(r));
  if (n.length < 1 || n.length > 2 || n[0] > n[1])
    throw new Error("isVerseInRange: invalid range");
  return n.length === 1 ? t === n[0] : n.length === 2 && isNaN(n[1]) ? t >= n[0] : (n.length === 2 && isNaN(n[0]) || t >= n[0]) && t <= n[1];
}
function kO(t) {
  return !!t && t.includes("-");
}
const EO = 1;
class ts extends Gn {
  constructor(e = "", n = "opening", r) {
    super(af(e, n), r), me(this, "__marker"), me(this, "__markerSyntax"), this.__marker = e, this.__markerSyntax = n;
  }
  static getType() {
    return "marker";
  }
  static clone(e) {
    return new ts(e.__marker, e.__markerSyntax, e.__key);
  }
  static importJSON(e) {
    return xh().updateFromJSON(e);
  }
  updateFromJSON(e) {
    const { marker: n, markerSyntax: r = "opening" } = e;
    return super.updateFromJSON(e).setMarker(n).setMarkerSyntax(r);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n.__text = af(e, n.__markerSyntax), n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setMarkerSyntax(e) {
    if (this.__markerSyntax === e)
      return this;
    const n = this.getWritable();
    return n.__markerSyntax = e, n.__text = af(n.__marker, e), n;
  }
  getMarkerSyntax() {
    return this.getLatest().__markerSyntax;
  }
  createDOM(e) {
    const n = super.createDOM(e);
    return n.setAttribute("data-marker", this.__marker), n.classList.add(this.__markerSyntax), n;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      text: this.getTextContent(),
      marker: this.getMarker(),
      markerSyntax: this.getMarkerSyntax(),
      version: EO
    };
  }
}
function xh(t, e) {
  return at(new ts(t, e));
}
function $l(t) {
  return t instanceof ts;
}
function af(t, e) {
  return e === "closing" ? fl(t) : e === "selfClosing" ? fl("") : no(t);
}
const Li = "internal-comment", NO = [Li], SO = {}, TO = 1;
class nn extends pn {
  constructor(e = SO, n) {
    super(n), me(this, "__typedIDs"), this.__typedIDs = e;
  }
  static getType() {
    return "typed-mark";
  }
  static clone(e) {
    const n = JSON.parse(JSON.stringify(e.__typedIDs));
    return new nn(n, e.__key);
  }
  static isReservedType(e) {
    return NO.includes(e);
  }
  static importDOM() {
    return null;
  }
  static importJSON(e) {
    return hl().updateFromJSON(e);
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      typedIDs: this.getTypedIDs(),
      version: TO
    };
  }
  createDOM(e) {
    const n = document.createElement("mark");
    for (const [r, i] of Object.entries(this.__typedIDs))
      un(n, pc(e.theme.typedMark, r)), i.length > 1 && un(n, pc(e.theme.typedMarkOverlap, r));
    return n;
  }
  updateDOM(e, n, r) {
    for (const [i, o] of Object.entries(this.__typedIDs)) {
      const s = e.__typedIDs[i].length, a = o.length, l = pc(r.theme.typedMark, i), c = pc(r.theme.typedMarkOverlap, i);
      s !== a && (s === 0 ? a === 1 && un(n, l) : a === 0 && No(n, l), s === 1 ? a === 2 && un(n, c) : a === 1 && No(n, c));
    }
    return !1;
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTypedIDs(e.typedIDs);
  }
  hasID(e, n) {
    const r = this.getTypedIDs()[e];
    if (!r)
      return !1;
    for (const i of r)
      if (n === i)
        return !0;
    return !1;
  }
  getTypedIDs() {
    const e = this.getLatest();
    return on(e) ? e.__typedIDs : {};
  }
  setTypedIDs(e) {
    const n = this.getWritable();
    return n.__typedIDs = e, n;
  }
  addID(e, n) {
    const r = this.getWritable();
    if (!on(r))
      return;
    const i = r.__typedIDs[e] ?? [];
    r.__typedIDs[e] = i;
    for (const o of i)
      if (n === o)
        return;
    i.push(n);
  }
  deleteID(e, n) {
    const r = this.getWritable();
    if (!on(r))
      return;
    const i = r.__typedIDs[e];
    for (let o = 0; o < i.length; o++)
      if (n === i[o]) {
        i.splice(o, 1);
        return;
      }
  }
  hasNoIDsForEveryType() {
    return Object.values(this.getTypedIDs()).every((e) => e === void 0 || e.length === 0);
  }
  insertNewAfter(e, n = !0) {
    const r = hl(this.__typedIDs);
    return this.insertAfter(r, n), r;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
  extractWithChild(e, n, r) {
    if (!Z(n) || r === "html")
      return !1;
    const i = n.anchor, o = n.focus, s = i.getNode(), a = o.getNode(), l = n.isBackward() ? i.offset - o.offset : o.offset - i.offset;
    return this.isParentOf(s) && this.isParentOf(a) && this.getTextContent().length === l;
  }
  excludeFromCopy(e) {
    return e !== "clone";
  }
}
function pc(t, e) {
  return `${t}-${e}`;
}
function hl(t) {
  return at(new nn(t));
}
function on(t) {
  return t instanceof nn;
}
function AO(t) {
  return (t == null ? void 0 : t.type) === nn.getType();
}
function Nx(t) {
  const e = t.getChildren();
  let n = null;
  for (const r of e)
    n === null ? t.insertBefore(r) : n.insertAfter(r), n = r;
  t.remove();
}
function Sx(t, e, n, r) {
  const i = t.getNodes(), o = t.anchor.offset, s = t.focus.offset, a = i.length, l = t.isBackward(), c = l ? s : o, u = l ? o : s;
  let f, d;
  for (let h = 0; h < a; h++) {
    const g = i[h];
    if (X(d) && d.isParentOf(g))
      continue;
    const w = h === 0, v = h === a - 1;
    let _ = null;
    if (ie(g)) {
      const b = g.getTextContentSize(), C = w ? c : 0, D = v ? u : b;
      if (C === 0 && D === 0)
        continue;
      const R = g.splitText(C, D);
      _ = R.length > 1 && (R.length === 3 || w && !v || D === b) ? R[1] : R[0];
    } else {
      if (on(g))
        continue;
      X(g) && g.isInline() && (_ = g);
    }
    if (_ !== null) {
      if (_ && _.is(f))
        continue;
      const b = _.getParent();
      (b == null || !b.is(f)) && (d = void 0), f = b, d === void 0 && (d = hl({ [e]: [n] }), _.insertBefore(d)), d.append(_);
    } else
      f = void 0, d = void 0;
  }
  e === Li && X(d) && (l ? d.selectStart() : d.selectEnd());
}
function DO(t, e, n) {
  let r = t;
  for (; r !== null; ) {
    if (on(r))
      return r.getTypedIDs()[e];
    if (ie(r) && n === r.getTextContentSize()) {
      const i = r.getNextSibling();
      if (on(i))
        return i.getTypedIDs()[e];
    }
    r = r.getParent();
  }
}
function Eb(t) {
  return `external-${t}`;
}
const Tx = 1;
class ro extends Zi {
  constructor(e = "", n = "", r) {
    super(r), me(this, "__textType"), me(this, "__text"), this.__textType = e, this.__text = n;
  }
  static getType() {
    return "immutable-typed-text";
  }
  static clone(e) {
    const { __textType: n, __text: r, __key: i } = e;
    return new ro(n, r, i);
  }
  static importDOM() {
    return {
      span: (e) => MO(e) ? {
        conversion: OO,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return du().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTextType(e.textType).setTextContent(e.text);
  }
  setTextType(e) {
    if (this.__textType === e)
      return this;
    const n = this.getWritable();
    return n.__textType = e, n;
  }
  getTextType() {
    return this.getLatest().__textType;
  }
  setTextContent(e) {
    if (this.__text === e)
      return this;
    const n = this.getWritable();
    return n.__text = e, n;
  }
  getTextContent() {
    return this.getLatest().__text;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-text-type", this.__textType), e.classList.add(this.__textType), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && n.setAttribute("data-text-type", this.getTextType()), { element: n };
  }
  decorate() {
    return this.getTextContent();
  }
  exportJSON() {
    return {
      type: this.getType(),
      textType: this.getTextType(),
      text: this.getTextContent(),
      version: Tx
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function OO(t) {
  const e = t.getAttribute("data-text-type") ?? "", n = t.textContent ?? "";
  return { node: du(e, n) };
}
function du(t, e) {
  return at(new ro(t, e));
}
function MO(t) {
  return (t == null ? void 0 : t.tagName) === "span";
}
function fu(t) {
  return t instanceof ro;
}
function IO(t) {
  return (t == null ? void 0 : t.type) === ro.getType();
}
const hu = "unmatched", Ax = 1;
class io extends Zi {
  constructor(e = "", n) {
    super(n), me(this, "__marker"), this.__marker = e;
  }
  static getType() {
    return "unmatched";
  }
  static clone(e) {
    const { __marker: n, __key: r } = e;
    return new io(n, r);
  }
  static importDOM() {
    return {
      [hu]: (e) => PO(e) ? {
        conversion: RO,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return gg().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  createDOM() {
    const e = document.createElement(hu);
    e.setAttribute("data-marker", this.__marker), e.classList.add(kb);
    const n = this.__marker.endsWith("*");
    return e.title = n ? "This closing marker has no matching opening marker!" : "This opening marker has no matching closing marker!", e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(kb)), { element: n };
  }
  decorate() {
    return `\\${this.getMarker()}${gh}`;
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      version: Ax
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function RO(t) {
  const e = t.getAttribute("data-marker") ?? "";
  return { node: gg(e) };
}
function gg(t) {
  return at(new io(t));
}
function PO(t) {
  return (t == null ? void 0 : t.tagName) === hu;
}
function Dx(t) {
  return t instanceof io;
}
const LO = [
  sr,
  Ni,
  Tr,
  _n,
  Et,
  Kt,
  Yr,
  ts,
  es,
  ro,
  io,
  Mn,
  Ki,
  {
    replace: aa,
    with: () => mr(),
    withKlass: Ki
  }
];
var z;
(function(t) {
  t.FileIdentification = "FileIdentification", t.Headers = "Headers", t.Remarks = "Remarks", t.Introduction = "Introduction", t.DivisionMarks = "DivisionMarks", t.Paragraphs = "Paragraphs", t.Poetry = "Poetry", t.TitlesHeadings = "TitlesHeadings", t.Tables = "Tables", t.CenterTables = "CenterTables", t.RightTables = "RightTables", t.Lists = "Lists", t.Footnotes = "Footnotes", t.CrossReferences = "CrossReferences", t.SpecialText = "SpecialText", t.CharacterStyling = "CharacterStyling", t.Breaks = "Breaks", t.SpecialFeatures = "SpecialFeatures", t.PeripheralReferences = "PeripheralReferences", t.PeripheralMaterials = "PeripheralMaterials", t.Uncategorized = "Uncategorized";
})(z || (z = {}));
var U;
(function(t) {
  t.Paragraph = "Paragraph", t.Character = "Character", t.Note = "Note", t.Unknown = "Unknown";
})(U || (U = {}));
const $O = {
  id: {
    category: z.FileIdentification,
    type: U.Paragraph,
    description: "File identification information (BOOKID, FILENAME, EDITOR, MODIFICATION DATE)",
    hasEndMarker: !1,
    children: {
      FileIdentification: ["usfm", "ide"],
      Headers: ["h", "h1", "h2", "h3", "toc1", "toc2", "toc3"],
      Remarks: ["rem", "sts", "restore"],
      Introduction: [
        "imt",
        "imt1",
        "imt2",
        "imt3",
        "imt4",
        "imte",
        "imte1",
        "imte2",
        "is",
        "is1",
        "is2",
        "iot",
        "io",
        "io1",
        "io2",
        "io3",
        "io4",
        "ior",
        "ip",
        "im",
        "ipi",
        "imi",
        "ili",
        "ili1",
        "ili2",
        "ipq",
        "imq",
        "ipr",
        "ib",
        "iq",
        "iq1",
        "iq2",
        "iq3",
        "iex",
        "ie"
      ],
      DivisionMarks: ["c", "cl"],
      TitlesHeadings: ["mt", "mt1", "mt2", "mt3", "mt4"]
    }
  },
  usfm: {
    category: z.FileIdentification,
    type: U.Paragraph,
    description: "File markup version information",
    hasEndMarker: !1,
    children: void 0
  },
  ide: {
    category: z.FileIdentification,
    type: U.Paragraph,
    description: "File encoding information",
    hasEndMarker: !1,
    children: {
      Remarks: ["rem", "sts"]
    }
  },
  h: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text for a book (basic)",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  h1: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  h2: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text, left side of page",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  h3: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text, right side of page",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  toc1: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Long table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toc2: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Short table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toc3: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Book Abbreviation",
    hasEndMarker: !1,
    children: void 0
  },
  toca1: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Alternative language long table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toca2: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Alternative language short table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toca3: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Alternative language book Abbreviation",
    hasEndMarker: !1,
    children: void 0
  },
  rem: {
    category: z.Remarks,
    type: U.Paragraph,
    description: "Comments and remarks",
    hasEndMarker: !1,
    children: void 0
  },
  sts: {
    category: z.Remarks,
    type: U.Paragraph,
    description: "Status of this file",
    hasEndMarker: !1,
    children: void 0
  },
  restore: {
    category: z.Remarks,
    type: U.Paragraph,
    description: "Project restore information",
    hasEndMarker: !1,
    children: void 0
  },
  imt: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt3: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 3",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt4: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 4 (usually within parenthesis)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imte: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title at introduction end, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imte1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title at introduction end, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imte2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title at introduction end, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  is: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction section heading, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"],
      CharacterStyling: ["no"]
    }
  },
  is1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction section heading, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  is2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction section heading, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  iot: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline title (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CharacterStyling: ["no"]
    }
  },
  io: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 1 (if multiple levels) (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io3: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 3",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io4: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 4",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ior: {
    category: z.Introduction,
    type: U.Character,
    description: "Introduction references range for outline entry; for marking references separately",
    hasEndMarker: !0,
    children: void 0
  },
  ip: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  im: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, with no first line indent (may occur after poetry)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ipi: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, indented, with first line indent",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  imi: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph text, indented, with no first line indent",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ili: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "A list entry, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ili1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "A list entry, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ili2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "A list entry, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ipq: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, quote from the body text",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  imq: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, quote from the body text, with no first line indent",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ipr: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, right aligned",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ib: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction blank line",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"]
    }
  },
  iq: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iq1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iq2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iq3: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 3",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iex: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction explanatory or bridge text (e.g. explanation of missing book in Short Old Testament)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CharacterStyling: ["no"]
    }
  },
  iqt: {
    category: z.Introduction,
    type: U.Character,
    description: "For quoted scripture text appearing in the introduction",
    hasEndMarker: !0,
    children: void 0
  },
  ie: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction ending marker",
    hasEndMarker: !1,
    children: void 0
  },
  c: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Chapter number",
    hasEndMarker: !1,
    children: {
      DivisionMarks: ["ca", "cp", "cl", "cd"],
      Paragraphs: ["p", "m", "po", "pr", "cls", "pi", "pi1", "pi2", "pi3", "pc", "mi", "nb"],
      Poetry: ["q", "q1", "q2", "q3", "q4", "qc", "qr", "qa", "qd", "b"],
      TitlesHeadings: [
        "mte",
        "ms",
        "ms1",
        "ms2",
        "ms3",
        "s",
        "s1",
        "s2",
        "s3",
        "s4",
        "r",
        "sp",
        "d",
        "sd",
        "sd1",
        "sd2",
        "sd3",
        "sd4"
      ],
      Lists: ["lh", "li", "li1", "li2", "li3", "li4", "lf", "lim", "lim1", "lim2", "lim3", "lim4"],
      Footnotes: ["f", "fe"],
      SpecialText: ["lit"],
      Breaks: ["pb"]
    }
  },
  ca: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "Second (alternate) chapter number (for coding dual versification; useful for places where different traditions of chapter breaks need to be supported in the same translation)",
    hasEndMarker: !0,
    children: void 0
  },
  cp: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Published chapter number (chapter string that should appear in the published text)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"]
    }
  },
  cl: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Chapter label used for translations that add a word such as 'Chapter' before chapter numbers (e.g. Psalms). The subsequent text is the chapter label.",
    hasEndMarker: !1,
    children: void 0
  },
  cd: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Chapter Description (Publishing option D, e.g. in Russian Bibles)",
    hasEndMarker: !1,
    children: {
      DivisionMarks: ["vp"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  v: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "A verse number",
    hasEndMarker: !1,
    children: void 0
  },
  va: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "Second (alternate) verse number (for coding dual numeration in Psalms; see also NRSV Exo 22.1-4)",
    hasEndMarker: !0,
    children: void 0
  },
  vp: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "Published verse marker (verse string that should appear in the published text)",
    hasEndMarker: !0,
    children: void 0
  },
  p: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, with first line indent (basic)",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  m: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, with no first line indent (may occur after poetry) (basic)",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  po: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Letter opening",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pr: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Text refrain (paragraph text, right aligned)",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  cls: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Letter Closing",
    hasEndMarker: !1,
    children: {
      SpecialText: ["tl", "sig", "pn", "png", "addpn", "add"]
    }
  },
  pmo: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text opening",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pm: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text paragraph",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pmc: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text closing",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pmr: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text refrain (e.g. Then all the people shall say, 'Amen!')",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 1 indent (if single level), with first line indent; often used for discourse (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi1: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 1 indent (if multiple levels), with first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi2: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 2 indent, with first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi3: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 3 indent, with first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pc: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, centered (for Inscription)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  mi: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, indented, with no first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  nb: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, with no break from previous paragraph text (at chapter boundary) (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 1 indent (if single level)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q1: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 1 indent (if multiple levels) (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q2: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 2 indent (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q3: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 3 indent",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q4: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 4 indent",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qc: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, centered",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qr: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, Right Aligned",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qs: {
    category: z.Poetry,
    type: U.Character,
    description: "Poetry text, Selah",
    hasEndMarker: !0,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  qa: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, Acrostic marker/heading",
    hasEndMarker: !1,
    children: void 0
  },
  qac: {
    category: z.Poetry,
    type: U.Character,
    description: "Poetry text, Acrostic markup of the first character of a line of acrostic poetry",
    hasEndMarker: !0,
    children: void 0
  },
  qm: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 1 indent (if single level)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qm1: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 1 indent (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qm2: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 2 indent",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qm3: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 3 indent",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qd: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "A Hebrew musical performance annotation, similar in content to Hebrew descriptive title.",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  b: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text stanza break (e.g. stanza break) (basic)",
    hasEndMarker: !1,
    children: void 0
  },
  mt: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book (if single level)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book (if multiple levels) (basic)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A secondary title usually occurring before the main title (basic)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A secondary title occurring after the main title",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt4: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A small secondary title sometimes occurring within parentheses",
    hasEndMarker: !1,
    children: void 0
  },
  mte: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book repeated at the end of the book, level 1 (if single level)",
    hasEndMarker: !1,
    children: void 0
  },
  mte1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book repeated at the end of the book, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte2"]
    }
  },
  mte2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A secondary title occurring before or after the 'ending' main title",
    hasEndMarker: !1,
    children: void 0
  },
  ms: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ms1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ms2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 2",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ms3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 3",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe"]
    }
  },
  mr: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division references range heading (basic)",
    hasEndMarker: !1,
    children: void 0
  },
  s: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 2 (e.g. Proverbs 22-24)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 3 (e.g. Genesis 'The First Day')",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s4: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 4",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  sr: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section division references range heading",
    hasEndMarker: !1,
    children: void 0
  },
  r: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Parallel reference(s) (basic)",
    hasEndMarker: !1,
    children: void 0
  },
  sp: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A heading, to identify the speaker (e.g. Job)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  d: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A Hebrew text heading, to provide description (e.g. Psalms)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  sd: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 1 (if single level)",
    hasEndMarker: !1,
    children: void 0
  },
  sd1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: void 0
  },
  sd2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 2",
    hasEndMarker: !1,
    children: void 0
  },
  sd3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 3",
    hasEndMarker: !1,
    children: void 0
  },
  sd4: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 4",
    hasEndMarker: !1,
    children: void 0
  },
  lh: {
    category: z.Lists,
    type: U.Paragraph,
    description: "List header (introductory remark)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li1: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li2: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 2",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li3: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 3",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li4: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 4",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lf: {
    category: z.Lists,
    type: U.Paragraph,
    description: "List footer (concluding remark)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim1: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim2: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 2",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim3: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list item, level 3",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim4: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 4",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  litl: {
    category: z.Lists,
    type: U.Character,
    description: "List entry total text",
    hasEndMarker: !0,
    children: void 0
  },
  lik: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry key text",
    hasEndMarker: !0,
    children: void 0
  },
  liv: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 1 content (if single value)",
    hasEndMarker: !0,
    children: void 0
  },
  liv1: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 1 content (if multiple values)",
    hasEndMarker: !0,
    children: void 0
  },
  liv2: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 2 content",
    hasEndMarker: !0,
    children: void 0
  },
  liv3: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 3 content",
    hasEndMarker: !0,
    children: void 0
  },
  liv4: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 4 content",
    hasEndMarker: !0,
    children: void 0
  },
  liv5: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 5 content",
    hasEndMarker: !0,
    children: void 0
  },
  f: {
    category: z.Footnotes,
    type: U.Note,
    description: "A Footnote text item (basic)",
    hasEndMarker: !0,
    children: {
      Footnotes: ["fr", "ft", "fk", "fq", "fqa", "fl", "fw", "fp", "fv", "fdc"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  fe: {
    category: z.Footnotes,
    type: U.Note,
    description: "An Endnote text item",
    hasEndMarker: !0,
    children: {
      Footnotes: ["fr", "ft", "fk", "fq", "fqa", "fl", "fw", "fp", "fv", "fdc"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  fr: {
    category: z.Footnotes,
    type: U.Character,
    description: "The origin reference for the footnote (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  ft: {
    category: z.Footnotes,
    type: U.Character,
    description: "Footnote text, Protocanon (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  fk: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote keyword (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  fq: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote scripture quote or alternate rendering (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  fqa: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote alternate rendering for a portion of scripture text",
    hasEndMarker: !0,
    children: void 0
  },
  fl: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote label text item, for marking or 'labelling' the type or alternate translation being provided in the note.",
    hasEndMarker: !0,
    children: void 0
  },
  fw: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote witness list, for distinguishing a list of sigla representing witnesses in critical editions.",
    hasEndMarker: !0,
    children: void 0
  },
  fp: {
    category: z.Footnotes,
    type: U.Character,
    description: "A Footnote additional paragraph marker",
    hasEndMarker: !0,
    children: void 0
  },
  fv: {
    category: z.Footnotes,
    type: U.Character,
    description: "A verse number within the footnote text",
    hasEndMarker: !0,
    children: void 0
  },
  fdc: {
    category: z.Footnotes,
    type: U.Character,
    description: "Footnote text, applies to Deuterocanon only",
    hasEndMarker: !0,
    children: void 0
  },
  fm: {
    category: z.Footnotes,
    type: U.Character,
    description: "An additional footnote marker location for a previous footnote",
    hasEndMarker: !0,
    children: void 0
  },
  x: {
    category: z.CrossReferences,
    type: U.Note,
    description: "A list of cross references (basic)",
    hasEndMarker: !0,
    children: {
      CrossReferences: ["xo", "xop", "xt", "xta", "xk", "xq", "xot", "xnt", "xdc"],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  xo: {
    category: z.CrossReferences,
    type: U.Character,
    description: "The cross reference origin reference (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  xop: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Published cross reference origin reference (origin reference that should appear in the published text)",
    hasEndMarker: !0,
    children: void 0
  },
  xt: {
    category: z.CrossReferences,
    type: U.Character,
    description: "The cross reference target reference(s), protocanon only (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  xta: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross reference target references added text",
    hasEndMarker: !0,
    children: void 0
  },
  xk: {
    category: z.CrossReferences,
    type: U.Character,
    description: "A cross reference keyword",
    hasEndMarker: !0,
    children: void 0
  },
  xq: {
    category: z.CrossReferences,
    type: U.Character,
    description: "A cross-reference quotation from the scripture text",
    hasEndMarker: !0,
    children: void 0
  },
  xot: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross-reference target reference(s), Old Testament only",
    hasEndMarker: !0,
    children: void 0
  },
  xnt: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross-reference target reference(s), New Testament only",
    hasEndMarker: !0,
    children: void 0
  },
  xdc: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross-reference target reference(s), Deuterocanon only",
    hasEndMarker: !0,
    children: void 0
  },
  rq: {
    category: z.CrossReferences,
    type: U.Character,
    description: "A cross-reference indicating the source text for the preceding quotation.",
    hasEndMarker: !0,
    children: void 0
  },
  qt: {
    category: z.SpecialText,
    type: U.Character,
    description: "For Old Testament quoted text appearing in the New Testament (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  nd: {
    category: z.SpecialText,
    type: U.Character,
    description: "For name of deity (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  tl: {
    category: z.SpecialText,
    type: U.Character,
    description: "For transliterated words",
    hasEndMarker: !0,
    children: void 0
  },
  dc: {
    category: z.SpecialText,
    type: U.Character,
    description: "Deuterocanonical/LXX additions or insertions in the Protocanonical text",
    hasEndMarker: !0,
    children: void 0
  },
  bk: {
    category: z.SpecialText,
    type: U.Character,
    description: "For the quoted name of a book",
    hasEndMarker: !0,
    children: void 0
  },
  sig: {
    category: z.SpecialText,
    type: U.Character,
    description: "For the signature of the author of an Epistle",
    hasEndMarker: !0,
    children: void 0
  },
  pn: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a proper name",
    hasEndMarker: !0,
    children: void 0
  },
  png: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a geographic proper name",
    hasEndMarker: !0,
    children: void 0
  },
  addpn: {
    category: z.SpecialText,
    type: U.Character,
    description: "For chinese words to be dot underline & underline",
    hasEndMarker: !0,
    children: void 0
  },
  wj: {
    category: z.SpecialText,
    type: U.Character,
    description: "For marking the words of Jesus",
    hasEndMarker: !0,
    children: void 0
  },
  k: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a keyword",
    hasEndMarker: !0,
    children: void 0
  },
  sls: {
    category: z.SpecialText,
    type: U.Character,
    description: "To represent where the original text is in a secondary language or from an alternate text source",
    hasEndMarker: !0,
    children: void 0
  },
  ord: {
    category: z.SpecialText,
    type: U.Character,
    description: "For the text portion of an ordinal number",
    hasEndMarker: !0,
    children: void 0
  },
  add: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a translational addition to the text",
    hasEndMarker: !0,
    children: void 0
  },
  lit: {
    category: z.SpecialText,
    type: U.Paragraph,
    description: "For a comment or note inserted for liturgical use",
    hasEndMarker: !1,
    children: void 0
  },
  no: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use normal text",
    hasEndMarker: !0,
    children: void 0
  },
  it: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use italic text",
    hasEndMarker: !0,
    children: void 0
  },
  bd: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use bold text",
    hasEndMarker: !0,
    children: void 0
  },
  bdit: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use bold + italic text",
    hasEndMarker: !0,
    children: void 0
  },
  em: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use emphasized text style",
    hasEndMarker: !0,
    children: void 0
  },
  sc: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, for small capitalization text",
    hasEndMarker: !0,
    children: void 0
  },
  sup: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, for superscript text. Typically for use in critical edition footnotes.",
    hasEndMarker: !0,
    children: void 0
  },
  pb: {
    category: z.Breaks,
    type: U.Paragraph,
    description: "Page Break used for new reader portions and children's bibles where content is controlled by the page",
    hasEndMarker: !1,
    children: void 0
  }
}, ho = {
  DivisionMarks: { add: ["v", "c"], remove: [] },
  Paragraphs: { add: ["p"], remove: [] },
  Poetry: { add: ["q", "q1", "q2", "q3", "q4", "b"], remove: [] },
  TitlesHeadings: {
    add: [
      "mte",
      "ms",
      "ms1",
      "ms2",
      "ms3",
      "s",
      "s1",
      "s2",
      "s3",
      "s4",
      "r",
      "sp",
      "d",
      "sd",
      "sd1",
      "sd2",
      "sd3",
      "sd4"
    ],
    remove: []
  }
}, FO = {
  p: { children: ho },
  q: { children: ho },
  q1: { children: ho },
  q2: { children: ho },
  q3: { children: ho },
  q4: { children: ho },
  b: { children: ho },
  qm: {
    children: {
      Paragraphs: { add: ["p"], remove: [] }
    }
  },
  c: {
    type: U.Paragraph,
    children: null
  },
  v: {
    children: null
  }
};
function Nb(t) {
  const e = $O[t], n = FO[t];
  if (!e)
    return;
  if (!n)
    return e;
  let r = e.children ? { ...e.children } : void 0;
  if (n.children === null && (r = void 0), n.children) {
    r = r || {};
    for (const [i, o] of Object.entries(n.children)) {
      const s = i;
      if (o === null)
        Reflect.deleteProperty(r, s);
      else {
        let a = r[s] || [];
        o.remove && (a = a.filter((l) => !o.remove.includes(l))), o.add && (a = [.../* @__PURE__ */ new Set([...a, ...o.add])]), a.length > 0 ? r[s] = a : Reflect.deleteProperty(r, s);
      }
    }
    Object.keys(r).length === 0 && (r = void 0);
  }
  return {
    ...e,
    ...n,
    children: r
  };
}
function Sb(t, e, n) {
  const r = {
    type: Ts,
    version: As,
    content: t
  }, i = e.serializeEditorState(r, n);
  return sg(i.root.children[0]) ? i.root.children[0].children[0] : i.root.children[0];
}
function Ch(t, e) {
  if (!t || !ie(t))
    return [void 0, void 0];
  const n = t.getTextContent();
  if (e >= 0 && e < n.length)
    return [t, e];
  let r = t.getNextSibling();
  if (!r) {
    const o = t.getParent();
    on(o) && (r = o.getNextSibling());
  }
  if (!r || !on(r) && !ie(r))
    return [void 0, void 0];
  const i = e - n.length;
  return r && ie(r) ? Ch(r, i) : Ch(r.getFirstChild() ?? void 0, i);
}
function Tb(t) {
  const e = HC(t.jsonPath);
  let n = Ve();
  for (const r of e) {
    if (!n || !X(n))
      return [void 0, void 0];
    n = n.getChildAtIndex(r) ?? void 0;
  }
  return Ch(n, t.offset);
}
function Ab(t) {
  return X(t) ? "element" : "text";
}
function wg(t) {
  const { start: e } = t;
  let { end: n } = t;
  n === void 0 && (n = e);
  const [r, i] = Tb(e), [o, s] = Tb(n);
  if (!r || !o || i === void 0 || s === void 0)
    return;
  const a = Nl();
  return a.anchor = On(r.getKey(), i, Ab(r)), a.focus = On(o.getKey(), s, Ab(o)), a;
}
function Db(t, e) {
  const n = [];
  let r = t;
  for (; r != null && r.getParent(); ) {
    const i = r.getParent();
    if (i) {
      const o = i == null ? void 0 : i.getChildren().indexOf(r);
      o >= 0 && n.unshift(o);
    }
    r = i;
  }
  return { jsonPath: WC(n), offset: e };
}
function Ox() {
  const t = oe();
  if (!t || !Z(t))
    return;
  const e = t.isBackward() ? t.focus.getNode() : t.anchor.getNode(), n = t.isBackward() ? t.focus.offset : t.anchor.offset, r = Db(e, n);
  if (t.isCollapsed())
    return { start: r };
  const i = t.isBackward() ? t.anchor.getNode() : t.focus.getNode(), o = t.isBackward() ? t.anchor.offset : t.focus.offset, s = Db(i, o);
  return { start: r, end: s };
}
const Mx = "v", Ix = 1;
class xn extends Zi {
  constructor(e = "", n = !1, r, i, o, s, a) {
    super(a), me(this, "__marker"), me(this, "__number"), me(this, "__showMarker"), me(this, "__sid"), me(this, "__altnumber"), me(this, "__pubnumber"), me(this, "__unknownAttributes"), this.__marker = Mx, this.__number = e, this.__showMarker = n, this.__sid = r, this.__altnumber = i, this.__pubnumber = o, this.__unknownAttributes = s;
  }
  static getType() {
    return "immutable-verse";
  }
  static clone(e) {
    const { __number: n, __showMarker: r, __sid: i, __altnumber: o, __pubnumber: s, __unknownAttributes: a, __key: l } = e;
    return new xn(n, r, i, o, s, a, l);
  }
  static importDOM() {
    return {
      span: (e) => qO(e) ? {
        conversion: BO,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return mg().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setShowMarker(e.showMarker).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setShowMarker(e = !1) {
    if (this.__showMarker === e)
      return this;
    const n = this.getWritable();
    return n.__showMarker = e, n;
  }
  getShowMarker() {
    return this.getLatest().__showMarker;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(wh, `usfm_${this.__marker}`), this.__showMarker && e.classList.add("marker"), e.setAttribute("data-number", this.__number), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(wh, `usfm_${this.getMarker()}`), n.setAttribute("data-number", this.getNumber())), { element: n };
  }
  decorate() {
    return p("span", { children: this.getShowMarker() ? Ll(this.getMarker(), this.getNumber()) : (
      // ZWSP added so double click word selection works without including this number.
      gh + this.getNumber() + gh
    ) });
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      showMarker: this.getShowMarker(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: Ix
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function BO(t) {
  const e = t.getAttribute("data-number") ?? "0";
  return { node: mg(e) };
}
function mg(t, e, n, r, i, o) {
  return at(new xn(t, e, n, r, i, o));
}
function qO(t) {
  return ((t == null ? void 0 : t.getAttribute("data-marker")) ?? void 0) === Mx;
}
function wa(t) {
  return t instanceof xn;
}
function jO(t) {
  return (t == null ? void 0 : t.type) === xn.getType();
}
function ir(t) {
  return cg(t) || wa(t);
}
function UO(t) {
  return uO(t) || jO(t);
}
function zO(t, e, n, r, i, o, s) {
  if (!Kt.isValidMarker(t))
    throw new Error(`$insertNote: Invalid note marker '${t}'`);
  const a = n ? wg(n) : oe();
  if (!Z(a))
    return;
  const l = VO(a, t, r, s);
  if (l === void 0)
    return;
  const c = Px(t, e, l, i, o);
  return Rx(c, a, i), c;
}
function Rx(t, e, n) {
  const r = (n == null ? void 0 : n.noteMode) === "collapsed";
  if (t.setIsCollapsed(r), e.isCollapsed() || yO(e), e.insertNodes([t]), !r) {
    const i = t.getChildren().reverse().find(Ct);
    i == null || i.selectEnd();
  }
}
function VO(t, e, n, r) {
  const i = [], { chapterNum: o, verseNum: s } = n ?? {};
  switch (e) {
    case "f":
    case "fe":
    case "ef":
    case "efe":
      if (o !== void 0 && s !== void 0 && i.push(jr("fr").append(Ie(`${o}:${s}`))), !t.isCollapsed()) {
        const a = t.getTextContent().trim();
        if (a.length > 0) {
          const l = jr("fq");
          l.append(Ie(a)), i.push(l);
        }
      }
      i.push(jr("ft").append(Ie("-")));
      break;
    case "x":
    case "ex":
      o !== void 0 && s !== void 0 && i.push(jr("xo").append(Ie(`${o}:${s}`))), i.push(jr("xt").append(Ie("-")));
      break;
    default:
      r == null || r.warn(`$createNoteChildren: Unsupported note marker '${e}'`);
      return;
  }
  return i;
}
function Px(t, e, n, r, i, o) {
  const s = (r == null ? void 0 : r.noteMode) !== "expanded", a = ag(t, e, s);
  o && pi(a, Ks, () => o);
  let l, c;
  (r == null ? void 0 : r.markerMode) === "editable" ? (l = xh(t), c = xh(t, "closing")) : (r == null ? void 0 : r.markerMode) === "visible" && (l = du("marker", no(t) + st), c = du("marker", fl(t) + st));
  let u;
  if (l && a.append(l), (r == null ? void 0 : r.markerMode) === "editable")
    u = Ie(fg(a.__caller)), a.append(u, ...n);
  else {
    const f = () => Ie(st), d = hg(n);
    let h = () => {
    };
    i != null && i.noteCallerOnClick && (h = i.noteCallerOnClick), u = _g(a.__caller, d, h);
    const g = n.flatMap(WO(f));
    a.append(u, f(), ...g);
  }
  return c && a.append(c), a;
}
function Ob(t) {
  var e;
  if (typeof t == "string") {
    const i = Oe(t);
    return ze(i) ? i : void 0;
  }
  const n = zu();
  if (n.length <= 0)
    return;
  const r = (e = n.filter((i) => ze(i.node))[t]) == null ? void 0 : e.node;
  if (ze(r))
    return r;
}
function HO(t, e) {
  const n = (e == null ? void 0 : e.noteMode) === "collapsed";
  if (t.setIsCollapsed(n), n) {
    const r = t.getPreviousSibling();
    if (wa(r) || !r) {
      const i = t.getParent();
      if (i) {
        const o = t.getIndexWithinParent();
        i.select(o, o);
      }
    } else
      r.selectEnd();
  } else {
    const r = t.getChildren().reverse().find(Ct);
    r == null || r.selectEnd();
  }
}
function WO(t) {
  return (e) => fu(e) ? [e] : [e, t()];
}
function KO(t) {
  return t.find((e) => fn(e));
}
function GO(t, e) {
  return X(t) ? t.getChildren().find((n) => ir(n) && pg(e, n.getNumber())) : void 0;
}
function JO(t, e) {
  return e === 0 ? KO(t) : t.map((n) => GO(n, e)).filter((n) => n)[0];
}
function Mb(t) {
  return !t || !X(t) ? void 0 : t.getChildren().findLast((e) => ir(e));
}
function Lx(t) {
  var e, n;
  if (!t || rr(t))
    return;
  if (ir(t))
    return t;
  let r = on(t.getParent()) ? (e = t.getParent()) == null ? void 0 : e.getPreviousSibling() : t.getPreviousSibling();
  for (; r && !ir(r) && !rr(r); )
    r = r.getPreviousSibling();
  if (r && ir(r))
    return r;
  let i = (n = t.getTopLevelElement()) == null ? void 0 : n.getPreviousSibling(), o = Mb(i), s = o;
  for (; i && !o && !rr(i); )
    o = s, i = i.getPreviousSibling(), s = Mb(i);
  if (!(!o && rr(i)))
    return o;
}
function XO(t) {
  return pO(t) || wa(t);
}
function bg(t) {
  if (ie(t)) {
    const e = t.getTextContent();
    !e.endsWith(" ") && !e.endsWith(st) && t.setTextContent(`${e} `);
  }
}
function $x(t) {
  if (ie(t)) {
    const e = t.getTextContent();
    e.startsWith(" ") && t.setTextContent(e.trimStart());
  }
}
function yg(t, e) {
  return t.getEditorState().read(() => !Oe(e));
}
const pl = `
`;
function YO(t, e) {
  const n = Oe(t);
  if (!Qr(n))
    return;
  const r = Fx(n);
  return r === void 0 ? void 0 : [{ retain: r }, ...e, { delete: 1 }];
}
function Qr(t) {
  return rr(t) || ir(t) || td(t) || ze(t) || Dx(t);
}
function kr(t) {
  return pr(t) || Gr(t);
}
function kh(t, e) {
  return t ? e ? !mO(e.node, t.getKey()) : !0 : !1;
}
function Fx(t) {
  if (!t)
    return;
  const e = zu();
  let n = 0;
  const r = [];
  let i, o;
  const s = t.getKey();
  let a;
  for (const l of e) {
    const c = l.node;
    for (let u = r.length - 1; u >= 0; u--)
      if (kh(r[u], l)) {
        const f = r[u];
        if (r.splice(u, 1), n += 1, a && f.getKey() === a.getKey())
          return n - 1;
      }
    if (i && kh(i, l) && (i = void 0, o = void 0), i) {
      if (c.getKey() === s)
        return o;
      continue;
    }
    if (c.getKey() === s) {
      if (ie(c) || Qr(c))
        return n;
      kr(c) && (a = c);
    }
    if (kr(c) && (r.includes(c) || r.push(c)), ze(c)) {
      i = c, o = n, n += 1;
      continue;
    }
    n += QO(c);
  }
  if (a)
    return n;
}
function QO(t) {
  return ie(t) ? t.getTextContentSize() : Qr(t) ? 1 : 0;
}
function Eh(t, e) {
  const n = { insert: t.__text }, r = Ms(t, Ks);
  if (r && (n.attributes = { segment: r }), e && e.length > 0) {
    let i = e.map((o) => {
      const s = { style: o.__marker }, a = Ms(o, Wi);
      return a && (s.cid = a), s;
    });
    i.length === 1 && (i = i[0]), n.attributes = {
      ...n.attributes,
      char: i
    };
  }
  return n;
}
function Ib(t) {
  const e = new Fa();
  return t.isEmpty() || t.read(() => {
    const n = Ve();
    if (!n || n.isEmpty())
      return;
    const r = n.getChildren();
    if (r.length === 1 && _i(r[0]) && (!r[0].getChildren() || r[0].getChildrenSize() === 0))
      return;
    const i = ZO();
    for (const o of i)
      e.push(o);
  }), e;
}
function vg(t, e) {
  const n = [], r = zu(t), i = [], o = [], s = { children: [], contentsOps: [] };
  for (let a = 0; a < r.length; a++) {
    const l = r[a].node;
    n.push(...Rb(l, a, r, i, o, s));
  }
  for (const a of i)
    n.push(...Rb(a, r.length, r, i, o, s));
  return n;
}
function ZO() {
  return vg();
}
function Rb(t, e, n, r, i, o) {
  if (!t)
    return [];
  const s = [];
  return eM(t, s, r), tM(t, s, i, o), nM(t, e, n, i), rr(t) && s.push(oM(t)), ir(t) && s.push(aM(t)), td(t) && s.push(lM(t)), Dx(t) && s.push(cM(t)), rM(t, s, o), s;
}
function eM(t, e, n) {
  if (!t.isInline()) {
    const r = n.pop();
    Gr(r) ? e.push(iM(r)) : fn(r) ? e.push(sM(r)) : _i(r) && e.push({ insert: pl });
  }
  kr(t) && (n.includes(t) || n.push(t));
}
function tM(t, e, n, r) {
  var i;
  if (!ie(t))
    return;
  const o = t.getParent();
  if (ze(o) && o.getFirstChild() === t)
    return;
  const s = Eh(t, n);
  if (r.children.includes(t)) {
    const a = t.getTextContent();
    if (!a || a === st || a.startsWith(Zp))
      return;
    (i = r.contentsOps) == null || i.push(s);
  } else
    e.push(s);
}
function nM(t, e, n, r) {
  Ct(t) && !r.includes(t) && r.push(t);
  const i = n[e + 1];
  for (const o of r.toReversed())
    kh(o, i) && r.pop();
}
function rM(t, e, n) {
  var r;
  if (!ze(t))
    return;
  zu(t).forEach((o) => n.children.push(o.node));
  const i = uM(t);
  n.contentsOps = (r = i.insert.note.contents) == null ? void 0 : r.ops, e.push(i);
}
function iM(t) {
  const e = { style: ed, code: t.__code };
  return { insert: pl, attributes: { book: e } };
}
function oM(t) {
  const e = { style: rg, number: t.__number };
  return t.__sid && (e.sid = t.__sid), t.__altnumber && (e.altnumber = t.__altnumber), t.__pubnumber && (e.pubnumber = t.__pubnumber), { insert: { chapter: e } };
}
function sM(t) {
  const e = { style: t.__marker };
  return { insert: pl, attributes: { para: e } };
}
function aM(t) {
  const e = { style: lg, number: t.__number };
  return t.__sid && (e.sid = t.__sid), t.__altnumber && (e.altnumber = t.__altnumber), t.__pubnumber && (e.pubnumber = t.__pubnumber), { insert: { verse: e } };
}
function lM(t) {
  const e = { style: t.__marker };
  return t.__sid && (e.sid = t.__sid), t.__eid && (e.eid = t.__eid), { insert: { milestone: e } };
}
function cM(t) {
  return { insert: { unmatched: { marker: t.__marker } } };
}
function uM(t) {
  const e = {
    style: t.__marker,
    caller: t.__caller
  };
  return t.__category && (e.category = t.__category), t.getChildrenSize() > 1 && (e.contents = { ops: [] }), { insert: { note: e } };
}
const Bx = 1;
class br extends Zi {
  constructor(e = Uo, n = "", r, i) {
    super(i), me(this, "__caller"), me(this, "__previewText"), me(this, "__onClick"), this.__caller = e, this.__previewText = n, this.__onClick = r ?? (() => {
    });
  }
  static getType() {
    return "immutable-note-caller";
  }
  static clone(e) {
    const { __caller: n, __previewText: r, __onClick: i, __key: o } = e;
    return new br(n, r, i, o);
  }
  static importDOM() {
    return {
      span: (e) => fM(e) ? {
        conversion: dM,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return _g().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setCaller(e.caller).setPreviewText(e.previewText).setOnClick(e.onClick);
  }
  setCaller(e) {
    if (this.__caller === e)
      return this;
    const n = this.getWritable();
    return n.__caller = e, n;
  }
  getCaller() {
    return this.getLatest().__caller;
  }
  setPreviewText(e) {
    if (this.__previewText === e)
      return this;
    const n = this.getWritable();
    return n.__previewText = e, n;
  }
  getPreviewText() {
    return this.getLatest().__previewText;
  }
  setOnClick(e) {
    if (this.__onClick === e)
      return this;
    const n = this.getWritable();
    return n.__onClick = e, n;
  }
  getOnClick() {
    return this.getLatest().__onClick;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.classList.add(this.__type), e.setAttribute("data-caller", this.__caller), e.setAttribute("data-preview-text", this.__previewText), e;
  }
  updateDOM(e) {
    return e.__caller !== this.__caller;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.classList.add(this.getType()), n.setAttribute("data-caller", this.getCaller()), n.setAttribute("data-preview-text", this.getPreviewText())), { element: n };
  }
  decorate(e) {
    const n = this.getParent();
    if (!n)
      return null;
    const r = n.getKey(), i = n.getIsCollapsed(), o = this.__key, s = (l) => {
      var c;
      return (c = this.__onClick) == null ? void 0 : c.call(this, l, r, i, () => hM(e, r), (u) => pM(e, r, o, u), () => gM(e, r));
    }, a = `${this.__caller}_${this.__previewText}}`.replace(/\s+/g, "").substring(0, 25);
    return p("button", { onClick: s, title: this.__previewText, "data-caller-id": a, children: this.__caller === Uo && i ? (
      // Caller is generated by CSS
      ""
    ) : this.__caller });
  }
  exportJSON() {
    return {
      type: this.getType(),
      caller: this.getCaller(),
      previewText: this.getPreviewText(),
      onClick: this.getOnClick(),
      version: Bx
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function dM(t) {
  const e = t.getAttribute("data-caller") ?? "", n = t.getAttribute("data-preview-text") ?? "";
  return { node: _g(e, n) };
}
function _g(t, e, n) {
  return at(new br(t, e, n));
}
function fM(t) {
  return t ? t.classList.contains(br.getType()) : !1;
}
function oo(t) {
  return t instanceof br;
}
function hM(t, e) {
  return t.read(() => {
    const n = Oe(e);
    if (!ze(n))
      throw new Error(`getNoteCaller: Note node not found: ${e}`);
    return n.getCaller();
  });
}
function pM(t, e, n, r) {
  t.update(() => {
    const i = Oe(e);
    if (!ze(i))
      throw new Error(`setNoteCaller: Note node not found: ${e}`);
    i.setCaller(r);
    const o = Oe(n);
    if (!oo(o))
      throw new Error(`setNoteCaller: Caller node not found: ${n}`);
    o.setCaller(r);
  });
}
function gM(t, e) {
  return t.read(() => {
    const n = Oe(e);
    if (!ze(n))
      throw new Error(`getNoteOps: Note node not found: ${e}`);
    return vg(n);
  });
}
const wM = [
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z"
], mM = [
  br,
  xn,
  ...LO
], bM = Yn((t, e) => {
  const { coords: n, children: r, style: i, ...o } = t, s = n !== void 0;
  return p("div", { ref: e, className: "floating-box", "aria-hidden": !s, style: {
    ...i,
    position: "absolute",
    zIndex: 1e3,
    top: n == null ? void 0 : n.y,
    left: n == null ? void 0 : n.x,
    visibility: s ? "visible" : "hidden",
    opacity: s ? 1 : 0
  }, ...o, children: r });
});
function yM() {
  const [t, e] = fe(void 0), [n, r] = fe(), i = xe(null), o = be((a, l) => {
    i.current && i.current();
    const c = a.commonAncestorContainer.nodeType === a.commonAncestorContainer.TEXT_NODE ? a : a.commonAncestorContainer;
    i.current = ET(c, l, () => {
      TT(c, l, {
        placement: "bottom-start",
        middleware: [NT(), ST()]
      }).then((u) => {
        r(u.placement), e((f) => (f == null ? void 0 : f.x) === u.x && (f == null ? void 0 : f.y) === u.y ? f : { x: u.x, y: u.y });
      }).catch(() => {
        e(void 0);
      });
    });
  }, []), s = be(() => {
    i.current && (e(void 0), i.current(), i.current = null);
  }, []);
  return ue(() => s, [s]), { coords: t, placement: n, updatePosition: o, cleanup: s };
}
function vM({ isOpen: t, floatingBoxRef: e }) {
  const { coords: n, updatePosition: r, cleanup: i, placement: o } = yM();
  return ue(() => {
    var s;
    if (!t || !e.current) {
      i();
      return;
    }
    const a = (s = window.getSelection()) == null ? void 0 : s.getRangeAt(0);
    if (!a) {
      i();
      return;
    }
    return r(a, e.current), i;
  }, [i, t, e, r]), { coords: n, placement: o };
}
const _M = document.body, xM = q2(bM);
function CM({ isOpen: t = !1, children: e }) {
  const n = xe(null), { coords: r, placement: i } = vM({ isOpen: t, floatingBoxRef: n }), o = Ne(() => r ? typeof e == "function" ? e : () => e : () => null, [e, r]);
  return fi(p(xM, { ref: n, coords: r, style: r ? void 0 : { display: "none" }, children: o({ isOpen: t, placement: i }) }), _M);
}
const qx = gl(void 0);
function xg() {
  const t = wl(qx);
  if (!t)
    throw new Error("useMenuContext must be used within a MenuProvider");
  return t;
}
function kM(t, e) {
  const [n, r] = fe(0), [i, o] = fe(-1), s = Ne(() => t ?? [], [t]), a = {
    menuItems: s,
    activeIndex: n,
    selectedIndex: i,
    onSelectOption: e ?? (() => {
    })
  }, l = be(() => {
    r((f) => {
      const d = s.length;
      return d ? (f - 1 + d) % d : 0;
    });
  }, [s.length]), c = be(() => {
    r((f) => {
      const d = s.length;
      return d ? (f + 1) % d : 0;
    });
  }, [s.length]), u = be(() => {
    const f = s.length;
    if (n >= 0 && n < f) {
      const d = s[n];
      e == null || e(d), o(n);
    }
  }, [n, s, e]);
  return {
    state: a,
    moveUp: l,
    moveDown: c,
    select: u,
    setActiveIndex: r,
    setSelectedIndex: o
  };
}
function EM({ children: t, menuItems: e, onSelectOption: n, ...r }) {
  const i = kM(e, n);
  return p(qx.Provider, { value: i, children: p("div", { ...r, children: t }) });
}
const jx = Yn(({ index: t, children: e, onMouseEnter: n, onClick: r, ...i }, o) => {
  const { state: { activeIndex: s }, setActiveIndex: a, setSelectedIndex: l, select: c } = xg(), u = be((d) => {
    c(), l(-1), r == null || r(d);
  }, [r, c, l]), f = be((d) => {
    a(t), n == null || n(d);
  }, [t, a, n]);
  return p("button", { ref: o, role: "menuitem", ...i, onClick: u, onMouseEnter: f, "aria-selected": t !== void 0 && s === t ? "true" : void 0, tabIndex: -1, children: e });
});
function NM({ children: t, autoIndex: e = !0, ...n }) {
  const r = xe(null), { state: { activeIndex: i, menuItems: o } } = xg(), s = Ne(() => o ? typeof t == "function" ? t : () => t : () => null, [t, o]), a = Ne(() => {
    const l = s(o);
    return e ? j2.map(l, (c, u) => z2(c) && c.type === jx && c.props.index === void 0 ? U2(c, { index: u }) : c) : l;
  }, [s, e, o]);
  return ue(() => {
    if (r.current) {
      const l = r.current, c = l.children[i];
      if (c) {
        const u = l.getBoundingClientRect(), f = c.getBoundingClientRect();
        f.bottom > u.bottom ? l.scrollTop += f.bottom - u.bottom : f.top < u.top && (l.scrollTop -= u.top - f.top);
      }
    }
  }, [i]), p("div", { ref: r, role: "menu", ...n, children: a });
}
const lf = {
  Root: EM,
  Options: NM,
  Option: jx
}, SM = (t, e, n) => Sc(t, n).toLowerCase().includes(e.toLowerCase()), Pb = (t) => Object.keys(t).find((e) => typeof t[e] == "string") || "", Sc = (t, e) => {
  const n = t[e];
  return typeof n == "string" ? n : String(n);
};
function TM(t) {
  const { query: e, items: n, filterBy: r, filter: i, sortBy: o, sortingOptions: s } = t, { caseSensitive: a = !1, priorityOrder: l = ["exact", "startsWith", "contains"] } = s || {}, c = a ? e : e.toLowerCase();
  let u, f;
  i ? (f = i, u = n.length > 0 ? Pb(n[0]) : "") : (u = r || (n.length > 0 ? Pb(n[0]) : ""), f = (g, w) => SM(g, w, u));
  const d = o || u, h = /* @__PURE__ */ new Map();
  return n.filter((g) => {
    try {
      return f(g, e);
    } catch (w) {
      return console.warn("Error filtering item:", g, w), !1;
    }
  }).sort((g, w) => {
    const v = (C) => (h.has(C) || h.set(C, Sc(C, d).toLowerCase()), h.get(C) ?? ""), _ = a ? Sc(g, d) : v(g), b = a ? Sc(w, d) : v(w);
    for (const C of l)
      switch (C) {
        case "exact":
          if (_ === c && b !== c)
            return -1;
          if (b === c && _ !== c)
            return 1;
          break;
        case "startsWith":
          if (_.startsWith(c) && !b.startsWith(c))
            return -1;
          if (b.startsWith(c) && !_.startsWith(c))
            return 1;
          break;
        case "contains": {
          const D = _.indexOf(c), R = b.indexOf(c);
          if (D !== -1 && R === -1)
            return -1;
          if (R !== -1 && D === -1)
            return 1;
          if (D !== -1 && R !== -1)
            return D - R;
          break;
        }
      }
    return _.localeCompare(b);
  });
}
function AM(t) {
  const { query: e, items: n, filterBy: r, filter: i, sortBy: o, sortingOptions: s } = t;
  return Ne(() => TM({
    query: e,
    items: n,
    filterBy: r,
    filter: i,
    sortBy: o,
    sortingOptions: s
  }), [e, n, r, i, o, s]);
}
function DM() {
  const { moveUp: t, moveDown: e, select: n } = xg();
  return Ne(() => ({
    moveUp: t,
    moveDown: e,
    select: n
  }), [t, e, n]);
}
const OM = () => {
  const t = DM(), [e] = Le();
  ue(() => {
    const n = (r) => {
      const i = {
        ArrowDown: () => t == null ? void 0 : t.moveDown(),
        ArrowUp: () => t == null ? void 0 : t.moveUp(),
        Enter: () => t == null ? void 0 : t.select(),
        Tab: () => t == null ? void 0 : t.select()
      }[r.key];
      return i ? (i(), r.preventDefault(), r.stopPropagation(), !0) : !1;
    };
    return e.registerCommand(ra, n, Pu);
  }, [e, t]);
};
function MM() {
  return OM(), null;
}
function IM(t) {
  const { options: e, onSelectOption: n, onClose: r, inverse: i, query: o, menuOpenKey: s } = t, [a] = Le(), l = o !== void 0, [c, u] = fe(""), f = l ? o ?? "" : c, d = AM({ query: f, items: e, filterBy: "name" }), h = (g) => {
    r == null || r(), n ? n(g) : g.action(a);
  };
  return ue(() => a.registerCommand(ra, (g) => {
    if (l)
      return !1;
    const w = {
      Escape: () => r == null ? void 0 : r(),
      Backspace: () => {
        f.length === 0 ? r == null || r() : u((v) => v.slice(0, -1));
      }
    }[g.key];
    return w ? (g.stopPropagation(), g.preventDefault(), w(), !0) : g.key.length === 1 ? (g.stopPropagation(), g.preventDefault(), g.key !== s && u((v) => v + g.key), !0) : !1;
  }, Pu), [a, l, f, s, r]), q(lf.Root, { className: `autocomplete-menu-container ${i ? "inverse" : ""}`, menuItems: d, onSelectOption: (g) => h(g), children: [!l && p("input", { value: f, type: "text", disabled: !0 }), p(MM, {}), p(lf.Options, { className: "autocomplete-menu-options", autoIndex: !1, children: (g) => g.map((w, v) => q(lf.Option, { index: v, children: [p("span", { className: "label", children: w.label ?? w.name }), p("span", { className: "description", children: w.description })] }, w.name)) })] });
}
function RM({ trigger: t, items: e }) {
  const [n] = Le(), [r, i] = fe(!1), o = be((s) => {
    s.key === "Escape" && r ? (i(!1), n.focus()) : s.key === t && !r && (s.preventDefault(), i(!0));
  }, [n, t, r]);
  return ue(() => n.registerRootListener((s) => {
    if (s)
      return s.addEventListener("keydown", o), () => {
        s.removeEventListener("keydown", o);
      };
  }), [n, o]), ue(() => n.registerUpdateListener(({ prevEditorState: s, editorState: a }) => {
    const l = s.read(() => {
      const c = oe();
      if (Z(c))
        return c;
    });
    a.read(() => {
      const c = oe();
      !Z(c) || l != null && l.is(c) || i(!1);
    });
  }), [n]), e && p(CM, { isOpen: r, children: ({ placement: s }) => p(IM, { options: e, onClose: () => i(!1), inverse: s === "top-start", menuOpenKey: t }) });
}
function PM({ scriptureReference: t, contextMarker: e, getMarkerAction: n }) {
  return { markersMenuItems: Ne(() => {
    if (!e || !t)
      return;
    const r = Nb(e);
    if (r != null && r.children)
      return Object.values(r.children).flatMap((i) => i.map((o) => {
        const s = Nb(o), { action: a } = n(o, s);
        return {
          name: o,
          label: o,
          description: (s == null ? void 0 : s.description) ?? "",
          action: (l) => {
            a({ editor: l, reference: t });
          }
        };
      }));
  }, [e, n, t]) };
}
function Tc(t, e) {
  return `${t}:${e}`;
}
function LM(t, e) {
  ue(() => {
    if (!t.hasNodes([nn]))
      throw new Error("AnnotationPlugin: TypedMarkNode not registered on editor!");
    const n = /* @__PURE__ */ new Map();
    return Ht(fv(t, nn, (r) => hl(r.getTypedIDs()), (r, i) => {
      for (const [o, s] of Object.entries(r.getTypedIDs()))
        s.forEach((a) => {
          i.addID(o, a);
        });
    }), t.registerMutationListener(nn, (r) => {
      t.getEditorState().read(() => {
        for (const [i, o] of r) {
          const s = Oe(i);
          let a = {};
          o === "destroyed" ? a = n.get(i) ?? {} : on(s) && (a = s.getTypedIDs());
          for (const [l, c] of Object.entries(a))
            if (!nn.isReservedType(l))
              for (const u of c) {
                let f = e.get(Tc(l, u));
                a[l] = c, n.set(i, a), o === "destroyed" ? f !== void 0 && (f.delete(i), f.size === 0 && e.delete(Tc(l, u))) : (f === void 0 && (f = /* @__PURE__ */ new Set(), e.set(Tc(l, u), f)), f.has(i) || f.add(i));
              }
        }
      });
    }, { skipInitialization: !0 }));
  }, [t, e]);
}
const $M = Yn(function({ logger: t }, e) {
  const [n] = Le(), r = Ne(() => /* @__PURE__ */ new Map(), []);
  return LM(n, r), $h(e, () => ({
    addAnnotation(i, o, s) {
      if (nn.isReservedType(o))
        throw new Error(`addAnnotation: Can't directly add this reserved annotation type '${o}'. Use the appropriate plugin instead.`);
      n.update(() => {
        const a = wg(i);
        if (a === void 0) {
          t == null || t.error("Failed to find start or end node of the annotation.");
          return;
        }
        Sx(a, o, s);
      }, { tag: bh });
    },
    removeAnnotation(i, o) {
      if (nn.isReservedType(i))
        throw new Error(`removeAnnotation: Can't directly remove this reserved annotation type '${i}'. Use the appropriate plugin instead.`);
      const s = r.get(Tc(i, o));
      s !== void 0 && setTimeout(() => {
        n.update(() => {
          for (const a of s) {
            const l = Oe(a);
            on(l) && (l.deleteID(i, o), l.hasNoIDsForEveryType() && Nx(l));
          }
        }, { tag: bh });
      });
    }
  })), null;
});
function FM({ ignoreHistoryMergeTagChange: t = !0, ignoreSelectionChange: e = !1, onChange: n }) {
  const [r] = Le();
  return Cn(() => {
    if (n)
      return r.registerUpdateListener((i) => {
        const { editorState: o, dirtyElements: s, dirtyLeaves: a, prevEditorState: l, tags: c } = i;
        if (e && s.size === 0 && a.size === 0 || t && c.has(Co) || l.isEmpty())
          return;
        const u = BM(r, i);
        u.length !== 0 && n(o, r, c, u);
      });
  }, [r, t, e, n]), null;
}
function BM(t, { dirtyLeaves: e, prevEditorState: n }) {
  let r = new Fa();
  return t.getEditorState().read(() => {
    const i = e.values().next().value ?? "";
    if (e.size === 1 && ie(Oe(i))) {
      const o = Oe(i), s = Fx(o);
      if (ie(o) && s !== void 0) {
        const a = n.read(() => {
          const u = Oe(i);
          return new Fa([ie(u) ? Eh(u) : { insert: "" }]);
        }), l = new Fa([Eh(o)]), c = new Fa(s > 0 ? [{ retain: s }] : []);
        r = r.concat(c).concat(a.diff(l));
      }
    } else {
      const o = Ib(n), s = Ib(t.getEditorState());
      r = o.diff(s);
    }
  }), r.ops;
}
const qM = ["style"], jM = ["style", "code"], pu = ["style", "cid"], UM = [
  "style",
  "number",
  "sid",
  "altnumber",
  "pubnumber"
], zM = [
  "style",
  "number",
  "sid",
  "altnumber",
  "pubnumber"
], VM = ["style", "sid", "eid"], HM = ["style", "caller", "category", "contents"];
function WM(t, e, n, r) {
  let i = 0;
  t.forEach((o) => {
    if ("retain" in o)
      i += KM(o, i, r);
    else if ("delete" in o) {
      if (typeof o.delete != "number" || o.delete <= 0) {
        r == null || r.error(`Invalid delete operation: ${JSON.stringify(o)}`);
        return;
      }
      r == null || r.debug(`Delete: ${o.delete}`), JM(i, o.delete, r);
    } else "insert" in o ? typeof o.insert == "string" ? (r == null || r.debug(`Insert: '${o.insert}'`), i += XM(i, o.insert, o.attributes, r)) : typeof o.insert == "object" && o.insert !== null ? (r == null || r.debug(`Insert embed: ${JSON.stringify(o.insert)}`), QM(i, o, e, n, r) ? i += 1 : r == null || r.error(`Failed to process insert embed operation: ${JSON.stringify(o.insert)} at index ${i}. Document may be inconsistent.`)) : r == null || r.error(`Insert of unknown type: ${JSON.stringify(o.insert)}`) : r == null || r.error(`Unknown operation: ${JSON.stringify(o)}`);
  });
}
function KM(t, e, n) {
  return typeof t.retain != "number" || t.retain < 0 ? (n == null || n.error(`Invalid retain operation: ${JSON.stringify(t)}`), 0) : (n == null || n.debug(`Retain: ${t.retain}`), t.attributes && (n == null || n.debug(`Retain attributes: ${JSON.stringify(t.attributes)}`), GM(e, t.retain, t.attributes, n)), t.retain);
}
function GM(t, e, n, r) {
  r == null || r.debug(`Applying attributes for range [${t}, ${t + e - 1}] with attributes: ${JSON.stringify(n)}`);
  let i = e, o = 0, s = -1;
  const a = Ve();
  function l(c) {
    if (i <= 0)
      return !0;
    if (ie(c)) {
      const u = c.getTextContentSize();
      if (t < o + u && o < t + e) {
        const f = Math.max(0, t - o), d = u - f, h = Math.min(i, d);
        if (h > 0) {
          let g = c;
          const w = f > 0, v = h < u - f;
          if (w && v) {
            const [, _] = c.splitText(f);
            [g] = _.splitText(h);
          } else w ? [, g] = c.splitText(f) : v && ([g] = c.splitText(h));
          if (Vo(n)) {
            const _ = g.getParent();
            if (Ct(_)) {
              const b = n.char;
              let C;
              Array.isArray(b) ? s >= 0 && s <= b.length - 1 && (C = b[s]) : s === 0 && (C = b);
              const D = C ? vh(C, _) : !1;
              if (D && Array.isArray(b) && b.length > 1) {
                const R = Ie("");
                g.replace(R);
                const N = typeof n.segment == "string" ? n.segment : void 0, L = nd(b.slice(1), g, N);
                R.replace(L), tr(n, g);
              } else if (D)
                tr(n, g);
              else {
                const R = Ie("");
                g.replace(R);
                const N = Lb(g, n, r);
                N ? _.insertAfter(N) : R.replace(g);
              }
            } else {
              const b = Ie("");
              g.replace(b);
              const C = Lb(g, n, r);
              C ? b.replace(C) : b.replace(g);
            }
          } else
            tr(n, g);
          i -= h;
        }
      }
      o += u;
    } else if (Qr(c))
      t <= o && o < t + e && i > 0 && ($b(c, n), i -= 1), o += 1;
    else if (Ct(c)) {
      s += 1;
      let u = !1;
      if (t <= o && o < t + e && i > 0)
        if (Vo(n)) {
          const f = n.char;
          let d;
          if (Array.isArray(f) ? s >= 0 && s <= f.length - 1 && (d = f[s]) : s === 0 && (d = f), d) {
            c.setMarker(d.style), typeof d.cid == "string" && pi(c, Wi, () => d.cid);
            const h = Gt(d, pu);
            h && Object.keys(h).length > 0 ? c.setUnknownAttributes({
              ...c.getUnknownAttributes() ?? {},
              ...h
            }) : c.setUnknownAttributes(void 0);
          }
        } else (n.char === !1 || n.char === null || s5(n.char)) && (u = !0);
      if (i > 0) {
        const f = c.getChildren();
        for (const d of f) {
          if (i <= 0)
            break;
          if (l(d) && i <= 0)
            return u && Yw(c), !0;
        }
      }
      u && Yw(c), s -= 1;
    } else if (kr(c)) {
      const u = c.getChildren();
      for (const d of u) {
        if (i <= 0)
          break;
        if (l(d) && i <= 0)
          return !0;
      }
      const f = 1;
      if (t <= o && o < t + i && i > 0) {
        if (!_i(c))
          $b(c, n);
        else if (Cg(n)) {
          const d = zx(n.para);
          d && c.replace(d, !0);
        }
        i -= f;
      }
      o += f;
    } else if (X(c)) {
      const u = c.getChildren();
      for (const f of u) {
        if (i <= 0)
          break;
        if (l(f) && i <= 0)
          return !0;
      }
    }
    return i <= 0;
  }
  l(a), i > 0 && (r == null || r.warn(`$applyAttributes: Not all characters in the retain operation (length ${e}) could be processed. Remaining: ${i}. targetIndex: ${t}, final currentIndex: ${o}`));
}
function Lb(t, e, n) {
  var r;
  const i = typeof e.segment == "string" ? e.segment : void 0, o = nd(e.char, t, i);
  if (!Ct(o)) {
    n == null || n.error(`Failed to create CharNode for text transformation. Style: ${Array.isArray(e.char) ? e.char[0].style : (r = e.char) == null ? void 0 : r.style}. Falling back to standard text attributes.`), tr(e, t);
    return;
  }
  const s = {};
  Vx.forEach((c) => {
    t.hasFormat(c) && (s[c] = "true");
  });
  const a = {};
  Object.entries(e).forEach(([c, u]) => {
    c === "segment" || c === "char" || (typeof u == "string" ? a[c] = u : u === !0 ? a[c] = "true" : u === !1 && (a[c] = "false"));
  });
  const l = {
    ...o.getUnknownAttributes() ?? {},
    ...s,
    ...a
  };
  return Object.keys(l).length > 0 && o.setUnknownAttributes(l), tr(e, t), o;
}
function $b(t, e) {
  for (const n of Object.keys(e)) {
    const r = e[n];
    if (n === "char" && Ct(t) && Vo(e)) {
      const i = r;
      if (t.setMarker(i.style), typeof i.cid == "string") {
        const s = i.cid;
        pi(t, Wi, () => s);
      }
      const o = Gt(i, pu);
      o && Object.keys(o).length > 0 && t.setUnknownAttributes({
        ...t.getUnknownAttributes() ?? {},
        ...o
      });
      continue;
    }
    typeof r == "string" && (rr(t) || ir(t) || td(t) || ze(t) || Rl(t) ? t.setUnknownAttributes({
      ...t.getUnknownAttributes() ?? {},
      [n]: r
    }) : (Gr(t) || fn(t) || Ct(t)) && (n === "style" && !Gr(t) ? t.setMarker(r) : n === "code" && Gr(t) ? t.setCode(r) : t.setUnknownAttributes({
      ...t.getUnknownAttributes() ?? {},
      [n]: r
    })), n === "segment" && pi(t, Ks, () => r));
  }
}
function JM(t, e, n) {
  if (e <= 0)
    return;
  const r = Ve();
  let i = 0, o = e;
  function s(a) {
    if (o <= 0)
      return !0;
    if (ie(a)) {
      let l = a.getTextContentSize();
      if (t < i + l && i < t + o) {
        const c = Math.max(0, t - i), u = l - c, f = Math.min(o, u);
        f > 0 && (a.spliceText(c, f, ""), a.getTextContentSize() === 0 && a.remove(), n == null || n.debug(`Deleted ${f} length from TextNode (key: ${a.getKey()}) at nodeOffset ${c}. Original targetIndex: ${t}, current currentIndex: ${i}.`), o -= f, l -= f);
      }
      i += l;
    } else if (Qr(a))
      t <= i && i < t + o ? (a.remove(), n == null || n.debug(`Deleted embed node (key: ${a.getKey()}) at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`), o -= 1) : i += 1;
    else if (kr(a)) {
      const l = a.getChildren().slice(), c = a.getChildren();
      for (const u of c) {
        if (o <= 0)
          break;
        if (s(u) && o <= 0)
          return !0;
      }
      if (t <= i && i < t + o && kr(a)) {
        o -= 1;
        const u = a.getChildren().length;
        if (l.length > 0 && u === 0) {
          const f = a.getParent();
          ((f == null ? void 0 : f.getChildren()) ?? []).length > 1 ? (a.remove(), n == null || n.debug(`Removed entire ParaNode that had all its content deleted at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`)) : (a.replace(mr(), !0), n == null || n.debug(`Replaced last ParaNode with ImpliedParaNode at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`));
        } else if (o > 0) {
          const f = a.getNextSibling();
          if (f && pr(f)) {
            let d = i + 1;
            const h = f.getChildren();
            for (const w of h) {
              if (o <= 0)
                break;
              const v = i;
              if (i = d, s(w)) {
                i = v;
                break;
              }
              ie(w) ? d += w.getTextContentSize() : Qr(w) && (d += 1), i = v;
            }
            const g = f.getChildren();
            for (const w of g)
              w.remove(), a.append(w);
            f.remove(), n == null || n.debug(`Merged next paragraph into current one after deleting symbolic close at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`);
          } else
            a.replace(mr(), !0);
        } else fn(a) ? a.replace(mr(), !0) : a.remove();
      }
      i += 1;
    } else if (X(a)) {
      const l = a.getChildren();
      for (const c of l) {
        if (o <= 0)
          break;
        if (s(c) && o <= 0)
          return !0;
      }
    }
    return o <= 0;
  }
  s(r), o > 0 && (n == null || n.warn(`Delete operation could not remove all requested characters. Remaining to delete: ${o}. Original targetIndex: ${t}, OT length: ${e}. Final currentIndex: ${i}`));
}
function XM(t, e, n, r) {
  if (e === pl)
    return Fb(t, n, r);
  if (e.endsWith(pl) && !Cg(n)) {
    const i = e.slice(0, -1);
    let o = 0;
    if (i.length > 0) {
      if (Vo(n))
        throw new Error("Text + LF should not have char attributes");
      o += gu(t, i, n, r);
    }
    return o += Fb(t + o, n, r), o;
  } else return Vo(n) ? YM(t, e, n, r) : gu(t, e, n, r);
}
function YM(t, e, n, r) {
  r == null || r.debug(`Attempting to insert CharNode with text "${e}" and attributes ${JSON.stringify(n.char)} at index ${t}`);
  const i = Ie(e);
  tr(n, i);
  let o;
  {
    let u = function(h) {
      if (ie(h)) {
        const g = h.getTextContentSize();
        if (t >= d && t <= d + g) {
          const w = h.getParent();
          return Ct(w) && (o = w), !0;
        }
        d += g;
      } else if (Qr(h))
        d += 1;
      else if (Ct(h)) {
        const g = h.getChildren();
        for (const w of g)
          if (u(w))
            return !0;
      } else if (X(h)) {
        const g = h.getChildren();
        for (const w of g)
          if (u(w))
            return !0;
        kr(h) && (d += 1);
      }
      return !1;
    };
    const f = Ve();
    let d = 0;
    u(f);
  }
  let s = n.char;
  if (Array.isArray(s) && o) {
    const u = o.getMarker(), f = Ms(o, Wi), d = s[0];
    d && d.style === u && d.cid === f && (s = s.slice(1), s.length === 1 && (s = s[0]));
  }
  const a = typeof n.segment == "string" ? n.segment : void 0, l = nd(s, i, a);
  if (!Ct(l))
    return r == null || r.error(`CharNode style is missing for text "${e}". Attributes: ${JSON.stringify(n.char)}. Falling back to rich text insertion.`), gu(t, e, void 0, r);
  const c = {};
  for (const [u, f] of Object.entries(n))
    u !== "char" && u !== "segment" && typeof f == "string" && (c[u] = f);
  return Object.keys(c).length > 0 && l.setUnknownAttributes(c), Ux(t, l, r) ? e.length : (r == null || r.error(`Failed to insert CharNode with text "${e}" at index ${t}. Falling back to rich text.`), gu(t, e, void 0, r));
}
function gu(t, e, n, r) {
  if (e.length <= 0)
    return r == null || r.debug("Attempted to insert empty string. No action taken."), 0;
  const i = Ve();
  let o = 0, s = !1;
  function a(l) {
    if (s)
      return !0;
    if (ie(l)) {
      const c = l.getTextContentSize();
      if (t >= o && t <= o + c) {
        const u = t - o, f = Ie(e);
        if (tr(n, f), u === 0)
          l.insertBefore(f);
        else if (u === c) {
          const d = l.getParent();
          Ct(d) && !Vo(n) ? d.insertAfter(f) : l.insertAfter(f);
        } else {
          const [, d] = l.splitText(u);
          d.insertBefore(f);
        }
        return r == null || r.debug(`Inserted text "${e}" in/around TextNode (key: ${l.getKey()}) at nodeOffset ${u}. Original targetIndex: ${t}, currentIndex at node start: ${o}.`), s = !0, !0;
      }
      o += c;
    } else if (Qr(l))
      o += 1;
    else if (Ct(l)) {
      if (!s && t === o) {
        const u = Ie(e);
        tr(n, u);
        const f = l.getFirstChild();
        return f ? f.insertBefore(u) : l.append(u), r == null || r.debug(`Inserted text "${e}" at beginning of CharNode ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
      const c = l.getChildren();
      for (const u of c) {
        if (a(u))
          return !0;
        if (s)
          break;
      }
      if (!s && t === o) {
        const u = Ie(e);
        return tr(n, u), l.append(u), r == null || r.debug(`Appended text "${e}" to end of CharNode ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
    } else if (kr(l)) {
      if (!s && t === o) {
        const u = Ie(e);
        tr(n, u);
        const f = l.getFirstChild();
        return f ? f.insertBefore(u) : l.append(u), r == null || r.debug(`Inserted text "${e}" at beginning of container ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
      const c = l.getChildren();
      for (const u of c) {
        if (a(u))
          return !0;
        if (s)
          break;
      }
      if (!s && t === o) {
        const u = Ie(e);
        return tr(n, u), l.append(u), r == null || r.debug(`Appended text "${e}" to end of container ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
      o += 1;
    } else if (X(l)) {
      const c = l.getChildren();
      for (const u of c) {
        if (a(u))
          return !0;
        if (s)
          break;
      }
    }
    return s;
  }
  if (a(i), !s && t === o) {
    r == null || r.debug(`Insertion point matches end of document (targetIndex: ${t}, final currentIndex: ${o}). Appending text to new ParaNode.`);
    const l = Ie(e);
    tr(n, l);
    const c = mr().append(l);
    i.append(c), s = !0;
  }
  return s ? e.length : (r == null || r.warn(`$insertRichText: Could not find insertion point for text "${e}" at targetIndex ${t}. Final currentIndex: ${o}. Text not inserted.`), 0);
}
function Ux(t, e, n) {
  const r = Ve();
  let i = 0, o = !1;
  function s(a) {
    if (o)
      return !0;
    if (a === r && t === 0 && !r.getFirstChild())
      return e.isInline() ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting inline node ${e.getType()} into empty root, wrapped in ImpliedParaNode. targetIndex: ${t}`), r.append(mr().append(e))) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting block node ${e.getType()} directly into empty root. targetIndex: ${t}`), r.append(e)), o = !0, !0;
    if (!X(a))
      return !1;
    const l = a.getChildren();
    for (const c of l) {
      if (t === i && !o) {
        if (a === r && e.isInline())
          if (pr(c)) {
            n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting inline node ${e.getType()} into existing ${c.getType()} at beginning. targetIndex: ${t}`);
            const u = c.getFirstChild();
            u ? u.insertBefore(e) : c.append(e);
          } else
            n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting inline node ${e.getType()} into root before ${c.getType()}, wrapping in ImpliedParaNode. targetIndex: ${t}`), c.insertBefore(mr().append(e));
        else
          c.insertBefore(e), n == null || n.debug(`$insertNodeAtCharacterOffset: Inserted node ${e.getType()} (key: ${e.getKey()}) before child ${c.getType()} (key: ${c.getKey()}) in ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, currentIndex: ${i}`);
        return o = !0, !0;
      }
      if (ie(c)) {
        const u = c.getTextContentSize();
        if (!o && t > i && t < i + u) {
          const f = t - i, [d] = c.splitText(f);
          return d.insertAfter(e), n == null || n.debug(`$insertNodeAtCharacterOffset: Inserted node ${e.getType()} (key: ${e.getKey()}) by splitting TextNode (key: ${c.getKey()}) at offset ${f}. targetIndex: ${t}, currentIndex at node start: ${i}`), o = !0, !0;
        }
        i += u;
      } else if (Qr(c))
        i += 1;
      else if (Ct(c)) {
        if (s(c))
          return !0;
      } else if (kr(c)) {
        const u = c;
        if (s(u))
          return !0;
        const f = i;
        if (_i(u) && kr(e) && // Target is at the ImpliedPara's implicit newline
        t === f && !o)
          return n == null || n.debug(`$insertNodeAtCharacterOffset: Replacing ImpliedParaNode (key: ${u.getKey()}) with block node '${e.getType()}' (key: ${e.getKey()}) at OT index ${t}.`), c.replace(e, !0), i = f + 1, o = !0, !0;
        i += 1;
      } else if (X(c) && s(c))
        return !0;
      if (o)
        return !0;
    }
    return X(a) && !o && (t === i || a === r && t > i) ? a === r ? (e.isInline() ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending inline node ${e.getType()} to root. Wrapping in new ImpliedParaNode. targetIndex: ${t}, current document OT length: ${i}.`), r.append(mr().append(e))) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending block node ${e.getType()} to root. targetIndex: ${t}, current document OT length: ${i}.`), r.append(e)), o = !0, !0) : (
      // Appending to an existing container (ParaNode, ImpliedParaNode)
      // currentNode here is the container itself. currentIndex is at the point of currentNode's
      // closing marker. targetIndex === currentIndex means we are inserting at the conceptual end
      // of this container.
      pr(a) ? _i(a) && fn(e) && t === i ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Replacing ImpliedParaNode container (key: ${a.getKey()}) with ParaNode ${e.getType()} (key: ${e.getKey()}) via append logic. targetIndex: ${t}`), a.replace(e, !0), o = !0, !0) : e.isInline() || !pr(e) ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending node ${e.getType()} to existing container ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, container end OT index: ${i}.`), a.append(e), o = !0, !0) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting block node ${e.getType()} after container ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, container end OT index: ${i}.`), a.insertAfter(e), o = !0, !0) : (e.isInline() || !pr(e) ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending node ${e.getType()} to generic element ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, element end OT index: ${i}.`), a.append(e)) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting block node ${e.getType()} after generic element ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, element end OT index: ${i}.`), a.insertAfter(e)), o = !0, !0)
    ) : o;
  }
  return s(r), o || n == null || n.warn(`$insertNodeAtCharacterOffset: Could not find insertion point for node ${e.getType()} (key: ${e.getKey()}) at targetIndex ${t}. Final currentIndex: ${i}. Node not inserted.`), o;
}
function QM(t, e, n, r, i) {
  const o = e.insert;
  let s;
  return Aa("chapter", o) ? s = ZM(o.chapter, n) : Aa("verse", o) ? s = e5(o.verse, n) : Aa("ms", o) ? s = t5(o.ms) : Aa("unmatched", o) ? s = n5(o.unmatched) : Aa("note", o) && (s = r5(e, n, r)), s ? Ux(t, s, i) : (i == null || i.error(`$insertEmbedAtCurrentIndex: Cannot create LexicalNode for embed object: ${JSON.stringify(o)}`), !1);
}
function Fb(t, e, n) {
  let r;
  Cg(e) ? r = zx(e.para) : o5(e) && (r = i5(e.book)), r ?? (r = mr());
  const i = r, o = fn(i), s = _i(i);
  let a = 0, l = !1;
  function c(u) {
    if (l)
      return !0;
    if (ie(u)) {
      const f = u.getTextContentSize();
      if (t >= a && t <= a + f) {
        const d = u.getParent();
        if (fn(d) && (o || s)) {
          n == null || n.debug(`Splitting ParaNode (marker: ${d.getMarker()}) with LF attributes at targetIndex ${t}`);
          const h = t - a, [g] = h > 0 ? u.splitText(h) : [void 0];
          let w = g == null ? void 0 : g.getPreviousSibling();
          for (; w; ) {
            const v = w;
            w = w.getPreviousSibling();
            const _ = i.getFirstChild();
            _ ? _.insertBefore(v) : i.append(v);
          }
          return g && i.append(g), d.insertBefore(i), l = !0, !0;
        }
      }
      a += f;
    } else if (Qr(u))
      a += 1;
    else if (kr(u)) {
      const f = u.getChildren();
      for (const d of f) {
        if (c(d))
          return !0;
        if (l)
          break;
      }
      if (t === a) {
        if (_i(u) && i)
          return n == null || n.debug(`Replacing ImpliedParaNode (key: ${u.getKey()}) with ParaNode at targetIndex ${t}`), u.replace(i, !0), l = !0, !0;
        if (fn(u) && i) {
          const d = u;
          return n == null || n.debug(`Creating new block node with LF attributes after existing ParaNode (marker: ${d.getMarker()}) at targetIndex ${t}`), d.insertAfter(i), l = !0, !0;
        }
      }
      if (a += 1, t === a && fn(u) && i)
        return n == null || n.debug(`Creating new block node after existing ParaNode (marker: ${u.getMarker()}) at targetIndex ${t}`), u.insertAfter(i), l = !0, !0;
    } else if (X(u)) {
      const f = u.getChildren();
      for (const d of f) {
        if (c(d))
          return !0;
        if (l)
          break;
      }
    }
    return l;
  }
  return c(Ve()), l || n == null || n.warn(`Could not find location to handle newline with para attributes at targetIndex ${t}. Final currentIndex: ${a}.`), 1;
}
function ZM(t, e) {
  const { number: n, sid: r, altnumber: i, pubnumber: o } = t;
  if (!n)
    return;
  const s = Gt(t, UM);
  let a;
  if (e.markerMode === "editable")
    a = ax(n, r, i, o, s);
  else {
    const l = e.markerMode === "visible";
    a = og(n, l, r, i, o, s);
  }
  return a;
}
function e5(t, e) {
  const { style: n, number: r, sid: i, altnumber: o, pubnumber: s } = t;
  if (!r)
    return;
  const a = Gt(t, zM);
  let l;
  if (e.markerMode === "editable") {
    if (!n)
      return;
    const c = Ll(n, r);
    l = _x(r, c, i, o, s, a);
  } else {
    const c = e.markerMode === "visible";
    l = mg(r, c, i, o, s, a);
  }
  return l;
}
function t5(t) {
  const { style: e, sid: n, eid: r } = t;
  if (!e)
    return;
  const i = Gt(t, VM);
  return wx(e, n, r, i);
}
function n5(t) {
  const { marker: e } = t;
  if (e)
    return gg(e);
}
function r5(t, e, n) {
  var r;
  const i = t.insert, { style: o, caller: s, category: a, contents: l } = i.note;
  if (!o || !s)
    return;
  const c = Gt(i.note, HM), u = (r = t.attributes) == null ? void 0 : r.segment;
  let f;
  u && typeof u == "string" && (f = u);
  const d = [];
  for (const h of (l == null ? void 0 : l.ops) ?? [])
    typeof h.insert == "string" && (Vo(h.attributes) ? d.push(nd(h.attributes.char, Ie(h.insert))) : d.push(Ie(h.insert)));
  return Px(o, s, d, e, n, f).setCategory(a).setUnknownAttributes(c);
}
function i5(t) {
  const { style: e, code: n } = t;
  if (!e || e !== ed || !n || !sr.isValidBookCode(n))
    return;
  const r = Gt(t, jM);
  return ix(n, r);
}
function zx(t) {
  const { style: e } = t;
  if (!e)
    return;
  const n = Gt(t, qM);
  return dl(e, n);
}
function nd(t, e, n) {
  if (Array.isArray(t)) {
    if (t.length === 0)
      throw new Error("Empty charAttr array");
    return t.reduceRight((r, i, o) => {
      const s = jr(i.style, Gt(i, pu));
      return typeof i.cid == "string" && pi(s, Wi, () => i.cid), n && o === t.length - 1 && pi(s, Ks, () => n), r && s.append(r), s;
    }, e);
  } else {
    const r = jr(t.style, Gt(t, pu));
    return typeof t.cid == "string" && pi(r, Wi, () => t.cid), n && pi(r, Ks, () => n), e && r.append(e), r;
  }
}
function Aa(t, e) {
  if (!(t in e))
    return !1;
  const n = e[t];
  return typeof n == "object" && n !== null;
}
function o5(t) {
  return !!t && !!t.book && typeof t.book == "object" && t.book !== null && "style" in t.book && typeof t.book.style == "string" && "code" in t.book && typeof t.book.code == "string";
}
function Cg(t) {
  return !!t && !!t.para && typeof t.para == "object" && t.para !== null && "style" in t.para && typeof t.para.style == "string";
}
function Vo(t) {
  return !!t && !!t.char && typeof t.char == "object" && t.char !== null && (!Array.isArray(t.char) && "style" in t.char && typeof t.char.style == "string" || Array.isArray(t.char) && t.char.length > 0 && "style" in t.char[0] && typeof t.char[0].style == "string");
}
function s5(t) {
  return typeof t == "object" && t !== null && !Array.isArray(t) && Object.keys(t).length === 0;
}
function tr(t, e) {
  if (t)
    for (const n of Object.keys(t)) {
      if (n === "segment" && typeof t[n] == "string") {
        const r = t[n];
        pi(e, Ks, () => r);
        continue;
      }
      if (a5(n)) {
        const r = !!t[n], i = n, o = e.hasFormat(i);
        (r && !o || !r && o) && e.toggleFormat(i);
      }
    }
}
const Vx = [
  "bold",
  "underline",
  "strikethrough",
  "italic",
  "highlight",
  "code",
  "subscript",
  "superscript",
  "lowercase",
  "uppercase",
  "capitalize"
];
function a5(t) {
  return Vx.includes(t);
}
function l5({ viewOptions: t }) {
  const [e] = Le();
  return c5(e, t), null;
}
function c5(t, e) {
  ue(() => {
    if (!t.hasNodes([Ni, xn, Kt]))
      throw new Error("ArrowNavigationPlugin: ImmutableChapterNode, ImmutableVerseNode or NoteNode not registered on editor!");
    const n = (r) => {
      if (r.key !== "ArrowLeft" && r.key !== "ArrowRight")
        return !1;
      const i = oe();
      if (!Z(i) || !i.isCollapsed())
        return !1;
      const o = t.getRootElement();
      if (!o)
        return !1;
      const s = o.dir || "ltr";
      let a = !1;
      return u5(s, r.key) ? a = f5(i) : d5(s, r.key) && (a = h5(i, e)), a && r.preventDefault(), a;
    };
    return t.registerCommand(ra, n, Pu);
  }, [t, e]);
}
function u5(t, e) {
  return t === "ltr" && e === "ArrowRight" || t === "rtl" && e === "ArrowLeft";
}
function d5(t, e) {
  return t === "ltr" && e === "ArrowLeft" || t === "rtl" && e === "ArrowRight";
}
function f5(t) {
  var e, n, r;
  const i = t.anchor.getNode(), o = gO(t);
  if (ze(o) && !$l(o.getFirstChild())) {
    if (pr(i)) {
      if (t.anchor.offset === i.getChildrenSize())
        return !1;
    } else if (t.anchor.offset !== i.getTextContentSize())
      return !1;
    if (o.getIsCollapsed()) {
      if (o.is((e = o.getParent()) == null ? void 0 : e.getLastChild()))
        return (r = (n = o.getParent()) == null ? void 0 : n.getNextSibling()) == null || r.selectStart(), !0;
    } else return fu(o.getFirstChild()) ? o.select(2, 2) : o.select(1, 1), !0;
  }
  if (pr(i) && ze(o) && o.getIsCollapsed()) {
    const a = o.getNextSibling();
    return a ? a.selectStart() : o.selectEnd(), !0;
  }
  const s = o == null ? void 0 : o.getParent();
  if (fu(o) && ze(s) && o.is(s == null ? void 0 : s.getLastChild())) {
    const a = s.getNextSibling();
    return a ? a.selectStart() : s.selectEnd(), !0;
  }
  return !1;
}
function h5(t, e) {
  const n = wO(t);
  if (Pl(n) && !n.getPreviousSibling())
    return !0;
  if (t.anchor.offset !== 0)
    return !1;
  const r = t.anchor.getNode();
  if (Gr(r.getParent()))
    return !0;
  if (ze(n) && n.getIsCollapsed()) {
    const o = n.getPreviousSibling();
    if (!wa(o))
      return !1;
    const s = n.getParent();
    if (!s)
      return !1;
    const a = n.getIndexWithinParent();
    return s.select(a, a), !0;
  }
  if (pr(n) && (e == null ? void 0 : e.noteMode) === "collapsed") {
    const o = n.getLastChild();
    if (!o)
      return !1;
    const s = _r(o, (a) => ze(a));
    if (ze(s) && s.getIsCollapsed()) {
      const a = s.getParent();
      if (!a)
        return !1;
      const l = s.getIndexWithinParent();
      return a.select(l, l), !0;
    }
  }
  const i = xx(r);
  if (!i || i.getIsCollapsed())
    return !1;
  if (oo(n)) {
    const o = i.getParent();
    if (!o)
      return !1;
    const s = i.getIndexWithinParent();
    return o.select(s, s), !0;
  }
  return !1;
}
function p5() {
  const [t] = Le();
  return g5(t), null;
}
function g5(t) {
  ue(() => {
    if (!t.hasNodes([Et]))
      throw new Error("CharNodePlugin: CharNode not registered on editor!");
    return t.registerNodeTransform(Et, w5);
  }, [t]);
}
function w5(t) {
  if (!Ct(t))
    return;
  if (t.isEmpty()) {
    t.remove();
    return;
  }
  const e = t.getMarker(), n = Ms(t, Wi), r = t.getUnknownAttributes(), i = t.getNextSibling();
  Ct(i) && vh({ style: e, cid: n }, i) && ui(r, i.getUnknownAttributes()) && (t.append(...i.getChildren()), i.remove());
  const o = t.getPreviousSibling();
  Ct(o) && vh({ style: e, cid: n }, o) && ui(r, o.getUnknownAttributes()) && (o.append(...t.getChildren()), t.remove());
}
function Hx(t) {
  return t.replaceAll("	", " ");
}
const kg = (t) => {
  navigator.clipboard.read().then(async (e) => {
    if ((await navigator.permissions.query({
      // @ts-expect-error These types are incorrect.
      name: "clipboard-read"
    })).state === "denied") {
      alert("Not allowed to paste from clipboard.");
      return;
    }
    const n = new DataTransfer(), r = e[0];
    for (const o of r.types) {
      const s = await (await r.getType(o)).text();
      n.setData(o, Hx(s));
    }
    const i = new ClipboardEvent("paste", {
      clipboardData: n
    });
    t.dispatchCommand(Jo, i);
  });
}, Eg = (t) => {
  navigator.clipboard.read().then(async () => {
    if ((await navigator.permissions.query({
      // @ts-expect-error These types are incorrect.
      name: "clipboard-read"
    })).state === "denied") {
      alert("Not allowed to paste from clipboard.");
      return;
    }
    const e = new DataTransfer(), n = await navigator.clipboard.readText();
    e.setData("text/plain", Hx(n));
    const r = new ClipboardEvent("paste", {
      clipboardData: e
    });
    t.dispatchCommand(Jo, r);
  });
};
function m5() {
  const [t] = Le();
  return ue(() => {
    const e = (n) => {
      const { key: r, shiftKey: i, metaKey: o, ctrlKey: s, altKey: a } = n;
      !(Xf ? o : s) || a || (!i && r.toLowerCase() === "c" ? (n.preventDefault(), t.dispatchCommand(Yi, null)) : !i && r.toLowerCase() === "x" ? (n.preventDefault(), t.dispatchCommand(Xo, null)) : r.toLowerCase() === "v" && (n.preventDefault(), i ? Eg(t) : kg(t)));
    };
    return t.registerRootListener((n, r) => {
      r !== null && r.removeEventListener("keydown", e), n !== null && n.addEventListener("keydown", e);
    });
  }, [t]), null;
}
function b5({ logger: t }) {
  const [e] = Le();
  return ue(() => Ht(
    // When the backslash or forward slash key is typed.
    e.registerCommand(ra, (n) => n.key !== "\\" && n.key !== "/" ? !1 : (n.preventDefault(), !0), _c),
    // When the backslash or forward slash character is pasted into the editor.
    e.registerCommand(Jo, (n) => {
      var r;
      const i = (r = n.clipboardData) == null ? void 0 : r.getData("text/plain");
      return !i || !i.includes("\\") && !i.includes("/") ? !1 : (t == null || t.info("CommandMenuPlugin: paste containing backslash or forward slash ignored."), n.preventDefault(), !0);
    }, _c),
    // When the backslash or forward slash character is dragged into the editor.
    e.registerCommand(Iu, (n) => {
      var r;
      const i = (r = n.dataTransfer) == null ? void 0 : r.getData("text/plain");
      return !i || !i.includes("\\") && !i.includes("/") ? !1 : (t == null || t.info("CommandMenuPlugin: drag containing backslash or forward slash ignored."), n.preventDefault(), !0);
    }, _c)
  ), [e, t]), null;
}
function y5({ index: t, isSelected: e, onClick: n, onMouseEnter: r, option: i }) {
  let o = "item";
  return e && (o += " selected"), i.isDisabled && (o += " disabled"), p("li", { tabIndex: -1, className: o, ref: i.setRefElement, role: "option", "aria-selected": e, "aria-disabled": i.isDisabled, id: "typeahead-item-" + t, onMouseEnter: r, onClick: i.isDisabled ? void 0 : n, children: p("span", { className: "text", children: i.title }) }, i.key);
}
function v5({ options: t, selectedItemIndex: e, onOptionClick: n, onOptionMouseEnter: r }) {
  return p("div", { className: "typeahead-popover", children: p("ul", { children: t.map((i, o) => p(y5, { index: o, isSelected: e === o, onClick: () => n(i, o), onMouseEnter: () => r(o), option: i }, i.key)) }) });
}
class gc extends DT {
  constructor(e, n) {
    super(e), me(this, "title"), me(this, "onSelect"), me(this, "isDisabled"), this.title = e, this.onSelect = n.onSelect.bind(this), this.isDisabled = n.isDisabled || !1;
  }
}
function _5(t, e = "editor-input") {
  return t ? t.classList.contains(e) : !1;
}
function x5() {
  const [t] = Le(), [e, n] = fe(() => !t.isEditable()), r = xe(void 0), i = xe(void 0), o = xe(void 0), s = Ne(() => [
    new gc("Cut", {
      onSelect: () => {
        t.dispatchCommand(Xo, null);
      },
      isDisabled: e
    }),
    new gc("Copy", {
      onSelect: () => {
        t.dispatchCommand(Yi, null);
      }
    }),
    new gc("Paste", {
      onSelect: () => {
        kg(t);
      },
      isDisabled: e
    }),
    new gc("Paste as Plain Text", {
      onSelect: () => {
        Eg(t);
      },
      isDisabled: e
    })
  ], [t, e]), a = be((l, c, u) => {
    t.update(() => {
      l == null || l.onSelect(c), u();
    });
  }, [t]);
  return ue(() => {
    var l;
    i.current = ((l = t.getRootElement()) == null ? void 0 : l.className) ?? "";
  }, [t]), ue(() => {
    const l = () => {
      var c;
      (c = o.current) == null || c.call(o);
    };
    return window.addEventListener("scroll", l, !0), () => {
      window.removeEventListener("scroll", l, !0);
    };
  }, []), ue(() => t.registerEditableListener((l) => {
    n(!l);
  }), [t]), p(IT, { options: s, onSelectOption: a, onWillOpen: (l) => {
    r.current = l.target;
  }, menuRenderFn: (l, { selectedIndex: c, options: u, selectOptionAndCleanUp: f, setHighlightedIndex: d }, { setMenuRef: h }) => (o.current = () => f(void 0), l.current && !_5(r.current, i.current) && !hx(r.current) ? I1.createPortal(p("div", { className: "typeahead-popover auto-embed-menu", style: {
    marginLeft: l.current.style.width,
    userSelect: "none",
    width: 200
  }, ref: h, children: p(v5, { options: s, selectedItemIndex: c, onOptionClick: (g, w) => {
    g.isDisabled || (d(w), f(g));
  }, onOptionMouseEnter: (g) => {
    d(g);
  } }) }), l.current) : null) });
}
function C5({ isEditable: t }) {
  const [e] = Le();
  return Cn(() => {
    e.setEditable(t);
  }, [e, t]), null;
}
function k5({ scripture: t, nodeOptions: e, editorAdaptor: n, viewOptions: r, logger: i }) {
  const [o] = Le();
  return ue(() => {
    var s;
    (s = n.initialize) == null || s.call(n, e, i);
  }, [n, i, e]), ue(() => {
    var s;
    (s = n.reset) == null || s.call(n);
    const a = n.serializeEditorState(t, r);
    if (a == null) {
      i == null || i.warn("LoadStatePlugin: serializedEditorState was null or undefined. Skipping editor update.");
      return;
    }
    try {
      const l = o.parseEditorState(a);
      queueMicrotask(() => {
        o.update(() => {
          o.setEditorState(l), o.dispatchCommand(c0, void 0);
        }, { tag: ng });
      });
    } catch {
      i == null || i.error("LoadStatePlugin: error parsing or setting editor state.");
    }
  }, [o, n, i, t, r]), null;
}
function E5({ expandedNoteKeyRef: t, nodeOptions: e, viewOptions: n, logger: r }) {
  const [i] = Le();
  return N5(e, r), S5(i, t, n, r), null;
}
function N5(t, e) {
  const n = xe(void 0), r = t.noteCallers;
  ue(() => {
    let i = r;
    (!i || i.length <= 0) && (i = wM), n.current !== i && (n.current = i, P5("note-callers", i, e));
  }, [e, r]);
}
function S5(t, e, n, r) {
  ue(() => {
    if (!t.hasNodes([Et, Kt, br]))
      throw new Error("NoteNodePlugin: CharNode, NoteNode or ImmutableNoteCallerNode not registered on editor!");
    const i = (o) => t.update(() => R5(o));
    return Ht(
      // Remove NoteNode if it doesn't contain a caller node and ensure typed text goes before it.
      t.registerNodeTransform(Kt, (o) => T5(o, n)),
      // Update NoteNodeCaller preview text when NoteNode children text is changed.
      t.registerNodeTransform(Et, A5),
      t.registerNodeTransform(Gn, D5),
      // Ensure NBSP after caller.
      t.registerNodeTransform(br, O5),
      // Re-generate all note callers when a note is removed.
      t.registerMutationListener(br, (o, { prevEditorState: s }) => M5(o, s)),
      // Handle the cursor moving next to a NoteNode. NoteNode arrow key navigation when note is
      // after a verse node is handled in the ArrowNavigationPlugin.
      t.registerCommand(Xi, () => I5(t, e, n, r), Yo),
      // Handle double-click of a word immediately following a NoteNode (no space between).
      t.registerRootListener((o, s) => {
        s !== null && s.removeEventListener("dblclick", i), o !== null && o.addEventListener("dblclick", i);
      })
    );
  }, [t, e, r, n]);
}
function T5(t, e) {
  const n = t.getChildren();
  if (!n.some((r) => oo(r)) && (e == null ? void 0 : e.markerMode) !== "editable" && t.remove(), n.length > 0) {
    const r = n[0];
    ie(r) && !$l(r) && t.insertBefore(r);
  }
}
function A5(t) {
  const e = t.getParentOrThrow(), n = e.getChildren(), r = n.find((s) => oo(s));
  if (!Ct(t) || !ze(e) || !r)
    return;
  const i = hg(n);
  r.getPreviewText() !== i && r.setPreviewText(i);
  const o = t.getNextSibling();
  ie(o) ? o.getTextContent() !== st && o.setTextContent(st) : t.insertAfter(Ie(st));
}
function D5(t) {
  const e = xx(t), n = e == null ? void 0 : e.getChildren(), r = n == null ? void 0 : n.find((o) => oo(o));
  if (!ie(t) || !ze(e) || !r || !n)
    return;
  const i = hg(n);
  r.getPreviewText() !== i && r.setPreviewText(i), !($l(t) || !ze(t.getParent())) && t.getTextContent() !== st && (t.setTextContent(st), t.selectEnd());
}
function O5(t) {
  if (!oo(t))
    return;
  const e = t.getNextSibling();
  !ie(e) || $l(e) ? t.insertAfter(Ie(st)) : e.getTextContent() !== st && e.setTextContent(st);
}
function M5(t, e) {
  for (const [n, r] of t) {
    if (r !== "destroyed")
      continue;
    const i = e.read(() => {
      const s = Oe(n), a = s == null ? void 0 : s.getParent();
      return oo(s) && ze(a) && a.getCaller() === Uo;
    }), o = document.querySelector(".editor-input");
    !i || !o || (o.classList.add("reset-counters"), o.offsetHeight, o.classList.remove("reset-counters"));
  }
}
function I5(t, e, n, r) {
  var i;
  if ((n == null ? void 0 : n.noteMode) !== "expandInline")
    return !1;
  const o = oe();
  if (!Z(o) || !o.isCollapsed())
    return !1;
  const s = o.anchor, a = s.getNode();
  if (e.current) {
    const l = _r(a, (c) => ze(c));
    if (l)
      e.current !== l.getKey() && (e.current = l.getKey());
    else {
      const c = Oe(e.current);
      c && !c.getIsCollapsed() && (r == null || r.debug("Cursor moved away from NoteNode, collapsing it"), Da(t, e.current, r)), e.current = void 0;
    }
  }
  if (s.offset === 0) {
    const l = a.getPreviousSibling();
    if (ze(l)) {
      r == null || r.debug("Cursor is just after a NoteNode");
      const c = l.getKey();
      l.getIsCollapsed() ? e.current = c : e.current = void 0, Da(t, c, r);
    }
  }
  if (s.offset === a.getTextContentSize()) {
    const l = a.getNextSibling();
    if (ze(l)) {
      r == null || r.debug("Cursor is just before a NoteNode");
      const c = l.getKey();
      l.getIsCollapsed() ? e.current = c : e.current = void 0, Da(t, c, r);
    } else if (!l) {
      const c = _r(a, (u) => ze(u));
      if (c && c.getIsCollapsed() && pr(c.getParent()) && c.is((i = c.getParent()) == null ? void 0 : i.getLastChild())) {
        r == null || r.debug("Cursor is at end of note at end of para");
        const u = c.getKey();
        e.current = u, Da(t, u, r);
      }
    }
  }
  if (pr(a)) {
    const l = a.getChildAtIndex(s.offset), c = l == null ? void 0 : l.getPreviousSibling();
    if (wa(c) && ze(l)) {
      r == null || r.debug("Cursor is between verse and NoteNode");
      const u = l.getKey();
      l.getIsCollapsed() ? e.current = u : e.current = void 0, Da(t, u, r);
    }
  }
  return !1;
}
function Da(t, e, n) {
  const r = Oe(e);
  try {
    r == null || r.toggleIsCollapsed();
  } catch (i) {
    if (i instanceof Error && i.message.includes("read only"))
      n == null || n.warn("Fallback triggered after stabilization - edge case"), setTimeout(() => {
        t.update(() => {
          r == null || r.toggleIsCollapsed();
        });
      }, 0);
    else
      throw i;
  }
}
function R5(t) {
  const e = oe();
  if (!Z(e))
    return;
  const n = e.anchor, r = e.focus, i = n.getNode(), o = r.getNode();
  if (ze(i) && ie(o)) {
    t.preventDefault();
    const s = Nl();
    s.anchor.set(o.getKey(), 0, "text"), s.focus.set(o.getKey(), r.offset, "text"), sn(s);
  }
}
function P5(t, e, n) {
  for (const r of document.styleSheets)
    try {
      const i = r.cssRules || r.rules;
      for (const o of i)
        if (L5(o, t)) {
          const s = e.map((a) => `"${a}"`).join(" ");
          o.symbols = s;
          return;
        }
    } catch {
      continue;
    }
  n == null || n.warn(`Editor: counter style "${t}" not found.`);
}
function L5(t, e) {
  return (
    // This check could be simpler but as is also works for test mocks.
    typeof t == "object" && t !== null && "name" in t && t.name === e && "symbols" in t && typeof t.symbols == "string"
  );
}
function $5({ onChange: t }) {
  const [e] = Le();
  return ue(() => e.registerCommand(Xi, () => {
    const n = e.read(() => Ox());
    return t == null || t(n), !1;
  }, Yo), [e, t]), null;
}
function F5() {
  const [t] = Le();
  return B5(t), null;
}
function B5(t) {
  ue(() => {
    if (!t.hasNodes([Mn]))
      throw new Error("ParaNodePlugin: ParaNode not registered on editor!");
    return t.registerNodeTransform(Mn, (e) => q5(e, t));
  }, [t]);
}
function q5(t, e) {
  yg(e, t.getKey()) && $x(t.getFirstChild()), !(!fn(t) || t.getMarker() !== "b" || t.isEmpty() || !e.getEditorState().read(() => {
    const n = Oe(t.getKey());
    return fn(n) && ((n == null ? void 0 : n.isEmpty()) ?? !1);
  })) && t.clear();
}
function Wx({ onStateChange: t }) {
  const [e] = Le(), [n, r] = fe(e), i = xe(!1), o = xe(!1), s = xe(), a = be(() => {
    const l = oe();
    if (Z(l)) {
      const c = l.anchor.getNode();
      let u = c.getKey() === "root" ? c : _r(c, (d) => {
        const h = d.getParent();
        return h !== null && Zr(h);
      });
      u === null && (u = c.getTopLevelElementOrThrow());
      const f = u.getKey();
      n.getElementByKey(f) !== null && (fn(u) || Gr(u) || Pl(u)) && (s.current = u.getMarker(), t == null || t(i.current, o.current, s.current));
    }
  }, [n, t]);
  return ue(() => e.registerCommand(Xi, (l, c) => (a(), r(c), !1), bs), [e, a]), ue(() => Ht(n.registerUpdateListener(({ editorState: l }) => {
    l.read(() => {
      a();
    });
  }), n.registerCommand(Pa, (l) => (i.current = l, t == null || t(i.current, o.current, s.current), !1), bs), n.registerCommand(Ra, (l) => (o.current = l, t == null || t(i.current, o.current, s.current), !1), bs)), [a, n, t]), null;
}
function j5({ textDirection: t }) {
  const [e] = Le();
  return U5(e, t), z5(e), null;
}
function U5(t, e) {
  ue(() => {
    function n() {
      const r = t.getRootElement();
      if (!r || e === "auto")
        return;
      r.dir = e;
      const i = t._config.theme.placeholder, o = document.getElementsByClassName(i)[0];
      o && (o.dir = e);
    }
    return n(), t.registerUpdateListener(({ dirtyElements: r }) => {
      r.size > 0 && n();
    });
  }, [t, e]);
}
function z5(t) {
  ue(() => {
    const e = (n) => {
      if (n.key !== "ArrowLeft" && n.key !== "ArrowRight")
        return !1;
      const r = oe();
      if (!Z(r))
        return !1;
      const i = r.anchor.getNode(), o = _r(i, (f) => CO(f, t) === "p");
      if (!o)
        return !1;
      const s = t.getElementByKey(o.getKey());
      if (!s)
        return !1;
      const a = s.parentElement, l = s.dir || "ltr", c = ((a == null ? void 0 : a.dir) ?? "") || "ltr";
      if (!a || l === c)
        return !1;
      const u = a.dir === "rtl" && n.key === "ArrowLeft" || a.dir === "ltr" && n.key === "ArrowRight";
      return r.modify("move", u, "character"), n.preventDefault(), !0;
    };
    return t.registerCommand(ra, e, Pu);
  }, [t]);
}
function V5() {
  const [t] = Le();
  return H5(t), null;
}
function H5(t) {
  ue(() => {
    if (!t.hasNodes([Et, xn, Kt, Gn, _n]))
      throw new Error("TextSpacingPlugin: CharNode, ImmutableVerseNode, NoteNode, TextNode or VerseNode not registered on editor!");
    return Ht(t.registerNodeTransform(Gn, W5), t.registerNodeTransform(Gn, (e) => K5(e, t)), t.registerNodeTransform(_n, Bb), t.registerNodeTransform(xn, Bb));
  }, [t]);
}
function W5(t) {
  if (!t.isAttached())
    return;
  const e = t.getTextContent(), n = t.getNextSibling(), r = t.getParent();
  t.getMode() !== "normal" || e.endsWith(" ") && e.length > 1 || ze(n) || Ct(r) || on(r) || Rl(r) || (e === " " && !ir(n) ? t.setTextContent("") : bg(t));
}
function K5(t, e) {
  const n = t.getParent();
  !Rl(n) || !t.isAttached() || yg(e, t.getKey()) && n.insertAfter(t);
}
function Bb(t) {
  if (!t.isAttached())
    return;
  const e = t.getPreviousSibling();
  e && !ir(e) && !ie(e) && !Rl(e) && t.insertBefore(Ie(" "));
}
function G5({ trigger: t, scriptureReference: e, contextMarker: n, getMarkerAction: r }) {
  const { markersMenuItems: i } = PM({
    scriptureReference: e,
    contextMarker: n,
    getMarkerAction: r
  });
  return p(RM, { trigger: t, items: i });
}
function J5({ trigger: t, scrRef: e, getMarkerAction: n }) {
  const { book: r, chapterNum: i, verseNum: o, verse: s } = e, a = Ne(() => e, [r, i, o, s]), [l] = Le(), [c] = X5(l);
  return Y5(l), p(G5, { trigger: t, scriptureReference: a, contextMarker: c, getMarkerAction: n });
}
function X5(t) {
  const [e, n] = fe();
  return ue(() => t.registerCommand(Xi, () => (t.read(() => {
    const r = oe();
    if (!Z(r)) {
      e && n(void 0);
      return;
    }
    const i = Oe(r.anchor.key), o = Oe(r.focus.key);
    if (!i || !o) {
      e && n(void 0);
      return;
    }
    const s = bO(i, o);
    if (!s || !XO(s)) {
      e && n(void 0);
      return;
    }
    const a = s.getMarker();
    e !== a && n(a);
  }), !1), Yo), [e, t]), [e];
}
function Y5(t) {
  ue(() => {
    if (!t.hasNodes([_n, xn]))
      throw new Error("UsjNodesMenuPlugin: VerseNode or ImmutableVerseNode not registered on editor!");
    const e = {}, n = {};
    return Ht(t.registerNodeTransform(xn, (r) => qb(r, t, e)), t.registerNodeTransform(_n, (r) => qb(r, t, e)), t.registerMutationListener(xn, (r) => Vb(r, t, e, n)), t.registerMutationListener(_n, (r) => Vb(r, t, e, n)));
  }, [t]);
}
function qb(t, e, n) {
  rE(ng) || yg(e, t.getKey()) && eI(t, n);
}
function jb(t) {
  return RegExp(/(\d+)([a-zA-Z]+)?(-(\d+)([a-zA-Z]+)?)?/).exec(t);
}
const Ub = 2, Q5 = 3, zb = 4, Z5 = 5;
function eI(t, e) {
  var n;
  const r = ug(t), i = r == null ? void 0 : r.getNumber();
  if (!i)
    return;
  const o = e[i];
  if (!o)
    return;
  let s = parseInt(t.getNumber()), a = ((n = jb(t.getNumber())) == null ? void 0 : n[Ub]) ?? "";
  o.forEach((l) => {
    const c = Oe(l);
    if (!c)
      return;
    const u = c.getNumber(), f = parseInt(u), d = jb(u), h = !!(d != null && d[Q5]), g = h ? parseInt(d[zb]) : f;
    if (g < s || // e.g. insert 3b before 4 => 4
    f > s || // e.g. insert 3 before 3a => 4a
    g === s && a)
      return;
    const w = (d == null ? void 0 : d[Ub]) ?? "", v = (d == null ? void 0 : d[Z5]) ?? "", _ = h ? _h(parseInt(d[zb]), void 0) : "";
    let b = `${w}`;
    b += h ? `-${_}${v}` : "";
    const C = _h(f, void 0);
    c.setNumber(`${C}${b}`), s = parseInt(h ? _ : C), a = h ? v : w;
  });
}
function Vb(t, e, n, r) {
  e.getEditorState().read(() => {
    for (const [i, o] of t) {
      const s = Oe(i);
      if (ir(s)) {
        if (o === "created") {
          const a = ug(s);
          if (!a)
            continue;
          const l = a.getNumber();
          n[l] || (n[l] = []), n[l].push(i), r[i] = l;
        } else if (o === "destroyed") {
          const a = r[i], l = n[a];
          if (!l)
            continue;
          const c = l.findIndex((u) => u === i);
          if (c === -1)
            continue;
          l.splice(c, 1), Reflect.deleteProperty(r, i);
        }
      }
    }
  });
}
const Kx = "formatted", tI = "unformatted";
let Ng;
function nI(t) {
  const e = rI(t);
  if (!e)
    throw new Error(`Invalid view mode: ${t}`);
  Ng = e;
}
nI(Kx);
const rd = () => Ng;
function rI(t) {
  let e;
  switch (t) {
    case Kx:
      e = {
        markerMode: "hidden",
        noteMode: "collapsed",
        hasSpacing: !0,
        isFormattedFont: !0
      };
      break;
    case tI:
      e = {
        markerMode: "editable",
        noteMode: "expanded",
        hasSpacing: !1,
        isFormattedFont: !1
      };
      break;
  }
  return e;
}
function iI(t) {
  if (t)
    return t.markerMode === "editable" ? _n : xn;
}
function oI(t) {
  const e = [], n = t ?? Ng;
  return n && (e.push(`${HD}${n.markerMode}`), n.hasSpacing && e.push(zD), n.isFormattedFont && e.push(VD)), e;
}
const Gx = { type: Ts, version: As, content: [] };
let Nh;
function sI(t) {
  t && (Nh = t);
}
function aI(t) {
  return t.isEmpty() ? Gx : lI(t.toJSON());
}
function lI(t) {
  if (!t.root || !t.root.children) return;
  const e = t.root.children;
  if (e.length === 1 && sg(e[0]) && (!e[0].children || e[0].children.length === 0))
    return Gx;
  const n = Jx(e), r = Ai(n);
  return r ? { type: Ts, version: As, content: r } : void 0;
}
function cI(t, e) {
  const { type: n, marker: r, unknownAttributes: i } = t;
  let o;
  return t.code !== "" && (o = t.code), Ft({
    type: n,
    marker: r,
    code: o,
    ...i,
    content: e
  });
}
function uI(t) {
  const { marker: e, number: n, sid: r, altnumber: i, pubnumber: o, unknownAttributes: s } = t;
  return Ft({
    type: Tr.getType(),
    marker: e,
    number: n,
    sid: r,
    altnumber: i,
    pubnumber: o,
    ...s
  });
}
function dI(t, e) {
  const { marker: n, sid: r, altnumber: i, pubnumber: o, unknownAttributes: s } = t, a = e && typeof e[0] == "string" ? e[0] : void 0;
  let { number: l } = t;
  return l = Cx(n, a, l), Ft({
    type: Tr.getType(),
    marker: n,
    number: l,
    sid: r,
    altnumber: i,
    pubnumber: o,
    ...s
  });
}
function fI(t) {
  const { marker: e, sid: n, altnumber: r, pubnumber: i, unknownAttributes: o } = t, { text: s } = t;
  let { number: a } = t;
  return a = Cx(e, s, a), Ft({
    type: _n.getType(),
    marker: e,
    number: a,
    sid: n,
    altnumber: r,
    pubnumber: i,
    ...o
  });
}
function hI(t, e) {
  const { type: n, marker: r, unknownAttributes: i } = t;
  return e == null || e.forEach((o, s) => {
    typeof o == "string" && o.startsWith(st) && (e[s] = o.slice(1));
  }), Ft({
    type: n,
    marker: r,
    ...i,
    content: e
  });
}
function pI(t, e) {
  const { type: n, marker: r, unknownAttributes: i } = t;
  return Ft({
    type: n,
    marker: r,
    ...i,
    content: e
  });
}
function gI(t, e) {
  const { type: n, marker: r, caller: i, category: o, unknownAttributes: s } = t;
  return Ft({
    type: n,
    marker: r,
    caller: i,
    category: o,
    ...s,
    content: e
  });
}
function fs(t) {
  const { type: e, marker: n, sid: r, eid: i, unknownAttributes: o } = t;
  return Ft({
    type: e,
    marker: n,
    sid: r,
    eid: i,
    ...o
  });
}
function wI(t) {
  return t.text;
}
function mI(t, e) {
  const { tag: n, marker: r, unknownAttributes: i } = t;
  return Ft({
    type: n,
    marker: r,
    ...i,
    content: e
  });
}
function bI(t) {
  const { marker: e } = t;
  return {
    type: hu,
    marker: e
  };
}
function Hb(t, e) {
  const n = t[t.length - 1];
  n && typeof n == "string" ? t[t.length - 1] = n + e : t.push(e);
}
function yI(t, e, n, r, i) {
  const o = Yr.getType(), s = e.filter((a) => !n.includes(a));
  if (n.filter((a) => !e.includes(a)).forEach((a) => {
    const l = fs({
      type: o,
      marker: Cs,
      eid: a
    });
    i.push(l);
  }), s.forEach((a) => {
    const l = fs({
      type: o,
      marker: zo,
      sid: a
    });
    i.push(l);
  }), e.length === 0) {
    const a = fs({
      type: o,
      marker: zo
    });
    i.push(a);
  }
  if (i.push(...t), e.length === 0) {
    const a = fs({
      type: o,
      marker: Cs
    });
    i.push(a);
  }
  (!r || !AO(r)) && e.forEach((a) => {
    const l = fs({
      type: o,
      marker: Cs,
      eid: a
    });
    i.push(l);
  });
}
function Ai(t, e) {
  const n = [];
  let r, i = [];
  return t.forEach((o, s) => {
    const a = o, l = o, c = o, u = o, f = o, d = o, h = o, g = o;
    switch (o.type) {
      case sr.getType():
        n.push(
          cI(a, Ai(a.children))
        );
        break;
      case Ni.getType():
        n.push(uI(o));
        break;
      case Tr.getType():
        n.push(
          dI(l, Ai(l.children))
        );
        break;
      case xn.getType():
      case _n.getType():
        n.push(fI(o));
        break;
      case Et.getType():
        n.push(
          hI(c, Ai(c.children))
        );
        break;
      case Mn.getType():
        n.push(
          pI(u, Ai(u.children))
        );
        break;
      case Kt.getType():
        n.push(
          gI(
            f,
            Ai(f.children, f.caller)
          )
        );
        break;
      case ro.getType():
      case br.getType():
      case xl.getType():
      case ts.getType():
        break;
      case nn.getType():
        if (r = Ai(h.children), r) {
          const w = h.typedIDs[Li];
          if (w)
            yI(r, w, i, t[s + 1], n), i = w;
          else {
            const v = r.shift();
            v && (typeof v == "string" ? Hb(n, v) : n.push(v)), r.length > 0 && n.push(...r);
          }
        }
        break;
      case Yr.getType():
        n.push(fs(o));
        break;
      case Gn.getType():
        d.text && d.text !== st && !d.text.startsWith(Zp) && (!e || d.text !== fg(e)) && Hb(n, wI(d));
        break;
      case es.getType():
        n.push(
          mI(g, Ai(g.children))
        );
        break;
      case io.getType():
        n.push(bI(o));
        break;
      default:
        Nh == null || Nh.error(`Unexpected node type '${o.type}'!`);
    }
  }), n && n.length > 0 ? n : void 0;
}
function Jx(t) {
  const e = t.findIndex((n) => sg(n));
  if (e >= 0) {
    const n = t.slice(0, e), r = t[e].children, i = Jx(t.slice(e + 1));
    t = [...n, ...r, ...i];
  }
  return t;
}
const cf = {
  initialize: sI,
  deserializeEditorState: aI
}, Wb = Xx([]), vI = {
  type: xl.getType(),
  version: 1
};
let wu = [], Ae, Ac, Sh, ut;
function _I(t, e) {
  wu = [], kI(t), EI(e);
}
function xI(t = 0) {
}
function CI(t, e) {
  Ae = e ?? rd();
  let n;
  return t ? (t.type !== Ts && (ut == null || ut.warn(`This USJ type '${t.type}' didn't match the expected type '${Ts}'.`)), t.version !== As && (ut == null || ut.warn(
    `This USJ version '${t.version}' didn't match the expected version '${As}'.`
  )), t.content.length > 0 ? n = Ah(Ba(t.content)) : n = [Wb]) : n = [Wb], Sh == null || Sh(wu), {
    root: {
      children: n,
      direction: null,
      format: "",
      indent: 0,
      type: "root",
      version: 1
    }
  };
}
function kI(t) {
  t && (Ac = t), t != null && t.addMissingComments && (Sh = t.addMissingComments);
}
function EI(t) {
  t && (ut = t);
}
function NI(t) {
  return !t || t.length !== 1 || typeof t[0] != "string" ? "" : t[0];
}
function SI(t) {
  const { marker: e, code: n } = t;
  e !== ed && (ut == null || ut.warn(`Unexpected book marker '${e}'!`)), (!n || !sr.isValidBookCode(n)) && (ut == null || ut.warn(`Unexpected book code '${n}'!`));
  const r = [];
  ((Ae == null ? void 0 : Ae.markerMode) === "editable" || (Ae == null ? void 0 : Ae.markerMode) === "visible") && r.push(
    Wo("marker", no(e) + " " + n + st)
  );
  const i = NI(t.content);
  i && r.push(Ho(i));
  const o = Gt(t);
  return Ft({
    type: sr.getType(),
    marker: e,
    code: n ?? "",
    unknownAttributes: o,
    children: r,
    direction: null,
    format: "",
    indent: 0,
    version: rx
  });
}
function TI(t) {
  const { marker: e, number: n, sid: r, altnumber: i, pubnumber: o } = t;
  e !== rg && (ut == null || ut.warn(`Unexpected chapter marker '${e}'!`));
  const s = Gt(t);
  let a;
  return (Ae == null ? void 0 : Ae.markerMode) === "visible" && (a = !0), (Ae == null ? void 0 : Ae.markerMode) === "editable" ? Ft({
    type: Tr.getType(),
    marker: e,
    number: n ?? "",
    sid: r,
    altnumber: i,
    pubnumber: o,
    unknownAttributes: s,
    children: [Ho(Ll(e, n) ?? "")],
    direction: null,
    format: "",
    indent: 0,
    version: sx
  }) : Ft({
    type: Ni.getType(),
    marker: e,
    number: n ?? "",
    showMarker: a,
    sid: r,
    altnumber: i,
    pubnumber: o,
    unknownAttributes: s,
    version: dx
  });
}
function AI(t) {
  const { marker: e, number: n, sid: r, altnumber: i, pubnumber: o } = t;
  e !== lg && (ut == null || ut.warn(`Unexpected verse marker '${e}'!`));
  const s = (iI(Ae) ?? xn).getType(), a = (Ae == null ? void 0 : Ae.markerMode) === "editable" ? vx : Ix;
  let l, c;
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? l = Ll(e, n) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && (c = !0);
  const u = Gt(t);
  return Ft({
    type: s,
    text: l,
    marker: e,
    number: n ?? "",
    sid: r,
    altnumber: i,
    pubnumber: o,
    showMarker: c,
    unknownAttributes: u,
    version: a
  });
}
function DI(t, e = []) {
  const { marker: n } = t;
  Et.isValidMarker(n) || ut == null || ut.warn(`Unexpected char marker '${n}'!`), (Ae == null ? void 0 : Ae.markerMode) === "editable" && e.forEach((i) => {
    dg(i) && (i.text = st + i.text);
  });
  const r = Gt(t);
  return Ft({
    type: Et.getType(),
    marker: n,
    unknownAttributes: r,
    children: [...e],
    direction: null,
    format: "",
    indent: 0,
    textFormat: 0,
    textStyle: "",
    version: ux
  });
}
function Xx(t) {
  return {
    type: Ki.getType(),
    children: t,
    direction: null,
    format: "",
    indent: 0,
    textFormat: 0,
    textStyle: "",
    version: px
  };
}
function OI(t, e = []) {
  const { marker: n } = t;
  Mn.isValidMarker(n) || ut == null || ut.warn(`Unexpected para marker '${n}'!`);
  const r = [];
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? r.push(Gs(n), Ho(st)) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && r.push(Wo("marker", no(n) + st)), r.push(...e);
  const i = Gt(t);
  return Ft({
    type: Mn.getType(),
    marker: n,
    unknownAttributes: i,
    children: r,
    direction: null,
    format: "",
    indent: 0,
    textFormat: 0,
    textStyle: "",
    version: yx
  });
}
function MI(t, e) {
  const n = xO(e);
  let r = () => {
  };
  return Ac != null && Ac.noteCallerOnClick && (r = Ac.noteCallerOnClick), Ft({
    type: br.getType(),
    caller: t,
    previewText: n,
    onClick: r,
    version: Bx
  });
}
function II(t, e) {
  const { marker: n, category: r } = t;
  Kt.isValidMarker(n) || ut == null || ut.warn(`Unexpected note marker '${n}'!`);
  const i = t.caller ?? "*", o = (Ae == null ? void 0 : Ae.noteMode) !== "expanded", s = Gt(t);
  let a, l;
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? (a = Gs(n), l = Gs(n, "closing")) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && (a = Wo("marker", no(n) + st), l = Wo("marker", fl(n) + st));
  const c = [];
  let u;
  if (a && c.push(a), (Ae == null ? void 0 : Ae.markerMode) === "editable")
    u = Ho(fg(i)), c.push(u, ...e);
  else {
    const f = Ho(st);
    u = MI(i, e), c.push(u, f, ...e.flatMap(RI(f)));
  }
  return l && c.push(l), Ft({
    type: Kt.getType(),
    marker: n,
    caller: i,
    isCollapsed: o,
    category: r,
    unknownAttributes: s,
    children: c,
    direction: null,
    format: "",
    indent: 0,
    version: bx
  });
}
function RI(t) {
  return (e) => IO(e) ? [e] : [e, t];
}
function PI(t) {
  const { marker: e, sid: n, eid: r } = t;
  (!e || !Yr.isValidMarker(e)) && (ut == null || ut.warn(`Unexpected milestone marker '${e}'!`));
  const i = Gt(t);
  return Ft({
    type: Yr.getType(),
    marker: e,
    sid: n,
    eid: r,
    unknownAttributes: i,
    version: gx
  });
}
function Kb(t, e = []) {
  return {
    type: nn.getType(),
    typedIDs: { [Li]: e },
    children: t,
    direction: null,
    format: "",
    indent: 0,
    version: 1
  };
}
function LI(t, e) {
  const { marker: n } = t, r = t.type, i = Gt(t), o = [...e];
  return o.forEach((s) => {
    dg(s) && (s.mode = "token");
  }), Ft({
    type: es.getType(),
    tag: r,
    marker: n,
    unknownAttributes: i,
    children: o,
    direction: null,
    format: "",
    indent: 0,
    version: tx
  });
}
function $I(t) {
  return {
    type: io.getType(),
    marker: t,
    version: Ax
  };
}
function Gs(t, e = "opening") {
  return {
    type: ts.getType(),
    marker: t,
    markerSyntax: e,
    text: "",
    detail: 0,
    format: 0,
    mode: "normal",
    style: "",
    version: 1
  };
}
function Ho(t, e = "normal") {
  return {
    type: Gn.getType(),
    text: t,
    detail: 0,
    format: 0,
    mode: e,
    style: "",
    version: 1
  };
}
function Wo(t, e) {
  return {
    type: ro.getType(),
    text: e,
    textType: t,
    version: Tx
  };
}
function Gb(t, e) {
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? e.push(Gs(t)) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && e.push(Wo("marker", no(t)));
}
function Jb(t, e, n = !1) {
  Et.isValidFootnoteMarker(t) || Et.isValidCrossReferenceMarker(t) || ((Ae == null ? void 0 : Ae.markerMode) === "editable" ? n ? e.push(Gs("", "selfClosing")) : e.push(Gs(t, "closing")) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && e.push(Wo("marker", fl(n ? "" : t))));
}
function FI(t, e) {
  if (t.type !== "ms") return;
  const n = [];
  if (t.sid && n.push(`sid="${t.sid}"`), t.eid && n.push(`eid="${t.eid}"`), n.length <= 0) return;
  const r = Zp + n.join(" ");
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? e.push(Ho(r)) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && e.push(Wo("attribute", r));
}
function Xb(t, e) {
  return t.length <= 0 || e === 0 ? t : t.map((n) => n - e);
}
function BI(t, e) {
  const n = t.indexOf(e, 0);
  n > -1 && t.splice(n, 1);
}
function Yb(t, e) {
  e.marker === zo && e.sid !== void 0 && t.push(e.sid), e.marker === Cs && e.eid !== void 0 && BI(t, e.eid);
}
function Th(t, e, n = !1, r = []) {
  if (e.length <= 0 || e[0] >= t.length) return t;
  const i = e.shift(), o = e.length > 0 ? e.shift() : t.length - 1;
  if (i === void 0 || o === void 0 || o >= t.length || t.length <= 0)
    return t;
  const s = t.slice(0, i), a = n ? [Kb(s, [...r])] : s, l = t[i];
  Yb(r, l);
  const c = Th(
    t.slice(i + 1, o),
    Xb(e, i + 1),
    l.marker === zo,
    r
  ), u = Kb(c, [...r]), f = t[o];
  Yb(r, f);
  const d = Th(
    t.slice(o + 1),
    Xb(e, o + 1),
    f.marker === zo,
    r
  );
  return [...a, u, ...d];
}
function Ba(t) {
  const e = [], n = [];
  return t == null || t.forEach((r) => {
    if (typeof r == "string")
      r && n.push(Ho(r));
    else if (!r.type)
      ut == null || ut.error("Marker type is missing!");
    else
      switch (r.type) {
        case sr.getType():
          n.push(SI(r));
          break;
        case Tr.getType():
          n.push(TI(r));
          break;
        case _n.getType():
          Ae != null && Ae.hasSpacing || n.push(vI), n.push(AI(r));
          break;
        case Et.getType():
          Gb(r.marker, n), n.push(DI(r, Ba(r.content))), Jb(r.marker, n);
          break;
        case Mn.getType():
          n.push(OI(r, Ba(r.content)));
          break;
        case Kt.getType():
          n.push(II(r, Ba(r.content)));
          break;
        case Yr.getType():
          rO(r.marker) && (e.push(n.length), r.sid !== void 0 && (wu == null || wu.push(r.sid))), n.push(PI(r)), Gb(r.marker, n), FI(r, n), Jb(r.marker, n, !0);
          break;
        case io.getType():
          n.push($I(r.marker));
          break;
        default:
          ut == null || ut.warn(`Unknown type-marker '${r.type}-${r.marker}'!`), n.push(LI(r, Ba(r.content)));
      }
  }), Th(n, e);
}
function Ah(t) {
  const e = t.findIndex(
    (n) => UD(n) || dO(n) || cO(n)
  );
  if (e >= 0) {
    const n = Ah(t.slice(0, e)), r = t[e], i = Ah(t.slice(e + 1));
    return [...n, r, ...i];
  } else if (t.some((n) => "text" in n && "mode" in n || UO(n)))
    return [Xx(t)];
  return t;
}
const Dh = {
  initialize: _I,
  reset: xI,
  serializeEditorState: CI
}, wc = (t) => {
  if (!Kt.isValidMarker(t) || !t.includes("f"))
    throw new Error(`Invalid footnote marker '${t}'`);
  return {
    action: (e) => {
      const { chapterNum: n, verseNum: r } = e.reference, i = [];
      return n !== void 0 && r !== void 0 && i.push({
        type: "char",
        marker: "fr",
        content: [`${n}:${r}`]
      }), e.noteText && i.push({
        type: "char",
        marker: "fq",
        content: [e.noteText]
      }), i.push({ type: "char", marker: "ft", content: ["-"] }), [{
        type: "note",
        marker: t,
        caller: Uo,
        content: i
      }];
    }
  };
}, Qb = (t) => {
  if (!Kt.isValidMarker(t) || !t.includes("x"))
    throw new Error(`Invalid cross-reference marker '${t}'`);
  return {
    action: (e) => {
      const { chapterNum: n, verseNum: r } = e.reference, i = [];
      return n !== void 0 && r !== void 0 && i.push({
        type: "char",
        marker: "xo",
        content: [`${n}:${r}`]
      }), i.push({ type: "char", marker: "xt", content: ["-"] }), [{
        type: "note",
        marker: t,
        caller: tg,
        content: i
      }];
    }
  };
}, qI = {
  c: {
    action: (t) => {
      const { chapterNum: e } = t.reference;
      return [{
        type: "chapter",
        marker: "c",
        number: `${e + 1}`
      }];
    }
  },
  v: {
    action: (t) => {
      const { verseNum: e, verse: n } = t.reference;
      return [{
        type: "verse",
        marker: "v",
        number: `${_h(e, n)}`
      }];
    }
  },
  f: wc("f"),
  fe: wc("fe"),
  ef: wc("ef"),
  efe: wc("efe"),
  x: Qb("x"),
  ex: Qb("ex")
};
function jI(t, e, n, r, i) {
  const o = UI(t);
  return { action: (s) => {
    s.editor.update(() => {
      var a;
      const l = oe();
      Z(l) && (s.noteText = l.getTextContent());
      const c = (a = o == null ? void 0 : o.action) == null ? void 0 : a.call(o, s);
      if (!c) return;
      const u = Sb(c, Dh, r), f = sf(u);
      if (Z(l)) {
        const d = l.anchor.getNode();
        if (ze(f))
          Rx(f, l, r), f.getIsCollapsed() || (e.current = f.getKey());
        else if (l.getTextContent().length > 0)
          zI(
            l,
            () => sf(u)
          );
        else if (X(f) && !f.isInline()) {
          const h = l.insertParagraph();
          if (h) {
            const g = h.getChildren();
            f.append(...g), h.replace(f), f.selectStart();
          }
        } else if (ie(d) && !$l(d) && ze(d.getParent()) && l.isCollapsed()) {
          let h = d.insertAfter(f);
          if (fu(f)) {
            const g = {
              ...r || rd(),
              markerMode: "hidden"
            }, w = Sb(
              c,
              Dh,
              g
            ), v = sf(w);
            h = h.insertAfter(v);
          }
          h.insertAfter(Ie(st));
        } else {
          l.insertNodes([f]), GI(f);
          const h = f.getNextSibling();
          h ? h.selectStart() : f.selectStart();
        }
      } else
        l == null || l.insertNodes([f]);
    }, i);
  }, label: o == null ? void 0 : o.label };
}
function UI(t) {
  let e = qI[t];
  return e || (Mn.isValidMarker(t) ? e = {
    action: () => [{
      type: Mn.getType(),
      marker: t,
      content: []
    }]
  } : Et.isValidMarker(t) && (e = {
    action: () => [{
      type: Et.getType(),
      marker: t,
      content: ["-"]
    }]
  })), e;
}
function zI(t, e) {
  const n = t.getNodes(), [r, i] = VI(t);
  let o;
  n.forEach((s, a) => {
    if (X(o) && o.isParentOf(s))
      return;
    const l = HI(
      s,
      a === 0,
      a === n.length - 1,
      r,
      i
    );
    if (!l) {
      o = void 0;
      return;
    }
    o || (o = e(), l.insertBefore(o)), KI(l, o);
  }), (ie(o) || X(o)) && o.selectEnd();
}
function VI(t) {
  const e = t.anchor.offset, n = t.focus.offset;
  return t.isBackward() ? [n, e] : [e, n];
}
function HI(t, e, n, r, i) {
  if (!(on(t) || ze(t) || ze(t.getParent()))) {
    if (ie(t))
      return WI(t, e, n, r, i);
    if (X(t) && t.isInline())
      return t;
  }
}
function WI(t, e, n, r, i) {
  const o = t.getTextContentSize(), s = e ? r : 0, a = n ? i : o;
  if (s === 0 && a === 0) return;
  const l = t.splitText(s, a);
  return l.length === 1 ? l[0] : l.length === 3 || a === o ? l[1] : l[0];
}
function KI(t, e) {
  var n;
  if (ie(e)) {
    const r = Zb(t, e);
    e.setTextContent(r), t.remove();
  } else if (X(e)) {
    const r = e.getChildrenSize();
    e.append(t);
    for (let i = 0; i < r; i++) (n = e.getFirstChild()) == null || n.remove();
    Zb(t, e);
  }
}
function Zb(t, e) {
  let n = t.getTextContent();
  if (ie(t) && e.isInline() && n.startsWith(" ")) {
    n = n.trimStart(), t.setTextContent(n);
    const r = e.getPreviousSibling();
    bg(r), ie(r) || e.insertBefore(Ie(" "));
  }
  return n;
}
function GI(t) {
  ir(t) && (bg(t.getPreviousSibling()), $x(t.getNextSibling()));
}
const Yx = {
  chapter: "chapter",
  verse: "verse",
  char: "char",
  para: "para",
  typedMark: "editor-typed-mark",
  typedMarkOverlap: "editor-typed-markOverlap",
  mark: "editor-mark",
  markOverlap: "editor-markOverlap",
  placeholder: "editor-placeholder",
  paragraph: "editor-paragraph",
  quote: "editor-quote",
  heading: {
    h1: "editor-heading-h1",
    h2: "editor-heading-h2",
    h3: "editor-heading-h3",
    h4: "editor-heading-h4",
    h5: "editor-heading-h5"
  },
  list: {
    nested: {
      listitem: "editor-nested-listitem"
    },
    ol: "editor-list-ol",
    ul: "editor-list-ul",
    listitem: "editor-listitem"
  },
  image: "editor-image",
  link: "editor-link",
  text: {
    bold: "editor-text-bold",
    italic: "editor-text-italic",
    overflowed: "editor-text-overflowed",
    hashtag: "editor-text-hashtag",
    underline: "editor-text-underline",
    strikethrough: "editor-text-strikethrough",
    underlineStrikethrough: "editor-text-underlineStrikethrough"
  }
};
function JI({
  options: t,
  editedUsjRef: e,
  usj: n,
  setUsj: r
}) {
  const { view: i, nodes: o } = t || {}, { hasSpacing: s, isFormattedFont: a, markerMode: l } = i || {};
  return ue(() => {
    e.current && !ui(e.current, n) && r(e.current);
  }, [e, s, a, l, o, r, n]), null;
}
function XI({
  scrRef: t,
  onScrRefChange: e
}) {
  const [n] = Le(), r = xe(!1), i = xe(!1), { book: o, chapterNum: s, verseNum: a } = t;
  return ue(
    () => n.registerMutationListener(
      sr,
      (l) => {
        n.update(
          () => {
            for (const [c, u] of l) {
              const f = Oe(c);
              f && Gr(f) && u === "created" && ey(s, a, i);
            }
          },
          { tag: mh }
        );
      },
      { skipInitialization: !0 }
    ),
    [n, s, a]
  ), ue(() => {
    r.current ? r.current = !1 : n.update(() => ey(s, a, i), {
      tag: mh
    });
  }, [n, s, a]), ue(
    () => n.registerCommand(
      Xi,
      () => (i.current ? i.current = !1 : YI(
        o,
        s,
        a,
        e,
        r
      ), !1),
      Yo
    ),
    [n, o, s, a, e]
  ), null;
}
function ey(t, e, n) {
  var r;
  const i = Ex(oe()), o = (r = Lx(i)) == null ? void 0 : r.getNumber();
  if (kO(o) && pg(e, o)) return;
  const s = Ve().getChildren(), a = fO(s, t), l = _O(s, a), c = hO(l, !!a);
  if (c && !a || !a) return;
  vO(l, c);
  const u = JO(l, e);
  if (u) {
    if (fn(u)) {
      const f = u.getFirstChild();
      ie(f) ? f.select(0, 0) : u.select(0, 0);
    } else u.selectNext(0, 0);
    n.current = !0;
  }
}
function YI(t, e, n, r, i) {
  const o = Ex(oe());
  if (!o) return;
  const s = ug(o), a = parseInt((s == null ? void 0 : s.getNumber()) ?? "1", 10), l = Lx(o), c = l == null ? void 0 : l.getNumber(), u = parseInt(c ?? "0", 10), f = c ? pg(n, c) : n === u;
  if (i.current = !!(s && a !== e || !f), i.current) {
    const d = {
      book: t,
      chapterNum: a,
      verseNum: u
    };
    c != null && u.toString() !== c && (d.verse = c), r(d);
  }
}
function QI(t) {
  return Gr(t) ? `${t.__code}` : ig(t) ? `${t.__marker} "${t.__number}"` : Ct(t) ? `${t.__marker}` : Pl(t) ? `${t.__marker} "${t.__number}"` : oo(t) ? `${t.__caller}` : wa(t) ? `${t.__marker} "${t.__number}"` : ze(t) ? `${t.__marker} "${t.__caller}"` + (t.__isCollapsed ? " (collapsed)" : " (expanded)") : fn(t) ? `${t.__marker}` : on(t) ? `ids: [ ${JSON.stringify(t.getTypedIDs())} ]` : cg(t) ? `${t.__marker} "${t.__number}"` : "";
}
function ZI() {
  const [t] = Le();
  return /* @__PURE__ */ p(
    gS,
    {
      viewClassName: "tree-view-output",
      treeTypeButtonClassName: "debug-treetype-button",
      timeTravelPanelClassName: "debug-timetravel-panel",
      timeTravelButtonClassName: "debug-timetravel-button",
      timeTravelPanelSliderClassName: "debug-timetravel-panel-slider",
      timeTravelPanelButtonClassName: "debug-timetravel-panel-button",
      customPrintNode: QI,
      editor: t
    }
  );
}
const Qx = gl(null), ty = 4;
function eR({
  children: t,
  className: e,
  onClick: n,
  title: r
}) {
  const i = xe(null), o = wl(Qx);
  if (o === null)
    throw new Error("DropDownItem must be used within a DropDown");
  const { registerItem: s } = o;
  return ue(() => {
    i && i.current && s(i);
  }, [i, s]), /* @__PURE__ */ p("button", { className: e, onClick: n, ref: i, title: r, type: "button", children: t });
}
function tR({
  children: t,
  dropDownRef: e,
  onClose: n
}) {
  const [r, i] = fe(), [o, s] = fe(), a = be(
    (u) => {
      i((f) => f ? [...f, u] : [u]);
    },
    [i]
  ), l = (u) => {
    if (!r) return;
    const f = u.key;
    ["Escape", "ArrowUp", "ArrowDown", "Tab"].includes(f) && u.preventDefault(), f === "Escape" || f === "Tab" ? n() : f === "ArrowUp" ? s((d) => {
      if (!d) return r[0];
      const h = r.indexOf(d) - 1;
      return r[h === -1 ? r.length - 1 : h];
    }) : f === "ArrowDown" && s((d) => d ? r[r.indexOf(d) + 1] : r[0]);
  }, c = Ne(
    () => ({
      registerItem: a
    }),
    [a]
  );
  return ue(() => {
    r && !o && s(r[0]), o && o.current && o.current.focus();
  }, [r, o]), /* @__PURE__ */ p(Qx.Provider, { value: c, children: /* @__PURE__ */ p("div", { className: "dropdown", ref: e, onKeyDown: l, children: t }) });
}
function nR({
  disabled: t = !1,
  buttonLabel: e,
  buttonAriaLabel: n,
  buttonClassName: r,
  buttonIconClassName: i,
  children: o,
  stopCloseOnClickSelf: s
}) {
  const a = xe(null), l = xe(null), [c, u] = fe(!1), f = () => {
    u(!1), l && l.current && l.current.focus();
  };
  return ue(() => {
    const d = l.current, h = a.current;
    if (c && d !== null && h !== null) {
      const { top: g, left: w } = d.getBoundingClientRect();
      h.style.top = `${g + d.offsetHeight + ty}px`, h.style.left = `${Math.min(w, window.innerWidth - h.offsetWidth - 20)}px`;
    }
  }, [a, l, c]), ue(() => {
    const d = l.current;
    if (d !== null && c) {
      const h = (g) => {
        const w = g.target;
        s && a.current && a.current.contains(w) || d.contains(w) || u(!1);
      };
      return document.addEventListener("click", h), () => {
        document.removeEventListener("click", h);
      };
    }
    return () => {
    };
  }, [a, l, c, s]), ue(() => {
    const d = () => {
      if (c) {
        const h = l.current, g = a.current;
        if (h !== null && g !== null) {
          const { top: w } = h.getBoundingClientRect(), v = w + h.offsetHeight + ty;
          v !== g.getBoundingClientRect().top && (g.style.top = `${v}px`);
        }
      }
    };
    return document.addEventListener("scroll", d), () => {
      document.removeEventListener("scroll", d);
    };
  }, [l, a, c]), /* @__PURE__ */ q(Lt, { children: [
    /* @__PURE__ */ q(
      "button",
      {
        type: "button",
        disabled: t,
        "aria-label": n || e,
        className: r,
        onClick: () => u(!c),
        ref: l,
        children: [
          i && /* @__PURE__ */ p("span", { className: i }),
          e && /* @__PURE__ */ p("span", { className: "text dropdown-button-text", children: e }),
          /* @__PURE__ */ p("i", { className: "chevron-down" })
        ]
      }
    ),
    c && fi(
      /* @__PURE__ */ p(tR, { dropDownRef: a, onClose: f, children: o }),
      document.body
    )
  ] });
}
const Oh = {
  m: "m - Paragraph - Margin - No First Line Indent",
  ms: "ms - Heading - Major Section Level 1",
  nb: "nb - Paragraph - No Break with Previous Paragraph",
  p: "p - Paragraph - Normal - First Line Indent",
  pi: "pi - Paragraph - Indented - Level 1 - First Line Indent",
  q1: "q1 - Poetry - Indent Level 1",
  q2: "q2 - Poetry - Indent Level 2",
  r: "r - Heading - Parallel References",
  s: "s - Heading - Section Level 1"
  // do not allow `b - Poetry - Stanza Break (Blank Line)` here to avoid a USFM validity issue.
}, Mh = {
  ...Oh,
  ide: "ide - File - Encoding",
  h: "h - File - Header",
  h1: "h1 - File - Header",
  h2: "h2 - File - Left Header",
  h3: "h3 - File - Right Header",
  toc1: "toc1 - File - Long Table of Contents Text",
  toc2: "toc2 - File - Short Table of Contents Text",
  toc3: "toc3 - File - Book Abbreviation",
  cl: "cl - Chapter - Publishing Label",
  mt: "mt - Title - Major Title Level 1",
  mt1: "mt1 - Title - Major Title Level 1",
  mt2: "mt2 - Title - Major Title Level 2",
  mt3: "mt3 - Title - Major Title Level 3",
  mt4: "mt4 - Title - Major Title Level 4",
  ms1: "ms1 - Heading - Major Section Level 1",
  ms2: "ms2 - Heading - Major Section Level 2",
  ms3: "ms3 - Heading - Major Section Level 3",
  b: "b - Poetry - Stanza Break (Blank Line)"
};
function rR({
  editorRef: t,
  blockMarker: e,
  disabled: n = !1
}) {
  return /* @__PURE__ */ p(
    nR,
    {
      disabled: n,
      buttonClassName: "toolbar-item block-controls",
      buttonIconClassName: "icon block-marker " + iR(e),
      buttonLabel: oR(e),
      buttonAriaLabel: "Formatting options for block type",
      children: Object.keys(Oh).map((r) => /* @__PURE__ */ q(
        eR,
        {
          className: "item block-marker " + sR(e === r),
          onClick: () => {
            var i;
            return (i = t.current) == null ? void 0 : i.formatPara(r);
          },
          children: [
            /* @__PURE__ */ p("i", { className: "icon block-marker " + r }),
            /* @__PURE__ */ p("span", { className: "text usfm_" + r, children: Oh[r] })
          ]
        },
        r
      ))
    }
  );
}
function iR(t) {
  return t && t in Mh ? t : "ban";
}
function oR(t) {
  return t && t in Mh ? Mh[t] : "No Style";
}
function sR(t) {
  return t ? "active dropdown-item-active" : "";
}
function ny() {
  return /* @__PURE__ */ p("div", { className: "divider" });
}
const aR = Yn(function({ editorRef: t, isReadonly: e = !1, onStateChange: n }, r) {
  const [i] = Le(), [o, s] = fe(i), [a, l] = fe(), [c, u] = fe(!1), [f, d] = fe(!1), h = be(
    (g, w, v) => {
      u(g), d(w), l(v), n == null || n(g, w, v);
    },
    [n]
  );
  return ue(() => i.registerCommand(
    Xi,
    (g, w) => (s(w), !1),
    bs
  ), [i]), /* @__PURE__ */ q(Lt, { children: [
    /* @__PURE__ */ p(Wx, { onStateChange: h }),
    /* @__PURE__ */ q("div", { className: "toolbar", children: [
      /* @__PURE__ */ p(
        "button",
        {
          disabled: !c || e,
          onClick: () => {
            o.dispatchCommand(vl, void 0);
          },
          title: Xf ? "Undo (⌘Z)" : "Undo (Ctrl+Z)",
          type: "button",
          className: "toolbar-item spaced",
          "aria-label": "Undo",
          children: /* @__PURE__ */ p("i", { className: "format undo" })
        }
      ),
      /* @__PURE__ */ p(
        "button",
        {
          disabled: !f || e,
          onClick: () => {
            o.dispatchCommand(_l, void 0);
          },
          title: Xf ? "Redo (⌘Y)" : "Redo (Ctrl+Y)",
          type: "button",
          className: "toolbar-item",
          "aria-label": "Redo",
          children: /* @__PURE__ */ p("i", { className: "format redo" })
        }
      ),
      /* @__PURE__ */ p(ny, {}),
      o === i && /* @__PURE__ */ q(Lt, { children: [
        /* @__PURE__ */ p(
          rR,
          {
            editorRef: t,
            blockMarker: a,
            disabled: e
          }
        ),
        /* @__PURE__ */ p(ny, {})
      ] }),
      /* @__PURE__ */ p("div", { ref: r, className: "end-container" })
    ] })
  ] });
}), ry = {
  namespace: "platformEditor",
  theme: Yx,
  editable: !0,
  editorState: void 0,
  // Handling of errors during update
  onError(t) {
    throw t;
  },
  nodes: [nn, ...mM]
}, lR = rd(), cR = {}, uR = {};
function dR() {
  return /* @__PURE__ */ p("div", { className: "editor-placeholder", children: "Enter some Scripture..." });
}
const Zx = Yn(function({
  defaultUsj: t,
  scrRef: e,
  onScrRefChange: n,
  onSelectionChange: r,
  onUsjChange: i,
  onStateChange: o,
  options: s,
  logger: a,
  children: l
}, c) {
  const u = xe(null), f = xe(null), d = xe(null), h = xe(t), g = xe(), [w, v] = fe(t), [_, b] = fe(0), {
    isReadonly: C = !1,
    hasExternalUI: D = !1,
    hasSpellCheck: R = !1,
    textDirection: N = "ltr",
    markerMenuTrigger: L = "\\",
    view: M = lR,
    nodes: O = cR,
    debug: j = !1
  } = s ?? uR;
  ry.editable = !C, cf.initialize(a), $h(c, () => ({
    focus() {
      var I;
      (I = u.current) == null || I.focus();
    },
    undo() {
      var I;
      (I = u.current) == null || I.dispatchCommand(vl, void 0);
    },
    redo() {
      var I;
      (I = u.current) == null || I.dispatchCommand(_l, void 0);
    },
    cut() {
      var I;
      (I = u.current) == null || I.dispatchCommand(Xo, null);
    },
    copy() {
      var I;
      (I = u.current) == null || I.dispatchCommand(Yi, null);
    },
    paste() {
      u.current && kg(u.current);
    },
    pastePlainText() {
      u.current && Eg(u.current);
    },
    getUsj() {
      return h.current;
    },
    setUsj(I) {
      if (!ui(h.current, I)) {
        h.current = I;
        const S = ui(w, I);
        v(I), S && b((P) => P + 1);
      }
    },
    applyUpdate(I, S = "remote") {
      var P, T;
      (P = u.current) == null || P.update(
        () => {
          S === "remote" && ev(yh), WM(I, M, O, a);
        },
        { discrete: !0 }
      );
      const A = (T = u.current) == null ? void 0 : T.getEditorState();
      if (!A) return;
      const B = cf.deserializeEditorState(A);
      if (B) {
        const V = !ui(h.current, B);
        V && (h.current = B), (V || !ui(w, B)) && (i == null || i(B, I, S));
      }
    },
    replaceEmbedUpdate(I, S) {
      var P;
      const T = (P = u.current) == null ? void 0 : P.read(() => YO(I, S));
      T && this.applyUpdate(T);
    },
    getSelection() {
      var I;
      return (I = u.current) == null ? void 0 : I.read(Ox);
    },
    setSelection(I) {
      var S;
      (S = u.current) == null || S.update(
        () => {
          const P = wg(I);
          P !== void 0 && sn(P);
        },
        { tag: ox }
      );
    },
    addAnnotation(I, S, P) {
      var T;
      (T = f.current) == null || T.addAnnotation(I, Eb(S), P);
    },
    removeAnnotation(I, S) {
      var P;
      (P = f.current) == null || P.removeAnnotation(Eb(I), S);
    },
    formatPara(I) {
      var S;
      (S = u.current) == null || S.update(() => {
        const P = oe();
        Z(P) && OE(P, () => dl(I));
      });
    },
    insertNote(I, S, P) {
      var T;
      (T = u.current) == null || T.update(() => {
        const A = zO(
          I,
          S,
          P,
          e,
          M,
          O,
          a
        );
        A && !A.getIsCollapsed() && (g.current = A.getKey());
      });
    },
    selectNote(I) {
      var S;
      (S = u.current) == null || S.update(() => {
        const P = Ob(I);
        P && (HO(P, M), P.getIsCollapsed() || (g.current = P.getKey()));
      });
    },
    getNoteOps(I) {
      var S;
      return (S = u.current) == null ? void 0 : S.read(() => {
        const P = Ob(I);
        if (P)
          return vg(P);
      });
    },
    get toolbarEndRef() {
      return d;
    }
  }));
  const k = be(
    (I, S, P, T) => {
      if (WD.some((B) => P.has(B))) return;
      const A = cf.deserializeEditorState(I);
      if (A) {
        const B = !ui(h.current, A);
        B && (h.current = A);
        const V = P.has(yh) ? "remote" : "local";
        (B || !ui(w, A)) && (i == null || i(A, T, V));
      }
    },
    [w, i]
  );
  return /* @__PURE__ */ q(Hv, { initialConfig: ry, children: [
    /* @__PURE__ */ p(C5, { isEditable: !C }),
    /* @__PURE__ */ q("div", { className: "editor-container", children: [
      D ? /* @__PURE__ */ p(Wx, { onStateChange: o }) : /* @__PURE__ */ p("div", { className: "editor-toolbar-container" + (C ? "-readonly" : "-editable"), children: /* @__PURE__ */ p(
        aR,
        {
          ref: d,
          editorRef: c,
          isReadonly: C,
          onStateChange: o
        }
      ) }),
      /* @__PURE__ */ q("div", { className: "editor-inner", children: [
        /* @__PURE__ */ p(Xv, { editorRef: u }),
        /* @__PURE__ */ p(
          FS,
          {
            contentEditable: /* @__PURE__ */ p(
              Jv,
              {
                className: `editor-input usfm ${oI(M).join(" ")}`,
                spellCheck: R
              }
            ),
            placeholder: /* @__PURE__ */ p(dR, {}),
            ErrorBoundary: Yv
          }
        ),
        /* @__PURE__ */ p(Qv, {}),
        e && n && /* @__PURE__ */ p(XI, { scrRef: e, onScrRefChange: n }),
        e && /* @__PURE__ */ p(
          J5,
          {
            trigger: L,
            scrRef: e,
            getMarkerAction: (I, S) => jI(I, g, S, M)
          }
        ),
        /* @__PURE__ */ p(
          JI,
          {
            options: { view: M, nodes: O },
            editedUsjRef: h,
            usj: w,
            setUsj: v
          }
        ),
        /* @__PURE__ */ p(
          k5,
          {
            scripture: w,
            nodeOptions: O,
            editorAdaptor: Dh,
            viewOptions: M,
            logger: a
          },
          _
        ),
        /* @__PURE__ */ p($5, { onChange: r }),
        /* @__PURE__ */ p(
          FM,
          {
            onChange: k,
            ignoreSelectionChange: !0,
            ignoreHistoryMergeTagChange: !0
          }
        ),
        /* @__PURE__ */ p($M, { ref: f, logger: a }),
        /* @__PURE__ */ p(l5, { viewOptions: M }),
        /* @__PURE__ */ p(p5, {}),
        /* @__PURE__ */ p(m5, {}),
        /* @__PURE__ */ p(b5, { logger: a }),
        /* @__PURE__ */ p(x5, {}),
        /* @__PURE__ */ p(
          E5,
          {
            expandedNoteKeyRef: g,
            nodeOptions: O,
            viewOptions: M,
            logger: a
          }
        ),
        /* @__PURE__ */ p(F5, {}),
        /* @__PURE__ */ p(j5, { textDirection: N }),
        /* @__PURE__ */ p(V5, {}),
        l
      ] }),
      j && /* @__PURE__ */ p(ZI, {})
    ] })
  ] });
}), fR = Yn(function(t, e) {
  const { children: n, ...r } = t;
  return /* @__PURE__ */ p(Zx, { ref: e, ...r });
});
function e2() {
  return Math.random().toString(36).replace(/[^a-z]+/g, "").substr(0, 5);
}
function mu(t, e, n, r, i) {
  return {
    author: e,
    content: t,
    deleted: i === void 0 ? !1 : i,
    id: n === void 0 ? e2() : n,
    timeStamp: r === void 0 ? performance.timeOrigin + performance.now() : r,
    type: "comment"
  };
}
function t2(t, e, n) {
  return {
    comments: e,
    id: n === void 0 ? e2() : n,
    quote: t,
    type: "thread"
  };
}
function iy(t) {
  return {
    comments: Array.from(t.comments),
    id: t.id,
    quote: t.quote,
    type: "thread"
  };
}
function hR(t) {
  return {
    author: t.author,
    content: "[Deleted Comment]",
    deleted: !0,
    id: t.id,
    timeStamp: t.timeStamp,
    type: "comment"
  };
}
function uf(t) {
  const e = t._changeListeners;
  for (const n of e)
    n();
}
class pR {
  /**
   * Creates a new CommentStore instance.
   *
   * @param editor - The LexicalEditor instance.
   * @param logger - Optional logger instance.
   */
  constructor(e, n) {
    me(this, "_editor"), me(this, "_comments"), me(this, "_changeListeners"), me(this, "_collabProvider"), me(this, "logger"), this._comments = [], this._editor = e, this.logger = n, this._collabProvider = null, this._changeListeners = /* @__PURE__ */ new Set();
  }
  /**
   * Checks if collaborative editing is enabled.
   *
   * @returns True if collaborative editing is enabled, false otherwise.
   */
  isCollaborative() {
    return this._collabProvider !== null;
  }
  /**
   * Gets the current list of comments and threads.
   *
   * @returns The Comments array.
   */
  getComments() {
    return this._comments;
  }
  /**
   * Sets the list of comments and threads.
   *
   * @param comments - The new Comments array.
   */
  setComments(e) {
    this._comments = e, uf(this);
  }
  /**
   * Adds a comment or thread to the store.
   *
   * @param commentOrThread - The comment or thread to add.
   * @param thread - Optional parent thread to add the comment to.
   * @param offset - Optional offset for insertion.
   */
  addComment(e, n, r) {
    const i = Array.from(this._comments), o = this._getCollabComments();
    if (n !== void 0 && e.type === "comment")
      for (let s = 0; s < i.length; s++) {
        const a = i[s];
        if (a.type === "thread" && a.id === n.id) {
          const l = iy(a);
          i.splice(s, 1, l);
          const c = r !== void 0 ? r : l.comments.length;
          if (this.isCollaborative() && o !== null) {
            const u = o.get(s).get("comments");
            this._withRemoteTransaction(() => {
              const f = this._createCollabSharedMap(e);
              u.insert(c, [f]);
            });
          }
          l.comments.splice(c, 0, e);
          break;
        }
      }
    else {
      const s = r !== void 0 ? r : i.length;
      this.isCollaborative() && o !== null && this._withRemoteTransaction(() => {
        const a = this._createCollabSharedMap(e);
        o.insert(s, [a]);
      }), i.splice(s, 0, e);
    }
    this._comments = i, uf(this);
  }
  /**
   * Deletes a comment or thread from the store.
   *
   * @param commentOrThread - The comment or thread to delete.
   * @param thread - Optional parent thread if deleting a comment within a thread.
   * @returns An object containing the marked comment and its index, or null.
   */
  deleteCommentOrThread(e, n) {
    const r = Array.from(this._comments), i = this._getCollabComments();
    let o = null;
    if (n !== void 0)
      for (let s = 0; s < r.length; s++) {
        const a = r[s];
        if (a.type === "thread" && a.id === n.id) {
          const l = iy(a);
          r.splice(s, 1, l);
          const c = l.comments;
          if (o = c.indexOf(e), this.isCollaborative() && i !== null) {
            const u = i.get(s).get("comments"), f = o;
            this._withRemoteTransaction(() => {
              u.delete(f);
            });
          }
          c.splice(o, 1);
          break;
        }
      }
    else
      o = r.indexOf(e), this.isCollaborative() && i !== null && this._withRemoteTransaction(() => {
        i.delete(o);
      }), r.splice(o, 1);
    return this._comments = r, uf(this), e.type === "comment" ? {
      index: o,
      markedComment: hR(e)
    } : null;
  }
  /**
   * Registers a callback to be called when the comments change.
   *
   * @param onChange - The callback function.
   * @returns A function to unregister the callback.
   */
  registerOnChange(e) {
    const n = this._changeListeners;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  _withRemoteTransaction(e) {
    const n = this._collabProvider;
    n !== null && n.doc.transact(e, this);
  }
  _withLocalTransaction(e) {
    const n = this._collabProvider;
    try {
      this._collabProvider = null, e();
    } finally {
      this._collabProvider = n;
    }
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _getCollabComments() {
    const e = this._collabProvider;
    return e !== null ? e.doc.get("comments", To) : null;
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _createCollabSharedMap(e) {
    const n = new Vs(), r = e.type, i = e.id;
    if (n.set("type", r), n.set("id", i), r === "comment")
      n.set("author", e.author), n.set("content", e.content), n.set("deleted", e.deleted), n.set("timeStamp", e.timeStamp);
    else {
      n.set("quote", e.quote);
      const o = new To();
      e.comments.forEach((s, a) => {
        const l = this._createCollabSharedMap(s);
        o.insert(a, [l]);
      }), n.set("comments", o);
    }
    return n;
  }
  /**
   * Registers collaborative editing support using a Yjs provider.
   *
   * @param provider - The Yjs Provider instance.
   * @returns A function to unregister collaboration and cleanup.
   */
  registerCollaboration(e) {
    this._collabProvider = e;
    const n = this._getCollabComments(), r = () => {
      e.connect();
    }, i = () => {
      try {
        e.disconnect();
      } catch {
      }
    }, o = this._editor.registerCommand(
      $D,
      (a) => {
        var l, c;
        return r !== void 0 && i !== void 0 && (a ? ((l = this.logger) == null || l.info("Comments connected!"), r()) : ((c = this.logger) == null || c.info("Comments disconnected!"), i())), !1;
      },
      Yo
    ), s = (a, l) => {
      if (l.origin !== this) {
        for (const c of a)
          if (c instanceof W_) {
            const u = c.target, f = c.delta;
            let d = 0;
            for (const h of f) {
              const g = h.insert, w = h.retain, v = h.delete, _ = u.parent, b = u === n ? void 0 : _ instanceof Vs && this._comments.find((C) => C.id === _.get("id"));
              if (Array.isArray(g)) {
                const C = d;
                g.slice().reverse().forEach((D) => {
                  const R = D.get("id"), N = D.get("type") === "thread" ? t2(
                    D.get("quote"),
                    D.get("comments").toArray().map(
                      (L) => mu(
                        L.get("content"),
                        L.get("author"),
                        L.get("id"),
                        L.get("timeStamp"),
                        L.get("deleted")
                      )
                    ),
                    R
                  ) : mu(
                    D.get("content"),
                    D.get("author"),
                    R,
                    D.get("timeStamp"),
                    D.get("deleted")
                  );
                  this._withLocalTransaction(() => {
                    this.addComment(N, b, C);
                  });
                });
              } else if (typeof w == "number")
                d += w;
              else if (typeof v == "number")
                for (let C = 0; C < v; C++) {
                  const D = b === void 0 || b === !1 ? this._comments[d] : b.comments[d];
                  this._withLocalTransaction(() => {
                    this.deleteCommentOrThread(D, b);
                  }), d++;
                }
            }
          }
      }
    };
    return n === null ? () => null : (n.observeDeep(s), r(), () => {
      n.unobserveDeep(s), o(), this._collabProvider = null;
    });
  }
}
function gR(t) {
  const [e, n] = fe(t.getComments());
  return ue(() => t.registerOnChange(() => {
    n(t.getComments());
  }), [t]), e;
}
function wR({
  onClose: t,
  children: e,
  title: n,
  closeOnClickOutside: r
}) {
  const i = xe(null);
  return ue(() => {
    i.current !== null && i.current.focus();
  }, []), ue(() => {
    let o = null;
    const s = (c) => {
      c.key === "Escape" && t();
    }, a = (c) => {
      const u = c.target;
      i.current !== null && !i.current.contains(u) && r && t();
    }, l = i.current;
    return l !== null && (o = l.parentElement, o !== null && o.addEventListener("click", a)), window.addEventListener("keydown", s), () => {
      window.removeEventListener("keydown", s), o !== null && (o == null || o.removeEventListener("click", a));
    };
  }, [r, t]), /* @__PURE__ */ p("div", { className: "Modal__overlay", role: "dialog", children: /* @__PURE__ */ q("div", { className: "Modal__modal", tabIndex: -1, ref: i, children: [
    /* @__PURE__ */ p("h2", { className: "Modal__title", children: n }),
    /* @__PURE__ */ p(
      "button",
      {
        className: "Modal__closeButton",
        "aria-label": "Close modal",
        type: "button",
        onClick: t,
        children: "X"
      }
    ),
    /* @__PURE__ */ p("div", { className: "Modal__content", children: e })
  ] }) });
}
function mR({
  onClose: t,
  children: e,
  title: n,
  closeOnClickOutside: r = !1
}) {
  return fi(
    /* @__PURE__ */ p(wR, { onClose: t, title: n, closeOnClickOutside: r, children: e }),
    document.body
  );
}
function n2() {
  const [t, e] = fe(null), n = be(() => {
    e(null);
  }, []), r = Ne(() => {
    if (t === null)
      return null;
    const { title: o, content: s, closeOnClickOutside: a } = t;
    return /* @__PURE__ */ p(mR, { onClose: n, title: o, closeOnClickOutside: a, children: s });
  }, [t, n]), i = be(
    (o, s, a = !1) => {
      e({
        closeOnClickOutside: a,
        content: s(n),
        title: o
      });
    },
    [n]
  );
  return [r, i];
}
const bR = {
  ...Yx,
  paragraph: "CommentEditorTheme__paragraph"
};
function yR(...t) {
  return t.filter(Boolean).join(" ");
}
function Gi({
  "data-test-id": t,
  children: e,
  className: n,
  onClick: r,
  disabled: i,
  small: o,
  title: s
}) {
  return /* @__PURE__ */ p(
    "button",
    {
      disabled: i,
      className: yR(
        "Button__root",
        i && "Button__disabled",
        o && "Button__small",
        n
      ),
      onClick: r,
      title: s,
      "aria-label": s,
      ...t && { "data-test-id": t },
      children: e
    }
  );
}
function vR({
  className: t
}) {
  return /* @__PURE__ */ p(Jv, { className: t || "ContentEditable__root" });
}
function _R({
  children: t,
  className: e
}) {
  return /* @__PURE__ */ p("div", { className: e || "Placeholder__root", children: t });
}
const oy = Se("INSERT_INLINE_COMMAND");
function xR({
  anchorKey: t,
  editor: e,
  showComments: n,
  onAddComment: r
}) {
  const i = xe(null), o = be(() => {
    const s = i.current, a = e.getRootElement(), l = e.getElementByKey(t);
    if (s !== null && a !== null && l !== null) {
      const { right: c } = a.getBoundingClientRect(), { top: u } = l.getBoundingClientRect();
      s.style.left = `${c - 20}px`, s.style.top = `${u - 30}px`;
    }
  }, [t, e]);
  return ue(() => (window.addEventListener("resize", o), () => {
    window.removeEventListener("resize", o);
  }), [e, o]), Cn(() => {
    o();
  }, [t, e, n, o]), /* @__PURE__ */ p("div", { className: "CommentPlugin_AddCommentBox", ref: i, children: /* @__PURE__ */ p("button", { className: "CommentPlugin_AddCommentBox_button", onClick: r, children: /* @__PURE__ */ p("i", { className: "icon add-comment" }) }) });
}
function CR({ onEscape: t }) {
  const [e] = Le();
  return ue(() => e.registerCommand(
    Mu,
    (n) => t(n),
    _c
  ), [e, t]), null;
}
function r2({
  className: t,
  autoFocus: e,
  onEscape: n,
  onChange: r,
  editorRef: i,
  placeholder: o = "Type a comment..."
}) {
  return /* @__PURE__ */ p(Hv, { initialConfig: {
    namespace: "Commenting",
    nodes: [],
    onError: (s) => {
      throw s;
    },
    theme: bR
  }, children: /* @__PURE__ */ q("div", { className: "CommentPlugin_CommentInputBox_EditorContainer", children: [
    /* @__PURE__ */ p(
      WT,
      {
        contentEditable: /* @__PURE__ */ p(vR, { className: t }),
        placeholder: /* @__PURE__ */ p(_R, { children: o }),
        ErrorBoundary: Yv
      }
    ),
    /* @__PURE__ */ p(BT, { onChange: r }),
    /* @__PURE__ */ p(Qv, {}),
    e !== !1 && /* @__PURE__ */ p(RT, {}),
    /* @__PURE__ */ p(CR, { onEscape: n }),
    /* @__PURE__ */ p(LT, {}),
    i !== void 0 && /* @__PURE__ */ p(Xv, { editorRef: i })
  ] }) });
}
function i2(t, e) {
  return be(
    (n, r) => {
      n.read(() => {
        t(Wv()), e(!Kv(r.isComposing(), !0));
      });
    },
    [e, t]
  );
}
function kR({
  editor: t,
  cancelAddComment: e,
  submitAddComment: n
}) {
  const [r, i] = fe(""), [o, s] = fe(!1), a = xe(null), l = Ne(
    () => ({
      container: document.createElement("div"),
      elements: []
    }),
    []
  ), c = xe(null), u = s2(), f = be(() => {
    t.getEditorState().read(() => {
      const w = oe();
      if (Z(w)) {
        c.current = w.clone();
        const v = w.anchor, _ = w.focus, b = NE(
          t,
          v.getNode(),
          v.offset,
          _.getNode(),
          _.offset
        ), C = a.current;
        if (b !== null && C !== null) {
          const { left: D, bottom: R, width: N } = b.getBoundingClientRect(), L = SE(t, b);
          let M = L.length === 1 ? D + N / 2 - 125 : D - 125;
          M < 10 && (M = 10), C.style.left = `${M}px`, C.style.top = `${R + 20 + (window.pageYOffset || document.documentElement.scrollTop)}px`;
          const O = L.length, { container: j } = l, k = l.elements, I = k.length;
          for (let S = 0; S < O; S++) {
            const P = L[S];
            let T = k[S];
            T === void 0 && (T = document.createElement("span"), k[S] = T, j.appendChild(T));
            const A = `position:absolute;top:${P.top + (window.pageYOffset || document.documentElement.scrollTop)}px;left:${P.left}px;height:${P.height}px;width:${P.width}px;background-color:rgba(255, 212, 0, 0.3);pointer-events:none;z-index:5;`;
            T.style.cssText = A;
          }
          for (let S = I - 1; S >= O; S--) {
            const P = k[S];
            j.removeChild(P), k.pop();
          }
        }
      }
    });
  }, [t, l]);
  Cn(() => {
    f();
    const w = l.container, v = document.body;
    return v !== null ? (v.appendChild(w), () => {
      v.removeChild(w);
    }) : () => {
    };
  }, [l.container, f]), ue(() => (window.addEventListener("resize", f), () => {
    window.removeEventListener("resize", f);
  }), [f]);
  const d = (w) => (w.preventDefault(), e(), !0), h = () => {
    if (o) {
      let w = t.getEditorState().read(() => {
        const v = c.current;
        return v ? v.getTextContent() : "";
      });
      w.length > 100 && (w = w.slice(0, 99) + "…"), n(
        t2(w, [mu(r, u)]),
        !0,
        void 0,
        c.current
      ), c.current = null;
    }
  }, g = i2(i, s);
  return /* @__PURE__ */ q("div", { className: "CommentPlugin_CommentInputBox", ref: a, children: [
    /* @__PURE__ */ p(
      r2,
      {
        className: "CommentPlugin_CommentInputBox_Editor",
        onEscape: d,
        onChange: g
      }
    ),
    /* @__PURE__ */ q("div", { className: "CommentPlugin_CommentInputBox_Buttons", children: [
      /* @__PURE__ */ p(Gi, { onClick: e, className: "CommentPlugin_CommentInputBox_Button", children: "Cancel" }),
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: h,
          disabled: !o,
          className: "CommentPlugin_CommentInputBox_Button primary",
          children: "Comment"
        }
      )
    ] })
  ] });
}
function ER({
  submitAddComment: t,
  thread: e,
  placeholder: n
}) {
  const [r, i] = fe(""), [o, s] = fe(!1), a = xe(null), l = s2(), c = i2(i, s);
  return /* @__PURE__ */ q(Lt, { children: [
    /* @__PURE__ */ p(
      r2,
      {
        className: "CommentPlugin_CommentsPanel_Editor",
        autoFocus: !1,
        onEscape: () => !0,
        onChange: c,
        editorRef: a,
        placeholder: n
      }
    ),
    /* @__PURE__ */ p(
      Gi,
      {
        className: "CommentPlugin_CommentsPanel_SendButton",
        onClick: () => {
          if (o) {
            t(mu(r, l), !1, e);
            const u = a.current;
            u !== null && u.dispatchCommand(hp, void 0);
          }
        },
        disabled: !o,
        children: /* @__PURE__ */ p("i", { className: "send" })
      }
    )
  ] });
}
function o2({
  commentOrThread: t,
  deleteCommentOrThread: e,
  onClose: n,
  thread: r = void 0
}) {
  return /* @__PURE__ */ q(Lt, { children: [
    "Are you sure you want to delete this ",
    t.type,
    "?",
    /* @__PURE__ */ q("div", { className: "Modal__content", children: [
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: () => {
            e(t, r), n();
          },
          children: "Delete"
        }
      ),
      " ",
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: () => {
            n();
          },
          children: "Cancel"
        }
      )
    ] })
  ] });
}
function sy({
  comment: t,
  deleteComment: e,
  thread: n,
  rtf: r
}) {
  const i = Math.round(
    (t.timeStamp - (performance.timeOrigin + performance.now())) / 1e3
  ), o = Math.round(i / 60), [s, a] = n2();
  return /* @__PURE__ */ q("li", { className: "CommentPlugin_CommentsPanel_List_Comment", children: [
    /* @__PURE__ */ q("div", { className: "CommentPlugin_CommentsPanel_List_Details", children: [
      /* @__PURE__ */ p("span", { className: "CommentPlugin_CommentsPanel_List_Comment_Author", children: t.author }),
      /* @__PURE__ */ q("span", { className: "CommentPlugin_CommentsPanel_List_Comment_Time", children: [
        "· ",
        i > -10 ? "Just now" : r.format(o, "minute")
      ] })
    ] }),
    /* @__PURE__ */ p("p", { className: t.deleted ? "CommentPlugin_CommentsPanel_DeletedComment" : "", children: t.content }),
    !t.deleted && /* @__PURE__ */ q(Lt, { children: [
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: () => {
            a("Delete Comment", (l) => /* @__PURE__ */ p(
              o2,
              {
                commentOrThread: t,
                deleteCommentOrThread: e,
                thread: n,
                onClose: l
              }
            ));
          },
          className: "CommentPlugin_CommentsPanel_List_DeleteButton",
          children: /* @__PURE__ */ p("i", { className: "delete" })
        }
      ),
      s
    ] })
  ] });
}
function NR({
  activeIDs: t,
  comments: e,
  deleteCommentOrThread: n,
  listRef: r,
  submitAddComment: i,
  markNodeMap: o
}) {
  const [s] = Le(), [a, l] = fe(0), [c, u] = n2(), f = Ne(
    () => new Intl.RelativeTimeFormat("en", {
      localeMatcher: "best fit",
      numeric: "auto",
      style: "short"
    }),
    []
  );
  return ue(() => {
    const d = setTimeout(() => {
      l(a + 1);
    }, 1e4);
    return () => {
      clearTimeout(d);
    };
  }, [a]), /* @__PURE__ */ p("ul", { className: "CommentPlugin_CommentsPanel_List", ref: r, children: e.map((d) => {
    const h = d.id;
    return d.type === "thread" ? /* @__PURE__ */ q(
      "li",
      {
        onClick: () => {
          const g = o.get(h);
          if (g !== void 0 && (t === null || t.indexOf(h) === -1)) {
            const w = document.activeElement;
            s.update(
              () => {
                const v = Array.from(g)[0], _ = Oe(v);
                on(_) && _.selectStart();
              },
              {
                onUpdate() {
                  w !== null && w.focus();
                }
              }
            );
          }
        },
        className: `CommentPlugin_CommentsPanel_List_Thread ${o.has(h) ? "interactive" : ""} ${t.indexOf(h) === -1 ? "" : "active"}`,
        children: [
          /* @__PURE__ */ q("div", { className: "CommentPlugin_CommentsPanel_List_Thread_QuoteBox", children: [
            /* @__PURE__ */ q("blockquote", { className: "CommentPlugin_CommentsPanel_List_Thread_Quote", children: [
              "> ",
              /* @__PURE__ */ p("span", { children: d.quote })
            ] }),
            /* @__PURE__ */ p(
              Gi,
              {
                onClick: () => {
                  u("Delete Thread", (g) => /* @__PURE__ */ p(
                    o2,
                    {
                      commentOrThread: d,
                      deleteCommentOrThread: n,
                      onClose: g
                    }
                  ));
                },
                className: "CommentPlugin_CommentsPanel_List_DeleteButton",
                children: /* @__PURE__ */ p("i", { className: "delete" })
              }
            ),
            c
          ] }),
          /* @__PURE__ */ p("ul", { className: "CommentPlugin_CommentsPanel_List_Thread_Comments", children: d.comments.map((g) => /* @__PURE__ */ p(
            sy,
            {
              comment: g,
              deleteComment: n,
              thread: d,
              rtf: f
            },
            g.id
          )) }),
          /* @__PURE__ */ p("div", { className: "CommentPlugin_CommentsPanel_List_Thread_Editor", children: /* @__PURE__ */ p(
            ER,
            {
              submitAddComment: i,
              thread: d,
              placeholder: "Reply to comment..."
            }
          ) })
        ]
      },
      h
    ) : /* @__PURE__ */ p(
      sy,
      {
        comment: d,
        deleteComment: n,
        rtf: f
      },
      h
    );
  }) });
}
function SR({
  activeIDs: t,
  deleteCommentOrThread: e,
  comments: n,
  submitAddComment: r,
  markNodeMap: i
}) {
  const o = xe(null), s = n.length === 0;
  return /* @__PURE__ */ q("div", { className: "CommentPlugin_CommentsPanel", children: [
    /* @__PURE__ */ p("h2", { className: "CommentPlugin_CommentsPanel_Heading", children: "Comments" }),
    s ? /* @__PURE__ */ p("div", { className: "CommentPlugin_CommentsPanel_Empty", children: "No Comments" }) : /* @__PURE__ */ p(
      NR,
      {
        activeIDs: t,
        comments: n,
        deleteCommentOrThread: e,
        listRef: o,
        submitAddComment: r,
        markNodeMap: i
      }
    )
  ] });
}
function s2() {
  const t = h_(), { yjsDocMap: e, name: n } = t;
  return e.has("comments") ? n : "Scripture User";
}
function TR({
  providerFactory: t,
  setCommentStore: e,
  onChange: n,
  showCommentsContainerRef: r,
  commentContainerRef: i,
  logger: o
}) {
  const s = h_(), [a] = Le(), l = Ne(() => {
    const M = new pR(a, o);
    return n && M.registerOnChange(n), e == null || e(M), M;
  }, [a, o, n, e]), c = gR(l), u = Ne(() => /* @__PURE__ */ new Map(), []), [f, d] = fe(), [h, g] = fe([]), [w, v] = fe(!1), [_, b] = fe(!1), { yjsDocMap: C } = s;
  ue(() => {
    if (t) {
      const M = t("comments", C);
      return l.registerCollaboration(M);
    }
    return () => {
    };
  }, [l, t, C]);
  const D = be(() => {
    a.update(() => {
      const M = oe();
      M !== null && (M.dirty = !0);
    }), v(!1);
  }, [a]), R = be(
    (M, O) => {
      if (M.type === "comment") {
        const j = l.deleteCommentOrThread(M, O);
        if (!j)
          return;
        const { markedComment: k, index: I } = j;
        l.addComment(k, O, I);
      } else {
        l.deleteCommentOrThread(M);
        const j = O !== void 0 ? O.id : M.id, k = u.get(j);
        k !== void 0 && setTimeout(() => {
          a.update(() => {
            for (const I of k) {
              const S = Oe(I);
              on(S) && (S.deleteID(Li, j), S.hasNoIDsForEveryType() && Nx(S));
            }
          });
        });
      }
    },
    [l, a, u]
  ), N = be(
    (M, O, j, k) => {
      l.addComment(M, j), O && (a.update(() => {
        Z(k) && Sx(k, Li, M.id);
      }), v(!1));
    },
    [l, a]
  );
  ue(() => {
    const M = [];
    for (const O of h) {
      const j = u.get(O);
      if (j !== void 0)
        for (const k of j) {
          const I = a.getElementByKey(k);
          I !== null && (I.classList.add("selected"), M.push(I), b(!0));
        }
    }
    return () => {
      for (const O of M)
        O.classList.remove("selected");
    };
  }, [h, a, u]), ue(() => {
    if (!a.hasNodes([nn]))
      throw new Error("CommentPlugin: TypedMarkNode not registered on editor!");
    const M = /* @__PURE__ */ new Map();
    return Ht(
      fv(
        a,
        nn,
        (O) => hl(O.getTypedIDs()),
        (O, j) => {
          for (const [k, I] of Object.entries(O.getTypedIDs()))
            I.forEach((S) => {
              j.addID(k, S);
            });
        }
      ),
      a.registerMutationListener(
        nn,
        (O) => {
          a.getEditorState().read(() => {
            for (const [j, k] of O) {
              const I = Oe(j);
              let S = [];
              k === "destroyed" ? S = M.get(j) ?? [] : on(I) && (S = I.getTypedIDs()[Li] ?? []);
              for (const P of S) {
                let T = u.get(P);
                M.set(j, S), k === "destroyed" ? T !== void 0 && (T.delete(j), T.size === 0 && u.delete(P)) : (T === void 0 && (T = /* @__PURE__ */ new Set(), u.set(P, T)), T.has(j) || T.add(j));
              }
            }
          });
        },
        { skipInitialization: !1 }
      ),
      a.registerUpdateListener(({ editorState: O, tags: j }) => {
        O.read(() => {
          const k = oe();
          let I = !1, S = !1;
          if (Z(k)) {
            const P = k.anchor.getNode();
            if (ie(P)) {
              const T = DO(P, Li, k.anchor.offset) ?? [];
              T !== null && (g(T), I = !0), k.isCollapsed() || (d(P.getKey()), S = !0);
            }
          }
          I || g((P) => P.length === 0 ? P : []), S || d(null), !j.has("collaboration") && Z(k) && v(!1);
        });
      }),
      a.registerCommand(
        oy,
        () => {
          const O = window.getSelection();
          return O !== null && O.removeAllRanges(), v(!0), !0;
        },
        ke
      )
    );
  }, [a, u]);
  const L = () => {
    a.dispatchCommand(oy, void 0);
  };
  return /* @__PURE__ */ q(Lt, { children: [
    w && fi(
      /* @__PURE__ */ p(
        kR,
        {
          editor: a,
          cancelAddComment: D,
          submitAddComment: N
        }
      ),
      document.body
    ),
    f != null && !w && fi(
      /* @__PURE__ */ p(
        xR,
        {
          anchorKey: f,
          editor: a,
          showComments: _,
          onAddComment: L
        }
      ),
      document.body
    ),
    r !== null && fi(
      /* @__PURE__ */ p(
        Gi,
        {
          className: `CommentPlugin_ShowCommentsButton ${_ ? "active" : ""}`,
          onClick: () => b(!_),
          title: _ ? "Hide Comments" : "Show Comments",
          children: /* @__PURE__ */ p("i", { className: "comments" })
        }
      ),
      (r == null ? void 0 : r.current) ?? document.body
    ),
    _ && fi(
      /* @__PURE__ */ p(
        SR,
        {
          comments: c,
          submitAddComment: N,
          deleteCommentOrThread: R,
          activeIDs: h,
          markNodeMap: u
        }
      ),
      (i == null ? void 0 : i.current) ?? document.body
    )
  ] });
}
function AR() {
  const t = xe(void 0), e = be((n) => {
    t.current = n;
  }, []);
  return [t, e];
}
function DR(t, e) {
  var n, r;
  const i = ((n = e.current) == null ? void 0 : n.getComments()) ?? [], o = i == null ? void 0 : i.map((a) => a.id), s = t.map((a) => {
    const l = o.findIndex((c) => c === a);
    return l !== void 0 && l >= 0 ? i[l] : {
      comments: [
        {
          author: "unknown",
          content: "Comment not found",
          deleted: !1,
          id: "",
          timeStamp: 0,
          type: "comment"
        }
      ],
      id: a,
      quote: "",
      type: "thread"
    };
  });
  i.forEach((a) => {
    t.includes(a.id) || s.push(a);
  }), s && ((r = e.current) == null || r.setComments(s));
}
function OR(t, e) {
  ue(() => {
    var n;
    t.options ?? (t.options = {}), (n = t.options).nodes ?? (n.nodes = {}), t.options.nodes.addMissingComments = (r) => {
      DR(r, e);
    };
  }, [e, t]);
}
Yn(function(t, e) {
  const n = xe(null), r = xe(!0), i = xe(null), [o, s] = fe(null), { children: a, onCommentChange: l, onUsjChange: c, showCommentsContainerRef: u, ...f } = t, { options: { isReadonly: d } = {} } = t, [h, g] = AR();
  OR(f, h), $h(e, () => ({
    focus() {
      var _;
      (_ = n.current) == null || _.focus();
    },
    undo() {
      var _;
      (_ = n.current) == null || _.undo();
    },
    redo() {
      var _;
      (_ = n.current) == null || _.redo();
    },
    cut() {
      var _;
      (_ = n.current) == null || _.cut();
    },
    copy() {
      var _;
      (_ = n.current) == null || _.copy();
    },
    paste() {
      var _;
      (_ = n.current) == null || _.paste();
    },
    pastePlainText() {
      var _;
      (_ = n.current) == null || _.pastePlainText();
    },
    getUsj() {
      var _;
      return (_ = n.current) == null ? void 0 : _.getUsj();
    },
    setUsj(_) {
      var b;
      (b = n.current) == null || b.setUsj(_);
    },
    applyUpdate(_, b) {
      var C;
      (C = n.current) == null || C.applyUpdate(_, b);
    },
    replaceEmbedUpdate(_, b) {
      var C;
      return (C = n.current) == null ? void 0 : C.replaceEmbedUpdate(_, b);
    },
    getSelection() {
      var _;
      return (_ = n.current) == null ? void 0 : _.getSelection();
    },
    setSelection(_) {
      var b;
      (b = n.current) == null || b.setSelection(_);
    },
    addAnnotation(_, b, C) {
      var D;
      (D = n.current) == null || D.addAnnotation(_, b, C);
    },
    removeAnnotation(_, b) {
      var C;
      (C = n.current) == null || C.removeAnnotation(_, b);
    },
    formatPara(_) {
      var b;
      (b = n.current) == null || b.formatPara(_);
    },
    insertNote(_, b, C) {
      var D;
      (D = n.current) == null || D.insertNote(_, b, C);
    },
    selectNote(_) {
      var b;
      (b = n.current) == null || b.selectNote(_);
    },
    getNoteOps(_) {
      var b;
      return (b = n.current) == null ? void 0 : b.getNoteOps(_);
    },
    setComments(_) {
      var b;
      (b = h.current) == null || b.setComments(_), r.current = !0;
    },
    get toolbarEndRef() {
      return o;
    }
  }));
  const w = be(
    (_, b, C) => {
      var D;
      if (!c) return;
      const R = (D = h.current) == null ? void 0 : D.getComments();
      c(_, R, b, C);
    },
    [h, c]
  ), v = be(() => {
    var _;
    if (!l || r.current) {
      r.current = !1;
      return;
    }
    const b = (_ = h.current) == null ? void 0 : _.getComments();
    l(b);
  }, [h, r, l]);
  return ue(() => {
    var _;
    return s(((_ = n.current) == null ? void 0 : _.toolbarEndRef) ?? null), () => s(null);
  }, []), /* @__PURE__ */ q(Zx, { ref: n, onUsjChange: w, ...f, children: [
    /* @__PURE__ */ p(
      TR,
      {
        setCommentStore: g,
        onChange: v,
        showCommentsContainerRef: d ? null : u ?? o,
        commentContainerRef: i,
        logger: f.logger
      }
    ),
    /* @__PURE__ */ p("div", { ref: i, className: "comment-container" })
  ] });
});
const df = zC('<usx version="3.1" />');
function XL({
  noteOps: t,
  parentRef: e,
  closeEditor: n,
  scrRef: r,
  noteKey: i
}) {
  const o = xe(null), s = V2(), a = Ne(
    () => ({
      isReadonly: !1,
      hasSpellCheck: !1,
      hasExternalUI: !0,
      // Might need to change this later
      textDirection: "auto",
      nodes: {
        noteCallerOnClick: (f, d, h, g, w) => {
          h || (g() === Uo ? w(tg) : w(Uo));
        }
      },
      view: { ...rd(), noteMode: "expanded" }
    }),
    []
  );
  return ue(() => {
    var f, d;
    t && !((d = (f = o.current) == null ? void 0 : f.getUsj()) != null && d.content) && setTimeout(() => {
      var h, g;
      (h = o.current) == null || h.setUsj(df), (g = o.current) == null || g.applyUpdate(t);
    });
  }, [t, i]), /* @__PURE__ */ q("div", { className: "tw-grid tw-gap-[12px]", children: [
    /* @__PURE__ */ q("div", { className: "tw-flex tw-w-full tw-justify-end tw-gap-4", children: [
      /* @__PURE__ */ p(Pe, { onClick: () => {
        var f;
        (f = o.current) == null || f.setUsj(df), n && n();
      }, className: "tw-h-6 tw-w-6", size: "icon", variant: "secondary", children: /* @__PURE__ */ p(yu, {}) }),
      /* @__PURE__ */ p(Pe, { onClick: () => {
        var d, h;
        const f = (d = o.current) == null ? void 0 : d.getNoteOps(0);
        f && i && (e == null || e.replaceEmbedUpdate(i, f)), (h = o.current) == null || h.setUsj(df), n && n();
      }, className: "tw-h-6 tw-w-6", size: "icon", variant: "default", children: /* @__PURE__ */ p(xi, {}) })
    ] }),
    /* @__PURE__ */ q(
      "div",
      {
        ref: s,
        className: "tw-relative tw-rounded-[6px] tw-border-2 tw-border-ring",
        children: [
          /* @__PURE__ */ p(fR, { options: a, onScrRefChange: () => {
          }, scrRef: r, ref: o }),
          /* @__PURE__ */ p("div", { className: "tw-absolute tw-bottom-0 tw-right-0", children: /* @__PURE__ */ p(Pe, { onClick: () => {
            var d;
            const f = (d = s.current) == null ? void 0 : d.getElementsByClassName("editor-input")[0];
            f != null && f.textContent && navigator.clipboard.writeText(f.textContent);
          }, className: "tw-h-6 tw-w-6", variant: "ghost", size: "icon", children: /* @__PURE__ */ p(fy, {}) }) })
        ]
      }
    )
  ] });
}
function a2(t, e) {
  if (!e || e.length === 0) return t ?? "empty";
  const n = e.find((i) => typeof i == "string");
  if (n)
    return `key-${t ?? "unknown"}-${n.slice(0, 10)}`;
  const r = typeof e[0] == "string" ? "impossible" : e[0].marker ?? "unknown";
  return `key-${t ?? "unknown"}-${r}`;
}
function MR(t, e, n = !0, r = void 0) {
  if (!e || e.length === 0) return;
  const i = [], o = [];
  let s = [];
  return e.forEach((a) => {
    typeof a != "string" && a.marker === "fp" ? (s.length > 0 && o.push(s), s = [a]) : s.push(a);
  }), s.length > 0 && o.push(s), o.map((a, l) => {
    const c = l === o.length - 1;
    return /* @__PURE__ */ q("p", { className: "tw-mb-2", children: [
      Sg(t, a, n, !0, i),
      c && r
    ] }, a2(t, a));
  });
}
function Sg(t, e, n = !0, r = !0, i = []) {
  if (!(!e || e.length === 0))
    return e.map((o) => {
      if (typeof o == "string") {
        const s = `${t}-text-${o.slice(0, 10)}`;
        if (r) {
          const a = G(`usfm_${t}`);
          return /* @__PURE__ */ p("span", { className: a, children: o }, s);
        }
        return /* @__PURE__ */ q(
          "span",
          {
            className: "tw-inline-flex tw-items-center tw-gap-1 tw-underline tw-decoration-destructive",
            children: [
              /* @__PURE__ */ p(mf, { className: "tw-h-4 tw-w-4 tw-fill-destructive" }),
              /* @__PURE__ */ p("span", { children: o }),
              /* @__PURE__ */ p(mf, { className: "tw-h-4 tw-w-4 tw-fill-destructive" })
            ]
          },
          s
        );
      }
      return IR(
        o,
        a2(`${t}\\${o.marker}`, [o]),
        n,
        [...i, t ?? "unknown"]
      );
    });
}
function IR(t, e, n, r = []) {
  const { marker: i } = t;
  return /* @__PURE__ */ q("span", { children: [
    i ? n && /* @__PURE__ */ p("span", { className: "marker", children: `\\${i} ` }) : /* @__PURE__ */ p(
      mf,
      {
        className: "tw-text-error tw-mr-1 tw-inline-block tw-h-4 tw-w-4",
        "aria-label": "Missing marker"
      }
    ),
    Sg(i, t.content, n, !0, [
      ...r,
      i ?? "unknown"
    ])
  ] }, e);
}
function RR({
  footnote: t,
  layout: e = "horizontal",
  formatCaller: n,
  showMarkers: r = !0
}) {
  const i = n ? n(t.caller) : t.caller, o = i !== t.caller;
  let s, a = t.content;
  Array.isArray(t.content) && t.content.length > 0 && typeof t.content[0] != "string" && (t.content[0].marker === "fr" || t.content[0].marker === "xo") && ([s, ...a] = t.content);
  const l = r ? /* @__PURE__ */ p("span", { className: "marker", children: `\\${t.marker} ` }) : void 0, c = r ? /* @__PURE__ */ p("span", { className: "marker", children: ` \\${t.marker}*` }) : void 0, u = /* @__PURE__ */ q(Lt, { children: [
    i && // USFM does not specify a marker for caller, so instead of a usfm_* class, we use a
    // specific class name in case styling is needed.
    /* @__PURE__ */ q("span", { className: G("note-caller", { formatted: o }), children: [
      i,
      " "
    ] }),
    s && /* @__PURE__ */ q(Lt, { children: [
      Sg(t.marker, [s], r, !1),
      " "
    ] })
  ] }), h = G(e === "horizontal" ? "horizontal tw-table-cell" : "vertical", r ? "marker-visible" : "");
  return /* @__PURE__ */ q(Lt, { children: [
    /* @__PURE__ */ q("div", { className: G("textual-note-header tw-text-nowrap tw-pr-2", h), children: [
      l,
      u
    ] }),
    /* @__PURE__ */ p("div", { className: G("textual-note-body", h), children: a && a.length > 0 && /* @__PURE__ */ p(Lt, { children: MR(t.marker, a, r, c) }) })
  ] });
}
const l2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      className: G(
        "pr-twp tw-rounded-lg tw-border tw-bg-card tw-text-card-foreground tw-shadow-sm",
        t
      ),
      ...e
    }
  )
);
l2.displayName = "Card";
const PR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      className: G("pr-twp tw-flex tw-flex-col tw-space-y-1.5 tw-p-6", t),
      ...e
    }
  )
);
PR.displayName = "CardHeader";
const LR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "h3",
    {
      ref: n,
      className: G(
        "pr-twp tw-text-2xl tw-font-semibold tw-leading-none tw-tracking-tight",
        t
      ),
      ...e,
      children: e.children
    }
  )
);
LR.displayName = "CardTitle";
const $R = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p("p", { ref: n, className: G("pr-twp tw-text-sm tw-text-muted-foreground", t), ...e }));
$R.displayName = "CardDescription";
const FR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p("div", { ref: n, className: G("pr-twp tw-p-6 tw-pt-0", t), ...e })
);
FR.displayName = "CardContent";
const BR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      className: G("pr-twp tw-flex tw-items-center tw-p-6 tw-pt-0", t),
      ...e
    }
  )
);
BR.displayName = "CardFooter";
const qR = (t, e) => t[e] ?? e;
function YL({
  className: t,
  footnotes: e,
  layout: n = "horizontal",
  listId: r,
  selectedFootnote: i,
  showMarkers: o = !0,
  suppressFormatting: s = !1,
  formatCaller: a,
  onFootnoteSelected: l,
  localizedStrings: c
}) {
  const u = c ? qR(c, "%webView_footnoteList_header%") : "Footnotes", f = a ?? E1(e, void 0), d = (b, C) => {
    l == null || l(b, C, r);
  }, h = i ? e.findIndex((b) => b === i) : 0, [g, w] = fe(h), v = (b) => {
    if (e.length)
      switch (b.key) {
        case "ArrowDown":
          b.preventDefault(), w((C) => Math.min(C + 1, e.length - 1));
          break;
        case "ArrowUp":
          b.preventDefault(), w((C) => Math.max(C - 1, 0));
          break;
        case "Enter":
        case " ":
          b.preventDefault(), l == null || l(e[g], g, r);
          break;
      }
  }, _ = xe([]);
  return ue(() => {
    var b;
    g >= 0 && g < _.current.length && ((b = _.current[g]) == null || b.focus());
  }, [g]), /* @__PURE__ */ q(Lt, { children: [
    n === "vertical" && /* @__PURE__ */ p("h2", { className: "tw-mb-1 tw-font-semibold", children: u }),
    /* @__PURE__ */ p(
      "div",
      {
        role: "listbox",
        "aria-label": "Footnotes",
        tabIndex: 0,
        className: G("tw-h-full tw-overflow-y-auto", t),
        onKeyDown: v,
        children: /* @__PURE__ */ p(
          "div",
          {
            className: G(
              "tw-p-0.5",
              n === "horizontal" ? "tw-table" : "tw-flex tw-flex-col tw-gap-1",
              !s && "formatted-font"
            ),
            children: e.map((b, C) => {
              const D = b === i, R = `${r}-${C}`;
              return /* @__PURE__ */ p(
                l2,
                {
                  ref: (N) => {
                    _.current[C] = N;
                  },
                  role: "option",
                  "aria-selected": D,
                  "data-marker": b.marker,
                  "data-state": D ? "selected" : void 0,
                  tabIndex: -1,
                  className: G(
                    "data-[state=selected]:tw-bg-muted",
                    l && "tw-cursor-pointer hover:tw-bg-muted/50",
                    "tw-w-full tw-rounded-sm tw-border-0 tw-bg-transparent tw-py-0 tw-shadow-none",
                    n === "horizontal" ? "horizontal tw-table-row" : "vertical tw-block tw-text-sm"
                  ),
                  onClick: () => d(b, C),
                  children: /* @__PURE__ */ p(
                    RR,
                    {
                      footnote: b,
                      layout: n,
                      formatCaller: () => f(b.caller, C),
                      showMarkers: o
                    }
                  )
                },
                R
              );
            })
          }
        )
      }
    )
  ] });
}
function jR({
  occurrenceData: t,
  setScriptureReference: e,
  localizedStrings: n
}) {
  const r = n["%webView_inventory_occurrences_table_header_reference%"], i = n["%webView_inventory_occurrences_table_header_occurrence%"], o = Ne(() => {
    const s = [];
    return t.forEach((a) => {
      s.some((l) => Bh(l, a)) || s.push(a);
    }), s;
  }, [t]);
  return /* @__PURE__ */ q(Nu, { stickyHeader: !0, children: [
    /* @__PURE__ */ p(Su, { stickyHeader: !0, children: /* @__PURE__ */ q(hi, { children: [
      /* @__PURE__ */ p(Ja, { children: r }),
      /* @__PURE__ */ p(Ja, { children: i })
    ] }) }),
    /* @__PURE__ */ p(Tu, { children: o.length > 0 && o.map((s) => /* @__PURE__ */ q(
      hi,
      {
        onClick: () => {
          e(s.reference);
        },
        children: [
          /* @__PURE__ */ p(vo, { children: `${nt.bookIdToEnglishName(s.reference.book)} ${s.reference.chapterNum}:${s.reference.verseNum}` }),
          /* @__PURE__ */ p(vo, { children: s.text })
        ]
      },
      `${s.reference.book} ${s.reference.chapterNum}:${s.reference.verseNum}-${s.text}`
    )) })
  ] });
}
const Tg = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  yf.Root,
  {
    ref: n,
    className: G(
      "tw-peer pr-twp tw-h-4 tw-w-4 tw-shrink-0 tw-rounded-sm tw-border tw-border-primary tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 data-[state=checked]:tw-bg-primary data-[state=checked]:tw-text-primary-foreground",
      t
    ),
    ...e,
    children: /* @__PURE__ */ p(
      yf.Indicator,
      {
        className: G("tw-flex tw-items-center tw-justify-center tw-text-current"),
        children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" })
      }
    )
  }
));
Tg.displayName = yf.Root.displayName;
const Fl = Y.forwardRef(
  ({ className: t, type: e, ...n }, r) => /* @__PURE__ */ p(
    "input",
    {
      type: e,
      className: G(
        "pr-twp tw-flex tw-h-10 tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background file:tw-border-0 file:tw-bg-transparent file:tw-text-sm file:tw-font-medium file:tw-text-foreground placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50",
        t
      ),
      ref: r,
      ...n
    }
  )
);
Fl.displayName = "Input";
const c2 = Ji(
  "pr-twp tw-inline-flex tw-items-center tw-justify-center tw-rounded-md tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-colors hover:tw-bg-muted hover:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=on]:tw-bg-accent data-[state=on]:tw-text-accent-foreground",
  {
    variants: {
      variant: {
        default: "tw-bg-transparent",
        outline: "tw-border tw-border-input tw-bg-transparent hover:tw-bg-accent hover:tw-text-accent-foreground"
      },
      size: {
        default: "tw-h-10 tw-px-3",
        sm: "tw-h-9 tw-px-2.5",
        lg: "tw-h-11 tw-px-5"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), UR = Y.forwardRef(({ className: t, variant: e, size: n, ...r }, i) => /* @__PURE__ */ p(
  by.Root,
  {
    ref: i,
    className: G(c2({ variant: e, size: n, className: t })),
    ...r
  }
));
UR.displayName = by.Root.displayName;
const u2 = Y.createContext({
  size: "default",
  variant: "default"
}), d2 = Y.forwardRef(({ className: t, variant: e, size: n, children: r, ...i }, o) => {
  const s = Jt();
  return /* @__PURE__ */ p(
    xu.Root,
    {
      ref: o,
      className: G("pr-twp tw-flex tw-items-center tw-justify-center tw-gap-1", t),
      ...i,
      dir: s,
      children: /* @__PURE__ */ p(
        u2.Provider,
        {
          value: { variant: e, size: n },
          children: r
        }
      )
    }
  );
});
d2.displayName = xu.Root.displayName;
const Dc = Y.forwardRef(({ className: t, children: e, variant: n, size: r, ...i }, o) => {
  const s = Y.useContext(u2);
  return /* @__PURE__ */ p(
    xu.Item,
    {
      ref: o,
      className: G(
        c2({
          variant: s.variant || n,
          size: s.size || r
        }),
        t
      ),
      ...i,
      children: e
    }
  );
});
Dc.displayName = xu.Item.displayName;
const id = (t) => t === "asc" ? /* @__PURE__ */ p(a1, { className: "tw-ms-2 tw-h-4 tw-w-4" }) : t === "desc" ? /* @__PURE__ */ p(l1, { className: "tw-ms-2 tw-h-4 tw-w-4" }) : /* @__PURE__ */ p(c1, { className: "tw-ms-2 tw-h-4 tw-w-4" }), QL = (t) => ({
  accessorKey: "item",
  accessorFn: (e) => e.items[0],
  header: ({ column: e }) => /* @__PURE__ */ q(Pe, { variant: "ghost", onClick: () => e.toggleSorting(void 0), children: [
    t,
    id(e.getIsSorted())
  ] })
}), zR = (t, e) => ({
  accessorKey: `item${e}`,
  accessorFn: (n) => n.items[e],
  header: ({ column: n }) => /* @__PURE__ */ q(Pe, { variant: "ghost", onClick: () => n.toggleSorting(void 0), children: [
    t,
    id(n.getIsSorted())
  ] })
}), ZL = (t) => ({
  accessorKey: "count",
  header: ({ column: e }) => /* @__PURE__ */ p("div", { className: "tw-flex tw-justify-end tw-tabular-nums", children: /* @__PURE__ */ q(Pe, { variant: "ghost", onClick: () => e.toggleSorting(void 0), children: [
    t,
    id(e.getIsSorted())
  ] }) }),
  cell: ({ row: e }) => /* @__PURE__ */ p("div", { className: "tw-flex tw-justify-end", children: e.getValue("count") })
}), ff = (t, e, n, r, i, o) => {
  let s = [...n];
  t.forEach((l) => {
    e === "approved" ? s.includes(l) || s.push(l) : s = s.filter((c) => c !== l);
  }), r(s);
  let a = [...i];
  t.forEach((l) => {
    e === "unapproved" ? a.includes(l) || a.push(l) : a = a.filter((c) => c !== l);
  }), o(a);
}, e3 = (t, e, n, r, i) => ({
  accessorKey: "status",
  header: ({ column: o }) => /* @__PURE__ */ p("div", { className: "tw-flex tw-justify-center", children: /* @__PURE__ */ q(Pe, { variant: "ghost", onClick: () => o.toggleSorting(void 0), children: [
    t,
    id(o.getIsSorted())
  ] }) }),
  cell: ({ row: o }) => {
    const s = o.getValue("status"), a = o.getValue("item");
    return /* @__PURE__ */ q(d2, { value: s, variant: "outline", type: "single", children: [
      /* @__PURE__ */ p(
        Dc,
        {
          onClick: (l) => {
            l.stopPropagation(), ff(
              [a],
              "approved",
              e,
              n,
              r,
              i
            );
          },
          value: "approved",
          children: /* @__PURE__ */ p(i1, {})
        }
      ),
      /* @__PURE__ */ p(
        Dc,
        {
          onClick: (l) => {
            l.stopPropagation(), ff(
              [a],
              "unapproved",
              e,
              n,
              r,
              i
            );
          },
          value: "unapproved",
          children: /* @__PURE__ */ p(o1, {})
        }
      ),
      /* @__PURE__ */ p(
        Dc,
        {
          onClick: (l) => {
            l.stopPropagation(), ff(
              [a],
              "unknown",
              e,
              n,
              r,
              i
            );
          },
          value: "unknown",
          children: /* @__PURE__ */ p(s1, {})
        }
      )
    ] });
  }
}), t3 = (t) => t.split(/(?:\r?\n|\r)|(?=(?:\\(?:v|c|id)))/g), n3 = (t) => {
  const e = /^\\[vc]\s+(\d+)/, n = t.match(e);
  if (n)
    return +n[1];
}, r3 = (t) => {
  const e = t.match(/^\\id\s+([A-Za-z]+)/);
  return e ? e[1] : "";
}, VR = (t, e, n) => n.includes(t) ? "unapproved" : e.includes(t) ? "approved" : "unknown", i3 = Object.freeze([
  "%webView_inventory_all%",
  "%webView_inventory_approved%",
  "%webView_inventory_unapproved%",
  "%webView_inventory_unknown%",
  "%webView_inventory_scope_currentBook%",
  "%webView_inventory_scope_chapter%",
  "%webView_inventory_scope_verse%",
  "%webView_inventory_filter_text%",
  "%webView_inventory_show_additional_items%",
  "%webView_inventory_occurrences_table_header_reference%",
  "%webView_inventory_occurrences_table_header_occurrence%",
  "%webView_inventory_no_results%"
]), HR = (t, e, n) => {
  let r = t;
  return e !== "all" && (r = r.filter(
    (i) => e === "approved" && i.status === "approved" || e === "unapproved" && i.status === "unapproved" || e === "unknown" && i.status === "unknown"
  )), n !== "" && (r = r.filter((i) => i.items[0].includes(n))), r;
}, WR = (t, e, n) => {
  const r = [];
  return t.forEach((i) => {
    const o = r.find(
      (s) => Bh(
        s.items,
        Sd(i.inventoryText) ? [i.inventoryText] : i.inventoryText
      )
    );
    if (o)
      o.count += 1, o.occurrences.push({
        reference: i.verseRef,
        text: i.verse
      });
    else {
      const s = {
        items: Sd(i.inventoryText) ? [i.inventoryText] : i.inventoryText,
        count: 1,
        status: VR(
          Sd(i.inventoryText) ? i.inventoryText : i.inventoryText[0],
          e,
          n
        ),
        occurrences: [
          {
            reference: i.verseRef,
            text: i.verse
          }
        ]
      };
      r.push(s);
    }
  }), r;
}, Pr = (t, e) => t[e] ?? e;
function o3({
  inventoryItems: t,
  setVerseRef: e,
  localizedStrings: n,
  additionalItemsLabels: r,
  approvedItems: i,
  unapprovedItems: o,
  scope: s,
  onScopeChange: a,
  columns: l,
  id: c,
  areInventoryItemsLoading: u = !1
}) {
  const f = Pr(n, "%webView_inventory_all%"), d = Pr(n, "%webView_inventory_approved%"), h = Pr(n, "%webView_inventory_unapproved%"), g = Pr(n, "%webView_inventory_unknown%"), w = Pr(n, "%webView_inventory_scope_currentBook%"), v = Pr(n, "%webView_inventory_scope_chapter%"), _ = Pr(n, "%webView_inventory_scope_verse%"), b = Pr(n, "%webView_inventory_filter_text%"), C = Pr(
    n,
    "%webView_inventory_show_additional_items%"
  ), D = Pr(n, "%webView_inventory_no_results%"), [R, N] = fe(!1), [L, M] = fe("all"), [O, j] = fe(""), [k, I] = fe([]), S = Ne(() => {
    const K = t ?? [];
    return K.length === 0 ? [] : WR(K, i, o);
  }, [t, i, o]), P = Ne(() => {
    if (R) return S;
    const K = [];
    return S.forEach((ne) => {
      const re = ne.items[0], te = K.find(
        (Q) => Q.items[0] === re
      );
      te ? (te.count += ne.count, te.occurrences = te.occurrences.concat(ne.occurrences)) : K.push({
        items: [re],
        count: ne.count,
        occurrences: ne.occurrences,
        status: ne.status
      });
    }), K;
  }, [R, S]), T = Ne(() => P.length === 0 ? [] : HR(P, L, O), [P, L, O]), A = Ne(() => {
    var re, te;
    if (!R) return l;
    const K = (re = r == null ? void 0 : r.tableHeaders) == null ? void 0 : re.length;
    if (!K) return l;
    const ne = [];
    for (let Q = 0; Q < K; Q++)
      ne.push(
        zR(
          ((te = r == null ? void 0 : r.tableHeaders) == null ? void 0 : te[Q]) || "Additional Item",
          Q + 1
        )
      );
    return [...ne, ...l];
  }, [r == null ? void 0 : r.tableHeaders, l, R]);
  ue(() => {
    T.length === 0 ? I([]) : T.length === 1 && I(T[0].items);
  }, [T]);
  const B = (K, ne) => {
    ne.setRowSelection(() => {
      const re = {};
      return re[K.index] = !0, re;
    }), I(K.original.items);
  }, V = (K) => {
    if (K === "book" || K === "chapter" || K === "verse")
      a(K);
    else
      throw new Error(`Invalid scope value: ${K}`);
  }, J = (K) => {
    if (K === "all" || K === "approved" || K === "unapproved" || K === "unknown")
      M(K);
    else
      throw new Error(`Invalid status filter value: ${K}`);
  }, H = Ne(() => {
    if (P.length === 0 || k.length === 0) return [];
    const K = P.filter((ne) => Bh(
      R ? ne.items : [ne.items[0]],
      k
    ));
    if (K.length > 1) throw new Error("Selected item is not unique");
    return K.length === 0 ? [] : K[0].occurrences;
  }, [k, R, P]);
  return /* @__PURE__ */ q("div", { id: c, className: "pr-twp tw-flex tw-h-full tw-flex-col", children: [
    /* @__PURE__ */ q("div", { className: "tw-flex tw-items-stretch", children: [
      /* @__PURE__ */ q(
        Ns,
        {
          onValueChange: (K) => J(K),
          defaultValue: L,
          children: [
            /* @__PURE__ */ p(Oo, { className: "tw-m-1", children: /* @__PURE__ */ p(Ss, { placeholder: "Select filter" }) }),
            /* @__PURE__ */ q(Mo, { children: [
              /* @__PURE__ */ p(er, { value: "all", children: f }),
              /* @__PURE__ */ p(er, { value: "approved", children: d }),
              /* @__PURE__ */ p(er, { value: "unapproved", children: h }),
              /* @__PURE__ */ p(er, { value: "unknown", children: g })
            ] })
          ]
        }
      ),
      /* @__PURE__ */ q(Ns, { onValueChange: (K) => V(K), defaultValue: s, children: [
        /* @__PURE__ */ p(Oo, { className: "tw-m-1", children: /* @__PURE__ */ p(Ss, { placeholder: "Select scope" }) }),
        /* @__PURE__ */ q(Mo, { children: [
          /* @__PURE__ */ p(er, { value: "book", children: w }),
          /* @__PURE__ */ p(er, { value: "chapter", children: v }),
          /* @__PURE__ */ p(er, { value: "verse", children: _ })
        ] })
      ] }),
      /* @__PURE__ */ p(
        Fl,
        {
          className: "tw-m-1 tw-rounded-md tw-border",
          placeholder: b,
          value: O,
          onChange: (K) => {
            j(K.target.value);
          }
        }
      ),
      r && /* @__PURE__ */ q("div", { className: "tw-m-1 tw-flex tw-items-center tw-rounded-md tw-border", children: [
        /* @__PURE__ */ p(
          Tg,
          {
            className: "tw-m-1",
            checked: R,
            onCheckedChange: (K) => {
              N(K);
            }
          }
        ),
        /* @__PURE__ */ p(Vt, { className: "tw-m-1 tw-flex-shrink-0 tw-whitespace-nowrap", children: (r == null ? void 0 : r.checkboxText) ?? C })
      ] })
    ] }),
    /* @__PURE__ */ p("div", { className: "tw-m-1 tw-flex-1 tw-overflow-auto tw-rounded-md tw-border", children: /* @__PURE__ */ p(
      NC,
      {
        columns: A,
        data: T,
        onRowClickHandler: B,
        stickyHeader: !0,
        isLoading: u,
        noResultsMessage: D
      }
    ) }),
    H.length > 0 && /* @__PURE__ */ p("div", { className: "tw-m-1 tw-flex-1 tw-overflow-auto tw-rounded-md tw-border", children: /* @__PURE__ */ p(
      jR,
      {
        occurrenceData: H,
        setScriptureReference: e,
        localizedStrings: n
      }
    ) })
  ] });
}
const Ag = Y.forwardRef(({ className: t, orientation: e = "horizontal", decorative: n = !0, ...r }, i) => /* @__PURE__ */ p(
  yy.Root,
  {
    ref: i,
    decorative: n,
    orientation: e,
    className: G(
      "pr-twp tw-shrink-0 tw-bg-border",
      e === "horizontal" ? "tw-h-[1px] tw-w-full" : "tw-h-full tw-w-[1px]",
      t
    ),
    ...r
  }
));
Ag.displayName = yy.Root.displayName;
const Dg = ml.Provider, Og = ml.Root, Mg = ml.Trigger, od = Y.forwardRef(({ className: t, sideOffset: e = 4, ...n }, r) => /* @__PURE__ */ p(
  ml.Content,
  {
    ref: r,
    sideOffset: e,
    className: G(
      "pr-twp tw-z-50 tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-px-3 tw-py-1.5 tw-text-sm tw-text-popover-foreground tw-shadow-md tw-animate-in tw-fade-in-0 tw-zoom-in-95 data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=closed]:tw-zoom-out-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...n
  }
));
od.displayName = ml.Content.displayName;
const KR = "16rem", GR = "3rem", f2 = Y.createContext(void 0);
function sd() {
  const t = Y.useContext(f2);
  if (!t)
    throw new Error("useSidebar must be used within a SidebarProvider.");
  return t;
}
const h2 = Y.forwardRef(
  ({
    defaultOpen: t = !0,
    open: e,
    onOpenChange: n,
    className: r,
    style: i,
    children: o,
    side: s = "primary",
    ...a
  }, l) => {
    const [c, u] = Y.useState(t), f = e ?? c, d = Y.useCallback(
      (C) => {
        const D = typeof C == "function" ? C(f) : C;
        n ? n(D) : u(D);
      },
      [n, f]
    ), h = Y.useCallback(() => d((C) => !C), [d]), g = f ? "expanded" : "collapsed", _ = Jt() === "ltr" ? s : s === "primary" ? "secondary" : "primary", b = Y.useMemo(
      () => ({
        state: g,
        open: f,
        setOpen: d,
        toggleSidebar: h,
        side: _
      }),
      [g, f, d, h, _]
    );
    return /* @__PURE__ */ p(f2.Provider, { value: b, children: /* @__PURE__ */ p(Dg, { delayDuration: 0, children: /* @__PURE__ */ p(
      "div",
      {
        style: (
          // eslint-disable-next-line no-type-assertion/no-type-assertion
          {
            "--sidebar-width": KR,
            "--sidebar-width-icon": GR,
            ...i
          }
        ),
        className: G(
          // Removed tw-min-h-svh
          "tw-group/sidebar-wrapper pr-twp tw-flex tw-w-full has-[[data-variant=inset]]:tw-bg-sidebar",
          r
        ),
        ref: l,
        ...a,
        children: o
      }
    ) }) });
  }
);
h2.displayName = "SidebarProvider";
const p2 = Y.forwardRef(({ variant: t = "sidebar", collapsible: e = "offcanvas", className: n, children: r, ...i }, o) => {
  const s = sd();
  return e === "none" ? /* @__PURE__ */ p(
    "div",
    {
      className: G(
        "tw-flex tw-h-full tw-w-[--sidebar-width] tw-flex-col tw-bg-sidebar tw-text-sidebar-foreground",
        n
      ),
      ref: o,
      ...i,
      children: r
    }
  ) : /* @__PURE__ */ q(
    "div",
    {
      ref: o,
      className: "tw-group tw-peer tw-hidden tw-text-sidebar-foreground md:tw-block",
      "data-state": s.state,
      "data-collapsible": s.state === "collapsed" ? e : "",
      "data-variant": t,
      "data-side": s.side,
      children: [
        /* @__PURE__ */ p(
          "div",
          {
            className: G(
              "tw-relative tw-h-svh tw-w-[--sidebar-width] tw-bg-transparent tw-transition-[width] tw-duration-200 tw-ease-linear",
              "group-data-[collapsible=offcanvas]:tw-w-0",
              "group-data-[side=secondary]:tw-rotate-180",
              t === "floating" || t === "inset" ? "group-data-[collapsible=icon]:tw-w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]" : "group-data-[collapsible=icon]:tw-w-[--sidebar-width-icon]"
            )
          }
        ),
        /* @__PURE__ */ p(
          "div",
          {
            className: G(
              // CUSTOM: Switched tw-fixed to tw-absolute here to scope the sidebar inside of it's container
              "tw-absolute tw-inset-y-0 tw-z-10 tw-hidden tw-h-svh tw-w-[--sidebar-width] tw-transition-[left,right,width] tw-duration-200 tw-ease-linear md:tw-flex",
              s.side === "primary" ? "tw-left-0 group-data-[collapsible=offcanvas]:tw-left-[calc(var(--sidebar-width)*-1)]" : "tw-right-0 group-data-[collapsible=offcanvas]:tw-right-[calc(var(--sidebar-width)*-1)]",
              // Adjust the padding for floating and inset variants.
              t === "floating" || t === "inset" ? "tw-p-2 group-data-[collapsible=icon]:tw-w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]" : "group-data-[collapsible=icon]:tw-w-[--sidebar-width-icon] group-data-[side=primary]:tw-border-r group-data-[side=secondary]:tw-border-l",
              n
            ),
            ...i,
            children: /* @__PURE__ */ p(
              "div",
              {
                "data-sidebar": "sidebar",
                className: "tw-flex tw-h-full tw-w-full tw-flex-col tw-bg-sidebar group-data-[variant=floating]:tw-rounded-lg group-data-[variant=floating]:tw-border group-data-[variant=floating]:tw-border-sidebar-border group-data-[variant=floating]:tw-shadow",
                children: r
              }
            )
          }
        )
      ]
    }
  );
});
p2.displayName = "Sidebar";
const JR = Y.forwardRef(({ className: t, onClick: e, ...n }, r) => {
  const i = sd();
  return /* @__PURE__ */ q(
    Pe,
    {
      ref: r,
      "data-sidebar": "trigger",
      variant: "ghost",
      size: "icon",
      className: G("tw-h-7 tw-w-7", t),
      onClick: (o) => {
        e == null || e(o), i.toggleSidebar();
      },
      ...n,
      children: [
        i.side === "primary" ? /* @__PURE__ */ p(u1, {}) : /* @__PURE__ */ p(d1, {}),
        /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Toggle Sidebar" })
      ]
    }
  );
});
JR.displayName = "SidebarTrigger";
const XR = Y.forwardRef(
  ({ className: t, ...e }, n) => {
    const { toggleSidebar: r } = sd();
    return /* @__PURE__ */ p(
      "button",
      {
        type: "button",
        ref: n,
        "data-sidebar": "rail",
        "aria-label": "Toggle Sidebar",
        tabIndex: -1,
        onClick: r,
        title: "Toggle Sidebar",
        className: G(
          "tw-absolute tw-inset-y-0 tw-z-20 tw-hidden tw-w-4 tw--translate-x-1/2 tw-transition-all tw-ease-linear after:tw-absolute after:tw-inset-y-0 after:tw-left-1/2 after:tw-w-[2px] hover:after:tw-bg-sidebar-border group-data-[side=primary]:tw--right-4 group-data-[side=secondary]:tw-left-0 sm:tw-flex",
          "[[data-side=secondary]_&]:tw-cursor-e-resize [[data-side=secondary]_&]:tw-cursor-w-resize",
          "[[data-side=primary][data-state=collapsed]_&]:tw-cursor-e-resize [[data-side=secondary][data-state=collapsed]_&]:tw-cursor-w-resize",
          "group-data-[collapsible=offcanvas]:tw-translate-x-0 group-data-[collapsible=offcanvas]:after:tw-left-full group-data-[collapsible=offcanvas]:hover:tw-bg-sidebar",
          "[[data-side=primary][data-collapsible=offcanvas]_&]:tw--right-2",
          "[[data-side=secondary][data-collapsible=offcanvas]_&]:tw--left-2",
          t
        ),
        ...e
      }
    );
  }
);
XR.displayName = "SidebarRail";
const g2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "main",
    {
      ref: n,
      className: G(
        // CUSTOM: Removed tw-min-h-svh
        "tw-relative tw-flex tw-flex-1 tw-flex-col tw-bg-background",
        "peer-data-[variant=inset]:tw-min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:tw-m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:tw-ml-2 md:peer-data-[variant=inset]:tw-ml-0 md:peer-data-[variant=inset]:tw-rounded-xl md:peer-data-[variant=inset]:tw-shadow",
        t
      ),
      ...e
    }
  )
);
g2.displayName = "SidebarInset";
const YR = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Fl,
  {
    ref: n,
    "data-sidebar": "input",
    className: G(
      "tw-h-8 tw-w-full tw-bg-background tw-shadow-none focus-visible:tw-ring-2 focus-visible:tw-ring-sidebar-ring",
      t
    ),
    ...e
  }
));
YR.displayName = "SidebarInput";
const QR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "header",
      className: G("tw-flex tw-flex-col tw-gap-2 tw-p-2", t),
      ...e
    }
  )
);
QR.displayName = "SidebarHeader";
const ZR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "footer",
      className: G("tw-flex tw-flex-col tw-gap-2 tw-p-2", t),
      ...e
    }
  )
);
ZR.displayName = "SidebarFooter";
const eP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Ag,
  {
    ref: n,
    "data-sidebar": "separator",
    className: G("tw-mx-2 tw-w-auto tw-bg-sidebar-border", t),
    ...e
  }
));
eP.displayName = "SidebarSeparator";
const w2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "content",
      className: G(
        "tw-flex tw-min-h-0 tw-flex-1 tw-flex-col tw-gap-2 tw-overflow-auto group-data-[collapsible=icon]:tw-overflow-hidden",
        t
      ),
      ...e
    }
  )
);
w2.displayName = "SidebarContent";
const Ih = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "group",
      className: G("tw-relative tw-flex tw-w-full tw-min-w-0 tw-flex-col tw-p-2", t),
      ...e
    }
  )
);
Ih.displayName = "SidebarGroup";
const Rh = Y.forwardRef(({ className: t, asChild: e = !1, ...n }, r) => /* @__PURE__ */ p(
  e ? Js : "div",
  {
    ref: r,
    "data-sidebar": "group-label",
    className: G(
      "tw-flex tw-h-8 tw-shrink-0 tw-items-center tw-rounded-md tw-px-2 tw-text-xs tw-font-medium tw-text-sidebar-foreground/70 tw-outline-none tw-ring-sidebar-ring tw-transition-[margin,opa] tw-duration-200 tw-ease-linear focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
      "group-data-[collapsible=icon]:tw--mt-8 group-data-[collapsible=icon]:tw-opacity-0",
      t
    ),
    ...n
  }
));
Rh.displayName = "SidebarGroupLabel";
const tP = Y.forwardRef(({ className: t, asChild: e = !1, ...n }, r) => /* @__PURE__ */ p(
  e ? Js : "button",
  {
    ref: r,
    "data-sidebar": "group-action",
    className: G(
      "tw-absolute tw-right-3 tw-top-3.5 tw-flex tw-aspect-square tw-w-5 tw-items-center tw-justify-center tw-rounded-md tw-p-0 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring tw-transition-transform hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
      // Increases the hit area of the button on mobile.
      "after:tw-absolute after:tw--inset-2 after:md:tw-hidden",
      "group-data-[collapsible=icon]:tw-hidden",
      t
    ),
    ...n
  }
));
tP.displayName = "SidebarGroupAction";
const Ph = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "group-content",
      className: G("tw-w-full tw-text-sm", t),
      ...e
    }
  )
);
Ph.displayName = "SidebarGroupContent";
const m2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "ul",
    {
      ref: n,
      "data-sidebar": "menu",
      className: G("tw-flex tw-w-full tw-min-w-0 tw-flex-col tw-gap-1", t),
      ...e
    }
  )
);
m2.displayName = "SidebarMenu";
const b2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "li",
    {
      ref: n,
      "data-sidebar": "menu-item",
      className: G("tw-group/menu-item tw-relative", t),
      ...e
    }
  )
);
b2.displayName = "SidebarMenuItem";
const nP = Ji(
  "tw-peer/menu-button tw-flex tw-w-full tw-items-center tw-gap-2 tw-overflow-hidden tw-rounded-md tw-p-2 tw-text-left tw-text-sm tw-outline-none tw-ring-sidebar-ring tw-transition-[width,height,padding] hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 active:tw-bg-sidebar-accent active:tw-text-sidebar-accent-foreground disabled:tw-pointer-events-none disabled:tw-opacity-50 tw-group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:tw-pointer-events-none aria-disabled:tw-opacity-50 data-[active=true]:tw-font-medium data-[active=true]:tw-text-sidebar-accent-foreground data-[active=true]:tw-bg-sidebar-accent data-[state=open]:hover:tw-bg-sidebar-accent data-[state=open]:hover:tw-text-sidebar-accent-foreground group-data-[collapsible=icon]:tw-!size-8 group-data-[collapsible=icon]:tw-!p-2 [&>span:last-child]:tw-truncate [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
  {
    variants: {
      variant: {
        default: "hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground",
        outline: "tw-bg-background tw-shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground hover:tw-shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]"
      },
      size: {
        default: "tw-h-8 tw-text-sm",
        sm: "tw-h-7 tw-text-xs",
        lg: "tw-h-12 tw-text-sm group-data-[collapsible=icon]:tw-!p-0"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), y2 = Y.forwardRef(
  ({
    asChild: t = !1,
    isActive: e = !1,
    variant: n = "default",
    size: r = "default",
    tooltip: i,
    className: o,
    ...s
  }, a) => {
    const l = t ? Js : "button", { state: c } = sd(), u = /* @__PURE__ */ p(
      l,
      {
        ref: a,
        "data-sidebar": "menu-button",
        "data-size": r,
        "data-active": e,
        className: G(nP({ variant: n, size: r }), o),
        ...s
      }
    );
    return i ? (typeof i == "string" && (i = {
      children: i
    }), /* @__PURE__ */ q(Og, { children: [
      /* @__PURE__ */ p(Mg, { asChild: !0, children: u }),
      /* @__PURE__ */ p(od, { side: "right", align: "center", hidden: c !== "collapsed", ...i })
    ] })) : u;
  }
);
y2.displayName = "SidebarMenuButton";
const rP = Y.forwardRef(({ className: t, asChild: e = !1, showOnHover: n = !1, ...r }, i) => /* @__PURE__ */ p(
  e ? Js : "button",
  {
    ref: i,
    "data-sidebar": "menu-action",
    className: G(
      "tw-peer-hover/menu-button:text-sidebar-accent-foreground tw-absolute tw-right-1 tw-top-1.5 tw-flex tw-aspect-square tw-w-5 tw-items-center tw-justify-center tw-rounded-md tw-p-0 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring tw-transition-transform hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
      // Increases the hit area of the button on mobile.
      "after:tw-absolute after:tw--inset-2 after:md:tw-hidden",
      "tw-peer-data-[size=sm]/menu-button:top-1",
      "tw-peer-data-[size=default]/menu-button:top-1.5",
      "tw-peer-data-[size=lg]/menu-button:top-2.5",
      "group-data-[collapsible=icon]:tw-hidden",
      n && "tw-group-focus-within/menu-item:opacity-100 tw-group-hover/menu-item:opacity-100 tw-peer-data-[active=true]/menu-button:text-sidebar-accent-foreground data-[state=open]:tw-opacity-100 md:tw-opacity-0",
      t
    ),
    ...r
  }
));
rP.displayName = "SidebarMenuAction";
const iP = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "menu-badge",
      className: G(
        "tw-pointer-events-none tw-absolute tw-right-1 tw-flex tw-h-5 tw-min-w-5 tw-select-none tw-items-center tw-justify-center tw-rounded-md tw-px-1 tw-text-xs tw-font-medium tw-tabular-nums tw-text-sidebar-foreground",
        "tw-peer-hover/menu-button:text-sidebar-accent-foreground tw-peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
        "tw-peer-data-[size=sm]/menu-button:top-1",
        "tw-peer-data-[size=default]/menu-button:top-1.5",
        "tw-peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:tw-hidden",
        t
      ),
      ...e
    }
  )
);
iP.displayName = "SidebarMenuBadge";
const oP = Y.forwardRef(({ className: t, showIcon: e = !1, ...n }, r) => {
  const i = Y.useMemo(() => `${Math.floor(Math.random() * 40) + 50}%`, []);
  return /* @__PURE__ */ q(
    "div",
    {
      ref: r,
      "data-sidebar": "menu-skeleton",
      className: G("tw-flex tw-h-8 tw-items-center tw-gap-2 tw-rounded-md tw-px-2", t),
      ...n,
      children: [
        e && /* @__PURE__ */ p(kf, { className: "tw-size-4 tw-rounded-md", "data-sidebar": "menu-skeleton-icon" }),
        /* @__PURE__ */ p(
          kf,
          {
            className: "tw-h-4 tw-max-w-[--skeleton-width] tw-flex-1",
            "data-sidebar": "menu-skeleton-text",
            style: (
              // eslint-disable-next-line no-type-assertion/no-type-assertion
              {
                "--skeleton-width": i
              }
            )
          }
        )
      ]
    }
  );
});
oP.displayName = "SidebarMenuSkeleton";
const sP = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "ul",
    {
      ref: n,
      "data-sidebar": "menu-sub",
      className: G(
        "tw-mx-3.5 tw-flex tw-min-w-0 tw-translate-x-px tw-flex-col tw-gap-1 tw-border-l tw-border-sidebar-border tw-px-2.5 tw-py-0.5",
        "group-data-[collapsible=icon]:tw-hidden",
        t
      ),
      ...e
    }
  )
);
sP.displayName = "SidebarMenuSub";
const aP = Y.forwardRef(
  ({ ...t }, e) => /* @__PURE__ */ p("li", { ref: e, ...t })
);
aP.displayName = "SidebarMenuSubItem";
const lP = Y.forwardRef(({ asChild: t = !1, size: e = "md", isActive: n, className: r, ...i }, o) => /* @__PURE__ */ p(
  t ? Js : "a",
  {
    ref: o,
    "data-sidebar": "menu-sub-button",
    "data-size": e,
    "data-active": n,
    className: G(
      "tw-flex tw-h-7 tw-min-w-0 tw--translate-x-px tw-items-center tw-gap-2 tw-overflow-hidden tw-rounded-md tw-px-2 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 active:tw-bg-sidebar-accent active:tw-text-sidebar-accent-foreground disabled:tw-pointer-events-none disabled:tw-opacity-50 aria-disabled:tw-pointer-events-none aria-disabled:tw-opacity-50 [&>span:last-child]:tw-truncate [&>svg]:tw-size-4 [&>svg]:tw-shrink-0 [&>svg]:tw-text-sidebar-accent-foreground",
      "data-[active=true]:tw-bg-sidebar-accent data-[active=true]:tw-text-sidebar-accent-foreground",
      e === "sm" && "tw-text-xs",
      e === "md" && "tw-text-sm",
      "group-data-[collapsible=icon]:tw-hidden",
      r
    ),
    ...i
  }
));
lP.displayName = "SidebarMenuSubButton";
function cP({
  id: t,
  extensionLabels: e,
  projectInfo: n,
  handleSelectSidebarItem: r,
  selectedSidebarItem: i,
  extensionsSidebarGroupLabel: o,
  projectsSidebarGroupLabel: s,
  buttonPlaceholderText: a,
  className: l
}) {
  const c = be(
    (d, h) => {
      r(d, h);
    },
    [r]
  ), u = be(
    (d) => {
      const h = n.find((g) => g.projectId === d);
      return h ? h.projectName : d;
    },
    [n]
  ), f = be(
    (d) => !i.projectId && d === i.label,
    [i]
  );
  return /* @__PURE__ */ p(
    p2,
    {
      id: t,
      collapsible: "none",
      variant: "inset",
      className: G("tw-w-96 tw-gap-2 tw-overflow-y-auto", l),
      children: /* @__PURE__ */ q(w2, { children: [
        /* @__PURE__ */ q(Ih, { children: [
          /* @__PURE__ */ p(Rh, { className: "tw-text-sm", children: o }),
          /* @__PURE__ */ p(Ph, { children: /* @__PURE__ */ p(m2, { children: Object.entries(e).map(([d, h]) => /* @__PURE__ */ p(b2, { children: /* @__PURE__ */ p(
            y2,
            {
              onClick: () => c(d),
              isActive: f(d),
              children: /* @__PURE__ */ p("span", { className: "tw-pl-3", children: h })
            }
          ) }, d)) }) })
        ] }),
        /* @__PURE__ */ q(Ih, { children: [
          /* @__PURE__ */ p(Rh, { className: "tw-text-sm", children: s }),
          /* @__PURE__ */ p(Ph, { className: "tw-pl-3", children: /* @__PURE__ */ p(
            Cf,
            {
              buttonVariant: "ghost",
              buttonClassName: G("tw-w-full", {
                "tw-bg-sidebar-accent tw-text-sidebar-accent-foreground": i == null ? void 0 : i.projectId
              }),
              popoverContentClassName: "tw-z-[1000]",
              options: n.flatMap((d) => d.projectId),
              getOptionLabel: u,
              buttonPlaceholder: a,
              onChange: (d) => {
                const h = u(d);
                c(h, d);
              },
              value: (i == null ? void 0 : i.projectId) ?? void 0,
              icon: /* @__PURE__ */ p(f1, {})
            }
          ) })
        ] })
      ] })
    }
  );
}
const Ig = Yn(
  ({ value: t, onSearch: e, placeholder: n, isFullWidth: r, className: i, isDisabled: o = !1, id: s }, a) => {
    const l = Jt();
    return /* @__PURE__ */ q("div", { id: s, className: G("tw-relative", { "tw-w-full": r }, i), children: [
      /* @__PURE__ */ p(
        dy,
        {
          className: G(
            "tw-absolute tw-top-1/2 tw-h-4 tw-w-4 tw--translate-y-1/2 tw-transform tw-opacity-50",
            { "tw-right-3": l === "rtl" },
            { "tw-left-3": l === "ltr" }
          )
        }
      ),
      /* @__PURE__ */ p(
        Fl,
        {
          ref: a,
          className: "tw-w-full tw-text-ellipsis tw-pe-9 tw-ps-9",
          placeholder: n,
          value: t,
          onChange: (c) => e(c.target.value),
          disabled: o
        }
      ),
      t && /* @__PURE__ */ q(
        Pe,
        {
          variant: "ghost",
          size: "icon",
          className: G(
            "tw-absolute tw-top-1/2 tw-h-7 tw--translate-y-1/2 tw-transform hover:tw-bg-transparent",
            { "tw-left-0": l === "rtl" },
            { "tw-right-0": l === "ltr" }
          ),
          onClick: () => {
            e("");
          },
          children: [
            /* @__PURE__ */ p(yu, { className: "tw-h-4 tw-w-4" }),
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Clear" })
          ]
        }
      )
    ] });
  }
);
Ig.displayName = "SearchBar";
function s3({
  id: t,
  extensionLabels: e,
  projectInfo: n,
  children: r,
  handleSelectSidebarItem: i,
  selectedSidebarItem: o,
  searchValue: s,
  onSearch: a,
  extensionsSidebarGroupLabel: l,
  projectsSidebarGroupLabel: c,
  buttonPlaceholderText: u
}) {
  return /* @__PURE__ */ q("div", { className: "tw-box-border tw-flex tw-h-full tw-flex-col", children: [
    /* @__PURE__ */ p("div", { className: "tw-box-border tw-flex tw-items-center tw-justify-center tw-py-4", children: /* @__PURE__ */ p(
      Ig,
      {
        className: "tw-w-9/12",
        value: s,
        onSearch: a,
        placeholder: "Search app settings, extension settings, and project settings"
      }
    ) }),
    /* @__PURE__ */ q(
      h2,
      {
        id: t,
        className: "tw-h-full tw-flex-1 tw-gap-4 tw-overflow-auto tw-border-t",
        children: [
          /* @__PURE__ */ p(
            cP,
            {
              className: "tw-w-1/2 tw-min-w-[140px] tw-max-w-[220px] tw-border-e",
              extensionLabels: e,
              projectInfo: n,
              handleSelectSidebarItem: i,
              selectedSidebarItem: o,
              extensionsSidebarGroupLabel: l,
              projectsSidebarGroupLabel: c,
              buttonPlaceholderText: u
            }
          ),
          /* @__PURE__ */ p(g2, { className: "tw-min-w-[215px]", children: r })
        ]
      }
    )
  ] });
}
const Di = "scrBook", uP = "scrRef", wo = "source", dP = "details", fP = "Scripture Reference", hP = "Scripture Book", v2 = "Type", pP = "Details";
function gP(t, e) {
  const n = e ?? !1;
  return [
    {
      accessorFn: (r) => `${r.start.book} ${r.start.chapterNum}:${r.start.verseNum}`,
      id: Di,
      header: (t == null ? void 0 : t.scriptureReferenceColumnName) ?? fP,
      cell: (r) => {
        const i = r.row.original;
        return r.row.getIsGrouped() ? nt.bookIdToEnglishName(i.start.book) : r.row.groupingColumnId === Di ? gs(i.start) : void 0;
      },
      getGroupingValue: (r) => nt.bookIdToNumber(r.start.book),
      sortingFn: (r, i) => bf(r.original.start, i.original.start),
      enableGrouping: !0
    },
    {
      accessorFn: (r) => gs(r.start),
      id: uP,
      header: void 0,
      cell: (r) => {
        const i = r.row.original;
        return r.row.getIsGrouped() ? void 0 : gs(i.start);
      },
      sortingFn: (r, i) => bf(r.original.start, i.original.start),
      enableGrouping: !1
    },
    {
      accessorFn: (r) => r.source.displayName,
      id: wo,
      header: n ? (t == null ? void 0 : t.typeColumnName) ?? v2 : void 0,
      cell: (r) => n || r.row.getIsGrouped() ? r.getValue() : void 0,
      getGroupingValue: (r) => r.source.id,
      sortingFn: (r, i) => r.original.source.displayName.localeCompare(i.original.source.displayName),
      enableGrouping: !0
    },
    {
      accessorFn: (r) => r.detail,
      id: dP,
      header: (t == null ? void 0 : t.detailsColumnName) ?? pP,
      cell: (r) => r.getValue(),
      enableGrouping: !1
    }
  ];
}
const wP = (t) => {
  if (!("offset" in t.start))
    throw new Error("No offset available in range start");
  if (t.end && !("offset" in t.end))
    throw new Error("No offset available in range end");
  const { offset: e } = t.start;
  let n = 0;
  return t.end && ({ offset: n } = t.end), !t.end || bf(t.start, t.end) === 0 ? `${Td(t.start)}+${e}` : `${Td(t.start)}+${e}-${Td(t.end)}+${n}`;
}, ay = (t) => `${wP({ start: t.start, end: t.end })} ${t.source.displayName} ${t.detail}`;
function a3({
  sources: t,
  showColumnHeaders: e = !1,
  showSourceColumn: n = !1,
  scriptureReferenceColumnName: r,
  scriptureBookGroupName: i,
  typeColumnName: o,
  detailsColumnName: s,
  onRowSelected: a,
  id: l
}) {
  const [c, u] = fe([]), [f, d] = fe([{ id: Di, desc: !1 }]), [h, g] = fe({}), w = Ne(
    () => t.flatMap((O) => O.data.map((j) => ({
      ...j,
      source: O.source
    }))),
    [t]
  ), v = Ne(
    () => gP(
      {
        scriptureReferenceColumnName: r,
        typeColumnName: o,
        detailsColumnName: s
      },
      n
    ),
    [r, o, s, n]
  );
  ue(() => {
    c.includes(wo) ? d([
      { id: wo, desc: !1 },
      { id: Di, desc: !1 }
    ]) : d([{ id: Di, desc: !1 }]);
  }, [c]);
  const _ = py({
    data: w,
    columns: v,
    state: {
      grouping: c,
      sorting: f,
      rowSelection: h
    },
    onGroupingChange: u,
    onSortingChange: d,
    onRowSelectionChange: g,
    getExpandedRowModel: D1(),
    getGroupedRowModel: A1(),
    getCoreRowModel: wy(),
    getSortedRowModel: gy(),
    getRowId: ay,
    autoResetExpanded: !1,
    enableMultiRowSelection: !1,
    enableSubRowSelection: !1
  });
  ue(() => {
    if (a) {
      const O = _.getSelectedRowModel().rowsById, j = Object.keys(O);
      if (j.length === 1) {
        const k = w.find((I) => ay(I) === j[0]) || void 0;
        k && a(k);
      }
    }
  }, [h, w, a, _]);
  const b = i ?? hP, C = o ?? v2, D = [
    { label: "No Grouping", value: [] },
    { label: `Group by ${b}`, value: [Di] },
    { label: `Group by ${C}`, value: [wo] },
    {
      label: `Group by ${b} and ${C}`,
      value: [Di, wo]
    },
    {
      label: `Group by ${C} and ${b}`,
      value: [wo, Di]
    }
  ], R = (O) => {
    u(JSON.parse(O));
  }, N = (O, j) => {
    !O.getIsGrouped() && !O.getIsSelected() && O.getToggleSelectedHandler()(j);
  }, L = (O, j) => O.getIsGrouped() ? "" : G("banded-row", j % 2 === 0 ? "even" : "odd"), M = (O, j, k) => {
    if (!((O == null ? void 0 : O.length) === 0 || j.depth < k.column.getGroupedIndex())) {
      if (j.getIsGrouped())
        switch (j.depth) {
          case 1:
            return "tw-ps-4";
          default:
            return;
        }
      switch (j.depth) {
        case 1:
          return "tw-ps-8";
        case 2:
          return "tw-ps-12";
        default:
          return;
      }
    }
  };
  return /* @__PURE__ */ q("div", { id: l, className: "pr-twp tw-flex tw-h-full tw-w-full tw-flex-col", children: [
    !e && /* @__PURE__ */ q(
      Ns,
      {
        value: JSON.stringify(c),
        onValueChange: (O) => {
          R(O);
        },
        children: [
          /* @__PURE__ */ p(Oo, { className: "tw-mb-1 tw-mt-2", children: /* @__PURE__ */ p(Ss, {}) }),
          /* @__PURE__ */ p(Mo, { position: "item-aligned", children: /* @__PURE__ */ p(gC, { children: D.map((O) => /* @__PURE__ */ p(er, { value: JSON.stringify(O.value), children: O.label }, O.label)) }) })
        ]
      }
    ),
    /* @__PURE__ */ q(Nu, { className: "tw-relative tw-flex tw-flex-col tw-overflow-y-auto tw-p-0", children: [
      e && /* @__PURE__ */ p(Su, { children: _.getHeaderGroups().map((O) => /* @__PURE__ */ p(hi, { children: O.headers.filter((j) => j.column.columnDef.header).map((j) => (
        /* For sticky column headers to work, we probably need to change the default definition of the shadcn Table component. See https://github.com/shadcn-ui/ui/issues/1151 */
        /* @__PURE__ */ p(Ja, { colSpan: j.colSpan, className: "top-0 tw-sticky", children: j.isPlaceholder ? void 0 : /* @__PURE__ */ q("div", { children: [
          j.column.getCanGroup() ? /* @__PURE__ */ p(
            Pe,
            {
              variant: "ghost",
              title: `Toggle grouping by ${j.column.columnDef.header}`,
              onClick: j.column.getToggleGroupingHandler(),
              type: "button",
              children: j.column.getIsGrouped() ? "🛑" : "👊 "
            }
          ) : void 0,
          " ",
          ja(j.column.columnDef.header, j.getContext())
        ] }) }, j.id)
      )) }, O.id)) }),
      /* @__PURE__ */ p(Tu, { children: _.getRowModel().rows.map((O, j) => {
        const k = Jt();
        return /* @__PURE__ */ p(
          hi,
          {
            "data-state": O.getIsSelected() ? "selected" : "",
            className: G(L(O, j)),
            onClick: (I) => N(O, I),
            children: O.getVisibleCells().map((I) => {
              if (!(I.getIsPlaceholder() || I.column.columnDef.enableGrouping && !I.getIsGrouped() && (I.column.columnDef.id !== wo || !n)))
                return /* @__PURE__ */ p(
                  vo,
                  {
                    className: G(
                      I.column.columnDef.id,
                      "tw-p-[1px]",
                      M(c, O, I)
                    ),
                    children: I.getIsGrouped() ? /* @__PURE__ */ q(
                      Pe,
                      {
                        variant: "link",
                        onClick: O.getToggleExpandedHandler(),
                        type: "button",
                        children: [
                          O.getIsExpanded() && /* @__PURE__ */ p(_u, {}),
                          !O.getIsExpanded() && (k === "ltr" ? /* @__PURE__ */ p(ks, {}) : /* @__PURE__ */ p(wf, {})),
                          " ",
                          ja(I.column.columnDef.cell, I.getContext()),
                          " (",
                          O.subRows.length,
                          ")"
                        ]
                      }
                    ) : ja(I.column.columnDef.cell, I.getContext())
                  },
                  I.id
                );
            })
          },
          O.id
        );
      }) })
    ] })
  ] });
}
const Rg = (t, e) => t.filter((n) => {
  try {
    return qa(n) === e;
  } catch {
    return !1;
  }
}), _2 = (t, e, n) => Rg(t, e).every((r) => n.includes(r));
function mP({
  section: t,
  availableBookIds: e,
  selectedBookIds: n,
  onToggle: r,
  localizedStrings: i
}) {
  const o = Rg(e, t).length === 0, s = i["%scripture_section_ot_short%"], a = i["%scripture_section_nt_short%"], l = i["%scripture_section_dc_short%"], c = i["%scripture_section_extra_short%"];
  return /* @__PURE__ */ p(
    Pe,
    {
      variant: "outline",
      size: "sm",
      onClick: () => r(t),
      className: G(
        _2(e, t, n) && !o && "tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/70 hover:tw-text-primary-foreground"
      ),
      disabled: o,
      children: eC(
        t,
        s,
        a,
        l,
        c
      )
    }
  );
}
const ly = 5, hf = 6;
function bP({
  availableBookInfo: t,
  selectedBookIds: e,
  onChangeSelectedBookIds: n,
  localizedStrings: r,
  localizedBookNames: i
}) {
  const o = r["%webView_book_selector_books_selected%"], s = r["%webView_book_selector_select_books%"], a = r["%webView_book_selector_search_books%"], l = r["%webView_book_selector_select_all%"], c = r["%webView_book_selector_clear_all%"], u = r["%webView_book_selector_no_book_found%"], f = r["%webView_book_selector_more%"], { otLong: d, ntLong: h, dcLong: g, extraLong: w } = {
    otLong: r == null ? void 0 : r["%scripture_section_ot_long%"],
    ntLong: r == null ? void 0 : r["%scripture_section_nt_long%"],
    dcLong: r == null ? void 0 : r["%scripture_section_dc_long%"],
    extraLong: r == null ? void 0 : r["%scripture_section_extra_long%"]
  }, [v, _] = fe(!1), [b, C] = fe(""), D = xe(void 0), R = xe(!1);
  if (t.length !== nt.allBookIds.length)
    throw new Error("availableBookInfo length must match Canon.allBookIds length");
  const N = Ne(() => nt.allBookIds.filter(
    (P, T) => t[T] === "1" && !nt.isObsolete(nt.bookIdToNumber(P))
  ), [t]), L = Ne(() => {
    if (!b.trim()) {
      const A = {
        [Ue.OT]: [],
        [Ue.NT]: [],
        [Ue.DC]: [],
        [Ue.Extra]: []
      };
      return N.forEach((B) => {
        const V = qa(B);
        A[V].push(B);
      }), A;
    }
    const P = N.filter(
      (A) => Hh(A, b, i)
    ), T = {
      [Ue.OT]: [],
      [Ue.NT]: [],
      [Ue.DC]: [],
      [Ue.Extra]: []
    };
    return P.forEach((A) => {
      const B = qa(A);
      T[B].push(A);
    }), T;
  }, [N, b, i]), M = be(
    (P, T = !1) => {
      if (!T || !D.current) {
        n(
          e.includes(P) ? e.filter((K) => K !== P) : [...e, P]
        ), D.current = P;
        return;
      }
      const A = N.findIndex((K) => K === D.current), B = N.findIndex((K) => K === P);
      if (A === -1 || B === -1) return;
      const [V, J] = [
        Math.min(A, B),
        Math.max(A, B)
      ], H = N.slice(V, J + 1).map((K) => K);
      n(
        e.includes(P) ? e.filter((K) => !H.includes(K)) : [.../* @__PURE__ */ new Set([...e, ...H])]
      );
    },
    [e, n, N]
  ), O = (P) => {
    M(P, R.current), R.current = !1;
  }, j = (P, T) => {
    P.preventDefault(), M(T, P.shiftKey);
  }, k = be(
    (P) => {
      const T = Rg(N, P).map((A) => A);
      n(
        _2(N, P, e) ? e.filter((A) => !T.includes(A)) : [.../* @__PURE__ */ new Set([...e, ...T])]
      );
    },
    [e, n, N]
  ), I = () => {
    n(N.map((P) => P));
  }, S = () => {
    n([]);
  };
  return /* @__PURE__ */ q("div", { className: "tw-space-y-2", children: [
    /* @__PURE__ */ p("div", { className: "tw-flex tw-flex-wrap tw-gap-2", children: Object.values(Ue).map((P) => /* @__PURE__ */ p(
      mP,
      {
        section: P,
        availableBookIds: N,
        selectedBookIds: e,
        onToggle: k,
        localizedStrings: r
      },
      P
    )) }),
    /* @__PURE__ */ q(
      ea,
      {
        open: v,
        onOpenChange: (P) => {
          _(P), P || C("");
        },
        children: [
          /* @__PURE__ */ p(ta, { asChild: !0, children: /* @__PURE__ */ q(
            Pe,
            {
              variant: "outline",
              role: "combobox",
              "aria-expanded": v,
              className: "tw-max-w-64 tw-justify-between",
              children: [
                e.length > 0 ? `${o}: ${e.length}` : s,
                /* @__PURE__ */ p(Fh, { className: "tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" })
              ]
            }
          ) }),
          /* @__PURE__ */ p(Go, { className: "tw-w-full tw-p-0", align: "start", children: /* @__PURE__ */ q(
            Ys,
            {
              shouldFilter: !1,
              onKeyDown: (P) => {
                P.key === "Enter" && (R.current = P.shiftKey);
              },
              children: [
                /* @__PURE__ */ p(
                  bl,
                  {
                    placeholder: a,
                    value: b,
                    onValueChange: C
                  }
                ),
                /* @__PURE__ */ q("div", { className: "tw-flex tw-justify-between tw-border-b tw-p-2", children: [
                  /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: I, children: l }),
                  /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: S, children: c })
                ] }),
                /* @__PURE__ */ q(Qs, { children: [
                  /* @__PURE__ */ p(Cu, { children: u }),
                  Object.values(Ue).map((P, T) => {
                    const A = L[P];
                    if (A.length !== 0)
                      return /* @__PURE__ */ q(uy, { children: [
                        /* @__PURE__ */ p(
                          Ao,
                          {
                            heading: Ty(P, d, h, g, w),
                            children: A.map((B) => /* @__PURE__ */ p(
                              Dy,
                              {
                                bookId: B,
                                isSelected: e.includes(B),
                                onSelect: () => O(B),
                                onMouseDown: (V) => j(V, B),
                                section: qa(B),
                                showCheck: !0,
                                localizedBookNames: i,
                                commandValue: xf(B, i),
                                className: "tw-flex tw-items-center"
                              },
                              B
                            ))
                          }
                        ),
                        T < Object.values(Ue).length - 1 && /* @__PURE__ */ p(_y, {})
                      ] }, P);
                  })
                ] })
              ]
            }
          ) })
        ]
      }
    ),
    e.length > 0 && /* @__PURE__ */ q("div", { className: "tw-mt-2 tw-flex tw-flex-wrap tw-gap-1", children: [
      e.slice(
        0,
        e.length === hf ? hf : ly
      ).map((P) => /* @__PURE__ */ p(Mc, { className: "hover:tw-bg-secondary", variant: "secondary", children: ws(P, i) }, P)),
      e.length > hf && /* @__PURE__ */ p(
        Mc,
        {
          className: "hover:tw-bg-secondary",
          variant: "secondary",
          children: `+${e.length - ly} ${f}`
        }
      )
    ] })
  ] });
}
const l3 = Object.freeze([
  "%webView_scope_selector_selected_text%",
  "%webView_scope_selector_current_verse%",
  "%webView_scope_selector_current_chapter%",
  "%webView_scope_selector_current_book%",
  "%webView_scope_selector_choose_books%",
  "%webView_scope_selector_scope%",
  "%webView_scope_selector_select_books%",
  "%webView_book_selector_books_selected%",
  "%webView_book_selector_select_books%",
  "%webView_book_selector_search_books%",
  "%webView_book_selector_select_all%",
  "%webView_book_selector_clear_all%",
  "%webView_book_selector_no_book_found%",
  "%webView_book_selector_more%",
  "%scripture_section_ot_long%",
  "%scripture_section_ot_short%",
  "%scripture_section_nt_long%",
  "%scripture_section_nt_short%",
  "%scripture_section_dc_long%",
  "%scripture_section_dc_short%",
  "%scripture_section_extra_long%",
  "%scripture_section_extra_short%"
]), po = (t, e) => t[e] ?? e;
function c3({
  scope: t,
  availableScopes: e,
  onScopeChange: n,
  availableBookInfo: r,
  selectedBookIds: i,
  onSelectedBookIdsChange: o,
  localizedStrings: s,
  localizedBookNames: a,
  id: l
}) {
  const c = po(
    s,
    "%webView_scope_selector_selected_text%"
  ), u = po(
    s,
    "%webView_scope_selector_current_verse%"
  ), f = po(
    s,
    "%webView_scope_selector_current_chapter%"
  ), d = po(s, "%webView_scope_selector_current_book%"), h = po(s, "%webView_scope_selector_choose_books%"), g = po(s, "%webView_scope_selector_scope%"), w = po(s, "%webView_scope_selector_select_books%"), v = [
    { value: "selectedText", label: c, id: "scope-selected-text" },
    { value: "verse", label: u, id: "scope-verse" },
    { value: "chapter", label: f, id: "scope-chapter" },
    { value: "book", label: d, id: "scope-book" },
    { value: "selectedBooks", label: h, id: "scope-selected" }
  ], _ = e ? v.filter((b) => e.includes(b.value)) : v;
  return /* @__PURE__ */ q("div", { id: l, className: "tw-grid tw-gap-4", children: [
    /* @__PURE__ */ q("div", { className: "tw-grid tw-gap-2", children: [
      /* @__PURE__ */ p(Vt, { children: g }),
      /* @__PURE__ */ p(
        Wh,
        {
          value: t,
          onValueChange: n,
          className: "tw-flex tw-flex-col tw-space-y-1",
          children: _.map(({ value: b, label: C, id: D }) => /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center", children: [
            /* @__PURE__ */ p(Oc, { className: "tw-me-2", value: b, id: D }),
            /* @__PURE__ */ p(Vt, { htmlFor: D, children: C })
          ] }, D))
        }
      )
    ] }),
    t === "selectedBooks" && /* @__PURE__ */ q("div", { className: "tw-grid tw-gap-2", children: [
      /* @__PURE__ */ p(Vt, { children: w }),
      /* @__PURE__ */ p(
        bP,
        {
          availableBookInfo: r,
          selectedBookIds: i,
          onChangeSelectedBookIds: o,
          localizedStrings: s,
          localizedBookNames: a
        }
      )
    ] })
  ] });
}
const pf = {
  [tt("undefined")]: "Ø",
  [tt(0)]: "A",
  [tt(1)]: "B",
  [tt(2)]: "C",
  [tt(3)]: "D",
  [tt(4)]: "E",
  [tt(5)]: "F",
  [tt(6)]: "G",
  [tt(7)]: "H",
  [tt(8)]: "I",
  [tt(9)]: "J",
  [tt(10)]: "K",
  [tt(11)]: "L",
  [tt(12)]: "M",
  [tt(13)]: "N",
  [tt(14)]: "O",
  [tt(15)]: "P",
  [tt(16)]: "Q",
  [tt(17)]: "R",
  [tt(18)]: "S",
  [tt(19)]: "T",
  [tt(20)]: "U",
  [tt(21)]: "V",
  [tt(22)]: "W",
  [tt(23)]: "X",
  [tt(24)]: "Y",
  [tt(25)]: "Z"
};
function u3({
  availableScrollGroupIds: t,
  scrollGroupId: e,
  onChangeScrollGroupId: n,
  localizedStrings: r = {},
  size: i = "sm",
  className: o,
  id: s
}) {
  const a = {
    ...pf,
    ...Object.fromEntries(
      Object.entries(r).map(
        ([c, u]) => [
          c,
          c === u && c in pf ? pf[c] : u
        ]
      )
    )
  }, l = Jt();
  return /* @__PURE__ */ q(
    Ns,
    {
      value: `${e}`,
      onValueChange: (c) => n(
        c === "undefined" ? void 0 : parseInt(c, 10)
      ),
      children: [
        /* @__PURE__ */ p(Oo, { size: i, className: G("pr-twp tw-w-auto", o), children: /* @__PURE__ */ p(
          Ss,
          {
            placeholder: a[tt(e)] ?? e
          }
        ) }),
        /* @__PURE__ */ p(
          Mo,
          {
            id: s,
            align: l === "rtl" ? "end" : "start",
            style: { zIndex: 250 },
            children: t.map((c) => /* @__PURE__ */ p(er, { value: `${c}`, children: a[tt(c)] }, `${c}`))
          }
        )
      ]
    }
  );
}
function d3({ children: t }) {
  return /* @__PURE__ */ p("div", { className: "pr-twp tw-grid", children: t });
}
function f3({
  primary: t,
  secondary: e,
  children: n,
  isLoading: r = !1,
  loadingMessage: i
}) {
  return /* @__PURE__ */ q("div", { className: "tw-flex tw-items-center tw-justify-between tw-space-x-4 tw-py-2", children: [
    /* @__PURE__ */ q("div", { children: [
      /* @__PURE__ */ p("p", { className: "tw-text-sm tw-font-medium tw-leading-none", children: t }),
      /* @__PURE__ */ p("p", { className: "tw-whitespace-normal tw-break-words tw-text-sm tw-text-muted-foreground", children: e })
    ] }),
    r ? /* @__PURE__ */ p("p", { className: "tw-text-sm tw-text-muted-foreground", children: i }) : /* @__PURE__ */ p("div", { children: n })
  ] });
}
function h3({
  primary: t,
  secondary: e,
  includeSeparator: n = !1
}) {
  return /* @__PURE__ */ q("div", { className: "tw-space-y-4 tw-py-2", children: [
    /* @__PURE__ */ q("div", { children: [
      /* @__PURE__ */ p("h3", { className: "tw-text-lg tw-font-medium", children: t }),
      /* @__PURE__ */ p("p", { className: "tw-text-sm tw-text-muted-foreground", children: e })
    ] }),
    n ? /* @__PURE__ */ p(Ag, {}) : ""
  ] });
}
function x2(t, e) {
  var n;
  return (n = Object.entries(t).find(
    ([, r]) => "menuItem" in r && r.menuItem === e
  )) == null ? void 0 : n[0];
}
function bu({ icon: t, menuLabel: e, leading: n }) {
  return t ? /* @__PURE__ */ p(
    "img",
    {
      className: G("tw-max-h-5 tw-max-w-5", n ? "tw-me-2" : "tw-ms-2"),
      src: t,
      alt: `${n ? "Leading" : "Trailing"} icon for ${e}`
    }
  ) : void 0;
}
const C2 = (t, e, n, r) => n ? Object.entries(t).filter(
  ([o, s]) => "column" in s && s.column === n || o === n
).sort(([, o], [, s]) => o.order - s.order).flatMap(([o]) => e.filter((a) => a.group === o).sort((a, l) => a.order - l.order).map((a) => /* @__PURE__ */ q(Og, { children: [
  /* @__PURE__ */ p(Mg, { asChild: !0, children: "command" in a ? /* @__PURE__ */ q(
    Ry,
    {
      onClick: () => {
        r(a);
      },
      children: [
        a.iconPathBefore && /* @__PURE__ */ p(bu, { icon: a.iconPathBefore, menuLabel: a.label, leading: !0 }),
        a.label,
        a.iconPathAfter && /* @__PURE__ */ p(bu, { icon: a.iconPathAfter, menuLabel: a.label })
      ]
    },
    `dropdown-menu-item-${a.label}-${a.command}`
  ) : /* @__PURE__ */ q(dC, { children: [
    /* @__PURE__ */ p(My, { children: a.label }),
    /* @__PURE__ */ p(uC, { children: /* @__PURE__ */ p(Iy, { children: C2(
      t,
      e,
      x2(t, a.id),
      r
    ) }) })
  ] }, `dropdown-menu-sub-${a.label}-${a.id}`) }),
  a.tooltip && /* @__PURE__ */ p(od, { children: a.tooltip })
] }, `tooltip-${a.label}-${"command" in a ? a.command : a.id}`))) : void 0;
function Lh({
  onSelectMenuItem: t,
  menuData: e,
  tabLabel: n,
  icon: r,
  className: i,
  variant: o,
  buttonVariant: s = "ghost",
  id: a
}) {
  return /* @__PURE__ */ q(ku, { variant: o, children: [
    /* @__PURE__ */ p(Gh, { "aria-label": n, className: i, asChild: !0, id: a, children: /* @__PURE__ */ p(Pe, { variant: s, size: "icon", children: r ?? /* @__PURE__ */ p(h1, {}) }) }),
    /* @__PURE__ */ p(yl, { align: "start", className: "tw-z-[250]", children: Object.entries(e.columns).filter(([, l]) => typeof l == "object").sort(([, l], [, c]) => typeof l == "boolean" || typeof c == "boolean" ? 0 : l.order - c.order).map(([l], c, u) => /* @__PURE__ */ q(uy, { children: [
      /* @__PURE__ */ p(Oy, { children: /* @__PURE__ */ p(Dg, { children: C2(e.groups, e.items, l, t) }) }),
      c < u.length - 1 && /* @__PURE__ */ p(Eu, {})
    ] }, l)) })
  ] });
}
const k2 = Y.forwardRef(
  ({ id: t, className: e, children: n }, r) => /* @__PURE__ */ p(
    "div",
    {
      ref: r,
      className: `tw-sticky tw-top-0 tw-box-border tw-flex tw-h-14 tw-flex-row tw-items-center tw-justify-between tw-gap-2 tw-overflow-clip tw-px-4 tw-py-2 tw-text-foreground tw-@container/toolbar ${e}`,
      id: t,
      children: n
    }
  )
);
function p3({
  onSelectProjectMenuItem: t,
  onSelectViewInfoMenuItem: e,
  projectMenuData: n,
  tabViewMenuData: r,
  id: i,
  className: o,
  startAreaChildren: s,
  centerAreaChildren: a,
  endAreaChildren: l,
  menuButtonIcon: c
}) {
  return /* @__PURE__ */ q(k2, { className: `tw-w-full tw-border ${o}`, id: i, children: [
    n && /* @__PURE__ */ p(
      Lh,
      {
        onSelectMenuItem: t,
        menuData: n,
        tabLabel: "Project",
        icon: c ?? /* @__PURE__ */ p(p1, {}),
        buttonVariant: "ghost"
      }
    ),
    s && /* @__PURE__ */ p("div", { className: "tw-flex tw-h-full tw-shrink tw-grow-[2] tw-flex-row tw-flex-wrap tw-items-start tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-start", children: s }),
    a && /* @__PURE__ */ p("div", { className: "tw-flex tw-h-full tw-shrink tw-basis-0 tw-flex-row tw-flex-wrap tw-items-start tw-justify-center tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-center @sm:tw-grow @sm:tw-basis-auto", children: a }),
    /* @__PURE__ */ q("div", { className: "tw-flex tw-h-full tw-shrink tw-grow-[2] tw-flex-row-reverse tw-flex-wrap tw-items-start tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-end", children: [
      r && /* @__PURE__ */ p(
        Lh,
        {
          onSelectMenuItem: e,
          menuData: r,
          tabLabel: "View Info",
          icon: /* @__PURE__ */ p(g1, {}),
          className: "tw-h-full"
        }
      ),
      l
    ] })
  ] });
}
function g3({
  onSelectProjectMenuItem: t,
  projectMenuData: e,
  id: n,
  className: r,
  menuButtonIcon: i
}) {
  return /* @__PURE__ */ p(k2, { className: "tw-pointer-events-none", id: n, children: e && /* @__PURE__ */ p(
    Lh,
    {
      onSelectMenuItem: t,
      menuData: e,
      tabLabel: "Project",
      icon: i,
      className: `tw-pointer-events-auto tw-shadow-lg ${r}`,
      buttonVariant: "outline"
    }
  ) });
}
const E2 = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Rn.Root,
    {
      orientation: "vertical",
      ref: n,
      className: G("tw-flex tw-gap-1 tw-rounded-md tw-text-muted-foreground", t),
      ...e,
      dir: r
    }
  );
});
E2.displayName = Rn.List.displayName;
const N2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.List,
  {
    ref: n,
    className: G(
      "tw-flex-fit tw-mlk-items-center tw-w-[124px] tw-justify-center tw-rounded-md tw-bg-muted tw-p-1 tw-text-muted-foreground",
      t
    ),
    ...e
  }
));
N2.displayName = Rn.List.displayName;
const yP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Trigger,
  {
    ref: n,
    ...e,
    className: G(
      "overflow-clip tw-inline-flex tw-w-[116px] tw-cursor-pointer tw-items-center tw-justify-center tw-break-words tw-rounded-sm tw-border-0 tw-bg-muted tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-text-inherit tw-ring-offset-background tw-transition-all hover:tw-text-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=active]:tw-bg-background data-[state=active]:tw-text-foreground data-[state=active]:tw-shadow-sm",
      t
    )
  }
)), S2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Content,
  {
    ref: n,
    className: G(
      // Removed tw-mt-2 because Sebastian said so
      "tw-ms-5 tw-flex-grow tw-text-foreground tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2",
      t
    ),
    ...e
  }
));
S2.displayName = Rn.Content.displayName;
function w3({
  tabList: t,
  searchValue: e,
  onSearch: n,
  searchPlaceholder: r,
  headerTitle: i,
  searchClassName: o,
  id: s
}) {
  return /* @__PURE__ */ q("div", { id: s, className: "pr-twp", children: [
    /* @__PURE__ */ q("div", { className: "tw-sticky tw-top-0 tw-space-y-2 tw-pb-2", children: [
      i ? /* @__PURE__ */ p("h1", { children: i }) : "",
      /* @__PURE__ */ p(
        Ig,
        {
          className: o,
          value: e,
          onSearch: n,
          placeholder: r
        }
      )
    ] }),
    /* @__PURE__ */ q(E2, { children: [
      /* @__PURE__ */ p(N2, { children: t.map((a) => /* @__PURE__ */ p(yP, { value: a.value, children: a.value }, a.key)) }),
      t.map((a) => /* @__PURE__ */ p(S2, { value: a.value, children: a.content }, a.key))
    ] })
  ] });
}
function vP({ ...t }) {
  return /* @__PURE__ */ p(ft.Menu, { ...t });
}
function _P({ ...t }) {
  return /* @__PURE__ */ p(ft.Sub, { "data-slot": "menubar-sub", ...t });
}
const T2 = Y.forwardRef(({ className: t, variant: e = "default", ...n }, r) => {
  const i = Y.useMemo(
    () => ({
      variant: e
    }),
    [e]
  );
  return /* @__PURE__ */ p(Kh.Provider, { value: i, children: /* @__PURE__ */ p(
    ft.Root,
    {
      ref: r,
      className: G(
        "tw-flex tw-h-10 tw-items-center tw-space-x-1 tw-rounded-md tw-border tw-bg-background tw-p-1",
        t
      ),
      ...n
    }
  ) });
});
T2.displayName = ft.Root.displayName;
const A2 = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Nr();
  return /* @__PURE__ */ p(
    ft.Trigger,
    {
      ref: n,
      className: G(
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground",
        // CUSTOM
        "pr-twp",
        Ci({ variant: r.variant, className: t })
        // CUSTOM use context to add variants
      ),
      ...e
    }
  );
});
A2.displayName = ft.Trigger.displayName;
const D2 = Y.forwardRef(({ className: t, inset: e, children: n, ...r }, i) => {
  const o = Nr();
  return /* @__PURE__ */ q(
    ft.SubTrigger,
    {
      ref: i,
      className: G(
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground",
        e && "tw-pl-8",
        Ci({ variant: o.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      ...r,
      children: [
        n,
        /* @__PURE__ */ p(ks, { className: "tw-ml-auto tw-h-4 tw-w-4" })
      ]
    }
  );
});
D2.displayName = ft.SubTrigger.displayName;
const O2 = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Nr();
  return /* @__PURE__ */ p(
    ft.SubContent,
    {
      ref: n,
      className: G(
        "tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        // CUSTOM use context to add variants
        {
          "tw-bg-popover": r.variant === "muted"
        },
        t
      ),
      ...e
    }
  );
});
O2.displayName = ft.SubContent.displayName;
const M2 = Y.forwardRef(({ className: t, align: e = "start", alignOffset: n = -4, sideOffset: r = 8, ...i }, o) => {
  const s = Nr();
  return /* @__PURE__ */ p(ft.Portal, { children: /* @__PURE__ */ p(
    ft.Content,
    {
      ref: o,
      align: e,
      alignOffset: n,
      sideOffset: r,
      className: G(
        "tw-z-50 tw-min-w-[12rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        // CUSTOM reset styles so that only shadcn styles are applied
        "pr-twp",
        // CUSTOM use context to add variants
        {
          "tw-bg-popover": s.variant === "muted"
        },
        t
      ),
      ...i
    }
  ) });
});
M2.displayName = ft.Content.displayName;
const I2 = Y.forwardRef(({ className: t, inset: e, ...n }, r) => {
  const i = Nr();
  return /* @__PURE__ */ p(
    ft.Item,
    {
      ref: r,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        e && "tw-pl-8",
        Ci({ variant: i.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      ...n
    }
  );
});
I2.displayName = ft.Item.displayName;
const xP = Y.forwardRef(({ className: t, children: e, checked: n, ...r }, i) => {
  const o = Nr();
  return /* @__PURE__ */ q(
    ft.CheckboxItem,
    {
      ref: i,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        Ci({ variant: o.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      checked: n,
      ...r,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(ft.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
        e
      ]
    }
  );
});
xP.displayName = ft.CheckboxItem.displayName;
const CP = Y.forwardRef(({ className: t, children: e, ...n }, r) => {
  const i = Nr();
  return /* @__PURE__ */ q(
    ft.RadioItem,
    {
      ref: r,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        Ci({ variant: i.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      ...n,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(ft.ItemIndicator, { children: /* @__PURE__ */ p(vu, { className: "tw-h-2 tw-w-2 tw-fill-current" }) }) }),
        e
      ]
    }
  );
});
CP.displayName = ft.RadioItem.displayName;
const kP = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  ft.Label,
  {
    ref: r,
    className: G("tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold", e && "tw-pl-8", t),
    ...n
  }
));
kP.displayName = ft.Label.displayName;
const R2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  ft.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-muted", t),
    ...e
  }
));
R2.displayName = ft.Separator.displayName;
const Oa = (t, e) => {
  setTimeout(() => {
    e.forEach((n) => {
      var r;
      (r = t.current) == null || r.dispatchEvent(new KeyboardEvent("keydown", n));
    });
  }, 0);
}, P2 = (t, e, n, r) => {
  if (!n) return;
  const i = Object.entries(t).filter(
    ([o, s]) => "column" in s && s.column === n || o === n
  ).sort(([, o], [, s]) => o.order - s.order);
  return i.flatMap(([o], s) => {
    const a = e.filter((c) => c.group === o).sort((c, u) => c.order - u.order).map((c) => /* @__PURE__ */ q(Og, { children: [
      /* @__PURE__ */ p(Mg, { asChild: !0, children: "command" in c ? /* @__PURE__ */ q(
        I2,
        {
          onClick: () => {
            r(c);
          },
          children: [
            c.iconPathBefore && /* @__PURE__ */ p(bu, { icon: c.iconPathBefore, menuLabel: c.label, leading: !0 }),
            c.label,
            c.iconPathAfter && /* @__PURE__ */ p(bu, { icon: c.iconPathAfter, menuLabel: c.label })
          ]
        },
        `menubar-item-${c.label}-${c.command}`
      ) : /* @__PURE__ */ q(_P, { children: [
        /* @__PURE__ */ p(D2, { children: c.label }),
        /* @__PURE__ */ p(O2, { children: P2(
          t,
          e,
          x2(t, c.id),
          r
        ) })
      ] }, `menubar-sub-${c.label}-${c.id}`) }),
      c.tooltip && /* @__PURE__ */ p(od, { children: c.tooltip })
    ] }, `tooltip-${c.label}-${"command" in c ? c.command : c.id}`)), l = [...a];
    return a.length > 0 && s < i.length - 1 && l.push(/* @__PURE__ */ p(R2, {}, `separator-${o}`)), l;
  });
};
function EP({
  menuData: t,
  onSelectMenuItem: e,
  onOpenChange: n,
  variant: r
}) {
  const i = xe(void 0), o = xe(void 0), s = xe(void 0), a = xe(void 0), l = xe(void 0), c = (u) => {
    switch (u) {
      case "platform.app":
        return o;
      case "platform.window":
        return s;
      case "platform.layout":
        return a;
      case "platform.help":
        return l;
      default:
        return;
    }
  };
  if (R1(["alt", "alt+p", "alt+l", "alt+n", "alt+h"], (u, f) => {
    var g, w, v, _;
    u.preventDefault();
    const d = { key: "Escape", code: "Escape", keyCode: 27, bubbles: !0 }, h = { key: " ", code: "Space", keyCode: 32, bubbles: !0 };
    switch (f.hotkey) {
      case "alt":
        Oa(o, [d]);
        break;
      case "alt+p":
        (g = o.current) == null || g.focus(), Oa(o, [d, h]);
        break;
      case "alt+l":
        (w = s.current) == null || w.focus(), Oa(s, [d, h]);
        break;
      case "alt+n":
        (v = a.current) == null || v.focus(), Oa(a, [d, h]);
        break;
      case "alt+h":
        (_ = l.current) == null || _.focus(), Oa(l, [d, h]);
        break;
    }
  }), ue(() => {
    if (!n || !i.current) return;
    const u = new MutationObserver((h) => {
      h.forEach((g) => {
        if (g.attributeName === "data-state" && g.target instanceof HTMLElement) {
          const w = g.target.getAttribute("data-state");
          n(w === "open");
        }
      });
    });
    return i.current.querySelectorAll("[data-state]").forEach((h) => {
      u.observe(h, { attributes: !0 });
    }), () => u.disconnect();
  }, [n]), !!t)
    return /* @__PURE__ */ p(T2, { ref: i, className: "pr-twp tw-border-0 tw-bg-transparent", variant: r, children: Object.entries(t.columns).filter(([, u]) => typeof u == "object").sort(([, u], [, f]) => typeof u == "boolean" || typeof f == "boolean" ? 0 : u.order - f.order).map(([u, f]) => /* @__PURE__ */ q(vP, { children: [
      /* @__PURE__ */ p(A2, { ref: c(u), children: typeof f == "object" && "label" in f && f.label }),
      /* @__PURE__ */ p(
        M2,
        {
          className: "tw-z-[250]",
          children: /* @__PURE__ */ p(Dg, { children: P2(t.groups, t.items, u, e) })
        }
      )
    ] }, u)) });
}
function m3(t) {
  switch (t) {
    case void 0:
      return;
    case "darwin":
      return "tw-ps-[85px]";
    default:
      return "tw-pe-[calc(138px+1rem)]";
  }
}
function b3({
  menuData: t,
  onOpenChange: e,
  onSelectMenuItem: n,
  className: r,
  id: i,
  children: o,
  appMenuAreaChildren: s,
  configAreaChildren: a,
  shouldUseAsAppDragArea: l,
  menubarVariant: c = "default"
}) {
  const u = xe(void 0);
  return /* @__PURE__ */ p(
    "div",
    {
      className: G("tw-border tw-px-4 tw-text-foreground", r),
      ref: u,
      style: { position: "relative" },
      id: i,
      children: /* @__PURE__ */ q(
        "div",
        {
          className: "tw-flex tw-h-full tw-w-full tw-justify-between tw-overflow-hidden",
          style: l ? { WebkitAppRegion: "drag" } : void 0,
          children: [
            /* @__PURE__ */ p("div", { className: "tw-flex tw-grow tw-basis-0", children: /* @__PURE__ */ q(
              "div",
              {
                className: "tw-flex tw-items-center tw-gap-2",
                style: l ? { WebkitAppRegion: "no-drag" } : void 0,
                children: [
                  s,
                  t && /* @__PURE__ */ p(
                    EP,
                    {
                      menuData: t,
                      onOpenChange: e,
                      onSelectMenuItem: n,
                      variant: c
                    }
                  )
                ]
              }
            ) }),
            /* @__PURE__ */ p(
              "div",
              {
                className: "tw-flex tw-items-center tw-gap-2 tw-px-2",
                style: l ? { WebkitAppRegion: "no-drag" } : void 0,
                children: o
              }
            ),
            /* @__PURE__ */ p("div", { className: "tw-flex tw-min-w-0 tw-grow tw-basis-0 tw-justify-end", children: /* @__PURE__ */ p(
              "div",
              {
                className: "tw-flex tw-min-w-0 tw-items-center tw-gap-2 tw-pe-1",
                style: l ? { WebkitAppRegion: "no-drag" } : void 0,
                children: a
              }
            ) })
          ]
        }
      )
    }
  );
}
const NP = (t, e) => t[e] ?? e;
function y3({
  knownUiLanguages: t,
  primaryLanguage: e = "en",
  fallbackLanguages: n = [],
  onLanguagesChange: r,
  onPrimaryLanguageChange: i,
  onFallbackLanguagesChange: o,
  localizedStrings: s,
  className: a,
  id: l
}) {
  const c = NP(
    s,
    "%settings_uiLanguageSelector_fallbackLanguages%"
  ), [u, f] = fe(!1), d = (g) => {
    i && i(g), r && r([g, ...n.filter((w) => w !== g)]), o && n.find((w) => w === g) && o([...n.filter((w) => w !== g)]), f(!1);
  }, h = (g, w) => {
    var _, b, C, D, R, N;
    const v = w !== g ? ((b = (_ = t[g]) == null ? void 0 : _.uiNames) == null ? void 0 : b[w]) ?? ((D = (C = t[g]) == null ? void 0 : C.uiNames) == null ? void 0 : D.en) : void 0;
    return v ? `${(R = t[g]) == null ? void 0 : R.autonym} (${v})` : (N = t[g]) == null ? void 0 : N.autonym;
  };
  return /* @__PURE__ */ q("div", { id: l, className: G("pr-twp tw-max-w-sm", a), children: [
    /* @__PURE__ */ q(
      Ns,
      {
        name: "uiLanguage",
        value: e,
        onValueChange: d,
        open: u,
        onOpenChange: (g) => f(g),
        children: [
          /* @__PURE__ */ p(Oo, { children: /* @__PURE__ */ p(Ss, {}) }),
          /* @__PURE__ */ p(
            Mo,
            {
              className: "tw-z-[250]",
              children: Object.keys(t).map((g) => /* @__PURE__ */ p(er, { value: g, children: h(g, e) }, g))
            }
          )
        ]
      }
    ),
    e !== "en" && /* @__PURE__ */ p("div", { className: "tw-pt-3", children: /* @__PURE__ */ p(Vt, { className: "tw-font-normal tw-text-muted-foreground", children: N1(c, {
      fallbackLanguages: (n == null ? void 0 : n.length) > 0 ? n.map((g) => h(g, e)).join(", ") : t.en.autonym
    }) }) })
  ] });
}
function SP({ item: t, createLabel: e, createComplexLabel: n }) {
  return e ? /* @__PURE__ */ p(Vt, { children: e(t) }) : n ? /* @__PURE__ */ p(Vt, { children: n(t) }) : /* @__PURE__ */ p(Vt, { children: t });
}
function v3({
  id: t,
  className: e,
  listItems: n,
  selectedListItems: r,
  handleSelectListItem: i,
  createLabel: o,
  createComplexLabel: s
}) {
  return /* @__PURE__ */ p("div", { id: t, className: e, children: n.map((a) => /* @__PURE__ */ q("div", { className: "tw-m-2 tw-flex tw-items-center", children: [
    /* @__PURE__ */ p(
      Tg,
      {
        className: "tw-me-2 tw-align-middle",
        checked: r.includes(a),
        onCheckedChange: (l) => i(a, l)
      }
    ),
    /* @__PURE__ */ p(
      SP,
      {
        item: a,
        createLabel: o,
        createComplexLabel: s
      }
    )
  ] }, a)) });
}
function _3({
  cardKey: t,
  isSelected: e,
  onSelect: n,
  isDenied: r,
  isHidden: i = !1,
  className: o,
  children: s,
  dropdownContent: a,
  additionalSelectedContent: l,
  accentColor: c
}) {
  return /* @__PURE__ */ q(
    "div",
    {
      hidden: i,
      onClick: n,
      onKeyDown: (f) => {
        (f.key === "Enter" || f.key === " ") && (f.preventDefault(), n());
      },
      role: "button",
      tabIndex: 0,
      "aria-pressed": e,
      className: G(
        "tw-relative tw-min-w-36 tw-rounded-xl tw-border tw-shadow-none hover:tw-bg-muted/50",
        { "tw-opacity-50 hover:tw-opacity-100": r && !e },
        { "tw-bg-accent": e },
        { "tw-bg-transparent": !e },
        o
      ),
      children: [
        /* @__PURE__ */ q("div", { className: "tw-flex tw-flex-col tw-gap-2 tw-p-4", children: [
          /* @__PURE__ */ q("div", { className: "tw-flex tw-justify-between tw-overflow-hidden", children: [
            /* @__PURE__ */ p("div", { className: "tw-min-w-0 tw-flex-1", children: s }),
            e && a && /* @__PURE__ */ q(ku, { children: [
              /* @__PURE__ */ p(Gh, { className: G(c && "tw-me-1"), asChild: !0, children: /* @__PURE__ */ p(Pe, { className: "tw-h-6 tw-w-6", variant: "ghost", size: "icon", children: /* @__PURE__ */ p(w1, {}) }) }),
              /* @__PURE__ */ p(yl, { align: "end", children: a })
            ] })
          ] }),
          e && l && /* @__PURE__ */ p("div", { className: "tw-w-fit tw-min-w-0 tw-max-w-full tw-overflow-hidden", children: l })
        ] }),
        c && /* @__PURE__ */ p(
          "div",
          {
            className: `tw-absolute tw-right-0 tw-top-0 tw-h-full tw-w-2 tw-rounded-r-xl ${c}`
          }
        )
      ]
    },
    t
  );
}
const TP = Yn(({ className: t, ...e }, n) => /* @__PURE__ */ p(m1, { size: 35, className: G("tw-animate-spin", t), ...e, ref: n }));
TP.displayName = "Spinner";
function x3({
  id: t,
  isDisabled: e = !1,
  hasError: n = !1,
  isFullWidth: r = !1,
  helperText: i,
  label: o,
  placeholder: s,
  isRequired: a = !1,
  className: l,
  defaultValue: c,
  value: u,
  onChange: f,
  onFocus: d,
  onBlur: h
}) {
  return /* @__PURE__ */ q("div", { className: G("tw-inline-grid tw-items-center tw-gap-1.5", { "tw-w-full": r }), children: [
    /* @__PURE__ */ p(
      Vt,
      {
        htmlFor: t,
        className: G({
          "tw-text-red-600": n,
          "tw-hidden": !o
        }),
        children: `${o}${a ? "*" : ""}`
      }
    ),
    /* @__PURE__ */ p(
      Fl,
      {
        id: t,
        disabled: e,
        placeholder: s,
        required: a,
        className: G(l, { "tw-border-red-600": n }),
        defaultValue: c,
        value: u,
        onChange: f,
        onFocus: d,
        onBlur: h
      }
    ),
    /* @__PURE__ */ p("p", { className: G({ "tw-hidden": !i }), children: i })
  ] });
}
const AP = Ji(
  // CUSTOM: Copied all `svg` arbitrary selector variant classes as `img` variants so we can use
  // images (or svgs from file) as icons
  // Implemented by TJ Couch
  // Approved by Alex Mercado
  // 20 February 2025
  "tw-relative tw-w-full tw-rounded-lg tw-border tw-p-4 [&>svg~*]:tw-pl-7 [&>svg+div]:tw-translate-y-[-3px] [&>svg]:tw-absolute [&>svg]:tw-left-4 [&>svg]:tw-top-4 [&>svg]:tw-text-foreground [&>img~*]:tw-pl-7 [&>img+div]:tw-translate-y-[-3px] [&>img]:tw-absolute [&>img]:tw-left-4 [&>img]:tw-top-4 [&>img]:tw-text-foreground",
  {
    variants: {
      variant: {
        default: "tw-bg-background tw-text-foreground",
        destructive: (
          // CUSTOM: Copied all `svg` arbitrary selector variant classes as `img` variants so we can
          // use images (or svgs from file) as icons
          // Implemented by TJ Couch
          // Approved by Alex Mercado
          // 20 February 2025
          "tw-border-destructive/50 tw-text-destructive dark:tw-border-destructive [&>svg]:tw-text-destructive [&>img]:tw-text-destructive"
        )
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), DP = Y.forwardRef(({ className: t, variant: e, ...n }, r) => /* @__PURE__ */ p(
  "div",
  {
    ref: r,
    role: "alert",
    className: G(
      // CUSTOM
      "pr-twp",
      AP({ variant: e }),
      t
    ),
    ...n
  }
));
DP.displayName = "Alert";
const OP = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ q(
    "h5",
    {
      ref: n,
      className: G("tw-mb-1 tw-font-medium tw-leading-none tw-tracking-tight", t),
      ...e,
      children: [
        e.children,
        " "
      ]
    }
  )
);
OP.displayName = "AlertTitle";
const MP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p("div", { ref: n, className: G("tw-text-sm [&_p]:tw-leading-relaxed", t), ...e }));
MP.displayName = "AlertDescription";
const IP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Xs.Root,
  {
    ref: n,
    className: G(
      "pr-twp tw-relative tw-flex tw-h-10 tw-w-10 tw-shrink-0 tw-overflow-hidden tw-rounded-full",
      t
    ),
    ...e
  }
));
IP.displayName = Xs.Root.displayName;
const RP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Xs.Image,
  {
    ref: n,
    className: G("pr-twp tw-aspect-square tw-h-full tw-w-full", t),
    ...e
  }
));
RP.displayName = Xs.Image.displayName;
const PP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Xs.Fallback,
  {
    ref: n,
    className: G(
      "pr-twp tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center tw-rounded-full tw-bg-muted",
      t
    ),
    ...e
  }
));
PP.displayName = Xs.Fallback.displayName;
const C3 = ht.Root, k3 = ht.Trigger, E3 = ht.Group, N3 = ht.Portal, S3 = ht.Sub, T3 = ht.RadioGroup, LP = Y.forwardRef(({ className: t, inset: e, children: n, ...r }, i) => /* @__PURE__ */ q(
  ht.SubTrigger,
  {
    ref: i,
    className: G(
      "pr-twp tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground",
      e && "tw-pl-8",
      t
    ),
    ...r,
    children: [
      n,
      /* @__PURE__ */ p(ks, { className: "tw-ml-auto tw-h-4 tw-w-4" })
    ]
  }
));
LP.displayName = ht.SubTrigger.displayName;
const $P = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  ht.SubContent,
  {
    ref: n,
    className: G(
      "pr-twp tw-z-50 tw-min-w-[8rem] tw-origin-[--radix-context-menu-content-transform-origin] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...e
  }
));
$P.displayName = ht.SubContent.displayName;
const FP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(ht.Portal, { children: /* @__PURE__ */ p(
  ht.Content,
  {
    ref: n,
    className: G(
      "pr-twp tw-z-50 tw-max-h-[--radix-context-menu-content-available-height] tw-min-w-[8rem] tw-origin-[--radix-context-menu-content-transform-origin] tw-overflow-y-auto tw-overflow-x-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md tw-animate-in tw-fade-in-80 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...e
  }
) }));
FP.displayName = ht.Content.displayName;
const BP = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  ht.Item,
  {
    ref: r,
    className: G(
      "pr-twp tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      e && "tw-pl-8",
      t
    ),
    ...n
  }
));
BP.displayName = ht.Item.displayName;
const qP = Y.forwardRef(({ className: t, children: e, checked: n, ...r }, i) => /* @__PURE__ */ q(
  ht.CheckboxItem,
  {
    ref: i,
    className: G(
      "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      t
    ),
    checked: n,
    ...r,
    children: [
      /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(ht.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
      e
    ]
  }
));
qP.displayName = ht.CheckboxItem.displayName;
const jP = Y.forwardRef(({ className: t, children: e, ...n }, r) => /* @__PURE__ */ q(
  ht.RadioItem,
  {
    ref: r,
    className: G(
      "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      t
    ),
    ...n,
    children: [
      /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(ht.ItemIndicator, { children: /* @__PURE__ */ p(vu, { className: "tw-h-2 tw-w-2 tw-fill-current" }) }) }),
      e
    ]
  }
));
jP.displayName = ht.RadioItem.displayName;
const UP = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  ht.Label,
  {
    ref: r,
    className: G(
      "tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold tw-text-foreground",
      e && "tw-pl-8",
      t
    ),
    ...n
  }
));
UP.displayName = ht.Label.displayName;
const zP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  ht.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-border", t),
    ...e
  }
));
zP.displayName = ht.Separator.displayName;
function VP({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "span",
    {
      className: G("tw-ml-auto tw-text-xs tw-tracking-widest tw-text-muted-foreground", t),
      ...e
    }
  );
}
VP.displayName = "ContextMenuShortcut";
const L2 = Y.createContext({
  direction: "bottom"
});
function HP({
  shouldScaleBackground: t = !0,
  direction: e = "bottom",
  ...n
}) {
  const r = Y.useMemo(() => ({ direction: e }), [e]);
  return /* @__PURE__ */ p(L2.Provider, { value: r, children: /* @__PURE__ */ p(
    Er.Root,
    {
      shouldScaleBackground: t,
      direction: e,
      ...n
    }
  ) });
}
HP.displayName = "Drawer";
const A3 = Er.Trigger, WP = Er.Portal, D3 = Er.Close, $2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Er.Overlay,
  {
    ref: n,
    className: G("tw-fixed tw-inset-0 tw-z-50 tw-bg-black/80", t),
    ...e
  }
));
$2.displayName = Er.Overlay.displayName;
const KP = Y.forwardRef(({ className: t, children: e, hideDrawerHandle: n = !1, ...r }, i) => {
  const { direction: o = "bottom" } = Y.useContext(L2), s = {
    bottom: "tw-inset-x-0 tw-bottom-0 tw-mt-24 tw-rounded-t-[10px]",
    top: "tw-inset-x-0 tw-top-0 tw-mb-24 tw-rounded-b-[10px]",
    left: "tw-inset-y-0 tw-left-0 tw-mr-24 tw-rounded-r-[10px] tw-w-auto tw-max-w-sm",
    right: "tw-inset-y-0 tw-right-0 tw-ml-24 tw-rounded-l-[10px] tw-w-auto tw-max-w-sm"
  }, a = {
    bottom: "tw-mx-auto tw-mt-4 tw-h-2 tw-w-[100px] tw-rounded-full tw-bg-muted",
    top: "tw-mx-auto tw-mb-4 tw-h-2 tw-w-[100px] tw-rounded-full tw-bg-muted",
    left: "tw-my-auto tw-mr-4 tw-w-2 tw-h-[100px] tw-rounded-full tw-bg-muted",
    right: "tw-my-auto tw-ml-4 tw-w-2 tw-h-[100px] tw-rounded-full tw-bg-muted"
  };
  return /* @__PURE__ */ q(WP, { children: [
    /* @__PURE__ */ p($2, {}),
    /* @__PURE__ */ q(
      Er.Content,
      {
        ref: i,
        className: G(
          // CUSTOM: Change Tailwind CSS classes for styling
          // Removed tw-inset-x-0 tw-bottom-0 tw-mt-24 tw-rounded-t-[10px] tw-flex-col
          "pr-twp tw-fixed tw-z-50 tw-flex tw-h-auto tw-border tw-bg-background",
          o === "bottom" || o === "top" ? "tw-flex-col" : "tw-flex-row",
          s[o],
          t
        ),
        ...r,
        children: [
          !n && (o === "bottom" || o === "right") && /* @__PURE__ */ p("div", { className: a[o] }),
          /* @__PURE__ */ p("div", { className: "tw-flex tw-flex-col", children: e }),
          !n && (o === "top" || o === "left") && /* @__PURE__ */ p("div", { className: a[o] })
        ]
      }
    )
  ] });
});
KP.displayName = "DrawerContent";
function GP({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "div",
    {
      className: G("tw-grid tw-gap-1.5 tw-p-4 tw-text-center sm:tw-text-left", t),
      ...e
    }
  );
}
GP.displayName = "DrawerHeader";
function JP({ className: t, ...e }) {
  return /* @__PURE__ */ p("div", { className: G("tw-mt-auto tw-flex tw-flex-col tw-gap-2 tw-p-4", t), ...e });
}
JP.displayName = "DrawerFooter";
const XP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Er.Title,
  {
    ref: n,
    className: G("tw-text-lg tw-font-semibold tw-leading-none tw-tracking-tight", t),
    ...e
  }
));
XP.displayName = Er.Title.displayName;
const YP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Er.Description,
  {
    ref: n,
    className: G("tw-text-sm tw-text-muted-foreground", t),
    ...e
  }
));
YP.displayName = Er.Description.displayName;
const QP = Y.forwardRef(({ className: t, value: e, ...n }, r) => /* @__PURE__ */ p(
  vf.Root,
  {
    ref: r,
    className: G(
      "pr-twp tw-relative tw-h-4 tw-w-full tw-overflow-hidden tw-rounded-full tw-bg-secondary",
      t
    ),
    ...n,
    children: /* @__PURE__ */ p(
      vf.Indicator,
      {
        className: "tw-h-full tw-w-full tw-flex-1 tw-bg-primary tw-transition-all",
        style: { transform: `translateX(-${100 - (e || 0)}%)` }
      }
    )
  }
));
QP.displayName = vf.Root.displayName;
function O3({
  className: t,
  ...e
}) {
  return /* @__PURE__ */ p(
    qh.PanelGroup,
    {
      className: G(
        "tw-flex tw-h-full tw-w-full data-[panel-group-direction=vertical]:tw-flex-col",
        t
      ),
      ...e
    }
  );
}
const M3 = qh.Panel;
function I3({
  withHandle: t,
  className: e,
  ...n
}) {
  return /* @__PURE__ */ p(
    qh.PanelResizeHandle,
    {
      className: G(
        "tw-relative tw-flex tw-w-px tw-items-center tw-justify-center tw-bg-border after:tw-absolute after:tw-inset-y-0 after:tw-left-1/2 after:tw-w-1 after:tw--translate-x-1/2 focus-visible:tw-outline-none focus-visible:tw-ring-1 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-1 data-[panel-group-direction=vertical]:tw-h-px data-[panel-group-direction=vertical]:tw-w-full data-[panel-group-direction=vertical]:after:tw-left-0 data-[panel-group-direction=vertical]:after:tw-h-1 data-[panel-group-direction=vertical]:after:tw-w-full data-[panel-group-direction=vertical]:after:tw--translate-y-1/2 data-[panel-group-direction=vertical]:after:tw-translate-x-0 [&[data-panel-group-direction=vertical]>div]:tw-rotate-90",
        e
      ),
      ...n,
      children: t && /* @__PURE__ */ p("div", { className: "tw-z-10 tw-flex tw-h-4 tw-w-3 tw-items-center tw-justify-center tw-rounded-sm tw-border tw-bg-border", children: /* @__PURE__ */ p(b1, { className: "tw-h-2.5 tw-w-2.5" }) })
    }
  );
}
function R3({ ...t }) {
  return /* @__PURE__ */ p(
    P1,
    {
      className: "tw-toaster tw-group",
      toastOptions: {
        classNames: {
          toast: "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton: "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton: "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground"
        }
      },
      ...t
    }
  );
}
const ZP = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ q(
    Ma.Root,
    {
      ref: n,
      className: G(
        "pr-twp tw-relative tw-flex tw-w-full tw-touch-none tw-select-none tw-items-center",
        t
      ),
      ...e,
      dir: r,
      children: [
        /* @__PURE__ */ p(Ma.Track, { className: "tw-relative tw-h-2 tw-w-full tw-grow tw-overflow-hidden tw-rounded-full tw-bg-secondary", children: /* @__PURE__ */ p(Ma.Range, { className: "tw-absolute tw-h-full tw-bg-primary" }) }),
        /* @__PURE__ */ p(Ma.Thumb, { className: "tw-block tw-h-5 tw-w-5 tw-rounded-full tw-border-2 tw-border-primary tw-bg-background tw-ring-offset-background tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50" })
      ]
    }
  );
});
ZP.displayName = Ma.Root.displayName;
const eL = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    _f.Root,
    {
      className: G(
        "tw-peer pr-twp tw-inline-flex tw-h-6 tw-w-11 tw-shrink-0 tw-cursor-pointer tw-items-center tw-rounded-full tw-border-2 tw-border-transparent tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 focus-visible:tw-ring-offset-background disabled:tw-cursor-not-allowed disabled:tw-opacity-50 data-[state=checked]:tw-bg-primary data-[state=unchecked]:tw-bg-input",
        t
      ),
      ...e,
      ref: n,
      children: /* @__PURE__ */ p(
        _f.Thumb,
        {
          className: G(
            "pr-twp tw-pointer-events-none tw-block tw-h-5 tw-w-5 tw-rounded-full tw-bg-background tw-shadow-lg tw-ring-0 tw-transition-transform",
            {
              "data-[state=checked]:tw-translate-x-5 data-[state=unchecked]:tw-translate-x-0": r === "ltr"
            },
            {
              "data-[state=checked]:tw-translate-x-[-20px] data-[state=unchecked]:tw-translate-x-0": r === "rtl"
            }
          )
        }
      )
    }
  );
});
eL.displayName = _f.Root.displayName;
const P3 = Rn.Root, tL = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Rn.List,
    {
      ref: n,
      className: G(
        "pr-twp tw-inline-flex tw-h-10 tw-items-center tw-justify-center tw-rounded-md tw-bg-muted tw-p-1 tw-text-muted-foreground",
        t
      ),
      ...e,
      dir: r
    }
  );
});
tL.displayName = Rn.List.displayName;
const nL = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Trigger,
  {
    ref: n,
    className: G(
      "pr-twp tw-inline-flex tw-items-center tw-justify-center tw-whitespace-nowrap tw-rounded-sm tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-all hover:tw-text-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=active]:tw-bg-background data-[state=active]:tw-text-foreground data-[state=active]:tw-shadow-sm",
      t
    ),
    ...e
  }
));
nL.displayName = Rn.Trigger.displayName;
const rL = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Content,
  {
    ref: n,
    className: G(
      "pr-twp tw-mt-2 tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2",
      t
    ),
    ...e
  }
));
rL.displayName = Rn.Content.displayName;
const iL = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "textarea",
    {
      className: G(
        "pr-twp tw-flex tw-min-h-[80px] tw-w-full tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-base tw-ring-offset-background placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 md:tw-text-sm",
        t
      ),
      ref: n,
      ...e
    }
  )
);
iL.displayName = "Textarea";
const L3 = (t, e) => {
  ue(() => {
    if (!t) return () => {
    };
    const n = t(e);
    return () => {
      n();
    };
  }, [t, e]);
};
function oL(t) {
  return {
    preserveValue: !0,
    ...t
  };
}
const sL = (t, e, n = {}) => {
  const r = xe(e);
  r.current = e;
  const i = xe(n);
  i.current = oL(i.current);
  const [o, s] = fe(() => r.current), [a, l] = fe(!0);
  return ue(() => {
    let c = !0;
    return l(!!t), (async () => {
      if (t) {
        const u = await t();
        c && (s(() => u), l(!1));
      }
    })(), () => {
      c = !1, i.current.preserveValue || s(() => r.current);
    };
  }, [t]), [o, a];
}, gf = () => !1, $3 = (t, e) => {
  const [n] = sL(
    be(async () => {
      if (!t) return gf;
      const r = await Promise.resolve(t(e));
      return async () => r();
    }, [e, t]),
    gf,
    // We want the unsubscriber to return to default value immediately upon changing subscription
    // So the useEffect below will unsubscribe asap
    { preserveValue: !1 }
  );
  ue(() => () => {
    n !== gf && n();
  }, [n]);
}, F3 = ({
  options: t,
  onFocusChange: e,
  onOptionSelect: n,
  onCharacterPress: r
}) => {
  const i = xe(null), [o, s] = fe(void 0), [a, l] = fe(void 0), c = be(
    (d) => {
      s(d);
      const h = t.find((w) => w.id === d);
      h && (e == null || e(h));
      const g = document.getElementById(d);
      g && (g.scrollIntoView({ block: "center" }), g.focus()), i.current && i.current.setAttribute("aria-activedescendant", d);
    },
    [e, t]
  ), u = be(
    (d) => {
      const h = t.find((g) => g.id === d);
      h && (l((g) => g === d ? void 0 : d), n == null || n(h));
    },
    [n, t]
  ), f = be(
    (d) => {
      const h = t.findIndex((v) => v.id === o);
      let g = h;
      switch (d.key) {
        case "ArrowDown":
          g = Math.min(h + 1, t.length - 1), d.preventDefault();
          break;
        case "ArrowUp":
          g = Math.max(h - 1, 0), d.preventDefault();
          break;
        case "Home":
          g = 0, d.preventDefault();
          break;
        case "End":
          g = t.length - 1, d.preventDefault();
          break;
        case " ":
        case "Enter":
          o && u(o), d.preventDefault(), d.stopPropagation();
          return;
        default:
          d.key.length === 1 && !d.metaKey && !d.ctrlKey && !d.altKey && (r == null || r(d.key), d.preventDefault());
          return;
      }
      const w = t[g];
      w && c(w.id);
    },
    [t, c, o, u, r]
  );
  return {
    listboxRef: i,
    activeId: o,
    selectedId: a,
    handleKeyDown: f,
    focusOption: c
  };
};
function aL(t, e = "top") {
  if (!t || typeof document > "u") return;
  const n = document.head || document.querySelector("head"), r = n.querySelector(":first-child"), i = document.createElement("style");
  i.appendChild(document.createTextNode(t)), e === "top" && r ? n.insertBefore(i, r) : n.appendChild(i);
}
aL(`*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*:where(.pr-twp,.pr-twp *),
::before:where(.pr-twp,.pr-twp *),
::after:where(.pr-twp,.pr-twp *) {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before:where(.pr-twp,.pr-twp *),
::after:where(.pr-twp,.pr-twp *) {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured \`sans\` font-family by default.
5. Use the user's configured \`sans\` font-feature-settings by default.
6. Use the user's configured \`sans\` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html:where(.pr-twp,.pr-twp *),
:host:where(.pr-twp,.pr-twp *) {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */ /* 3 */
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from \`html\` so users can set them as a class directly on the \`html\` element.
*/

body:where(.pr-twp,.pr-twp *) {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr:where(.pr-twp,.pr-twp *) {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]):where(.pr-twp,.pr-twp *) {
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1:where(.pr-twp,.pr-twp *),
h2:where(.pr-twp,.pr-twp *),
h3:where(.pr-twp,.pr-twp *),
h4:where(.pr-twp,.pr-twp *),
h5:where(.pr-twp,.pr-twp *),
h6:where(.pr-twp,.pr-twp *) {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a:where(.pr-twp,.pr-twp *) {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b:where(.pr-twp,.pr-twp *),
strong:where(.pr-twp,.pr-twp *) {
  font-weight: bolder;
}

/*
1. Use the user's configured \`mono\` font-family by default.
2. Use the user's configured \`mono\` font-feature-settings by default.
3. Use the user's configured \`mono\` font-variation-settings by default.
4. Correct the odd \`em\` font sizing in all browsers.
*/

code:where(.pr-twp,.pr-twp *),
kbd:where(.pr-twp,.pr-twp *),
samp:where(.pr-twp,.pr-twp *),
pre:where(.pr-twp,.pr-twp *) {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small:where(.pr-twp,.pr-twp *) {
  font-size: 80%;
}

/*
Prevent \`sub\` and \`sup\` elements from affecting the line height in all browsers.
*/

sub:where(.pr-twp,.pr-twp *),
sup:where(.pr-twp,.pr-twp *) {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub:where(.pr-twp,.pr-twp *) {
  bottom: -0.25em;
}

sup:where(.pr-twp,.pr-twp *) {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table:where(.pr-twp,.pr-twp *) {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button:where(.pr-twp,.pr-twp *),
input:where(.pr-twp,.pr-twp *),
optgroup:where(.pr-twp,.pr-twp *),
select:where(.pr-twp,.pr-twp *),
textarea:where(.pr-twp,.pr-twp *) {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button:where(.pr-twp,.pr-twp *),
select:where(.pr-twp,.pr-twp *) {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button:where(.pr-twp,.pr-twp *),
input:where([type='button']):where(.pr-twp,.pr-twp *),
input:where([type='reset']):where(.pr-twp,.pr-twp *),
input:where([type='submit']):where(.pr-twp,.pr-twp *) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring:where(.pr-twp,.pr-twp *) {
  outline: auto;
}

/*
Remove the additional \`:invalid\` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid:where(.pr-twp,.pr-twp *) {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress:where(.pr-twp,.pr-twp *) {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button:where(.pr-twp,.pr-twp *),
::-webkit-outer-spin-button:where(.pr-twp,.pr-twp *) {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search']:where(.pr-twp,.pr-twp *) {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration:where(.pr-twp,.pr-twp *) {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to \`inherit\` in Safari.
*/

::-webkit-file-upload-button:where(.pr-twp,.pr-twp *) {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary:where(.pr-twp,.pr-twp *) {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote:where(.pr-twp,.pr-twp *),
dl:where(.pr-twp,.pr-twp *),
dd:where(.pr-twp,.pr-twp *),
h1:where(.pr-twp,.pr-twp *),
h2:where(.pr-twp,.pr-twp *),
h3:where(.pr-twp,.pr-twp *),
h4:where(.pr-twp,.pr-twp *),
h5:where(.pr-twp,.pr-twp *),
h6:where(.pr-twp,.pr-twp *),
hr:where(.pr-twp,.pr-twp *),
figure:where(.pr-twp,.pr-twp *),
p:where(.pr-twp,.pr-twp *),
pre:where(.pr-twp,.pr-twp *) {
  margin: 0;
}

fieldset:where(.pr-twp,.pr-twp *) {
  margin: 0;
  padding: 0;
}

legend:where(.pr-twp,.pr-twp *) {
  padding: 0;
}

ol:where(.pr-twp,.pr-twp *),
ul:where(.pr-twp,.pr-twp *),
menu:where(.pr-twp,.pr-twp *) {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog:where(.pr-twp,.pr-twp *) {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea:where(.pr-twp,.pr-twp *) {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder:where(.pr-twp,.pr-twp *),
textarea::placeholder:where(.pr-twp,.pr-twp *) {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button:where(.pr-twp,.pr-twp *),
[role="button"]:where(.pr-twp,.pr-twp *) {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled:where(.pr-twp,.pr-twp *) {
  cursor: default;
}

/*
1. Make replaced elements \`display: block\` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add \`vertical-align: middle\` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img:where(.pr-twp,.pr-twp *),
svg:where(.pr-twp,.pr-twp *),
video:where(.pr-twp,.pr-twp *),
canvas:where(.pr-twp,.pr-twp *),
audio:where(.pr-twp,.pr-twp *),
iframe:where(.pr-twp,.pr-twp *),
embed:where(.pr-twp,.pr-twp *),
object:where(.pr-twp,.pr-twp *) {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img:where(.pr-twp,.pr-twp *),
video:where(.pr-twp,.pr-twp *) {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])):where(.pr-twp,.pr-twp *) {
  display: none;
}
  /* Adding the preflight selector (pr-twp) to components was not changing the font as desired.
  So this piece of code adds tw-font-sans everywhere we include preflight. */
  .pr-twp {
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
  @font-face {
    font-family: 'Inter';
    font-display: 'swap';
    src: url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
  }

  /**
   * Theme colors and other CSS variable properties in Platform.Bible. These are applied in CSS
   * properties using \`hsl(var(--variableName))\` or Tailwind classes like \`tw-bg-primary\`
   *
   * See the wiki's [Matching Application
   * Theme](https://github.com/paranext/paranext-extension-template/wiki/Extension-Anatomy#matching-application-theme)
   * section for more information
   */
  /* ["Slate" base theme by shadcn/ui](https://ui.shadcn.com/docs/theming#slate) */
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%; /* black */
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%; /* black */
    --popover: 210 20% 98%; /* popover platform */
    --popover-foreground: 222.2 84% 4.9%; /* black */
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 50% 95%;
    --secondary-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --muted: 210 50% 95%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 50% 95%;
    --accent-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%; /* slate-50 */
    --border: 214.3 31.8% 91.4%; /* slate-200 */
    --input: 214.3 31.8% 91.4%; /* slate-200 */
    --ring: 222.2 84% 4.9%; /* black */

    --sidebar-background: 210 20% 98%; /* popover platform */
    --sidebar-foreground: 222.2 84% 4.9%; /* black */
    --sidebar-primary: 222.2 47.4% 11.2%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 210 50% 95%;
    --sidebar-accent-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --sidebar-border: 214.3 31.8% 91.4%; /* slate-200 */
    --sidebar-ring: 222.2 84% 4.9%; /* black */

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%; /* black */
    --foreground: 210 40% 98%; /* slate-50 */
    --card: 222.2 84% 4.9%; /* black */
    --card-foreground: 210 40% 98%; /* slate-50 */
    --popover: 222.2 84% 4.9%; /* black */
    --popover-foreground: 210 40% 98%; /* slate-50 */
    --primary: 210 40% 98%; /* slate-50 */
    --primary-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%; /* slate-50 */
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%; /* slate-50 */
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%; /* slate-50 */
    --border: 215.3 19.3% 34.5%; /* slate-600 */
    --input: 215.3 19.3% 34.5%; /* slate-600 */
    --ring: 212.7 26.8% 83.9%;

    --sidebar-background: 222.2 84% 4.9%; /* black */
    --sidebar-foreground: 215 20.2% 65.1%;
    --sidebar-primary: 210 40% 98%; /* slate-50 */
    --sidebar-primary-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --sidebar-accent: 217.2 32.6% 17.5%;
    --sidebar-accent-foreground: 215 20.2% 65.1%;
    --sidebar-border: 217.2 32.6% 17.5%;
    --sidebar-ring: 212.7 26.8% 83.9%;
  }

  /* Palette built in https://tweakcn.com/themes/cmeukcpoj000204l45lxw5a74 based on "Caffeine" theme*/
  .pr-twp,
  .pr-twp * {
  border-color: hsl(var(--border));
  outline-color: hsl(var(--ring) / 0.5);
}

  /**
    * disabled because tslint does not like it, but it is the selector that's needed
    */
  /* stylelint-disable-next-line selector-no-qualifying-type */
  body.pr-twp {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}
.tw-prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.tw-prose :where(p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.tw-prose :where([class~="lead"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.tw-prose :where(a):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.tw-prose :where(strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.tw-prose :where(a strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(blockquote strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(thead th strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.tw-prose :where(ol[type="A"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-alpha;
}
.tw-prose :where(ol[type="a"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-alpha;
}
.tw-prose :where(ol[type="A" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-alpha;
}
.tw-prose :where(ol[type="a" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-alpha;
}
.tw-prose :where(ol[type="I"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-roman;
}
.tw-prose :where(ol[type="i"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-roman;
}
.tw-prose :where(ol[type="I" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-roman;
}
.tw-prose :where(ol[type="i" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-roman;
}
.tw-prose :where(ol[type="1"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: decimal;
}
.tw-prose :where(ul):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.tw-prose :where(ol > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.tw-prose :where(ul > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.tw-prose :where(dt):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.tw-prose :where(hr):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.tw-prose :where(blockquote):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "0o201C""0o201D""0o2018""0o2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.tw-prose :where(blockquote p:first-of-type):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::before {
  content: open-quote;
}
.tw-prose :where(blockquote p:last-of-type):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::after {
  content: close-quote;
}
.tw-prose :where(h1):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.tw-prose :where(h1 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.tw-prose :where(h2):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.tw-prose :where(h2 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.tw-prose :where(h3):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.tw-prose :where(h3 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.tw-prose :where(h4):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.tw-prose :where(h4 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.tw-prose :where(img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(picture):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(video):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(kbd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.tw-prose :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.tw-prose :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::before {
  content: "\`";
}
.tw-prose :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::after {
  content: "\`";
}
.tw-prose :where(a code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(h1 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(h2 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.tw-prose :where(h3 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.tw-prose :where(h4 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(blockquote code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(thead th code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(pre):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.tw-prose :where(pre code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.tw-prose :where(pre code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::before {
  content: none;
}
.tw-prose :where(pre code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::after {
  content: none;
}
.tw-prose :where(table):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.tw-prose :where(thead):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.tw-prose :where(thead th):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.tw-prose :where(tbody tr):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.tw-prose :where(tbody tr:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-bottom-width: 0;
}
.tw-prose :where(tbody td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  vertical-align: baseline;
}
.tw-prose :where(tfoot):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.tw-prose :where(tfoot td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  vertical-align: top;
}
.tw-prose :where(th, td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  text-align: start;
}
.tw-prose :where(figure > *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose :where(figcaption):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.tw-prose {
  --tw-prose-body: hsl(var(--foreground));
  --tw-prose-headings: hsl(var(--foreground));
  --tw-prose-lead: hsl(var(--muted-foreground));
  --tw-prose-links: hsl(var(--primary));
  --tw-prose-bold: hsl(var(--foreground));
  --tw-prose-counters: hsl(var(--muted-foreground));
  --tw-prose-bullets: hsl(var(--muted-foreground));
  --tw-prose-hr: hsl(var(--border));
  --tw-prose-quotes: hsl(var(--foreground));
  --tw-prose-quote-borders: hsl(var(--border));
  --tw-prose-captions: hsl(var(--muted-foreground));
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: hsl(var(--foreground));
  --tw-prose-pre-code: hsl(var(--muted-foreground));
  --tw-prose-pre-bg: hsl(var(--muted));
  --tw-prose-th-borders: hsl(var(--border));
  --tw-prose-td-borders: hsl(var(--border));
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.tw-prose :where(picture > img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose :where(li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.tw-prose :where(ol > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.tw-prose :where(ul > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.tw-prose :where(.tw-prose > ul > li p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.tw-prose :where(.tw-prose > ul > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
}
.tw-prose :where(.tw-prose > ul > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.25em;
}
.tw-prose :where(.tw-prose > ol > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
}
.tw-prose :where(.tw-prose > ol > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.25em;
}
.tw-prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.tw-prose :where(dl):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.tw-prose :where(dd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.tw-prose :where(hr + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(h2 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(h3 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(h4 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(thead th:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose :where(thead th:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose :where(tbody td, tfoot td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.tw-prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose :where(figure):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(.tw-prose > :first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(.tw-prose > :last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 0;
}
.tw-prose-sm {
  font-size: 0.875rem;
  line-height: 1.7142857;
}
.tw-prose-sm :where(p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where([class~="lead"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.tw-prose-sm :where(blockquote):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-inline-start: 1.1111111em;
}
.tw-prose-sm :where(h1):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}
.tw-prose-sm :where(h2):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}
.tw-prose-sm :where(h3):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}
.tw-prose-sm :where(h4):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}
.tw-prose-sm :where(img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(picture):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(picture > img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose-sm :where(video):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(kbd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  border-radius: 0.3125rem;
  padding-top: 0.1428571em;
  padding-inline-end: 0.3571429em;
  padding-bottom: 0.1428571em;
  padding-inline-start: 0.3571429em;
}
.tw-prose-sm :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
}
.tw-prose-sm :where(h2 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.9em;
}
.tw-prose-sm :where(h3 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8888889em;
}
.tw-prose-sm :where(pre):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}
.tw-prose-sm :where(ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}
.tw-prose-sm :where(ul):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}
.tw-prose-sm :where(li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}
.tw-prose-sm :where(ol > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.4285714em;
}
.tw-prose-sm :where(ul > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.4285714em;
}
.tw-prose-sm :where(.tw-prose-sm > ul > li p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}
.tw-prose-sm :where(.tw-prose-sm > ul > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
}
.tw-prose-sm :where(.tw-prose-sm > ul > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where(.tw-prose-sm > ol > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
}
.tw-prose-sm :where(.tw-prose-sm > ol > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}
.tw-prose-sm :where(dl):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where(dt):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
}
.tw-prose-sm :where(dd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.2857143em;
  padding-inline-start: 1.5714286em;
}
.tw-prose-sm :where(hr):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}
.tw-prose-sm :where(hr + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(h2 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(h3 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(h4 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(table):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}
.tw-prose-sm :where(thead th):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}
.tw-prose-sm :where(thead th:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose-sm :where(thead th:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose-sm :where(tbody td, tfoot td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}
.tw-prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose-sm :where(figure):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(figure > *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose-sm :where(figcaption):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}
.tw-prose-sm :where(.tw-prose-sm > :first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(.tw-prose-sm > :last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 0;
}
.tw-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.tw-pointer-events-none {
  pointer-events: none;
}
.tw-pointer-events-auto {
  pointer-events: auto;
}
.tw-fixed {
  position: fixed;
}
.tw-absolute {
  position: absolute;
}
.tw-relative {
  position: relative;
}
.tw-sticky {
  position: sticky;
}
.tw-inset-0 {
  inset: 0px;
}
.tw-inset-x-0 {
  left: 0px;
  right: 0px;
}
.tw-inset-y-0 {
  top: 0px;
  bottom: 0px;
}
.tw-bottom-0 {
  bottom: 0px;
}
.tw-left-0 {
  left: 0px;
}
.tw-left-2 {
  left: 0.5rem;
}
.tw-left-3 {
  left: 0.75rem;
}
.tw-left-4 {
  left: 1rem;
}
.tw-left-\\[50\\%\\] {
  left: 50%;
}
.tw-right-0 {
  right: 0px;
}
.tw-right-1 {
  right: 0.25rem;
}
.tw-right-3 {
  right: 0.75rem;
}
.tw-right-4 {
  right: 1rem;
}
.tw-start-2 {
  inset-inline-start: 0.5rem;
}
.tw-top-0 {
  top: 0px;
}
.tw-top-1\\.5 {
  top: 0.375rem;
}
.tw-top-1\\/2 {
  top: 50%;
}
.tw-top-2\\.5 {
  top: 0.625rem;
}
.tw-top-3\\.5 {
  top: 0.875rem;
}
.tw-top-4 {
  top: 1rem;
}
.tw-top-\\[-1px\\] {
  top: -1px;
}
.tw-top-\\[50\\%\\] {
  top: 50%;
}
.tw-z-10 {
  z-index: 10;
}
.tw-z-20 {
  z-index: 20;
}
.tw-z-50 {
  z-index: 50;
}
.tw-z-\\[1000\\] {
  z-index: 1000;
}
.tw-z-\\[250\\] {
  z-index: 250;
}
.tw-col-span-2 {
  grid-column: span 2 / span 2;
}
.tw-col-span-3 {
  grid-column: span 3 / span 3;
}
.tw-m-1 {
  margin: 0.25rem;
}
.tw-m-2 {
  margin: 0.5rem;
}
.tw--mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}
.tw-mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}
.tw-mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.tw-mx-3\\.5 {
  margin-left: 0.875rem;
  margin-right: 0.875rem;
}
.tw-mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.tw-my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.tw-my-auto {
  margin-top: auto;
  margin-bottom: auto;
}
.tw-mb-1 {
  margin-bottom: 0.25rem;
}
.tw-mb-2 {
  margin-bottom: 0.5rem;
}
.tw-mb-24 {
  margin-bottom: 6rem;
}
.tw-mb-4 {
  margin-bottom: 1rem;
}
.tw-me-1 {
  margin-inline-end: 0.25rem;
}
.tw-me-2 {
  margin-inline-end: 0.5rem;
}
.tw-ml-2 {
  margin-left: 0.5rem;
}
.tw-ml-24 {
  margin-left: 6rem;
}
.tw-ml-4 {
  margin-left: 1rem;
}
.tw-ml-auto {
  margin-left: auto;
}
.tw-mr-1 {
  margin-right: 0.25rem;
}
.tw-mr-2 {
  margin-right: 0.5rem;
}
.tw-mr-24 {
  margin-right: 6rem;
}
.tw-mr-4 {
  margin-right: 1rem;
}
.tw-ms-1 {
  margin-inline-start: 0.25rem;
}
.tw-ms-2 {
  margin-inline-start: 0.5rem;
}
.tw-ms-5 {
  margin-inline-start: 1.25rem;
}
.tw-ms-auto {
  margin-inline-start: auto;
}
.tw-mt-1 {
  margin-top: 0.25rem;
}
.tw-mt-2 {
  margin-top: 0.5rem;
}
.tw-mt-24 {
  margin-top: 6rem;
}
.tw-mt-3 {
  margin-top: 0.75rem;
}
.tw-mt-4 {
  margin-top: 1rem;
}
.tw-mt-6 {
  margin-top: 1.5rem;
}
.tw-mt-auto {
  margin-top: auto;
}
.tw-box-border {
  box-sizing: border-box;
}
.tw-block {
  display: block;
}
.tw-inline-block {
  display: inline-block;
}
.tw-flex {
  display: flex;
}
.tw-inline-flex {
  display: inline-flex;
}
.tw-table {
  display: table;
}
.tw-table-cell {
  display: table-cell;
}
.tw-table-row {
  display: table-row;
}
.tw-grid {
  display: grid;
}
.tw-inline-grid {
  display: inline-grid;
}
.tw-hidden {
  display: none;
}
.tw-aspect-square {
  aspect-ratio: 1 / 1;
}
.tw-size-4 {
  width: 1rem;
  height: 1rem;
}
.tw-h-10 {
  height: 2.5rem;
}
.tw-h-11 {
  height: 2.75rem;
}
.tw-h-12 {
  height: 3rem;
}
.tw-h-14 {
  height: 3.5rem;
}
.tw-h-2 {
  height: 0.5rem;
}
.tw-h-2\\.5 {
  height: 0.625rem;
}
.tw-h-20 {
  height: 5rem;
}
.tw-h-24 {
  height: 6rem;
}
.tw-h-3 {
  height: 0.75rem;
}
.tw-h-3\\.5 {
  height: 0.875rem;
}
.tw-h-32 {
  height: 8rem;
}
.tw-h-4 {
  height: 1rem;
}
.tw-h-40 {
  height: 10rem;
}
.tw-h-5 {
  height: 1.25rem;
}
.tw-h-6 {
  height: 1.5rem;
}
.tw-h-64 {
  height: 16rem;
}
.tw-h-7 {
  height: 1.75rem;
}
.tw-h-8 {
  height: 2rem;
}
.tw-h-9 {
  height: 2.25rem;
}
.tw-h-96 {
  height: 24rem;
}
.tw-h-\\[1\\.2rem\\] {
  height: 1.2rem;
}
.tw-h-\\[100px\\] {
  height: 100px;
}
.tw-h-\\[1px\\] {
  height: 1px;
}
.tw-h-\\[300px\\] {
  height: 300px;
}
.tw-h-\\[5px\\] {
  height: 5px;
}
.tw-h-\\[var\\(--radix-select-trigger-height\\)\\] {
  height: var(--radix-select-trigger-height);
}
.tw-h-auto {
  height: auto;
}
.tw-h-full {
  height: 100%;
}
.tw-h-px {
  height: 1px;
}
.tw-h-svh {
  height: 100svh;
}
.tw-max-h-5 {
  max-height: 1.25rem;
}
.tw-max-h-80 {
  max-height: 20rem;
}
.tw-max-h-96 {
  max-height: 24rem;
}
.tw-max-h-\\[--radix-context-menu-content-available-height\\] {
  max-height: var(--radix-context-menu-content-available-height);
}
.tw-max-h-\\[300px\\] {
  max-height: 300px;
}
.tw-max-h-\\[96\\%\\] {
  max-height: 96%;
}
.tw-min-h-0 {
  min-height: 0px;
}
.tw-min-h-\\[80px\\] {
  min-height: 80px;
}
.tw-min-h-svh {
  min-height: 100svh;
}
.tw-w-1\\/2 {
  width: 50%;
}
.tw-w-10 {
  width: 2.5rem;
}
.tw-w-11 {
  width: 2.75rem;
}
.tw-w-12 {
  width: 3rem;
}
.tw-w-2 {
  width: 0.5rem;
}
.tw-w-2\\.5 {
  width: 0.625rem;
}
.tw-w-20 {
  width: 5rem;
}
.tw-w-24 {
  width: 6rem;
}
.tw-w-3 {
  width: 0.75rem;
}
.tw-w-3\\.5 {
  width: 0.875rem;
}
.tw-w-3\\/4 {
  width: 75%;
}
.tw-w-32 {
  width: 8rem;
}
.tw-w-4 {
  width: 1rem;
}
.tw-w-4\\/5 {
  width: 80%;
}
.tw-w-4\\/6 {
  width: 66.666667%;
}
.tw-w-48 {
  width: 12rem;
}
.tw-w-5 {
  width: 1.25rem;
}
.tw-w-5\\/6 {
  width: 83.333333%;
}
.tw-w-56 {
  width: 14rem;
}
.tw-w-6 {
  width: 1.5rem;
}
.tw-w-60 {
  width: 15rem;
}
.tw-w-64 {
  width: 16rem;
}
.tw-w-7 {
  width: 1.75rem;
}
.tw-w-72 {
  width: 18rem;
}
.tw-w-8 {
  width: 2rem;
}
.tw-w-80 {
  width: 20rem;
}
.tw-w-9\\/12 {
  width: 75%;
}
.tw-w-96 {
  width: 24rem;
}
.tw-w-\\[--sidebar-width\\] {
  width: var(--sidebar-width);
}
.tw-w-\\[1\\.2rem\\] {
  width: 1.2rem;
}
.tw-w-\\[100px\\] {
  width: 100px;
}
.tw-w-\\[116px\\] {
  width: 116px;
}
.tw-w-\\[124px\\] {
  width: 124px;
}
.tw-w-\\[150px\\] {
  width: 150px;
}
.tw-w-\\[180px\\] {
  width: 180px;
}
.tw-w-\\[1px\\] {
  width: 1px;
}
.tw-w-\\[200px\\] {
  width: 200px;
}
.tw-w-\\[250px\\] {
  width: 250px;
}
.tw-w-\\[280px\\] {
  width: 280px;
}
.tw-w-\\[300px\\] {
  width: 300px;
}
.tw-w-\\[350px\\] {
  width: 350px;
}
.tw-w-\\[400px\\] {
  width: 400px;
}
.tw-w-\\[500px\\] {
  width: 500px;
}
.tw-w-\\[5px\\] {
  width: 5px;
}
.tw-w-\\[600px\\] {
  width: 600px;
}
.tw-w-\\[70px\\] {
  width: 70px;
}
.tw-w-auto {
  width: auto;
}
.tw-w-fit {
  width: fit-content;
}
.tw-w-full {
  width: 100%;
}
.tw-w-px {
  width: 1px;
}
.tw-min-w-0 {
  min-width: 0px;
}
.tw-min-w-16 {
  min-width: 4rem;
}
.tw-min-w-36 {
  min-width: 9rem;
}
.tw-min-w-5 {
  min-width: 1.25rem;
}
.tw-min-w-80 {
  min-width: 20rem;
}
.tw-min-w-\\[12rem\\] {
  min-width: 12rem;
}
.tw-min-w-\\[140px\\] {
  min-width: 140px;
}
.tw-min-w-\\[215px\\] {
  min-width: 215px;
}
.tw-min-w-\\[8rem\\] {
  min-width: 8rem;
}
.tw-min-w-\\[var\\(--radix-select-trigger-width\\)\\] {
  min-width: var(--radix-select-trigger-width);
}
.tw-max-w-2xl {
  max-width: 42rem;
}
.tw-max-w-3xl {
  max-width: 48rem;
}
.tw-max-w-48 {
  max-width: 12rem;
}
.tw-max-w-4xl {
  max-width: 56rem;
}
.tw-max-w-5 {
  max-width: 1.25rem;
}
.tw-max-w-64 {
  max-width: 16rem;
}
.tw-max-w-6xl {
  max-width: 72rem;
}
.tw-max-w-96 {
  max-width: 24rem;
}
.tw-max-w-\\[--skeleton-width\\] {
  max-width: var(--skeleton-width);
}
.tw-max-w-\\[220px\\] {
  max-width: 220px;
}
.tw-max-w-full {
  max-width: 100%;
}
.tw-max-w-lg {
  max-width: 32rem;
}
.tw-max-w-md {
  max-width: 28rem;
}
.tw-max-w-none {
  max-width: none;
}
.tw-max-w-sm {
  max-width: 24rem;
}
.tw-flex-1 {
  flex: 1 1 0%;
}
.tw-flex-shrink-0 {
  flex-shrink: 0;
}
.tw-shrink {
  flex-shrink: 1;
}
.tw-shrink-0 {
  flex-shrink: 0;
}
.tw-flex-grow {
  flex-grow: 1;
}
.tw-grow {
  flex-grow: 1;
}
.tw-grow-\\[2\\] {
  flex-grow: 2;
}
.tw-basis-0 {
  flex-basis: 0px;
}
.tw-caption-bottom {
  caption-side: bottom;
}
.tw-origin-\\[--radix-context-menu-content-transform-origin\\] {
  transform-origin: var(--radix-context-menu-content-transform-origin);
}
.tw--translate-x-1\\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw--translate-x-px {
  --tw-translate-x: -1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw--translate-y-1\\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-x-\\[-50\\%\\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-x-px {
  --tw-translate-x: 1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-y-\\[-50\\%\\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes tw-pulse {

  50% {
    opacity: .5;
  }
}
.tw-animate-pulse {
  animation: tw-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes tw-spin {

  to {
    transform: rotate(360deg);
  }
}
.tw-animate-spin {
  animation: tw-spin 1s linear infinite;
}
.tw-cursor-default {
  cursor: default;
}
.tw-cursor-pointer {
  cursor: pointer;
}
.tw-touch-none {
  touch-action: none;
}
.tw-select-none {
  user-select: none;
}
.tw-list-inside {
  list-style-position: inside;
}
.tw-list-disc {
  list-style-type: disc;
}
.tw-grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.tw-grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.tw-grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.tw-grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.tw-grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr));
}
.tw-grid-cols-\\[25\\%\\,25\\%\\,50\\%\\] {
  grid-template-columns: 25% 25% 50%;
}
.tw-grid-cols-\\[25\\%\\,50\\%\\,25\\%\\] {
  grid-template-columns: 25% 50% 25%;
}
.tw-flex-row {
  flex-direction: row;
}
.tw-flex-row-reverse {
  flex-direction: row-reverse;
}
.tw-flex-col {
  flex-direction: column;
}
.tw-flex-col-reverse {
  flex-direction: column-reverse;
}
.tw-flex-wrap {
  flex-wrap: wrap;
}
.tw-items-start {
  align-items: flex-start;
}
.tw-items-end {
  align-items: flex-end;
}
.tw-items-center {
  align-items: center;
}
.tw-items-stretch {
  align-items: stretch;
}
.tw-justify-start {
  justify-content: flex-start;
}
.tw-justify-end {
  justify-content: flex-end;
}
.tw-justify-center {
  justify-content: center;
}
.tw-justify-between {
  justify-content: space-between;
}
.tw-gap-1 {
  gap: 0.25rem;
}
.tw-gap-1\\.5 {
  gap: 0.375rem;
}
.tw-gap-2 {
  gap: 0.5rem;
}
.tw-gap-2\\.5 {
  gap: 0.625rem;
}
.tw-gap-4 {
  gap: 1rem;
}
.tw-gap-6 {
  gap: 1.5rem;
}
.tw-gap-\\[12px\\] {
  gap: 12px;
}
.tw-gap-x-2 {
  column-gap: 0.5rem;
}
.tw-gap-x-4 {
  column-gap: 1rem;
}
.tw-space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}
.tw-space-y-1\\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}
.tw-space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.tw-space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
.tw-space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.tw-space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.tw-space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.tw-divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
.tw-divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.tw-self-stretch {
  align-self: stretch;
}
.tw-overflow-auto {
  overflow: auto;
}
.tw-overflow-hidden {
  overflow: hidden;
}
.tw-overflow-clip {
  overflow: clip;
}
.tw-overflow-y-auto {
  overflow-y: auto;
}
.tw-overflow-x-hidden {
  overflow-x: hidden;
}
.tw-overflow-y-hidden {
  overflow-y: hidden;
}
.tw-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.tw-text-ellipsis {
  text-overflow: ellipsis;
}
.tw-whitespace-normal {
  white-space: normal;
}
.tw-whitespace-nowrap {
  white-space: nowrap;
}
.tw-text-nowrap {
  text-wrap: nowrap;
}
.tw-text-balance {
  text-wrap: balance;
}
.tw-break-words {
  overflow-wrap: break-word;
}
.tw-rounded {
  border-radius: 0.25rem;
}
.tw-rounded-\\[6px\\] {
  border-radius: 6px;
}
.tw-rounded-full {
  border-radius: 9999px;
}
.tw-rounded-lg {
  border-radius: var(--radius);
}
.tw-rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
.tw-rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}
.tw-rounded-xl {
  border-radius: 0.75rem;
}
.tw-rounded-b-\\[10px\\] {
  border-bottom-right-radius: 10px;
  border-bottom-left-radius: 10px;
}
.tw-rounded-l-\\[10px\\] {
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
}
.tw-rounded-r-\\[10px\\] {
  border-top-right-radius: 10px;
  border-bottom-right-radius: 10px;
}
.tw-rounded-r-xl {
  border-top-right-radius: 0.75rem;
  border-bottom-right-radius: 0.75rem;
}
.tw-rounded-t-\\[10px\\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}
.tw-border {
  border-width: 1px;
}
.tw-border-0 {
  border-width: 0px;
}
.tw-border-2 {
  border-width: 2px;
}
.tw-border-b {
  border-bottom-width: 1px;
}
.tw-border-b-0 {
  border-bottom-width: 0px;
}
.tw-border-e {
  border-inline-end-width: 1px;
}
.tw-border-e-0 {
  border-inline-end-width: 0px;
}
.tw-border-l {
  border-left-width: 1px;
}
.tw-border-l-4 {
  border-left-width: 4px;
}
.tw-border-s-2 {
  border-inline-start-width: 2px;
}
.tw-border-t {
  border-top-width: 1px;
}
.tw-border-t-0 {
  border-top-width: 0px;
}
.tw-border-solid {
  border-style: solid;
}
.tw-border-dashed {
  border-style: dashed;
}
.tw-border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
}
.tw-border-blue-400 {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity, 1));
}
.tw-border-blue-500 {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity, 1));
}
.tw-border-destructive\\/50 {
  border-color: hsl(var(--destructive) / 0.5);
}
.tw-border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}
.tw-border-input {
  border-color: hsl(var(--input));
}
.tw-border-primary {
  border-color: hsl(var(--primary));
}
.tw-border-red-300 {
  --tw-border-opacity: 1;
  border-color: rgb(252 165 165 / var(--tw-border-opacity, 1));
}
.tw-border-red-400 {
  --tw-border-opacity: 1;
  border-color: rgb(248 113 113 / var(--tw-border-opacity, 1));
}
.tw-border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(239 68 68 / var(--tw-border-opacity, 1));
}
.tw-border-red-600 {
  --tw-border-opacity: 1;
  border-color: rgb(220 38 38 / var(--tw-border-opacity, 1));
}
.tw-border-ring {
  border-color: hsl(var(--ring));
}
.tw-border-sidebar-border {
  border-color: hsl(var(--sidebar-border));
}
.tw-border-slate-300 {
  --tw-border-opacity: 1;
  border-color: rgb(203 213 225 / var(--tw-border-opacity, 1));
}
.tw-border-transparent {
  border-color: transparent;
}
.tw-border-yellow-400 {
  --tw-border-opacity: 1;
  border-color: rgb(250 204 21 / var(--tw-border-opacity, 1));
}
.tw-border-yellow-500 {
  --tw-border-opacity: 1;
  border-color: rgb(234 179 8 / var(--tw-border-opacity, 1));
}
.tw-border-s-amber-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(253 230 138 / var(--tw-border-opacity, 1));
}
.tw-border-s-indigo-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(199 210 254 / var(--tw-border-opacity, 1));
}
.tw-border-s-purple-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(233 213 255 / var(--tw-border-opacity, 1));
}
.tw-border-s-red-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(254 202 202 / var(--tw-border-opacity, 1));
}
.tw-bg-accent {
  background-color: hsl(var(--accent));
}
.tw-bg-background {
  background-color: hsl(var(--background));
}
.tw-bg-black\\/80 {
  background-color: rgb(0 0 0 / 0.8);
}
.tw-bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
}
.tw-bg-blue-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity, 1));
}
.tw-bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity, 1));
}
.tw-bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity, 1));
}
.tw-bg-border {
  background-color: hsl(var(--border));
}
.tw-bg-card {
  background-color: hsl(var(--card));
}
.tw-bg-destructive {
  background-color: hsl(var(--destructive));
}
.tw-bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}
.tw-bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}
.tw-bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity, 1));
}
.tw-bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));
}
.tw-bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));
}
.tw-bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));
}
.tw-bg-muted {
  background-color: hsl(var(--muted));
}
.tw-bg-muted\\/50 {
  background-color: hsl(var(--muted) / 0.5);
}
.tw-bg-neutral-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity, 1));
}
.tw-bg-orange-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 237 213 / var(--tw-bg-opacity, 1));
}
.tw-bg-popover {
  background-color: hsl(var(--popover));
}
.tw-bg-primary {
  background-color: hsl(var(--primary));
}
.tw-bg-purple-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 245 255 / var(--tw-bg-opacity, 1));
}
.tw-bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}
.tw-bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}
.tw-bg-secondary {
  background-color: hsl(var(--secondary));
}
.tw-bg-sidebar {
  background-color: hsl(var(--sidebar-background));
}
.tw-bg-sidebar-accent {
  background-color: hsl(var(--sidebar-accent));
}
.tw-bg-sidebar-border {
  background-color: hsl(var(--sidebar-border));
}
.tw-bg-transparent {
  background-color: transparent;
}
.tw-bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}
.tw-bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
}
.tw-bg-yellow-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 252 232 / var(--tw-bg-opacity, 1));
}
.tw-bg-yellow-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(234 179 8 / var(--tw-bg-opacity, 1));
}
.tw-bg-zinc-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(161 161 170 / var(--tw-bg-opacity, 1));
}
.tw-fill-current {
  fill: currentColor;
}
.tw-fill-destructive {
  fill: hsl(var(--destructive));
}
.tw-fill-yellow-400 {
  fill: #facc15;
}
.tw-fill-yellow-400\\/50 {
  fill: rgb(250 204 21 / 0.5);
}
.tw-p-0 {
  padding: 0px;
}
.tw-p-0\\.5 {
  padding: 0.125rem;
}
.tw-p-1 {
  padding: 0.25rem;
}
.tw-p-2 {
  padding: 0.5rem;
}
.tw-p-3 {
  padding: 0.75rem;
}
.tw-p-4 {
  padding: 1rem;
}
.tw-p-6 {
  padding: 1.5rem;
}
.tw-p-8 {
  padding: 2rem;
}
.tw-p-\\[10px\\] {
  padding: 10px;
}
.tw-p-\\[1px\\] {
  padding: 1px;
}
.tw-px-0 {
  padding-left: 0px;
  padding-right: 0px;
}
.tw-px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.tw-px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.tw-px-2\\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.tw-px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.tw-px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.tw-px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.tw-px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.tw-py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.tw-py-0\\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.tw-py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.tw-py-1\\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.tw-py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.tw-py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.tw-py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.tw-py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.tw-py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.\\!tw-pr-10 {
  padding-right: 2.5rem !important;
}
.tw-pb-2 {
  padding-bottom: 0.5rem;
}
.tw-pb-3 {
  padding-bottom: 0.75rem;
}
.tw-pb-4 {
  padding-bottom: 1rem;
}
.tw-pe-1 {
  padding-inline-end: 0.25rem;
}
.tw-pe-2 {
  padding-inline-end: 0.5rem;
}
.tw-pe-9 {
  padding-inline-end: 2.25rem;
}
.tw-pe-\\[calc\\(138px\\+1rem\\)\\] {
  padding-inline-end: calc(138px + 1rem);
}
.tw-pl-3 {
  padding-left: 0.75rem;
}
.tw-pl-4 {
  padding-left: 1rem;
}
.tw-pl-5 {
  padding-left: 1.25rem;
}
.tw-pl-8 {
  padding-left: 2rem;
}
.tw-pr-2 {
  padding-right: 0.5rem;
}
.tw-pr-3 {
  padding-right: 0.75rem;
}
.tw-pr-4 {
  padding-right: 1rem;
}
.tw-ps-12 {
  padding-inline-start: 3rem;
}
.tw-ps-4 {
  padding-inline-start: 1rem;
}
.tw-ps-8 {
  padding-inline-start: 2rem;
}
.tw-ps-9 {
  padding-inline-start: 2.25rem;
}
.tw-ps-\\[85px\\] {
  padding-inline-start: 85px;
}
.tw-pt-0 {
  padding-top: 0px;
}
.tw-pt-2 {
  padding-top: 0.5rem;
}
.tw-pt-3 {
  padding-top: 0.75rem;
}
.tw-pt-6 {
  padding-top: 1.5rem;
}
.tw-text-left {
  text-align: left;
}
.tw-text-center {
  text-align: center;
}
.tw-text-right {
  text-align: right;
}
.tw-text-start {
  text-align: start;
}
.tw-text-end {
  text-align: end;
}
.tw-align-middle {
  vertical-align: middle;
}
.tw-text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.tw-text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.tw-text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.tw-text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.tw-text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.tw-text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.tw-font-bold {
  font-weight: 700;
}
.tw-font-medium {
  font-weight: 500;
}
.tw-font-normal {
  font-weight: 400;
}
.tw-font-semibold {
  font-weight: 600;
}
.tw-capitalize {
  text-transform: capitalize;
}
.tw-italic {
  font-style: italic;
}
.tw-tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}
.tw-leading-loose {
  line-height: 2;
}
.tw-leading-none {
  line-height: 1;
}
.tw-leading-relaxed {
  line-height: 1.625;
}
.tw-leading-tight {
  line-height: 1.25;
}
.tw-tracking-tight {
  letter-spacing: -0.025em;
}
.tw-tracking-widest {
  letter-spacing: 0.1em;
}
.tw-text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity, 1));
}
.tw-text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}
.tw-text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity, 1));
}
.tw-text-card-foreground {
  color: hsl(var(--card-foreground));
}
.tw-text-current {
  color: currentColor;
}
.tw-text-destructive {
  color: hsl(var(--destructive));
}
.tw-text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}
.tw-text-foreground {
  color: hsl(var(--foreground));
}
.tw-text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity, 1));
}
.tw-text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}
.tw-text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}
.tw-text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}
.tw-text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}
.tw-text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
}
.tw-text-green-700 {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity, 1));
}
.tw-text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity, 1));
}
.tw-text-inherit {
  color: inherit;
}
.tw-text-muted-foreground {
  color: hsl(var(--muted-foreground));
}
.tw-text-muted-foreground\\/50 {
  color: hsl(var(--muted-foreground) / 0.5);
}
.tw-text-orange-800 {
  --tw-text-opacity: 1;
  color: rgb(154 52 18 / var(--tw-text-opacity, 1));
}
.tw-text-popover-foreground {
  color: hsl(var(--popover-foreground));
}
.tw-text-primary {
  color: hsl(var(--primary));
}
.tw-text-primary-foreground {
  color: hsl(var(--primary-foreground));
}
.tw-text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}
.tw-text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}
.tw-text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}
.tw-text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity, 1));
}
.tw-text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}
.tw-text-sidebar-accent-foreground {
  color: hsl(var(--sidebar-accent-foreground));
}
.tw-text-sidebar-foreground {
  color: hsl(var(--sidebar-foreground));
}
.tw-text-sidebar-foreground\\/70 {
  color: hsl(var(--sidebar-foreground) / 0.7);
}
.tw-text-slate-900 {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity, 1));
}
.tw-text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}
.tw-text-yellow-400 {
  --tw-text-opacity: 1;
  color: rgb(250 204 21 / var(--tw-text-opacity, 1));
}
.tw-text-yellow-600 {
  --tw-text-opacity: 1;
  color: rgb(202 138 4 / var(--tw-text-opacity, 1));
}
.tw-text-yellow-700 {
  --tw-text-opacity: 1;
  color: rgb(161 98 7 / var(--tw-text-opacity, 1));
}
.tw-underline {
  text-decoration-line: underline;
}
.tw-decoration-destructive {
  text-decoration-color: hsl(var(--destructive));
}
.tw-underline-offset-4 {
  text-underline-offset: 4px;
}
.tw-opacity-0 {
  opacity: 0;
}
.tw-opacity-100 {
  opacity: 1;
}
.tw-opacity-50 {
  opacity: 0.5;
}
.tw-opacity-60 {
  opacity: 0.6;
}
.tw-opacity-70 {
  opacity: 0.7;
}
.tw-shadow-\\[0_0_0_1px_hsl\\(var\\(--sidebar-border\\)\\)\\] {
  --tw-shadow: 0 0 0 1px hsl(var(--sidebar-border));
  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-none {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.tw-ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.tw-ring-sidebar-ring {
  --tw-ring-color: hsl(var(--sidebar-ring));
}
.tw-ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}
.tw-drop-shadow-sm {
  --tw-drop-shadow: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.tw-transition-\\[left\\,right\\,width\\] {
  transition-property: left,right,width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-\\[margin\\,opa\\] {
  transition-property: margin,opa;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-\\[width\\,height\\,padding\\] {
  transition-property: width,height,padding;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-\\[width\\] {
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-duration-200 {
  transition-duration: 200ms;
}
.tw-ease-linear {
  transition-timing-function: linear;
}
@keyframes enter {

  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {

  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
.tw-animate-in {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.tw-fade-in-0 {
  --tw-enter-opacity: 0;
}
.tw-fade-in-80 {
  --tw-enter-opacity: 0.8;
}
.tw-zoom-in-95 {
  --tw-enter-scale: .95;
}
.tw-duration-200 {
  animation-duration: 200ms;
}
.tw-ease-linear {
  animation-timing-function: linear;
}
.tw-\\@container\\/tab-toolbar-center {
  container-type: inline-size;
  container-name: tab-toolbar-center;
}
.tw-\\@container\\/tab-toolbar-end {
  container-type: inline-size;
  container-name: tab-toolbar-end;
}
.tw-\\@container\\/tab-toolbar-start {
  container-type: inline-size;
  container-name: tab-toolbar-start;
}
.tw-\\@container\\/toolbar {
  container-type: inline-size;
  container-name: toolbar;
}

/*
 * WARNING: These themes are also represented in paranext-core/src/shared/data/themes.data.json!
 * Please update in both locations
*/
/* #region shared with https://github.com/paranext/paranext-extension-template/blob/main/src/tailwind.css */
/* #endregion */

/* Note that the following region is from shadcn/ui's styles
 * https://ui.shadcn.com/docs/installation/manual#configure-styles but is scoped down to .pr-twp
 * because this is just a component library and should not apply its styles to the entire page.
 *
 * There is now a section in this library's README.md that explains how to apply these styles to the
 * entire page if desired.
 *
 * The template has the original shadcn/ui styles because it intentionally applies the styles to the
 * entire page. The same is true for Platform.Bible - see \`app.component.scss\`
 */
/* #region shared with https://github.com/paranext/paranext-extension-template/blob/main/src/tailwind.css but with the difference of being scoped to .pr-twp here */
.file\\:tw-border-0::file-selector-button {
  border-width: 0px;
}
.file\\:tw-bg-transparent::file-selector-button {
  background-color: transparent;
}
.file\\:tw-text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.file\\:tw-font-medium::file-selector-button {
  font-weight: 500;
}
.file\\:tw-text-foreground::file-selector-button {
  color: hsl(var(--foreground));
}
.placeholder\\:tw-text-muted-foreground::placeholder {
  color: hsl(var(--muted-foreground));
}
.after\\:tw-absolute::after {
  content: var(--tw-content);
  position: absolute;
}
.after\\:tw--inset-2::after {
  content: var(--tw-content);
  inset: -0.5rem;
}
.after\\:tw-inset-y-0::after {
  content: var(--tw-content);
  top: 0px;
  bottom: 0px;
}
.after\\:tw-left-1\\/2::after {
  content: var(--tw-content);
  left: 50%;
}
.after\\:tw-w-1::after {
  content: var(--tw-content);
  width: 0.25rem;
}
.after\\:tw-w-\\[2px\\]::after {
  content: var(--tw-content);
  width: 2px;
}
.after\\:tw--translate-x-1\\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\\:tw-bg-accent:hover {
  background-color: hsl(var(--accent));
}
.hover\\:tw-bg-blue-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
}
.hover\\:tw-bg-destructive\\/80:hover {
  background-color: hsl(var(--destructive) / 0.8);
}
.hover\\:tw-bg-destructive\\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}
.hover\\:tw-bg-muted:hover {
  background-color: hsl(var(--muted));
}
.hover\\:tw-bg-muted\\/50:hover {
  background-color: hsl(var(--muted) / 0.5);
}
.hover\\:tw-bg-muted\\/80:hover {
  background-color: hsl(var(--muted) / 0.8);
}
.hover\\:tw-bg-primary\\/70:hover {
  background-color: hsl(var(--primary) / 0.7);
}
.hover\\:tw-bg-primary\\/80:hover {
  background-color: hsl(var(--primary) / 0.8);
}
.hover\\:tw-bg-primary\\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}
.hover\\:tw-bg-secondary:hover {
  background-color: hsl(var(--secondary));
}
.hover\\:tw-bg-secondary\\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}
.hover\\:tw-bg-sidebar-accent:hover {
  background-color: hsl(var(--sidebar-accent));
}
.hover\\:tw-bg-transparent:hover {
  background-color: transparent;
}
.hover\\:tw-text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}
.hover\\:tw-text-foreground:hover {
  color: hsl(var(--foreground));
}
.hover\\:tw-text-muted-foreground:hover {
  color: hsl(var(--muted-foreground));
}
.hover\\:tw-text-primary-foreground:hover {
  color: hsl(var(--primary-foreground));
}
.hover\\:tw-text-sidebar-accent-foreground:hover {
  color: hsl(var(--sidebar-accent-foreground));
}
.hover\\:tw-underline:hover {
  text-decoration-line: underline;
}
.hover\\:tw-opacity-100:hover {
  opacity: 1;
}
.hover\\:tw-opacity-80:hover {
  opacity: 0.8;
}
.hover\\:tw-shadow-\\[0_0_0_1px_hsl\\(var\\(--sidebar-accent\\)\\)\\]:hover {
  --tw-shadow: 0 0 0 1px hsl(var(--sidebar-accent));
  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.hover\\:after\\:tw-bg-sidebar-border:hover::after {
  content: var(--tw-content);
  background-color: hsl(var(--sidebar-border));
}
.focus\\:tw-relative:focus {
  position: relative;
}
.focus\\:tw-z-10:focus {
  z-index: 10;
}
.focus\\:tw-bg-accent:focus {
  background-color: hsl(var(--accent));
}
.focus\\:tw-bg-muted:focus {
  background-color: hsl(var(--muted));
}
.focus\\:tw-text-accent-foreground:focus {
  color: hsl(var(--accent-foreground));
}
.focus\\:tw-text-foreground:focus {
  color: hsl(var(--foreground));
}
.focus\\:tw-outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus\\:tw-ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\\:tw-ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}
.focus\\:tw-ring-offset-1:focus {
  --tw-ring-offset-width: 1px;
}
.focus\\:tw-ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}
.focus\\:tw-ring-offset-background:focus {
  --tw-ring-offset-color: hsl(var(--background));
}
.focus-visible\\:tw-outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus-visible\\:tw-ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus-visible\\:tw-ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus-visible\\:tw-ring-\\[color\\:hsl\\(2400o2c 5\\%0o2c 64\\.9\\%\\)\\]:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: hsl(240 5% 64.9% / var(--tw-ring-opacity, 1));
}
.focus-visible\\:tw-ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}
.focus-visible\\:tw-ring-sidebar-ring:focus-visible {
  --tw-ring-color: hsl(var(--sidebar-ring));
}
.focus-visible\\:tw-ring-offset-1:focus-visible {
  --tw-ring-offset-width: 1px;
}
.focus-visible\\:tw-ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}
.focus-visible\\:tw-ring-offset-background:focus-visible {
  --tw-ring-offset-color: hsl(var(--background));
}
.active\\:tw-bg-sidebar-accent:active {
  background-color: hsl(var(--sidebar-accent));
}
.active\\:tw-text-sidebar-accent-foreground:active {
  color: hsl(var(--sidebar-accent-foreground));
}
.disabled\\:tw-pointer-events-none:disabled {
  pointer-events: none;
}
.disabled\\:tw-cursor-not-allowed:disabled {
  cursor: not-allowed;
}
.disabled\\:tw-opacity-50:disabled {
  opacity: 0.5;
}
.tw-peer:disabled ~ .peer-disabled\\:tw-cursor-not-allowed {
  cursor: not-allowed;
}
.tw-peer:disabled ~ .peer-disabled\\:tw-opacity-70 {
  opacity: 0.7;
}
.has-\\[\\[data-variant\\=inset\\]\\]\\:tw-bg-sidebar:has([data-variant=inset]) {
  background-color: hsl(var(--sidebar-background));
}
.aria-disabled\\:tw-pointer-events-none[aria-disabled="true"] {
  pointer-events: none;
}
.aria-disabled\\:tw-opacity-50[aria-disabled="true"] {
  opacity: 0.5;
}
.data-\\[disabled\\=true\\]\\:tw-pointer-events-none[data-disabled="true"] {
  pointer-events: none;
}
.data-\\[disabled\\]\\:tw-pointer-events-none[data-disabled] {
  pointer-events: none;
}
.data-\\[panel-group-direction\\=vertical\\]\\:tw-h-px[data-panel-group-direction="vertical"] {
  height: 1px;
}
.data-\\[panel-group-direction\\=vertical\\]\\:tw-w-full[data-panel-group-direction="vertical"] {
  width: 100%;
}
.data-\\[side\\=bottom\\]\\:tw-translate-y-1[data-side="bottom"] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[side\\=left\\]\\:tw--translate-x-1[data-side="left"] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[side\\=right\\]\\:tw-translate-x-1[data-side="right"] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[side\\=top\\]\\:tw--translate-y-1[data-side="top"] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=checked\\]\\:tw-translate-x-5[data-state="checked"] {
  --tw-translate-x: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=checked\\]\\:tw-translate-x-\\[-20px\\][data-state="checked"] {
  --tw-translate-x: -20px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=unchecked\\]\\:tw-translate-x-0[data-state="unchecked"] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[panel-group-direction\\=vertical\\]\\:tw-flex-col[data-panel-group-direction="vertical"] {
  flex-direction: column;
}
.data-\\[active\\=true\\]\\:tw-bg-sidebar-accent[data-active="true"] {
  background-color: hsl(var(--sidebar-accent));
}
.data-\\[selected\\=true\\]\\:tw-bg-accent[data-selected="true"] {
  background-color: hsl(var(--accent));
}
.data-\\[state\\=active\\]\\:tw-bg-background[data-state="active"] {
  background-color: hsl(var(--background));
}
.data-\\[state\\=checked\\]\\:tw-bg-primary[data-state="checked"] {
  background-color: hsl(var(--primary));
}
.data-\\[state\\=on\\]\\:tw-bg-accent[data-state="on"] {
  background-color: hsl(var(--accent));
}
.data-\\[state\\=open\\]\\:tw-bg-accent[data-state="open"] {
  background-color: hsl(var(--accent));
}
.data-\\[state\\=open\\]\\:tw-bg-muted[data-state="open"] {
  background-color: hsl(var(--muted));
}
.data-\\[state\\=selected\\]\\:tw-bg-muted[data-state="selected"] {
  background-color: hsl(var(--muted));
}
.data-\\[state\\=unchecked\\]\\:tw-bg-input[data-state="unchecked"] {
  background-color: hsl(var(--input));
}
.data-\\[active\\=true\\]\\:tw-font-medium[data-active="true"] {
  font-weight: 500;
}
.data-\\[active\\=true\\]\\:tw-text-sidebar-accent-foreground[data-active="true"] {
  color: hsl(var(--sidebar-accent-foreground));
}
.data-\\[selected\\=true\\]\\:tw-text-accent-foreground[data-selected="true"] {
  color: hsl(var(--accent-foreground));
}
.data-\\[state\\=active\\]\\:tw-text-foreground[data-state="active"] {
  color: hsl(var(--foreground));
}
.data-\\[state\\=checked\\]\\:tw-text-primary-foreground[data-state="checked"] {
  color: hsl(var(--primary-foreground));
}
.data-\\[state\\=on\\]\\:tw-text-accent-foreground[data-state="on"] {
  color: hsl(var(--accent-foreground));
}
.data-\\[state\\=open\\]\\:tw-text-accent-foreground[data-state="open"] {
  color: hsl(var(--accent-foreground));
}
.data-\\[state\\=open\\]\\:tw-text-foreground[data-state="open"] {
  color: hsl(var(--foreground));
}
.data-\\[state\\=open\\]\\:tw-text-muted-foreground[data-state="open"] {
  color: hsl(var(--muted-foreground));
}
.data-\\[disabled\\=true\\]\\:tw-opacity-50[data-disabled="true"] {
  opacity: 0.5;
}
.data-\\[disabled\\]\\:tw-opacity-50[data-disabled] {
  opacity: 0.5;
}
.data-\\[state\\=open\\]\\:tw-opacity-100[data-state="open"] {
  opacity: 1;
}
.data-\\[state\\=active\\]\\:tw-shadow-sm[data-state="active"] {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.data-\\[state\\=open\\]\\:tw-animate-in[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.data-\\[state\\=closed\\]\\:tw-animate-out[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.data-\\[state\\=closed\\]\\:tw-fade-out-0[data-state="closed"] {
  --tw-exit-opacity: 0;
}
.data-\\[state\\=open\\]\\:tw-fade-in-0[data-state="open"] {
  --tw-enter-opacity: 0;
}
.data-\\[state\\=closed\\]\\:tw-zoom-out-95[data-state="closed"] {
  --tw-exit-scale: .95;
}
.data-\\[state\\=open\\]\\:tw-zoom-in-95[data-state="open"] {
  --tw-enter-scale: .95;
}
.data-\\[side\\=bottom\\]\\:tw-slide-in-from-top-2[data-side="bottom"] {
  --tw-enter-translate-y: -0.5rem;
}
.data-\\[side\\=left\\]\\:tw-slide-in-from-right-2[data-side="left"] {
  --tw-enter-translate-x: 0.5rem;
}
.data-\\[side\\=right\\]\\:tw-slide-in-from-left-2[data-side="right"] {
  --tw-enter-translate-x: -0.5rem;
}
.data-\\[side\\=top\\]\\:tw-slide-in-from-bottom-2[data-side="top"] {
  --tw-enter-translate-y: 0.5rem;
}
.data-\\[state\\=closed\\]\\:tw-slide-out-to-left-1\\/2[data-state="closed"] {
  --tw-exit-translate-x: -50%;
}
.data-\\[state\\=closed\\]\\:tw-slide-out-to-top-\\[48\\%\\][data-state="closed"] {
  --tw-exit-translate-y: -48%;
}
.data-\\[state\\=open\\]\\:tw-slide-in-from-left-1\\/2[data-state="open"] {
  --tw-enter-translate-x: -50%;
}
.data-\\[state\\=open\\]\\:tw-slide-in-from-top-\\[48\\%\\][data-state="open"] {
  --tw-enter-translate-y: -48%;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-left-0[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  left: 0px;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-h-1[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  height: 0.25rem;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-w-full[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  width: 100%;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw--translate-y-1\\/2[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-translate-x-0[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=open\\]\\:hover\\:tw-bg-sidebar-accent:hover[data-state="open"] {
  background-color: hsl(var(--sidebar-accent));
}
.data-\\[state\\=open\\]\\:hover\\:tw-text-sidebar-accent-foreground:hover[data-state="open"] {
  color: hsl(var(--sidebar-accent-foreground));
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-left-\\[calc\\(var\\(--sidebar-width\\)\\*-1\\)\\] {
  left: calc(var(--sidebar-width) * -1);
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-right-\\[calc\\(var\\(--sidebar-width\\)\\*-1\\)\\] {
  right: calc(var(--sidebar-width) * -1);
}
.tw-group[data-side="primary"] .group-data-\\[side\\=primary\\]\\:tw--right-4 {
  right: -1rem;
}
.tw-group[data-side="secondary"] .group-data-\\[side\\=secondary\\]\\:tw-left-0 {
  left: 0px;
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw--mt-8 {
  margin-top: -2rem;
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-hidden {
  display: none;
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-w-\\[--sidebar-width-icon\\] {
  width: var(--sidebar-width-icon);
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-w-\\[calc\\(var\\(--sidebar-width-icon\\)_\\+_theme\\(spacing\\.4\\)\\)\\] {
  width: calc(var(--sidebar-width-icon) + 1rem);
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-w-\\[calc\\(var\\(--sidebar-width-icon\\)_\\+_theme\\(spacing\\.4\\)_\\+2px\\)\\] {
  width: calc(var(--sidebar-width-icon) + 1rem + 2px);
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-w-0 {
  width: 0px;
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-group[data-side="secondary"] .group-data-\\[side\\=secondary\\]\\:tw-rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-overflow-hidden {
  overflow: hidden;
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-rounded-lg {
  border-radius: var(--radius);
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-border {
  border-width: 1px;
}
.tw-group[data-side="primary"] .group-data-\\[side\\=primary\\]\\:tw-border-r {
  border-right-width: 1px;
}
.tw-group[data-side="secondary"] .group-data-\\[side\\=secondary\\]\\:tw-border-l {
  border-left-width: 1px;
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-border-sidebar-border {
  border-color: hsl(var(--sidebar-border));
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-opacity-0 {
  opacity: 0;
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:after\\:tw-left-full::after {
  content: var(--tw-content);
  left: 100%;
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:hover\\:tw-bg-sidebar:hover {
  background-color: hsl(var(--sidebar-background));
}
.tw-peer[data-variant="inset"] ~ .peer-data-\\[variant\\=inset\\]\\:tw-min-h-\\[calc\\(100svh-theme\\(spacing\\.4\\)\\)\\] {
  min-height: calc(100svh - 1rem);
}
@container (min-width: 24rem) {

  .\\@sm\\:tw-grow {
    flex-grow: 1;
  }

  .\\@sm\\:tw-basis-auto {
    flex-basis: auto;
  }
}
@media (min-width: 640px) {

  .sm\\:tw-flex {
    display: flex;
  }

  .sm\\:tw-flex-row {
    flex-direction: row;
  }

  .sm\\:tw-justify-end {
    justify-content: flex-end;
  }

  .sm\\:tw-space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\\:tw-rounded-lg {
    border-radius: var(--radius);
  }

  .sm\\:tw-text-left {
    text-align: left;
  }

  .sm\\:tw-text-start {
    text-align: start;
  }
}
@media (min-width: 768px) {

  .md\\:tw-block {
    display: block;
  }

  .md\\:tw-flex {
    display: flex;
  }

  .md\\:tw-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\\:tw-text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .md\\:tw-opacity-0 {
    opacity: 0;
  }

  .after\\:md\\:tw-hidden::after {
    content: var(--tw-content);
    display: none;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-m-2 {
    margin: 0.5rem;
  }

  .tw-peer[data-state="collapsed"][data-variant="inset"] ~ .md\\:peer-data-\\[state\\=collapsed\\]\\:peer-data-\\[variant\\=inset\\]\\:tw-ml-2 {
    margin-left: 0.5rem;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-ml-0 {
    margin-left: 0px;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-rounded-xl {
    border-radius: 0.75rem;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}
@media (min-width: 1024px) {

  .lg\\:tw-flex {
    display: flex;
  }

  .lg\\:tw-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\\:tw-space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }
}
.ltr\\:tw-left-2:where([dir="ltr"], [dir="ltr"] *) {
  left: 0.5rem;
}
.rtl\\:tw-right-2:where([dir="rtl"], [dir="rtl"] *) {
  right: 0.5rem;
}
@media (prefers-color-scheme: dark) {

  .dark\\:tw-border-destructive {
    border-color: hsl(var(--destructive));
  }
}
.\\[\\&\\:has\\(\\[role\\=checkbox\\]\\)\\]\\:tw-pe-0:has([role=checkbox]) {
  padding-inline-end: 0px;
}
.\\[\\&\\>img\\+div\\]\\:tw-translate-y-\\[-3px\\]>img+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.\\[\\&\\>img\\]\\:tw-absolute>img {
  position: absolute;
}
.\\[\\&\\>img\\]\\:tw-left-4>img {
  left: 1rem;
}
.\\[\\&\\>img\\]\\:tw-top-4>img {
  top: 1rem;
}
.\\[\\&\\>img\\]\\:tw-text-destructive>img {
  color: hsl(var(--destructive));
}
.\\[\\&\\>img\\]\\:tw-text-foreground>img {
  color: hsl(var(--foreground));
}
.\\[\\&\\>img\\~\\*\\]\\:tw-pl-7>img~* {
  padding-left: 1.75rem;
}
.\\[\\&\\>span\\:last-child\\]\\:tw-truncate>span:last-child {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.\\[\\&\\>span\\]\\:tw-line-clamp-1>span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.\\[\\&\\>svg\\+div\\]\\:tw-translate-y-\\[-3px\\]>svg+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.\\[\\&\\>svg\\]\\:tw-absolute>svg {
  position: absolute;
}
.\\[\\&\\>svg\\]\\:tw-left-4>svg {
  left: 1rem;
}
.\\[\\&\\>svg\\]\\:tw-top-4>svg {
  top: 1rem;
}
.\\[\\&\\>svg\\]\\:tw-size-4>svg {
  width: 1rem;
  height: 1rem;
}
.\\[\\&\\>svg\\]\\:tw-shrink-0>svg {
  flex-shrink: 0;
}
.\\[\\&\\>svg\\]\\:tw-text-destructive>svg {
  color: hsl(var(--destructive));
}
.\\[\\&\\>svg\\]\\:tw-text-foreground>svg {
  color: hsl(var(--foreground));
}
.\\[\\&\\>svg\\]\\:tw-text-sidebar-accent-foreground>svg {
  color: hsl(var(--sidebar-accent-foreground));
}
.\\[\\&\\>svg\\~\\*\\]\\:tw-pl-7>svg~* {
  padding-left: 1.75rem;
}
.\\[\\&\\>tr\\]\\:last\\:tw-border-b-0:last-child>tr {
  border-bottom-width: 0px;
}
.\\[\\&\\[data-panel-group-direction\\=vertical\\]\\>div\\]\\:tw-rotate-90[data-panel-group-direction=vertical]>div {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-px-2 [cmdk-group-heading] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-py-1\\.5 [cmdk-group-heading] {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-text-xs [cmdk-group-heading] {
  font-size: 0.75rem;
  line-height: 1rem;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-font-medium [cmdk-group-heading] {
  font-weight: 500;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-text-muted-foreground [cmdk-group-heading] {
  color: hsl(var(--muted-foreground));
}
.\\[\\&_\\[cmdk-group\\]\\:not\\(\\[hidden\\]\\)_\\~\\[cmdk-group\\]\\]\\:tw-pt-0 [cmdk-group]:not([hidden]) ~[cmdk-group] {
  padding-top: 0px;
}
.\\[\\&_\\[cmdk-group\\]\\]\\:tw-px-2 [cmdk-group] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:tw-h-5 [cmdk-input-wrapper] svg {
  height: 1.25rem;
}
.\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:tw-w-5 [cmdk-input-wrapper] svg {
  width: 1.25rem;
}
.\\[\\&_\\[cmdk-input\\]\\]\\:tw-h-12 [cmdk-input] {
  height: 3rem;
}
.\\[\\&_\\[cmdk-item\\]\\]\\:tw-px-2 [cmdk-item] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.\\[\\&_\\[cmdk-item\\]\\]\\:tw-py-3 [cmdk-item] {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.\\[\\&_\\[cmdk-item\\]_svg\\]\\:tw-h-5 [cmdk-item] svg {
  height: 1.25rem;
}
.\\[\\&_\\[cmdk-item\\]_svg\\]\\:tw-w-5 [cmdk-item] svg {
  width: 1.25rem;
}
.\\[\\&_p\\]\\:tw-leading-relaxed p {
  line-height: 1.625;
}
.\\[\\&_svg\\]\\:tw-pointer-events-none svg {
  pointer-events: none;
}
.\\[\\&_svg\\]\\:tw-size-4 svg {
  width: 1rem;
  height: 1rem;
}
.\\[\\&_svg\\]\\:tw-shrink-0 svg {
  flex-shrink: 0;
}
.\\[\\&_tr\\:last-child\\]\\:tw-border-0 tr:last-child {
  border-width: 0px;
}
.\\[\\&_tr\\]\\:tw-border-b tr {
  border-bottom-width: 1px;
}
[data-side=primary][data-collapsible=offcanvas] .\\[\\[data-side\\=primary\\]\\[data-collapsible\\=offcanvas\\]_\\&\\]\\:tw--right-2 {
  right: -0.5rem;
}
[data-side=primary][data-state=collapsed] .\\[\\[data-side\\=primary\\]\\[data-state\\=collapsed\\]_\\&\\]\\:tw-cursor-e-resize {
  cursor: e-resize;
}
[data-side=secondary][data-collapsible=offcanvas] .\\[\\[data-side\\=secondary\\]\\[data-collapsible\\=offcanvas\\]_\\&\\]\\:tw--left-2 {
  left: -0.5rem;
}
[data-side=secondary][data-state=collapsed] .\\[\\[data-side\\=secondary\\]\\[data-state\\=collapsed\\]_\\&\\]\\:tw-cursor-w-resize {
  cursor: w-resize;
}
[data-side=secondary] .\\[\\[data-side\\=secondary\\]_\\&\\]\\:tw-cursor-e-resize {
  cursor: e-resize;
}
[data-side=secondary] .\\[\\[data-side\\=secondary\\]_\\&\\]\\:tw-cursor-w-resize {
  cursor: w-resize;
}
.editor-input {
  min-height: 75px;
}
.banded-row:hover {
  cursor: pointer;
}

.banded-row[data-state='selected']:hover {
  cursor: default;
}
`, "after-all");
export {
  DP as Alert,
  MP as AlertDescription,
  OP as AlertTitle,
  IP as Avatar,
  PP as AvatarFallback,
  RP as AvatarImage,
  DL as BOOK_CHAPTER_CONTROL_STRING_KEYS,
  OL as BOOK_SELECTOR_STRING_KEYS,
  Mc as Badge,
  AL as BookChapterControl,
  cC as BookSelectionMode,
  ML as BookSelector,
  Pe as Button,
  l2 as Card,
  FR as CardContent,
  $R as CardDescription,
  BR as CardFooter,
  PR as CardHeader,
  LR as CardTitle,
  lC as ChapterRangeSelector,
  Tg as Checkbox,
  v3 as Checklist,
  Cf as ComboBox,
  Ys as Command,
  Cu as CommandEmpty,
  Ao as CommandGroup,
  bl as CommandInput,
  Ko as CommandItem,
  Qs as CommandList,
  C3 as ContextMenu,
  qP as ContextMenuCheckboxItem,
  FP as ContextMenuContent,
  E3 as ContextMenuGroup,
  BP as ContextMenuItem,
  UP as ContextMenuLabel,
  N3 as ContextMenuPortal,
  T3 as ContextMenuRadioGroup,
  jP as ContextMenuRadioItem,
  zP as ContextMenuSeparator,
  VP as ContextMenuShortcut,
  S3 as ContextMenuSub,
  $P as ContextMenuSubContent,
  LP as ContextMenuSubTrigger,
  k3 as ContextMenuTrigger,
  NC as DataTable,
  HP as Drawer,
  D3 as DrawerClose,
  KP as DrawerContent,
  YP as DrawerDescription,
  JP as DrawerFooter,
  GP as DrawerHeader,
  $2 as DrawerOverlay,
  WP as DrawerPortal,
  XP as DrawerTitle,
  A3 as DrawerTrigger,
  ku as DropdownMenu,
  Jh as DropdownMenuCheckboxItem,
  yl as DropdownMenuContent,
  Oy as DropdownMenuGroup,
  Ry as DropdownMenuItem,
  AC as DropdownMenuItemType,
  Xh as DropdownMenuLabel,
  uC as DropdownMenuPortal,
  fC as DropdownMenuRadioGroup,
  Py as DropdownMenuRadioItem,
  Eu as DropdownMenuSeparator,
  hC as DropdownMenuShortcut,
  dC as DropdownMenuSub,
  Iy as DropdownMenuSubContent,
  My as DropdownMenuSubTrigger,
  Gh as DropdownMenuTrigger,
  SC as ERROR_DUMP_STRING_KEYS,
  RL as ERROR_POPOVER_STRING_KEYS,
  TC as ErrorDump,
  PL as ErrorPopover,
  BL as Filter,
  LL as FilterDropdown,
  FL as Footer,
  XL as FootnoteEditor,
  RR as FootnoteItem,
  YL as FootnoteList,
  i3 as INVENTORY_STRING_KEYS,
  Fl as Input,
  o3 as Inventory,
  Vt as Label,
  IL as MarkdownRenderer,
  $L as MoreInfo,
  MC as MultiSelectComboBox,
  w3 as NavigationContentSearch,
  ea as Popover,
  SL as PopoverAnchor,
  Go as PopoverContent,
  ta as PopoverTrigger,
  QP as Progress,
  Wh as RadioGroup,
  Oc as RadioGroupItem,
  nC as RecentSearches,
  I3 as ResizableHandle,
  M3 as ResizablePanel,
  O3 as ResizablePanelGroup,
  _3 as ResultsCard,
  l3 as SCOPE_SELECTOR_STRING_KEYS,
  c3 as ScopeSelector,
  a3 as ScriptureResultsViewer,
  u3 as ScrollGroupSelector,
  Ig as SearchBar,
  Ns as Select,
  Mo as SelectContent,
  gC as SelectGroup,
  er as SelectItem,
  mC as SelectLabel,
  $y as SelectScrollDownButton,
  Ly as SelectScrollUpButton,
  bC as SelectSeparator,
  Oo as SelectTrigger,
  Ss as SelectValue,
  Ag as Separator,
  d3 as SettingsList,
  h3 as SettingsListHeader,
  f3 as SettingsListItem,
  cP as SettingsSidebar,
  s3 as SettingsSidebarContentSearch,
  p2 as Sidebar,
  w2 as SidebarContent,
  ZR as SidebarFooter,
  Ih as SidebarGroup,
  tP as SidebarGroupAction,
  Ph as SidebarGroupContent,
  Rh as SidebarGroupLabel,
  QR as SidebarHeader,
  YR as SidebarInput,
  g2 as SidebarInset,
  m2 as SidebarMenu,
  rP as SidebarMenuAction,
  iP as SidebarMenuBadge,
  y2 as SidebarMenuButton,
  b2 as SidebarMenuItem,
  oP as SidebarMenuSkeleton,
  sP as SidebarMenuSub,
  lP as SidebarMenuSubButton,
  aP as SidebarMenuSubItem,
  h2 as SidebarProvider,
  XR as SidebarRail,
  eP as SidebarSeparator,
  JR as SidebarTrigger,
  kf as Skeleton,
  ZP as Slider,
  R3 as Sonner,
  TP as Spinner,
  eL as Switch,
  Lh as TabDropdownMenu,
  g3 as TabFloatingMenu,
  p3 as TabToolbar,
  Nu as Table,
  Tu as TableBody,
  EC as TableCaption,
  vo as TableCell,
  _C as TableFooter,
  Ja as TableHead,
  Su as TableHeader,
  hi as TableRow,
  P3 as Tabs,
  rL as TabsContent,
  tL as TabsList,
  nL as TabsTrigger,
  x3 as TextField,
  iL as Textarea,
  d2 as ToggleGroup,
  Dc as ToggleGroupItem,
  b3 as Toolbar,
  Og as Tooltip,
  od as TooltipContent,
  Dg as TooltipProvider,
  Mg as TooltipTrigger,
  y3 as UiLanguageSelector,
  E2 as VerticalTabs,
  S2 as VerticalTabsContent,
  N2 as VerticalTabsList,
  yP as VerticalTabsTrigger,
  OC as badgeVariants,
  tC as buttonVariants,
  G as cn,
  r3 as getBookIdFromUSFM,
  t3 as getLinesFromUSFM,
  n3 as getNumberFromUSFM,
  VR as getStatusForItem,
  m3 as getToolbarOSReservedSpaceClassName,
  ZL as inventoryCountColumn,
  QL as inventoryItemColumn,
  e3 as inventoryStatusColumn,
  wC as selectTriggerVariants,
  j3 as sonner,
  L3 as useEvent,
  $3 as useEventAsync,
  F3 as useListbox,
  sL as usePromise,
  TL as useRecentSearches,
  sd as useSidebar
};
//# sourceMappingURL=index.js.map
