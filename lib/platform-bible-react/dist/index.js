var $2 = Object.defineProperty;
var F2 = (t, e, n) => e in t ? $2(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;
var Zn = (t, e, n) => F2(t, typeof e != "symbol" ? e + "" : e, n);
import { jsx as p, jsxs as j, Fragment as Lt } from "react/jsx-runtime";
import * as ws from "react";
import Y, { forwardRef as Yn, useRef as xe, useMemo as Ne, useState as fe, useCallback as be, useLayoutEffect as Cn, createContext as yl, useContext as vl, useEffect as ue, Suspense as fy, memo as B2, useImperativeHandle as Fh, Children as q2, cloneElement as j2, isValidElement as U2, createRef as z2, Fragment as hy } from "react";
import { Command as In } from "cmdk";
import { X as ku, Search as py, Check as xi, Clock as Bg, ChevronsLeft as qg, ChevronsRight as jg, ChevronLeft as vf, ChevronRight as Ss, ArrowLeft as V2, ArrowRight as H2, Circle as Eu, ChevronsUpDown as Bh, FilterIcon as W2, ChevronDown as Nu, ChevronUp as K2, ArrowLeftIcon as G2, ChevronLeftIcon as J2, ChevronRightIcon as X2, ArrowRightIcon as Y2, Copy as gy, Filter as Q2, User as Z2, Link as e1, CircleHelp as t1, Star as n1, AlertCircle as _f, CircleCheckIcon as r1, CircleXIcon as i1, CircleHelpIcon as o1, ArrowUpIcon as s1, ArrowDownIcon as a1, ArrowUpDownIcon as l1, PanelLeft as c1, PanelRight as u1, ScrollText as d1, MenuIcon as f1, Menu as h1, EllipsisVertical as p1, MoreHorizontal as g1, LoaderCircle as m1, GripVertical as w1 } from "lucide-react";
import { clsx as b1 } from "clsx";
import { extendTailwindMerge as y1 } from "tailwind-merge";
import * as Xr from "@radix-ui/react-dialog";
import { includes as nc, Section as ze, getChaptersForBook as v1, formatScrRef as bs, getSectionForBook as Ua, NumberFormat as _1, formatBytes as x1, getCurrentLocale as C1, getFormatCallerFunction as k1, deepEqual as qh, isString as Dd, compareScrRefs as xf, scrRefToBBBCCCVVV as Md, getLocalizeKeyForScrollGroupId as tt, formatReplacementString as E1 } from "platform-bible-utils";
import { Slot as Qs } from "@radix-ui/react-slot";
import { cva as Ji } from "class-variance-authority";
import * as Ts from "@radix-ui/react-popover";
import * as my from "@radix-ui/react-label";
import * as Ja from "@radix-ui/react-radio-group";
import { useReactTable as wy, getFilteredRowModel as N1, getSortedRowModel as by, getPaginationRowModel as S1, getCoreRowModel as yy, flexRender as za, getGroupedRowModel as T1, getExpandedRowModel as A1 } from "@tanstack/react-table";
import * as ft from "@radix-ui/react-dropdown-menu";
import { DropdownMenuTrigger as D1 } from "@radix-ui/react-dropdown-menu";
import * as kt from "@radix-ui/react-select";
import M1 from "markdown-to-jsx";
import * as O1 from "react-dom";
import { flushSync as vy, createPortal as fi } from "react-dom";
import * as Cf from "@radix-ui/react-checkbox";
import * as Su from "@radix-ui/react-toggle-group";
import * as _y from "@radix-ui/react-toggle";
import * as xy from "@radix-ui/react-separator";
import * as _l from "@radix-ui/react-tooltip";
import * as Rn from "@radix-ui/react-tabs";
import * as ht from "@radix-ui/react-menubar";
import { useHotkeys as I1 } from "react-hotkeys-hook";
import * as Zs from "@radix-ui/react-avatar";
import * as pt from "@radix-ui/react-context-menu";
import { Drawer as Nr } from "vaul";
import * as kf from "@radix-ui/react-progress";
import * as jh from "react-resizable-panels";
import { Toaster as R1 } from "sonner";
import { toast as P3 } from "sonner";
import * as Ra from "@radix-ui/react-slider";
import * as Ef from "@radix-ui/react-switch";
const P1 = y1({ prefix: "tw-" });
function G(...t) {
  return P1(b1(t));
}
const L1 = "layoutDirection";
function Jt() {
  const t = localStorage.getItem(L1);
  return t === "rtl" ? t : "ltr";
}
const $1 = Xr.Portal, Cy = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Xr.Overlay,
  {
    ref: n,
    className: G(
      "tw-fixed tw-inset-0 tw-z-50 tw-bg-black/80 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0",
      t
    ),
    ...e
  }
));
Cy.displayName = Xr.Overlay.displayName;
const F1 = Y.forwardRef(({ className: t, children: e, ...n }, r) => {
  const i = Jt();
  return /* @__PURE__ */ j($1, { children: [
    /* @__PURE__ */ p(Cy, {}),
    /* @__PURE__ */ j(
      Xr.Content,
      {
        ref: r,
        className: G(
          "pr-twp tw-fixed tw-left-[50%] tw-top-[50%] tw-z-50 tw-grid tw-w-full tw-max-w-lg tw-translate-x-[-50%] tw-translate-y-[-50%] tw-gap-4 tw-border tw-bg-background tw-p-6 tw-shadow-lg tw-duration-200 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[state=closed]:tw-slide-out-to-left-1/2 data-[state=closed]:tw-slide-out-to-top-[48%] data-[state=open]:tw-slide-in-from-left-1/2 data-[state=open]:tw-slide-in-from-top-[48%] sm:tw-rounded-lg",
          t
        ),
        ...n,
        dir: i,
        children: [
          e,
          /* @__PURE__ */ j(
            Xr.Close,
            {
              className: G(
                "tw-absolute tw-top-4 tw-rounded-sm tw-opacity-70 tw-ring-offset-background tw-transition-opacity hover:tw-opacity-100 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2 disabled:tw-pointer-events-none data-[state=open]:tw-bg-accent data-[state=open]:tw-text-muted-foreground",
                { "tw-right-4": i === "ltr" },
                { "tw-left-4": i === "rtl" }
              ),
              children: [
                /* @__PURE__ */ p(ku, { className: "tw-h-4 tw-w-4" }),
                /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Close" })
              ]
            }
          )
        ]
      }
    )
  ] });
});
F1.displayName = Xr.Content.displayName;
const B1 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Xr.Title,
  {
    ref: n,
    className: G("tw-text-lg tw-font-semibold tw-leading-none tw-tracking-tight", t),
    ...e
  }
));
B1.displayName = Xr.Title.displayName;
const q1 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Xr.Description,
  {
    ref: n,
    className: G("tw-text-sm tw-text-muted-foreground", t),
    ...e
  }
));
q1.displayName = Xr.Description.displayName;
const ea = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In,
  {
    ref: n,
    className: G(
      "tw-flex tw-h-full tw-w-full tw-flex-col tw-overflow-hidden tw-rounded-md tw-bg-popover tw-text-popover-foreground",
      t
    ),
    ...e
  }
));
ea.displayName = In.displayName;
const xl = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-border-b tw-px-3", dir: r, children: [
    /* @__PURE__ */ p(py, { className: "tw-me-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" }),
    /* @__PURE__ */ p(
      In.Input,
      {
        ref: n,
        className: G(
          "tw-flex tw-h-11 tw-w-full tw-rounded-md tw-bg-transparent tw-py-3 tw-text-sm tw-outline-none placeholder:tw-text-muted-foreground disabled:tw-cursor-not-allowed disabled:tw-opacity-50",
          t
        ),
        ...e
      }
    )
  ] });
});
xl.displayName = In.Input.displayName;
const ta = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.List,
  {
    ref: n,
    className: G("tw-max-h-[300px] tw-overflow-y-auto tw-overflow-x-hidden", t),
    ...e
  }
));
ta.displayName = In.List.displayName;
const Tu = Y.forwardRef((t, e) => /* @__PURE__ */ p(In.Empty, { ref: e, className: "tw-py-6 tw-text-center tw-text-sm", ...t }));
Tu.displayName = In.Empty.displayName;
const Ao = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.Group,
  {
    ref: n,
    className: G(
      "tw-overflow-hidden tw-p-1 tw-text-foreground [&_[cmdk-group-heading]]:tw-px-2 [&_[cmdk-group-heading]]:tw-py-1.5 [&_[cmdk-group-heading]]:tw-text-xs [&_[cmdk-group-heading]]:tw-font-medium [&_[cmdk-group-heading]]:tw-text-muted-foreground",
      t
    ),
    ...e
  }
));
Ao.displayName = In.Group.displayName;
const ky = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-h-px tw-bg-border", t),
    ...e
  }
));
ky.displayName = In.Separator.displayName;
const Xo = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  In.Item,
  {
    ref: n,
    className: G(
      "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none data-[disabled=true]:tw-pointer-events-none data-[selected=true]:tw-bg-accent data-[selected=true]:tw-text-accent-foreground data-[disabled=true]:tw-opacity-50",
      t
    ),
    ...e
  }
));
Xo.displayName = In.Item.displayName;
var j1 = Object.defineProperty, U1 = (t, e, n) => e in t ? j1(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, qe = (t, e, n) => U1(t, typeof e != "symbol" ? e + "" : e, n);
const Do = [
  "GEN",
  "EXO",
  "LEV",
  "NUM",
  "DEU",
  "JOS",
  "JDG",
  "RUT",
  "1SA",
  "2SA",
  // 10
  "1KI",
  "2KI",
  "1CH",
  "2CH",
  "EZR",
  "NEH",
  "EST",
  "JOB",
  "PSA",
  "PRO",
  // 20
  "ECC",
  "SNG",
  "ISA",
  "JER",
  "LAM",
  "EZK",
  "DAN",
  "HOS",
  "JOL",
  "AMO",
  // 30
  "OBA",
  "JON",
  "MIC",
  "NAM",
  "HAB",
  "ZEP",
  "HAG",
  "ZEC",
  "MAL",
  "MAT",
  // 40
  "MRK",
  "LUK",
  "JHN",
  "ACT",
  "ROM",
  "1CO",
  "2CO",
  "GAL",
  "EPH",
  "PHP",
  // 50
  "COL",
  "1TH",
  "2TH",
  "1TI",
  "2TI",
  "TIT",
  "PHM",
  "HEB",
  "JAS",
  "1PE",
  // 60
  "2PE",
  "1JN",
  "2JN",
  "3JN",
  "JUD",
  "REV",
  "TOB",
  "JDT",
  "ESG",
  "WIS",
  // 70
  "SIR",
  "BAR",
  "LJE",
  "S3Y",
  "SUS",
  "BEL",
  "1MA",
  "2MA",
  "3MA",
  "4MA",
  // 80
  "1ES",
  "2ES",
  "MAN",
  "PS2",
  "ODA",
  "PSS",
  "JSA",
  // actual variant text for JOS, now in LXA text
  "JDB",
  // actual variant text for JDG, now in LXA text
  "TBS",
  // actual variant text for TOB, now in LXA text
  "SST",
  // actual variant text for SUS, now in LXA text // 90
  "DNT",
  // actual variant text for DAN, now in LXA text
  "BLT",
  // actual variant text for BEL, now in LXA text
  "XXA",
  "XXB",
  "XXC",
  "XXD",
  "XXE",
  "XXF",
  "XXG",
  "FRT",
  // 100
  "BAK",
  "OTH",
  "3ES",
  // Used previously but really should be 2ES
  "EZA",
  // Used to be called 4ES, but not actually in any known project
  "5EZ",
  // Used to be called 5ES, but not actually in any known project
  "6EZ",
  // Used to be called 6ES, but not actually in any known project
  "INT",
  "CNC",
  "GLO",
  "TDX",
  // 110
  "NDX",
  "DAG",
  "PS3",
  "2BA",
  "LBA",
  "JUB",
  "ENO",
  "1MQ",
  "2MQ",
  "3MQ",
  // 120
  "REP",
  "4BA",
  "LAO"
], Uh = [
  "XXA",
  "XXB",
  "XXC",
  "XXD",
  "XXE",
  "XXF",
  "XXG",
  "FRT",
  "BAK",
  "OTH",
  "INT",
  "CNC",
  "GLO",
  "TDX",
  "NDX"
], Ey = [
  "Genesis",
  "Exodus",
  "Leviticus",
  "Numbers",
  "Deuteronomy",
  "Joshua",
  "Judges",
  "Ruth",
  "1 Samuel",
  "2 Samuel",
  "1 Kings",
  "2 Kings",
  "1 Chronicles",
  "2 Chronicles",
  "Ezra",
  "Nehemiah",
  "Esther (Hebrew)",
  "Job",
  "Psalms",
  "Proverbs",
  "Ecclesiastes",
  "Song of Songs",
  "Isaiah",
  "Jeremiah",
  "Lamentations",
  "Ezekiel",
  "Daniel (Hebrew)",
  "Hosea",
  "Joel",
  "Amos",
  "Obadiah",
  "Jonah",
  "Micah",
  "Nahum",
  "Habakkuk",
  "Zephaniah",
  "Haggai",
  "Zechariah",
  "Malachi",
  "Matthew",
  "Mark",
  "Luke",
  "John",
  "Acts",
  "Romans",
  "1 Corinthians",
  "2 Corinthians",
  "Galatians",
  "Ephesians",
  "Philippians",
  "Colossians",
  "1 Thessalonians",
  "2 Thessalonians",
  "1 Timothy",
  "2 Timothy",
  "Titus",
  "Philemon",
  "Hebrews",
  "James",
  "1 Peter",
  "2 Peter",
  "1 John",
  "2 John",
  "3 John",
  "Jude",
  "Revelation",
  "Tobit",
  "Judith",
  "Esther Greek",
  "Wisdom of Solomon",
  "Sirach (Ecclesiasticus)",
  "Baruch",
  "Letter of Jeremiah",
  "Song of 3 Young Men",
  "Susanna",
  "Bel and the Dragon",
  "1 Maccabees",
  "2 Maccabees",
  "3 Maccabees",
  "4 Maccabees",
  "1 Esdras (Greek)",
  "2 Esdras (Latin)",
  "Prayer of Manasseh",
  "Psalm 151",
  "Odes",
  "Psalms of Solomon",
  // WARNING, if you change the spelling of the *obsolete* tag be sure to update
  // IsObsolete routine
  "Joshua A. *obsolete*",
  "Judges B. *obsolete*",
  "Tobit S. *obsolete*",
  "Susanna Th. *obsolete*",
  "Daniel Th. *obsolete*",
  "Bel Th. *obsolete*",
  "Extra A",
  "Extra B",
  "Extra C",
  "Extra D",
  "Extra E",
  "Extra F",
  "Extra G",
  "Front Matter",
  "Back Matter",
  "Other Matter",
  "3 Ezra *obsolete*",
  "Apocalypse of Ezra",
  "5 Ezra (Latin Prologue)",
  "6 Ezra (Latin Epilogue)",
  "Introduction",
  "Concordance ",
  "Glossary ",
  "Topical Index",
  "Names Index",
  "Daniel Greek",
  "Psalms 152-155",
  "2 Baruch (Apocalypse)",
  "Letter of Baruch",
  "Jubilees",
  "Enoch",
  "1 Meqabyan",
  "2 Meqabyan",
  "3 Meqabyan",
  "Reproof (Proverbs 25-31)",
  "4 Baruch (Rest of Baruch)",
  "Laodiceans"
], Ug = Q1();
function na(t, e = !0) {
  return e && (t = t.toUpperCase()), t in Ug ? Ug[t] : 0;
}
function zh(t) {
  return na(t) > 0;
}
function z1(t) {
  const e = typeof t == "string" ? na(t) : t;
  return e >= 40 && e <= 66;
}
function V1(t) {
  return (typeof t == "string" ? na(t) : t) <= 39;
}
function Ny(t) {
  return t <= 66;
}
function H1(t) {
  const e = typeof t == "string" ? na(t) : t;
  return Ay(e) && !Ny(e);
}
function* W1() {
  for (let t = 1; t <= Do.length; t++) yield t;
}
const K1 = 1, Sy = Do.length;
function G1() {
  return ["XXA", "XXB", "XXC", "XXD", "XXE", "XXF", "XXG"];
}
function Vh(t, e = "***") {
  const n = t - 1;
  return n < 0 || n >= Do.length ? e : Do[n];
}
function Ty(t) {
  return t <= 0 || t > Sy ? "******" : Ey[t - 1];
}
function J1(t) {
  return Ty(na(t));
}
function Ay(t) {
  const e = typeof t == "number" ? Vh(t) : t;
  return zh(e) && !Uh.includes(e);
}
function X1(t) {
  const e = typeof t == "number" ? Vh(t) : t;
  return zh(e) && Uh.includes(e);
}
function Y1(t) {
  return Ey[t - 1].includes("*obsolete*");
}
function Q1() {
  const t = {};
  for (let e = 0; e < Do.length; e++)
    t[Do[e]] = e + 1;
  return t;
}
const nt = {
  allBookIds: Do,
  nonCanonicalIds: Uh,
  bookIdToNumber: na,
  isBookIdValid: zh,
  isBookNT: z1,
  isBookOT: V1,
  isBookOTNT: Ny,
  isBookDC: H1,
  allBookNumbers: W1,
  firstBook: K1,
  lastBook: Sy,
  extraBooks: G1,
  bookNumberToId: Vh,
  bookNumberToEnglishName: Ty,
  bookIdToEnglishName: J1,
  isCanonical: Ay,
  isExtraMaterial: X1,
  isObsolete: Y1
};
var Br = /* @__PURE__ */ ((t) => (t[t.Unknown = 0] = "Unknown", t[t.Original = 1] = "Original", t[t.Septuagint = 2] = "Septuagint", t[t.Vulgate = 3] = "Vulgate", t[t.English = 4] = "English", t[t.RussianProtestant = 5] = "RussianProtestant", t[t.RussianOrthodox = 6] = "RussianOrthodox", t))(Br || {});
const Vn = class {
  // private versInfo: Versification;
  constructor(e) {
    if (qe(this, "name"), qe(this, "fullPath"), qe(this, "isPresent"), qe(this, "hasVerseSegments"), qe(this, "isCustomized"), qe(this, "baseVersification"), qe(this, "scriptureBooks"), qe(this, "_type"), e == null)
      throw new Error("Argument undefined");
    typeof e == "string" ? (this.name = e, this._type = Br[e]) : (this._type = e, this.name = Br[e]);
  }
  get type() {
    return this._type;
  }
  equals(e) {
    return !e.type || !this.type ? !1 : e.type === this.type;
  }
};
qe(Vn, "Original", new Vn(Br.Original)), qe(Vn, "Septuagint", new Vn(Br.Septuagint)), qe(Vn, "Vulgate", new Vn(Br.Vulgate)), qe(Vn, "English", new Vn(Br.English)), qe(Vn, "RussianProtestant", new Vn(Br.RussianProtestant)), qe(Vn, "RussianOrthodox", new Vn(Br.RussianOrthodox));
let go = Vn;
function zg(t, e) {
  const n = e[0];
  for (let r = 1; r < e.length; r++)
    t = t.split(e[r]).join(n);
  return t.split(n);
}
var Dy = /* @__PURE__ */ ((t) => (t[t.Valid = 0] = "Valid", t[t.UnknownVersification = 1] = "UnknownVersification", t[t.OutOfRange = 2] = "OutOfRange", t[t.VerseOutOfOrder = 3] = "VerseOutOfOrder", t[t.VerseRepeated = 4] = "VerseRepeated", t))(Dy || {});
const Tn = class Ke {
  constructor(e, n, r, i) {
    if (qe(this, "firstChapter"), qe(this, "lastChapter"), qe(this, "lastVerse"), qe(this, "hasSegmentsDefined"), qe(this, "text"), qe(this, "BBBCCCVVVS"), qe(this, "longHashCode"), qe(this, "versification"), qe(this, "rtlMark", "‏"), qe(this, "_bookNum", 0), qe(this, "_chapterNum", 0), qe(this, "_verseNum", 0), qe(this, "_verse"), r == null && i == null)
      if (e != null && typeof e == "string") {
        const o = e, s = n != null && n instanceof go ? n : void 0;
        this.setEmpty(s), this.parse(o);
      } else if (e != null && typeof e == "number") {
        const o = n != null && n instanceof go ? n : void 0;
        this.setEmpty(o), this._verseNum = e % Ke.chapterDigitShifter, this._chapterNum = Math.floor(
          e % Ke.bookDigitShifter / Ke.chapterDigitShifter
        ), this._bookNum = Math.floor(e / Ke.bookDigitShifter);
      } else if (n == null)
        if (e != null && e instanceof Ke) {
          const o = e;
          this._bookNum = o.bookNum, this._chapterNum = o.chapterNum, this._verseNum = o.verseNum, this._verse = o.verse, this.versification = o.versification;
        } else {
          if (e == null) return;
          const o = e instanceof go ? e : Ke.defaultVersification;
          this.setEmpty(o);
        }
      else
        throw new Error("VerseRef constructor not supported.");
    else if (e != null && n != null && r != null)
      if (typeof e == "string" && typeof n == "string" && typeof r == "string")
        this.setEmpty(i), this.updateInternal(e, n, r);
      else if (typeof e == "number" && typeof n == "number" && typeof r == "number")
        this._bookNum = e, this._chapterNum = n, this._verseNum = r, this.versification = i ?? Ke.defaultVersification;
      else
        throw new Error("VerseRef constructor not supported.");
    else
      throw new Error("VerseRef constructor not supported.");
  }
  /**
   * Determines if the verse string is in a valid format (does not consider versification).
   */
  static isVerseParseable(e) {
    return e.length > 0 && "0123456789".includes(e[0]) && !e.endsWith(this.verseRangeSeparator) && !e.endsWith(this.verseSequenceIndicator);
  }
  /**
   * Tries to parse the specified string into a verse reference.
   * @param str - The string to attempt to parse.
   * @returns success: `true` if the specified string was successfully parsed, `false` otherwise.
   * @returns verseRef: The result of the parse if successful, or empty VerseRef if it failed
   */
  static tryParse(e) {
    let n;
    try {
      return n = new Ke(e), { success: !0, verseRef: n };
    } catch (r) {
      if (r instanceof Ea)
        return n = new Ke(), { success: !1, verseRef: n };
      throw r;
    }
  }
  /**
   * Gets the reference as a comparable integer where the book, chapter, and verse each occupy 3
   * digits.
   * @param bookNum - Book number (this is 1-based, not an index).
   * @param chapterNum - Chapter number.
   * @param verseNum - Verse number.
   * @returns The reference as a comparable integer where the book, chapter, and verse each occupy 3
   * digits.
   */
  static getBBBCCCVVV(e, n, r) {
    return e % Ke.bcvMaxValue * Ke.bookDigitShifter + (n >= 0 ? n % Ke.bcvMaxValue * Ke.chapterDigitShifter : 0) + (r >= 0 ? r % Ke.bcvMaxValue : 0);
  }
  /**
   * Deserializes a serialized VerseRef.
   * @param serializedVerseRef - Serialized VerseRef to create from.
   * @returns the deserialized VerseRef.
   */
  static fromJSON(e) {
    const { book: n, chapterNum: r, verseNum: i, verse: o, versificationStr: s } = e, a = o || i.toString();
    let l;
    return s && (l = new go(s)), n ? new Ke(n, r.toString(), a, l) : new Ke();
  }
  /**
   * Parses a verse string and gets the leading numeric portion as a number.
   * @param verseStr - verse string to parse
   * @returns true if the entire string could be parsed as a single, simple verse number (1-999);
   *    false if the verse string represented a verse bridge, contained segment letters, or was invalid
   */
  static tryGetVerseNum(e) {
    let n;
    if (!e)
      return n = -1, { success: !0, vNum: n };
    n = 0;
    let r;
    for (let i = 0; i < e.length; i++) {
      if (r = e[i], r < "0" || r > "9")
        return i === 0 && (n = -1), { success: !1, vNum: n };
      if (n = n * 10 + +r - 0, n > Ke.bcvMaxValue)
        return n = -1, { success: !1, vNum: n };
    }
    return { success: !0, vNum: n };
  }
  /**
   * Checks to see if a VerseRef hasn't been set - all values are the default.
   */
  get isDefault() {
    return this.bookNum === 0 && this.chapterNum === 0 && this.verseNum === 0 && this.versification == null;
  }
  /**
   * Gets whether the verse contains multiple verses.
   */
  get hasMultiple() {
    return this._verse != null && (this._verse.includes(Ke.verseRangeSeparator) || this._verse.includes(Ke.verseSequenceIndicator));
  }
  /**
   * Gets or sets the book of the reference. Book is the 3-letter abbreviation in capital letters,
   * e.g. `'MAT'`.
   */
  get book() {
    return nt.bookNumberToId(this.bookNum, "");
  }
  set book(e) {
    this.bookNum = nt.bookIdToNumber(e);
  }
  /**
   * Gets or sets the chapter of the reference,. e.g. `'3'`.
   */
  get chapter() {
    return this.isDefault || this._chapterNum < 0 ? "" : this._chapterNum.toString();
  }
  set chapter(e) {
    const n = +e;
    this._chapterNum = Number.isInteger(n) ? n : -1;
  }
  /**
   * Gets or sets the verse of the reference, including range, segments, and sequences, e.g. `'4'`,
   * or `'4b-5a, 7'`.
   */
  get verse() {
    return this._verse != null ? this._verse : this.isDefault || this._verseNum < 0 ? "" : this._verseNum.toString();
  }
  set verse(e) {
    const { success: n, vNum: r } = Ke.tryGetVerseNum(e);
    this._verse = n ? void 0 : e.replace(this.rtlMark, ""), this._verseNum = r, !(this._verseNum >= 0) && ({ vNum: this._verseNum } = Ke.tryGetVerseNum(this._verse));
  }
  /**
   * Get or set Book based on book number, e.g. `42`.
   */
  get bookNum() {
    return this._bookNum;
  }
  set bookNum(e) {
    if (e <= 0 || e > nt.lastBook)
      throw new Ea(
        "BookNum must be greater than zero and less than or equal to last book"
      );
    this._bookNum = e;
  }
  /**
   * Gets or sets the chapter number, e.g. `3`. `-1` if not valid.
   */
  get chapterNum() {
    return this._chapterNum;
  }
  set chapterNum(e) {
    this.chapterNum = e;
  }
  /**
   * Gets or sets verse start number, e.g. `4`. `-1` if not valid.
   */
  get verseNum() {
    return this._verseNum;
  }
  set verseNum(e) {
    this._verseNum = e;
  }
  /**
   * String representing the versification (should ONLY be used for serialization/deserialization).
   *
   * @remarks This is for backwards compatibility when ScrVers was an enumeration.
   */
  get versificationStr() {
    var e;
    return (e = this.versification) == null ? void 0 : e.name;
  }
  set versificationStr(e) {
    this.versification = this.versification != null ? new go(e) : void 0;
  }
  /**
   * Determines if the reference is valid.
   */
  get valid() {
    return this.validStatus === 0;
  }
  /**
   * Get the valid status for this reference.
   */
  get validStatus() {
    return this.validateVerse(Ke.verseRangeSeparators, Ke.verseSequenceIndicators);
  }
  /**
   * Gets the reference as a comparable integer where the book,
   * chapter, and verse each occupy three digits and the verse is 0.
   */
  get BBBCCC() {
    return Ke.getBBBCCCVVV(this._bookNum, this._chapterNum, 0);
  }
  /**
   * Gets the reference as a comparable integer where the book,
   * chapter, and verse each occupy three digits. If verse is not null
   * (i.e., this reference represents a complex reference with verse
   * segments or bridge) this cannot be used for an exact comparison.
   */
  get BBBCCCVVV() {
    return Ke.getBBBCCCVVV(this._bookNum, this._chapterNum, this._verseNum);
  }
  /**
   * Gets whether the verse is defined as an excluded verse in the versification.
   * Does not handle verse ranges.
   */
  // eslint-disable-next-line @typescript-eslint/class-literal-property-style
  get isExcluded() {
    return !1;
  }
  /**
   * Parses the reference in the specified string.
   * Optionally versification can follow reference as in GEN 3:11/4
   * Throw an exception if
   * - invalid book name
   * - chapter number is missing or not a number
   * - verse number is missing or does not start with a number
   * - versification is invalid
   * @param verseStr - string to parse e.g. 'MAT 3:11'
   */
  parse(e) {
    if (e = e.replace(this.rtlMark, ""), e.includes("/")) {
      const o = e.split("/");
      if (e = o[0], o.length > 1)
        try {
          const s = +o[1].trim();
          this.versification = new go(Br[s]);
        } catch {
          throw new Ea("Invalid reference : " + e);
        }
    }
    const n = e.trim().split(" ");
    if (n.length !== 2)
      throw new Ea("Invalid reference : " + e);
    const r = n[1].split(":"), i = +r[0];
    if (r.length !== 2 || nt.bookIdToNumber(n[0]) === 0 || !Number.isInteger(i) || i < 0 || !Ke.isVerseParseable(r[1]))
      throw new Ea("Invalid reference : " + e);
    this.updateInternal(n[0], r[0], r[1]);
  }
  /**
   * Simplifies this verse ref so that it has no bridging of verses or
   * verse segments like `'1a'`.
   */
  simplify() {
    this._verse = void 0;
  }
  /**
   * Makes a clone of the reference.
   *
   * @returns The cloned VerseRef.
   */
  clone() {
    return new Ke(this);
  }
  toString() {
    const e = this.book;
    return e === "" ? "" : `${e} ${this.chapter}:${this.verse}`;
  }
  toJSON() {
    let e = this.verse;
    (e === "" || e === this.verseNum.toString()) && (e = void 0);
    const n = {
      book: this.book,
      chapterNum: this.chapterNum,
      verseNum: this.verseNum,
      verse: e,
      versificationStr: this.versificationStr
    };
    return e || delete n.verse, n;
  }
  /**
   * Compares this `VerseRef` with supplied one.
   * @param verseRef - object to compare this one to.
   * @returns `true` if this `VerseRef` is equal to the supplied one, `false` otherwise.
   */
  equals(e) {
    return e instanceof Ke ? e._bookNum === this._bookNum && e._chapterNum === this._chapterNum && e._verseNum === this._verseNum && e.verse === this.verse && (e.versification == null && this.versification == null || e.versification != null && this.versification != null && e.versification.equals(this.versification)) : !1;
  }
  /**
   * Enumerate all individual verses contained in a VerseRef.
   * Verse ranges are indicated by "-" and consecutive verses by ","s.
   * Examples:
   * GEN 1:2 returns GEN 1:2
   * GEN 1:1a-3b,5 returns GEN 1:1a, GEN 1:2, GEN 1:3b, GEN 1:5
   * GEN 1:2a-2c returns //! ??????
   *
   * @param specifiedVersesOnly - if set to <c>true</c> return only verses that are
   * explicitly specified only, not verses within a range. Defaults to `false`.
   * @param verseRangeSeparators - Verse range separators.
   * Defaults to `VerseRef.verseRangeSeparators`.
   * @param verseSequenceSeparators - Verse sequence separators.
   * Defaults to `VerseRef.verseSequenceIndicators`.
   * @returns An array of all single verse references in this VerseRef.
   */
  allVerses(e = !1, n = Ke.verseRangeSeparators, r = Ke.verseSequenceIndicators) {
    if (this._verse == null || this.chapterNum <= 0)
      return [this.clone()];
    const i = [], o = zg(this._verse, r);
    for (const s of o.map((a) => zg(a, n))) {
      const a = this.clone();
      a.verse = s[0];
      const l = a.verseNum;
      if (i.push(a), s.length > 1) {
        const c = this.clone();
        if (c.verse = s[1], !e)
          for (let u = l + 1; u < c.verseNum; u++) {
            const f = new Ke(
              this._bookNum,
              this._chapterNum,
              u,
              this.versification
            );
            this.isExcluded || i.push(f);
          }
        i.push(c);
      }
    }
    return i;
  }
  /**
   * Validates a verse number using the supplied separators rather than the defaults.
   */
  validateVerse(e, n) {
    if (!this.verse)
      return this.internalValid;
    let r = 0;
    for (const i of this.allVerses(!0, e, n)) {
      const o = i.internalValid;
      if (o !== 0)
        return o;
      const s = i.BBBCCCVVV;
      if (r > s)
        return 3;
      if (r === s)
        return 4;
      r = s;
    }
    return 0;
  }
  /**
   * Gets whether a single verse reference is valid.
   */
  get internalValid() {
    return this.versification == null ? 1 : this._bookNum <= 0 || this._bookNum > nt.lastBook ? 2 : (nt.isCanonical(this._bookNum), 0);
  }
  setEmpty(e = Ke.defaultVersification) {
    this._bookNum = 0, this._chapterNum = -1, this._verse = void 0, this.versification = e;
  }
  updateInternal(e, n, r) {
    this.bookNum = nt.bookIdToNumber(e), this.chapter = n, this.verse = r;
  }
};
qe(Tn, "defaultVersification", go.English), qe(Tn, "verseRangeSeparator", "-"), qe(Tn, "verseSequenceIndicator", ","), qe(Tn, "verseRangeSeparators", [Tn.verseRangeSeparator]), qe(Tn, "verseSequenceIndicators", [Tn.verseSequenceIndicator]), qe(Tn, "chapterDigitShifter", 1e3), qe(Tn, "bookDigitShifter", Tn.chapterDigitShifter * Tn.chapterDigitShifter), qe(Tn, "bcvMaxValue", Tn.chapterDigitShifter - 1), /**
* The valid status of the VerseRef.
*/
qe(Tn, "ValidStatusType", Dy);
let Ea = class extends Error {
};
const My = (t, e, n, r, i) => {
  switch (t) {
    case ze.OT:
      return e ?? "Old Testament";
    case ze.NT:
      return n ?? "New Testament";
    case ze.DC:
      return r ?? "Deuterocanon";
    case ze.Extra:
      return i ?? "Extra Materials";
    default:
      throw new Error(`Unknown section: ${t}`);
  }
}, Z1 = (t, e, n, r, i) => {
  switch (t) {
    case ze.OT:
      return e ?? "OT";
    case ze.NT:
      return n ?? "NT";
    case ze.DC:
      return r ?? "DC";
    case ze.Extra:
      return i ?? "Extra";
    default:
      throw new Error(`Unknown section: ${t}`);
  }
};
function ys(t, e) {
  var r;
  return ((r = e == null ? void 0 : e.get(t)) == null ? void 0 : r.localizedName) ?? nt.bookIdToEnglishName(t);
}
function Hh(t, e) {
  var r;
  return ((r = e == null ? void 0 : e.get(t)) == null ? void 0 : r.localizedId) ?? t.toUpperCase();
}
const Oy = nt.allBookIds.filter(
  (t) => !nt.isObsolete(nt.bookIdToNumber(t))
), yo = Object.fromEntries(
  Oy.map((t) => [t, nt.bookIdToEnglishName(t)])
);
function Wh(t, e, n) {
  const r = e.trim().toLowerCase();
  if (!r) return !1;
  const i = nt.bookIdToEnglishName(t), o = n == null ? void 0 : n.get(t);
  return !!(nc(i.toLowerCase(), r) || nc(t.toLowerCase(), r) || (o ? nc(o.localizedName.toLowerCase(), r) || nc(o.localizedId.toLowerCase(), r) : !1));
}
const Iy = Yn(
  ({
    bookId: t,
    isSelected: e,
    onSelect: n,
    onMouseDown: r,
    section: i,
    className: o,
    showCheck: s = !1,
    localizedBookNames: a,
    commandValue: l
  }, c) => {
    const u = xe(!1), f = () => {
      u.current || n == null || n(t), setTimeout(() => {
        u.current = !1;
      }, 100);
    }, d = (m) => {
      u.current = !0, r ? r(m) : n == null || n(t);
    }, h = Ne(
      () => ys(t, a),
      [t, a]
    ), g = Ne(
      () => Hh(t, a),
      [t, a]
    );
    return /* @__PURE__ */ p(
      "div",
      {
        className: G(
          "tw-mx-1 tw-my-1 tw-border-b-0 tw-border-e-0 tw-border-s-2 tw-border-t-0 tw-border-solid",
          {
            "tw-border-s-red-200": i === ze.OT,
            "tw-border-s-purple-200": i === ze.NT,
            "tw-border-s-indigo-200": i === ze.DC,
            "tw-border-s-amber-200": i === ze.Extra
          }
        ),
        children: /* @__PURE__ */ j(
          Xo,
          {
            ref: c,
            value: l || `${t} ${nt.bookIdToEnglishName(t)}`,
            onSelect: f,
            onMouseDown: d,
            role: "option",
            "aria-selected": e,
            "aria-label": `${nt.bookIdToEnglishName(t)} (${t.toLocaleUpperCase()})`,
            className: o,
            children: [
              s && /* @__PURE__ */ p(
                xi,
                {
                  className: G(
                    "tw-me-2 tw-h-4 tw-w-4 tw-flex-shrink-0",
                    e ? "tw-opacity-100" : "tw-opacity-0"
                  )
                }
              ),
              /* @__PURE__ */ p("span", { className: "tw-min-w-0 tw-flex-1", children: h }),
              /* @__PURE__ */ p("span", { className: "tw-ms-2 tw-flex-shrink-0 tw-text-xs tw-text-muted-foreground", children: g })
            ]
          }
        )
      }
    );
  }
), eC = Ji(
  "pr-twp tw-inline-flex tw-items-center tw-justify-center tw-gap-2 tw-whitespace-nowrap tw-rounded-md tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 [&_svg]:tw-pointer-events-none [&_svg]:tw-size-4 [&_svg]:tw-shrink-0",
  {
    variants: {
      variant: {
        default: "tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/90",
        destructive: "tw-bg-destructive tw-text-destructive-foreground hover:tw-bg-destructive/90",
        outline: "tw-border tw-border-input tw-bg-background hover:tw-bg-accent hover:tw-text-accent-foreground",
        secondary: "tw-bg-secondary tw-text-secondary-foreground hover:tw-bg-secondary/80",
        ghost: "hover:tw-bg-accent hover:tw-text-accent-foreground",
        link: "tw-text-primary tw-underline-offset-4 hover:tw-underline"
      },
      size: {
        default: "tw-h-10 tw-px-4 tw-py-2",
        sm: "tw-h-9 tw-rounded-md tw-px-3",
        lg: "tw-h-11 tw-rounded-md tw-px-8",
        icon: "tw-h-10 tw-w-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), Pe = Y.forwardRef(
  ({ className: t, variant: e, size: n, asChild: r = !1, ...i }, o) => /* @__PURE__ */ p(r ? Qs : "button", { className: G(eC({ variant: e, size: n, className: t })), ref: o, ...i })
);
Pe.displayName = "Button";
const ra = Ts.Root, ia = Ts.Trigger, EL = Ts.Anchor, Yo = Y.forwardRef(({ className: t, align: e = "center", sideOffset: n = 4, ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ p(Ts.Portal, { children: /* @__PURE__ */ p(
    Ts.Content,
    {
      ref: i,
      align: e,
      sideOffset: n,
      className: G(
        // CUSTOM Changed z-order from 50 to 250 to make them appear on floating tabs (200)
        "tw-z-[250]",
        "pr-twp tw-w-72 tw-rounded-md tw-border tw-bg-popover tw-p-4 tw-text-popover-foreground tw-shadow-md tw-outline-none data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        t
      ),
      ...r,
      dir: o
    }
  ) });
});
Yo.displayName = Ts.Content.displayName;
function Nf(t, e, n) {
  return `${t} ${yo[t]}${e ? ` ${Hh(t, e)} ${ys(t, e)}` : ""}${n ? ` ${n}` : ""}`;
}
function tC({
  recentSearches: t,
  onSearchItemSelect: e,
  renderItem: n = (a) => String(a),
  getItemKey: r = (a) => String(a),
  ariaLabel: i = "Show recent searches",
  groupHeading: o = "Recent",
  id: s
}) {
  const [a, l] = fe(!1);
  if (t.length === 0)
    return;
  const c = (u) => {
    e(u), l(!1);
  };
  return /* @__PURE__ */ j(ra, { open: a, onOpenChange: l, children: [
    /* @__PURE__ */ p(ia, { asChild: !0, children: /* @__PURE__ */ p(
      Pe,
      {
        variant: "ghost",
        size: "icon",
        className: "tw-absolute tw-right-0 tw-top-0 tw-h-full tw-px-3 tw-py-2",
        "aria-label": i,
        children: /* @__PURE__ */ p(Bg, { className: "tw-h-4 tw-w-4" })
      }
    ) }),
    /* @__PURE__ */ p(Yo, { id: s, className: "tw-w-[300px] tw-p-0", align: "start", children: /* @__PURE__ */ p(ea, { children: /* @__PURE__ */ p(ta, { children: /* @__PURE__ */ p(Ao, { heading: o, children: t.map((u) => /* @__PURE__ */ j(
      Xo,
      {
        onSelect: () => c(u),
        className: "tw-flex tw-items-center",
        children: [
          /* @__PURE__ */ p(Bg, { className: "tw-mr-2 tw-h-4 tw-w-4 tw-opacity-50" }),
          /* @__PURE__ */ p("span", { children: n(u) })
        ]
      },
      r(u)
    )) }) }) }) })
  ] });
}
function NL(t, e, n = (i, o) => i === o, r = 15) {
  return (i) => {
    const o = t.filter(
      (a) => !n(a, i)
    ), s = [i, ...o.slice(0, r - 1)];
    e(s);
  };
}
const Od = {
  // Matches start of string (`^`), one or more non-colon/space words, optionally followed by space and more words (`([^:\s]+(?:\s+[^:\s]+)*)`), end of string (`$`), case-insensitive (`i`)
  BOOK_ONLY: /^([^:\s]+(?:\s+[^:\s]+)*)$/i,
  // Same as above, but followed by a space and a chapter number (`\s+(\d+)`)
  BOOK_CHAPTER: /^([^:\s]+(?:\s+[^:\s]+)*)\s+(\d+)$/i,
  // Same as above, but followed by a colon and optionally a verse number (`:(\d*)`)
  BOOK_CHAPTER_VERSE: /^([^:\s]+(?:\s+[^:\s]+)*)\s+(\d+):(\d*)$/i
}, nC = [
  Od.BOOK_ONLY,
  Od.BOOK_CHAPTER,
  Od.BOOK_CHAPTER_VERSE
];
function Vg(t) {
  const e = /^[a-zA-Z]$/.test(t), n = /^[0-9]$/.test(t);
  return { isLetter: e, isDigit: n };
}
function zr(t) {
  return v1(nt.bookIdToNumber(t));
}
function rC(t, e, n) {
  if (!t.trim() || e.length === 0) return;
  const r = nC.reduce(
    (i, o) => {
      if (i) return i;
      const s = o.exec(t.trim());
      if (s) {
        const [a, l = void 0, c = void 0] = s.slice(1);
        let u;
        const f = e.filter((d) => Wh(d, a, n));
        if (f.length === 1 && ([u] = f), !u && l) {
          if (nt.isBookIdValid(a)) {
            const d = a.toUpperCase();
            e.includes(d) && (u = d);
          }
          if (!u && n) {
            const d = Array.from(n.entries()).find(
              ([, h]) => h.localizedId.toLowerCase() === a.toLowerCase()
            );
            d && e.includes(d[0]) && ([u] = d);
          }
        }
        if (!u && l) {
          const h = ((g) => Object.keys(yo).find(
            (m) => yo[m].toLowerCase() === g.toLowerCase()
          ))(a);
          if (h && e.includes(h) && (u = h), !u && n) {
            const g = Array.from(n.entries()).find(
              ([, m]) => m.localizedName.toLowerCase() === a.toLowerCase()
            );
            g && e.includes(g[0]) && ([u] = g);
          }
        }
        if (u) {
          let d = l ? parseInt(l, 10) : void 0;
          d && d > zr(u) && (d = Math.max(zr(u), 1));
          const h = c ? parseInt(c, 10) : void 0;
          return {
            book: u,
            chapterNum: d,
            verseNum: h
          };
        }
      }
    },
    void 0
  );
  if (r) return r;
}
function iC(t, e, n, r) {
  const i = be(() => {
    if (t.chapterNum > 1)
      r({
        book: t.book,
        chapterNum: t.chapterNum - 1,
        verseNum: 1
      });
    else {
      const l = e.indexOf(t.book);
      if (l > 0) {
        const c = e[l - 1], u = Math.max(zr(c), 1);
        r({
          book: c,
          chapterNum: u,
          verseNum: 1
        });
      }
    }
  }, [t, e, r]), o = be(() => {
    const l = zr(t.book);
    if (t.chapterNum < l)
      r({
        book: t.book,
        chapterNum: t.chapterNum + 1,
        verseNum: 1
      });
    else {
      const c = e.indexOf(t.book);
      if (c < e.length - 1) {
        const u = e[c + 1];
        r({
          book: u,
          chapterNum: 1,
          verseNum: 1
        });
      }
    }
  }, [t, e, r]), s = be(() => {
    r({
      book: t.book,
      chapterNum: t.chapterNum,
      verseNum: t.verseNum > 1 ? t.verseNum - 1 : 0
    });
  }, [t, r]), a = be(() => {
    r({
      book: t.book,
      chapterNum: t.chapterNum,
      verseNum: t.verseNum + 1
    });
  }, [t, r]);
  return Ne(() => [
    {
      onClick: i,
      disabled: e.length === 0 || t.chapterNum === 1 && e.indexOf(t.book) === 0,
      title: "Previous chapter",
      icon: n === "ltr" ? qg : jg
    },
    {
      onClick: s,
      disabled: e.length === 0 || t.verseNum === 0,
      title: "Previous verse",
      icon: n === "ltr" ? vf : Ss
    },
    {
      onClick: a,
      disabled: e.length === 0,
      title: "Next verse",
      icon: n === "ltr" ? Ss : vf
    },
    {
      onClick: o,
      disabled: e.length === 0 || (t.chapterNum === zr(t.book) || zr(t.book) === -1) && e.indexOf(t.book) === e.length - 1,
      title: "Next chapter",
      icon: n === "ltr" ? jg : qg
    }
  ], [
    t,
    e,
    n,
    i,
    s,
    a,
    o
  ]);
}
function Hg({
  bookId: t,
  scrRef: e,
  onChapterSelect: n,
  setChapterRef: r,
  isChapterDimmed: i,
  className: o
}) {
  if (t)
    return /* @__PURE__ */ p(Ao, { children: /* @__PURE__ */ p("div", { className: G("tw-grid tw-grid-cols-6 tw-gap-1", o), children: Array.from({ length: zr(t) }, (s, a) => a + 1).map((s) => /* @__PURE__ */ p(
      Xo,
      {
        value: `${t} ${yo[t] || ""} ${s}`,
        onSelect: () => n(s),
        ref: r(s),
        className: G(
          "tw-h-8 tw-w-8 tw-cursor-pointer tw-justify-center tw-rounded-md tw-text-center tw-text-sm",
          {
            "tw-bg-primary tw-text-primary-foreground": t === e.book && s === e.chapterNum
          },
          {
            "tw-bg-muted/50 tw-text-muted-foreground/50": (i == null ? void 0 : i(s)) ?? !1
          }
        ),
        children: s
      },
      s
    )) }) });
}
function SL({
  scrRef: t,
  handleSubmit: e,
  className: n,
  getActiveBookIds: r,
  localizedBookNames: i,
  localizedStrings: o,
  recentSearches: s,
  onAddRecentSearch: a,
  id: l
}) {
  const c = Jt(), [u, f] = fe(!1), [d, h] = fe(""), [g, m] = fe(""), [b, _] = fe("books"), [y, C] = fe(void 0), [D, R] = fe(!1), N = xe(void 0), L = xe(void 0), O = xe(void 0), M = xe(void 0), q = xe({}), k = be(
    (ae) => {
      e(ae), a && a(ae);
    },
    [e, a]
  ), I = Ne(() => r ? r() : Oy, [r]), S = Ne(() => ({
    [ze.OT]: I.filter((Te) => nt.isBookOT(Te)),
    [ze.NT]: I.filter((Te) => nt.isBookNT(Te)),
    [ze.DC]: I.filter((Te) => nt.isBookDC(Te)),
    [ze.Extra]: I.filter((Te) => nt.extraBooks().includes(Te))
  }), [I]), P = Ne(() => Object.values(S).flat(), [S]), T = Ne(() => {
    if (!g.trim()) return S;
    const ae = {
      [ze.OT]: [],
      [ze.NT]: [],
      [ze.DC]: [],
      [ze.Extra]: []
    };
    return [ze.OT, ze.NT, ze.DC, ze.Extra].forEach((Be) => {
      ae[Be] = S[Be].filter((Ge) => Wh(Ge, g, i));
    }), ae;
  }, [S, g, i]), A = Ne(
    () => rC(g, P, i),
    [g, P, i]
  ), B = be(() => {
    A && (k({
      book: A.book,
      chapterNum: A.chapterNum ?? 1,
      verseNum: A.verseNum ?? 1
    }), f(!1), m(""), h(""));
  }, [k, A]), V = be(
    (ae) => {
      if (zr(ae) <= 1) {
        k({
          book: ae,
          chapterNum: 1,
          verseNum: 1
        }), f(!1), m("");
        return;
      }
      C(ae), _("chapters");
    },
    [k]
  ), J = be(
    (ae) => {
      const Te = b === "chapters" ? y : A == null ? void 0 : A.book;
      Te && (k({
        book: Te,
        chapterNum: ae,
        verseNum: 1
      }), f(!1), _("books"), C(void 0), m(""));
    },
    [k, b, y, A]
  ), H = be(
    (ae) => {
      k(ae), f(!1), m("");
    },
    [k]
  ), K = iC(t, P, c, e), ne = be(() => {
    _("books"), C(void 0), setTimeout(() => {
      L.current && L.current.focus();
    }, 0);
  }, []), re = be(
    (ae) => {
      if (!ae && b === "chapters") {
        ne();
        return;
      }
      f(ae), ae && (_("books"), C(void 0), m(""));
    },
    [b, ne]
  ), { otLong: te, ntLong: Q, dcLong: ce, extraLong: pe } = {
    otLong: o == null ? void 0 : o["%scripture_section_ot_long%"],
    ntLong: o == null ? void 0 : o["%scripture_section_nt_long%"],
    dcLong: o == null ? void 0 : o["%scripture_section_dc_long%"],
    extraLong: o == null ? void 0 : o["%scripture_section_extra_long%"]
  }, me = be(
    (ae) => My(ae, te, Q, ce, pe),
    [te, Q, ce, pe]
  ), ye = be(
    (ae) => A ? !!A.chapterNum && !ae.toString().includes(A.chapterNum.toString()) : !1,
    [A]
  ), ve = Ne(
    () => bs(
      t,
      i ? ys(t.book, i) : "English"
    ),
    [t, i]
  ), Ee = be((ae) => (Te) => {
    q.current[ae] = Te;
  }, []), de = be((ae) => {
    (ae.key === "Home" || ae.key === "End") && ae.stopPropagation();
  }, []), Re = be(
    (ae) => {
      if (ae.ctrlKey) return;
      const { isLetter: Te, isDigit: Be } = Vg(ae.key);
      if (b === "chapters") {
        if (ae.key === "Backspace") {
          ae.preventDefault(), ae.stopPropagation(), ne();
          return;
        }
        if (Te || Be) {
          if (ae.preventDefault(), ae.stopPropagation(), _("books"), C(void 0), Be && y) {
            const Ge = yo[y];
            m(`${Ge} ${ae.key}`);
          } else
            m(ae.key);
          setTimeout(() => {
            L.current && L.current.focus();
          }, 0);
          return;
        }
      }
      if ((b === "chapters" || b === "books" && A) && ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"].includes(ae.key)) {
        const Ge = b === "chapters" ? y : A == null ? void 0 : A.book;
        if (!Ge) return;
        const rt = (() => {
          if (!d) return 1;
          const $e = d.match(/(\d+)$/);
          return $e ? parseInt($e[1], 10) : 0;
        })(), vt = zr(Ge);
        if (!vt) return;
        let wt = rt;
        const Et = 6;
        switch (ae.key) {
          case "ArrowLeft":
            rt !== 0 && (wt = rt > 1 ? rt - 1 : vt);
            break;
          case "ArrowRight":
            rt !== 0 && (wt = rt < vt ? rt + 1 : 1);
            break;
          case "ArrowUp":
            wt = rt === 0 ? vt : Math.max(1, rt - Et);
            break;
          case "ArrowDown":
            wt = rt === 0 ? 1 : Math.min(vt, rt + Et);
            break;
          default:
            return;
        }
        wt !== rt && (ae.preventDefault(), ae.stopPropagation(), h(Nf(Ge, i, wt)), setTimeout(() => {
          const $e = q.current[wt];
          $e && $e.scrollIntoView({ block: "nearest", behavior: "smooth" });
        }, 0));
      }
    },
    [
      b,
      A,
      ne,
      y,
      d,
      i
    ]
  ), He = be((ae) => {
    if (ae.shiftKey || ae.key === "Tab" || ae.key === " ") return;
    const { isLetter: Te, isDigit: Be } = Vg(ae.key);
    (Te || Be) && (ae.preventDefault(), m((Ge) => Ge + ae.key), L.current.focus(), R(!1));
  }, []);
  return Cn(() => {
    const ae = setTimeout(() => {
      if (u && b === "books" && O.current && M.current) {
        const Te = O.current, Be = M.current, Ge = Be.offsetTop, rt = Te.clientHeight, vt = Be.clientHeight, wt = Ge - rt / 2 + vt / 2;
        Te.scrollTo({
          top: Math.max(0, wt),
          behavior: "smooth"
        }), h(Nf(t.book));
      }
    }, 0);
    return () => {
      clearTimeout(ae);
    };
  }, [u, b, g, A, t.book]), Cn(() => {
    if (b === "chapters" && y) {
      const ae = y === t.book;
      setTimeout(() => {
        if (O.current)
          if (ae) {
            const Te = q.current[t.chapterNum];
            Te && Te.scrollIntoView({ block: "center", behavior: "smooth" });
          } else
            O.current.scrollTo({ top: 0 });
        N.current && N.current.focus();
      }, 0);
    }
  }, [b, y, A, t.book, t.chapterNum]), /* @__PURE__ */ j(ra, { open: u, onOpenChange: re, children: [
    /* @__PURE__ */ p(ia, { asChild: !0, children: /* @__PURE__ */ p(
      Pe,
      {
        "aria-label": "book-chapter-trigger",
        variant: "outline",
        role: "combobox",
        "aria-expanded": u,
        className: G(
          "tw-h-8 tw-w-full tw-min-w-16 tw-max-w-48 tw-overflow-hidden tw-px-1",
          n
        ),
        children: /* @__PURE__ */ p("span", { className: "tw-truncate", children: ve })
      }
    ) }),
    /* @__PURE__ */ p(Yo, { id: l, forceMount: !0, className: "tw-w-[280px] tw-p-0", align: "center", children: /* @__PURE__ */ j(
      ea,
      {
        ref: N,
        onKeyDown: Re,
        loop: !0,
        value: d,
        onValueChange: h,
        shouldFilter: !1,
        children: [
          b === "books" ? /* @__PURE__ */ j("div", { className: "tw-flex tw-items-end", children: [
            /* @__PURE__ */ j("div", { className: "tw-relative tw-flex-1", children: [
              /* @__PURE__ */ p(
                xl,
                {
                  ref: L,
                  value: g,
                  onValueChange: m,
                  onKeyDown: de,
                  onFocus: () => R(!1),
                  className: s && s.length > 0 ? "!tw-pr-10" : ""
                }
              ),
              s && s.length > 0 && /* @__PURE__ */ p(
                tC,
                {
                  recentSearches: s,
                  onSearchItemSelect: H,
                  renderItem: (ae) => bs(ae, "English"),
                  getItemKey: (ae) => `${ae.book}-${ae.chapterNum}-${ae.verseNum}`,
                  ariaLabel: o == null ? void 0 : o["%history_recentSearches_ariaLabel%"],
                  groupHeading: o == null ? void 0 : o["%history_recent%"]
                }
              )
            ] }),
            /* @__PURE__ */ p("div", { className: "tw-flex tw-items-center tw-gap-1 tw-border-b tw-pe-2", children: K.map(({ onClick: ae, disabled: Te, title: Be, icon: Ge }) => /* @__PURE__ */ p(
              Pe,
              {
                variant: "ghost",
                size: "sm",
                onClick: () => {
                  R(!0), ae();
                },
                disabled: Te,
                className: "tw-h-10 tw-w-4 tw-p-0",
                title: Be,
                onKeyDown: He,
                children: /* @__PURE__ */ p(Ge, {})
              },
              Be
            )) })
          ] }) : /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-border-b tw-px-3 tw-py-2", children: [
            /* @__PURE__ */ p(
              Pe,
              {
                variant: "ghost",
                size: "sm",
                onClick: ne,
                className: "tw-mr-2 tw-h-6 tw-w-6 tw-p-0",
                tabIndex: -1,
                children: c === "ltr" ? /* @__PURE__ */ p(V2, { className: "tw-h-4 tw-w-4" }) : /* @__PURE__ */ p(H2, { className: "tw-h-4 tw-w-4" })
              }
            ),
            y && /* @__PURE__ */ p("span", { tabIndex: -1, className: "tw-text-sm tw-font-medium", children: ys(y, i) })
          ] }),
          !D && /* @__PURE__ */ j(ta, { ref: O, children: [
            b === "books" && /* @__PURE__ */ j(Lt, { children: [
              !A && Object.entries(T).map(([ae, Te]) => {
                if (Te.length !== 0)
                  return (
                    // We are mapping over filteredBooksByType, which uses Section as key type
                    // eslint-disable-next-line no-type-assertion/no-type-assertion
                    /* @__PURE__ */ p(Ao, { heading: me(ae), children: Te.map((Be) => /* @__PURE__ */ p(
                      Iy,
                      {
                        bookId: Be,
                        onSelect: (Ge) => V(Ge),
                        section: Ua(Be),
                        commandValue: `${Be} ${yo[Be]}`,
                        ref: Be === t.book ? M : void 0,
                        localizedBookNames: i
                      },
                      Be
                    )) }, ae)
                  );
              }),
              A && /* @__PURE__ */ p(Ao, { children: /* @__PURE__ */ p(
                Xo,
                {
                  value: `${A.book} ${yo[A.book]} ${A.chapterNum || ""}:${A.verseNum || ""})}`,
                  onSelect: B,
                  className: "tw-font-semibold tw-text-primary",
                  children: bs(
                    {
                      book: A.book,
                      chapterNum: A.chapterNum ?? 1,
                      verseNum: A.verseNum ?? 1
                    },
                    i ? Hh(A.book, i) : void 0
                  )
                },
                "top-match"
              ) }),
              A && zr(A.book) > 1 && /* @__PURE__ */ j(Lt, { children: [
                /* @__PURE__ */ p("div", { className: "tw-mb-2 tw-px-3 tw-text-sm tw-font-medium tw-text-muted-foreground", children: ys(A.book, i) }),
                /* @__PURE__ */ p(
                  Hg,
                  {
                    bookId: A.book,
                    scrRef: t,
                    onChapterSelect: J,
                    setChapterRef: Ee,
                    isChapterDimmed: ye,
                    className: "tw-px-4 tw-pb-4"
                  }
                )
              ] })
            ] }),
            b === "chapters" && y && /* @__PURE__ */ p(
              Hg,
              {
                bookId: y,
                scrRef: t,
                onChapterSelect: J,
                setChapterRef: Ee,
                className: "tw-p-4"
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const TL = Object.freeze([
  "%scripture_section_ot_long%",
  "%scripture_section_nt_long%",
  "%scripture_section_dc_long%",
  "%scripture_section_extra_long%",
  "%history_recent%",
  "%history_recentSearches_ariaLabel%"
]), oC = Ji(
  "tw-text-sm tw-font-medium tw-leading-none peer-disabled:tw-cursor-not-allowed peer-disabled:tw-opacity-70"
), Vt = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(my.Root, { ref: n, className: G("pr-twp", oC(), t), ...e }));
Vt.displayName = my.Root.displayName;
const Kh = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Ja.Root,
    {
      className: G("pr-twp tw-grid tw-gap-2", t),
      ...e,
      ref: n,
      dir: r
    }
  );
});
Kh.displayName = Ja.Root.displayName;
const $c = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Ja.Item,
  {
    ref: n,
    className: G(
      "pr-twp tw-aspect-square tw-h-4 tw-w-4 tw-rounded-full tw-border tw-border-primary tw-text-primary tw-ring-offset-background focus:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50",
      t
    ),
    ...e,
    children: /* @__PURE__ */ p(Ja.Indicator, { className: "tw-flex tw-items-center tw-justify-center", children: /* @__PURE__ */ p(Eu, { className: "tw-h-2.5 tw-w-2.5 tw-fill-current tw-text-current" }) })
  }
));
$c.displayName = Ja.Item.displayName;
function sC(t) {
  return typeof t == "string" ? t : typeof t == "number" ? t.toString() : t.label;
}
function Sf({
  id: t,
  options: e = [],
  className: n,
  buttonClassName: r,
  popoverContentClassName: i,
  value: o,
  onChange: s = () => {
  },
  getOptionLabel: a = sC,
  icon: l = void 0,
  buttonPlaceholder: c = "",
  textPlaceholder: u = "",
  commandEmptyMessage: f = "No option found",
  buttonVariant: d = "outline",
  alignDropDown: h = "start",
  isDisabled: g = !1,
  ...m
}) {
  const [b, _] = fe(!1);
  return /* @__PURE__ */ j(ra, { open: b, onOpenChange: _, ...m, children: [
    /* @__PURE__ */ p(ia, { asChild: !0, children: /* @__PURE__ */ j(
      Pe,
      {
        variant: d,
        role: "combobox",
        "aria-expanded": b,
        id: t,
        className: G(
          "tw-flex tw-w-[200px] tw-items-center tw-justify-between tw-overflow-hidden",
          r ?? n
        ),
        disabled: g,
        children: [
          /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-1 tw-items-center tw-overflow-hidden", children: [
            l && /* @__PURE__ */ p("div", { className: "tw-pe-2", children: l }),
            /* @__PURE__ */ p("span", { className: G("tw-overflow-hidden tw-text-ellipsis tw-whitespace-nowrap"), children: o ? a(o) : c })
          ] }),
          /* @__PURE__ */ p(Bh, { className: "tw-ms-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" })
        ]
      }
    ) }),
    /* @__PURE__ */ p(
      Yo,
      {
        align: h,
        className: G("tw-w-[200px] tw-p-0", i),
        children: /* @__PURE__ */ j(ea, { children: [
          /* @__PURE__ */ p(xl, { placeholder: u, className: "tw-text-inherit" }),
          /* @__PURE__ */ p(Tu, { children: f }),
          /* @__PURE__ */ p(ta, { children: e.map((y) => /* @__PURE__ */ j(
            Xo,
            {
              value: a(y),
              onSelect: () => {
                s(y), _(!1);
              },
              children: [
                /* @__PURE__ */ p(
                  xi,
                  {
                    className: G("tw-me-2 tw-h-4 tw-w-4", {
                      "tw-opacity-0": !o || a(o) !== a(y)
                    })
                  }
                ),
                a(y)
              ]
            },
            a(y)
          )) })
        ] })
      }
    )
  ] });
}
function aC({
  startChapter: t,
  endChapter: e,
  handleSelectStartChapter: n,
  handleSelectEndChapter: r,
  isDisabled: i = !1,
  chapterCount: o
}) {
  const s = Ne(
    () => Array.from({ length: o }, (c, u) => u + 1),
    [o]
  );
  return /* @__PURE__ */ j(Lt, { children: [
    /* @__PURE__ */ p(Vt, { htmlFor: "start-chapters-combobox", children: "Chapters" }),
    /* @__PURE__ */ p(
      Sf,
      {
        isDisabled: i,
        onChange: (c) => {
          n(c), c > e && r(c);
        },
        buttonClassName: "tw-me-2 tw-ms-2 tw-w-20",
        options: s,
        getOptionLabel: (c) => c.toString(),
        value: t
      },
      "start chapter"
    ),
    /* @__PURE__ */ p(Vt, { htmlFor: "end-chapters-combobox", children: "to" }),
    /* @__PURE__ */ p(
      Sf,
      {
        isDisabled: i,
        onChange: (c) => {
          r(c), c < t && n(c);
        },
        buttonClassName: "tw-ms-2 tw-w-20",
        options: s,
        getOptionLabel: (c) => c.toString(),
        value: e
      },
      "end chapter"
    )
  ] });
}
var lC = /* @__PURE__ */ ((t) => (t.CURRENT_BOOK = "current book", t.CHOOSE_BOOKS = "choose books", t))(lC || {});
const AL = Object.freeze([
  "%webView_bookSelector_currentBook%",
  "%webView_bookSelector_choose%",
  "%webView_bookSelector_chooseBooks%"
]), Id = (t, e) => t[e] ?? e;
function DL({
  handleBookSelectionModeChange: t,
  currentBookName: e,
  onSelectBooks: n,
  selectedBookIds: r,
  chapterCount: i,
  endChapter: o,
  handleSelectEndChapter: s,
  startChapter: a,
  handleSelectStartChapter: l,
  localizedStrings: c
}) {
  const u = Id(c, "%webView_bookSelector_currentBook%"), f = Id(c, "%webView_bookSelector_choose%"), d = Id(c, "%webView_bookSelector_chooseBooks%"), [h, g] = fe(
    "current book"
    /* CURRENT_BOOK */
  ), m = (b) => {
    g(b), t(b);
  };
  return /* @__PURE__ */ p(
    Kh,
    {
      className: "pr-twp tw-flex",
      value: h,
      onValueChange: (b) => m(b),
      children: /* @__PURE__ */ j("div", { className: "tw-flex tw-w-full tw-flex-col tw-gap-4", children: [
        /* @__PURE__ */ j("div", { className: "tw-grid tw-grid-cols-[25%,25%,50%]", children: [
          /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center", children: [
            /* @__PURE__ */ p($c, {
              value: "current book"
              /* CURRENT_BOOK */
            }),
            /* @__PURE__ */ p(Vt, { className: "tw-ms-1", children: u })
          ] }),
          /* @__PURE__ */ p(Vt, { className: "tw-flex tw-items-center", children: e }),
          /* @__PURE__ */ p("div", { className: "tw-flex tw-items-center tw-justify-end", children: /* @__PURE__ */ p(
            aC,
            {
              isDisabled: h === "choose books",
              handleSelectStartChapter: l,
              handleSelectEndChapter: s,
              chapterCount: i,
              startChapter: a,
              endChapter: o
            }
          ) })
        ] }),
        /* @__PURE__ */ j("div", { className: "tw-grid tw-grid-cols-[25%,50%,25%]", children: [
          /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center", children: [
            /* @__PURE__ */ p($c, {
              value: "choose books"
              /* CHOOSE_BOOKS */
            }),
            /* @__PURE__ */ p(Vt, { className: "tw-ms-1", children: d })
          ] }),
          /* @__PURE__ */ p(Vt, { className: "tw-flex tw-items-center", children: r.map((b) => nt.bookIdToEnglishName(b)).join(", ") }),
          /* @__PURE__ */ p(
            Pe,
            {
              disabled: h === "current book",
              onClick: () => n(),
              children: f
            }
          )
        ] })
      ] })
    }
  );
}
const Gh = yl(void 0);
function Sr() {
  const t = vl(Gh);
  if (!t)
    throw new Error("useMenuContext must be used within a MenuContext.Provider.");
  return t;
}
const Ci = Ji("", {
  variants: {
    variant: {
      default: "",
      muted: "hover:tw-bg-muted hover:tw-text-foreground focus:tw-bg-muted focus:tw-text-foreground data-[state=open]:tw-bg-muted data-[state=open]:tw-text-foreground"
    }
  },
  defaultVariants: {
    variant: "default"
  }
}), Jh = ft.Trigger, Ry = ft.Group, cC = ft.Portal, uC = ft.Sub, dC = ft.RadioGroup;
function Au({ variant: t = "default", ...e }) {
  const n = Y.useMemo(
    () => ({
      variant: t
    }),
    [t]
  );
  return /* @__PURE__ */ p(Gh.Provider, { value: n, children: /* @__PURE__ */ p(ft.Root, { ...e }) });
}
const Py = Y.forwardRef(({ className: t, inset: e, children: n, ...r }, i) => {
  const o = Sr();
  return /* @__PURE__ */ j(
    ft.SubTrigger,
    {
      ref: i,
      className: G(
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent data-[state=open]:tw-bg-accent",
        e && "tw-pl-8",
        t,
        Ci({ variant: o.variant })
        // CUSTOM use context to add variants
      ),
      ...r,
      children: [
        n,
        /* @__PURE__ */ p(Ss, { className: "tw-ml-auto tw-h-4 tw-w-4" })
      ]
    }
  );
});
Py.displayName = ft.SubTrigger.displayName;
const Ly = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  ft.SubContent,
  {
    ref: n,
    className: G(
      "pr-twp tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-lg data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...e
  }
));
Ly.displayName = ft.SubContent.displayName;
const Cl = Y.forwardRef(({ className: t, sideOffset: e = 4, children: n, ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ p(ft.Portal, { children: /* @__PURE__ */ p(
    ft.Content,
    {
      ref: i,
      sideOffset: e,
      className: G(
        /* adding pr-twp because the dropdown content is added to the dom as a sibling to the app root */
        "pr-twp tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        t
      ),
      ...r,
      children: /* @__PURE__ */ p("div", { dir: o, children: n })
    }
  ) });
});
Cl.displayName = ft.Content.displayName;
const $y = Y.forwardRef(({ className: t, inset: e, ...n }, r) => {
  const i = Jt(), o = Sr();
  return /* @__PURE__ */ p(
    ft.Item,
    {
      ref: r,
      className: G(
        // removed: tw-relative focus:tw-text-accent-foreground
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        e && "tw-pl-8",
        t,
        Ci({ variant: o.variant })
        // CUSTOM use context to add variants
      ),
      ...n,
      dir: i
    }
  );
});
$y.displayName = ft.Item.displayName;
const Xh = Y.forwardRef(({ className: t, children: e, checked: n, ...r }, i) => {
  const o = Sr();
  return /* @__PURE__ */ j(
    ft.CheckboxItem,
    {
      ref: i,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        t,
        Ci({ variant: o.variant })
        // CUSTOM use context to add variants
      ),
      checked: n,
      ...r,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center ltr:tw-left-2 rtl:tw-right-2", children: /* @__PURE__ */ p(ft.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
        e
      ]
    }
  );
});
Xh.displayName = ft.CheckboxItem.displayName;
const Fy = Y.forwardRef(({ className: t, children: e, ...n }, r) => {
  const i = Sr();
  return /* @__PURE__ */ j(
    ft.RadioItem,
    {
      ref: r,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        t,
        Ci({ variant: i.variant })
        // CUSTOM use context to add variants
      ),
      ...n,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center ltr:tw-left-2 rtl:tw-right-2", children: /* @__PURE__ */ p(ft.ItemIndicator, { children: /* @__PURE__ */ p(Eu, { className: "tw-h-2 tw-w-2 tw-fill-current" }) }) }),
        e
      ]
    }
  );
});
Fy.displayName = ft.RadioItem.displayName;
const Yh = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  ft.Label,
  {
    ref: r,
    className: G("tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold", e && "tw-pl-8", t),
    ...n
  }
));
Yh.displayName = ft.Label.displayName;
const Du = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  ft.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-muted", t),
    ...e
  }
));
Du.displayName = ft.Separator.displayName;
function fC({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "span",
    {
      className: G("tw-ms-auto tw-text-xs tw-tracking-widest tw-opacity-60", t),
      ...e
    }
  );
}
fC.displayName = "DropdownMenuShortcut";
function hC({ table: t }) {
  return /* @__PURE__ */ j(Au, { children: [
    /* @__PURE__ */ p(D1, { asChild: !0, children: /* @__PURE__ */ j(Pe, { variant: "outline", size: "sm", className: "tw-ml-auto tw-hidden tw-h-8 lg:tw-flex", children: [
      /* @__PURE__ */ p(W2, { className: "tw-mr-2 tw-h-4 tw-w-4" }),
      "View"
    ] }) }),
    /* @__PURE__ */ j(Cl, { align: "end", className: "tw-w-[150px]", children: [
      /* @__PURE__ */ p(Yh, { children: "Toggle columns" }),
      /* @__PURE__ */ p(Du, {}),
      t.getAllColumns().filter((e) => e.getCanHide()).map((e) => /* @__PURE__ */ p(
        Xh,
        {
          className: "tw-capitalize",
          checked: e.getIsVisible(),
          onCheckedChange: (n) => e.toggleVisibility(!!n),
          children: e.id
        },
        e.id
      ))
    ] })
  ] });
}
const As = kt.Root, pC = kt.Group, Ds = kt.Value, gC = Ji(
  "tw-flex tw-h-10 tw-w-full tw-items-center tw-justify-between tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background placeholder:tw-text-muted-foreground focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 [&>span]:tw-line-clamp-1",
  {
    variants: {
      size: {
        default: "tw-h-10 tw-px-4 tw-py-2",
        sm: "tw-h-8 tw-rounded-md tw-px-3",
        lg: "tw-h-11 tw-rounded-md tw-px-8",
        icon: "tw-h-10 tw-w-10"
      }
    },
    defaultVariants: {
      size: "default"
    }
  }
), Mo = Y.forwardRef(({ className: t, children: e, size: n, ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ j(
    kt.Trigger,
    {
      className: G(gC({ size: n, className: t })),
      ref: i,
      ...r,
      dir: o,
      children: [
        e,
        /* @__PURE__ */ p(kt.Icon, { asChild: !0, children: /* @__PURE__ */ p(Nu, { className: "tw-h-4 tw-w-4 tw-opacity-50" }) })
      ]
    }
  );
});
Mo.displayName = kt.Trigger.displayName;
const By = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  kt.ScrollUpButton,
  {
    ref: n,
    className: G("tw-flex tw-cursor-default tw-items-center tw-justify-center tw-py-1", t),
    ...e,
    children: /* @__PURE__ */ p(K2, { className: "tw-h-4 tw-w-4" })
  }
));
By.displayName = kt.ScrollUpButton.displayName;
const qy = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  kt.ScrollDownButton,
  {
    ref: n,
    className: G("tw-flex tw-cursor-default tw-items-center tw-justify-center tw-py-1", t),
    ...e,
    children: /* @__PURE__ */ p(Nu, { className: "tw-h-4 tw-w-4" })
  }
));
qy.displayName = kt.ScrollDownButton.displayName;
const Oo = Y.forwardRef(({ className: t, children: e, position: n = "popper", ...r }, i) => {
  const o = Jt();
  return /* @__PURE__ */ p(kt.Portal, { children: /* @__PURE__ */ j(
    kt.Content,
    {
      ref: i,
      className: G(
        "pr-twp tw-relative tw-z-50 tw-max-h-96 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        n === "popper" && "data-[side=bottom]:tw-translate-y-1 data-[side=left]:tw--translate-x-1 data-[side=right]:tw-translate-x-1 data-[side=top]:tw--translate-y-1",
        t
      ),
      position: n,
      ...r,
      children: [
        /* @__PURE__ */ p(By, {}),
        /* @__PURE__ */ p(
          kt.Viewport,
          {
            className: G(
              "tw-p-1",
              n === "popper" && "tw-h-[var(--radix-select-trigger-height)] tw-w-full tw-min-w-[var(--radix-select-trigger-width)]"
            ),
            children: /* @__PURE__ */ p("div", { dir: o, children: e })
          }
        ),
        /* @__PURE__ */ p(qy, {})
      ]
    }
  ) });
});
Oo.displayName = kt.Content.displayName;
const mC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  kt.Label,
  {
    ref: n,
    className: G("tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-font-semibold", t),
    ...e
  }
));
mC.displayName = kt.Label.displayName;
const er = Y.forwardRef(({ className: t, children: e, ...n }, r) => /* @__PURE__ */ j(
  kt.Item,
  {
    ref: r,
    className: G(
      "tw-relative tw-flex tw-w-full tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      t
    ),
    ...n,
    children: [
      /* @__PURE__ */ p("span", { className: "tw-absolute tw-start-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(kt.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
      /* @__PURE__ */ p(kt.ItemText, { children: e })
    ]
  }
));
er.displayName = kt.Item.displayName;
const wC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  kt.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-muted", t),
    ...e
  }
));
wC.displayName = kt.Separator.displayName;
function bC({ table: t }) {
  return /* @__PURE__ */ p("div", { className: "tw-flex tw-items-center tw-justify-between tw-px-2 tw-pb-3 tw-pt-3", children: /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-space-x-6 lg:tw-space-x-8", children: [
    /* @__PURE__ */ j("div", { className: "tw-flex-1 tw-text-sm tw-text-muted-foreground", children: [
      t.getFilteredSelectedRowModel().rows.length,
      " of",
      " ",
      t.getFilteredRowModel().rows.length,
      " row(s) selected"
    ] }),
    /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-space-x-2", children: [
      /* @__PURE__ */ p("p", { className: "tw-text-nowrap tw-text-sm tw-font-medium", children: "Rows per page" }),
      /* @__PURE__ */ j(
        As,
        {
          value: `${t.getState().pagination.pageSize}`,
          onValueChange: (e) => {
            t.setPageSize(Number(e));
          },
          children: [
            /* @__PURE__ */ p(Mo, { className: "tw-h-8 tw-w-[70px]", children: /* @__PURE__ */ p(Ds, { placeholder: t.getState().pagination.pageSize }) }),
            /* @__PURE__ */ p(Oo, { side: "top", children: [10, 20, 30, 40, 50].map((e) => /* @__PURE__ */ p(er, { value: `${e}`, children: e }, e)) })
          ]
        }
      )
    ] }),
    /* @__PURE__ */ j("div", { className: "tw-flex tw-w-[100px] tw-items-center tw-justify-center tw-text-sm tw-font-medium", children: [
      "Page ",
      t.getState().pagination.pageIndex + 1,
      " of ",
      t.getPageCount()
    ] }),
    /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-space-x-2", children: [
      /* @__PURE__ */ j(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-hidden tw-h-8 tw-w-8 tw-p-0 lg:tw-flex",
          onClick: () => t.setPageIndex(0),
          disabled: !t.getCanPreviousPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to first page" }),
            /* @__PURE__ */ p(G2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      ),
      /* @__PURE__ */ j(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-h-8 tw-w-8 tw-p-0",
          onClick: () => t.previousPage(),
          disabled: !t.getCanPreviousPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to previous page" }),
            /* @__PURE__ */ p(J2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      ),
      /* @__PURE__ */ j(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-h-8 tw-w-8 tw-p-0",
          onClick: () => t.nextPage(),
          disabled: !t.getCanNextPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to next page" }),
            /* @__PURE__ */ p(X2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      ),
      /* @__PURE__ */ j(
        Pe,
        {
          variant: "outline",
          size: "icon",
          className: "tw-hidden tw-h-8 tw-w-8 tw-p-0 lg:tw-flex",
          onClick: () => t.setPageIndex(t.getPageCount() - 1),
          disabled: !t.getCanNextPage(),
          children: [
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Go to last page" }),
            /* @__PURE__ */ p(Y2, { className: "tw-h-4 tw-w-4" })
          ]
        }
      )
    ] })
  ] }) });
}
const Wg = `
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [contenteditable],
  tr:not([disabled])
`;
function yC(t) {
  return !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length);
}
function Xa(t, e) {
  const n = e ? `${Wg}, ${e}` : Wg;
  return Array.from(t.querySelectorAll(n)).filter(
    (r) => !r.hasAttribute("disabled") && !r.getAttribute("aria-hidden") && yC(r)
  );
}
const Mu = Y.forwardRef(({ className: t, stickyHeader: e, ...n }, r) => {
  const i = Y.useRef(null);
  Y.useEffect(() => {
    typeof r == "function" ? r(i.current) : r && "current" in r && (r.current = i.current);
  }, [r]), Y.useEffect(() => {
    const s = i.current;
    if (!s) return;
    const a = () => {
      requestAnimationFrame(() => {
        Xa(s, '[tabindex]:not([tabindex="-1"])').forEach((u) => {
          u.setAttribute("tabindex", "-1");
        });
      });
    };
    a();
    const l = new MutationObserver(() => {
      a();
    });
    return l.observe(s, {
      childList: !0,
      // Watch for added/removed elements
      subtree: !0,
      // Include descendants
      attributes: !0,
      attributeFilter: ["tabindex"]
      // Watch for tabindex changes
    }), () => {
      l.disconnect();
    };
  }, []);
  const o = (s) => {
    const { current: a } = i;
    if (a) {
      if (s.key === "ArrowDown") {
        s.preventDefault(), Xa(a)[0].focus();
        return;
      }
      s.key === " " && document.activeElement === a && s.preventDefault();
    }
  };
  return /* @__PURE__ */ p("div", { className: G("pr-twp tw-relative tw-w-full", { "tw-p-1": e }), children: /* @__PURE__ */ p(
    "table",
    {
      tabIndex: 0,
      onKeyDown: o,
      ref: i,
      className: G(
        "tw-w-full tw-caption-bottom tw-text-sm tw-outline-none",
        // CUSTOM: Add outline-none to remove duplicate outline
        "focus:tw-relative focus:tw-z-10 focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-1 focus:tw-ring-offset-background",
        // CUSTOM: Add focus styles
        t
      ),
      "aria-label": "Table",
      "aria-labelledby": "table-label",
      ...n
    }
  ) });
});
Mu.displayName = "Table";
const Ou = Y.forwardRef(({ className: t, stickyHeader: e, ...n }, r) => /* @__PURE__ */ p(
  "thead",
  {
    ref: r,
    className: G(
      {
        "tw-sticky tw-top-[-1px] tw-z-20 tw-bg-background tw-drop-shadow-sm": e
      },
      "[&_tr]:tw-border-b",
      t
    ),
    ...n
  }
));
Ou.displayName = "TableHeader";
const Iu = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p("tbody", { ref: n, className: G("[&_tr:last-child]:tw-border-0", t), ...e }));
Iu.displayName = "TableBody";
const vC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "tfoot",
  {
    ref: n,
    className: G("tw-border-t tw-bg-muted/50 tw-font-medium [&>tr]:last:tw-border-b-0", t),
    ...e
  }
));
vC.displayName = "TableFooter";
function _C(t) {
  Y.useEffect(() => {
    const e = t.current;
    if (!e) return;
    const n = (r) => {
      if (e.contains(document.activeElement)) {
        if (r.key === "ArrowRight" || r.key === "ArrowLeft") {
          r.preventDefault(), r.stopPropagation();
          const i = t.current ? Xa(t.current) : [], o = i.indexOf(document.activeElement), s = r.key === "ArrowRight" ? o + 1 : o - 1;
          s >= 0 && s < i.length && i[s].focus();
        }
        r.key === "Escape" && (r.preventDefault(), e.focus()), (r.key === "ArrowDown" || r.key === "ArrowUp") && r.preventDefault();
      }
    };
    return e.addEventListener("keydown", n), () => {
      e.removeEventListener("keydown", n);
    };
  }, [t]);
}
function xC(t, e, n) {
  let r;
  return n === "ArrowLeft" && e > 0 ? r = t[e - 1] : n === "ArrowRight" && e < t.length - 1 && (r = t[e + 1]), r ? (requestAnimationFrame(() => r.focus()), !0) : !1;
}
function CC(t, e, n) {
  let r;
  return n === "ArrowDown" && e < t.length - 1 ? r = t[e + 1] : n === "ArrowUp" && e > 0 && (r = t[e - 1]), r ? (requestAnimationFrame(() => r.focus()), !0) : !1;
}
const hi = Y.forwardRef(({ className: t, onKeyDown: e, onSelect: n, setFocusAlsoRunsSelect: r = !1, ...i }, o) => {
  const s = Y.useRef(null);
  Y.useEffect(() => {
    typeof o == "function" ? o(s.current) : o && "current" in o && (o.current = s.current);
  }, [o]), _C(s);
  const a = Y.useMemo(
    () => s.current ? Xa(s.current) : [],
    [s]
  ), l = Y.useCallback(
    (u) => {
      const { current: f } = s;
      if (!f || !f.parentElement) return;
      const d = f.closest("table"), h = d ? (
        // getFocusableElements returns an HTMLElement[] but we are filtering for HTMLTableRowElements
        // eslint-disable-next-line no-type-assertion/no-type-assertion
        Xa(d).filter(
          (b) => b.tagName === "TR"
        )
      ) : [], g = h.indexOf(f), m = a.indexOf(
        // activeElement is generic Element, so we need to cast it to HTMLElement
        // eslint-disable-next-line no-type-assertion/no-type-assertion
        document.activeElement
      );
      if (u.key === "ArrowDown" || u.key === "ArrowUp")
        u.preventDefault(), CC(h, g, u.key);
      else if (u.key === "ArrowLeft" || u.key === "ArrowRight")
        u.preventDefault(), xC(a, m, u.key);
      else if (u.key === "Escape") {
        u.preventDefault();
        const b = f.closest("table");
        b && b.focus();
      }
      e == null || e(u);
    },
    [s, a, e]
  ), c = Y.useCallback(
    (u) => {
      r && (n == null || n(u));
    },
    [r, n]
  );
  return /* @__PURE__ */ p(
    "tr",
    {
      ref: s,
      tabIndex: -1,
      onKeyDown: l,
      onFocus: c,
      className: G(
        // CUSTOM: Add focus styles and add tw-outline-none so there isn't a duplicate outline
        "tw-border-b tw-outline-none tw-transition-colors hover:tw-bg-muted/50",
        "focus:tw-relative focus:tw-z-10 focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-1 focus:tw-ring-offset-background",
        "data-[state=selected]:tw-bg-muted",
        t
      ),
      ...i
    }
  );
});
hi.displayName = "TableRow";
const Ya = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "th",
  {
    ref: n,
    className: G(
      "tw-h-12 tw-px-4 tw-text-start tw-align-middle tw-font-medium tw-text-muted-foreground [&:has([role=checkbox])]:tw-pe-0",
      t
    ),
    ...e
  }
));
Ya.displayName = "TableHead";
const vo = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "td",
  {
    ref: n,
    className: G("tw-p-4 tw-align-middle [&:has([role=checkbox])]:tw-pe-0", t),
    ...e
  }
));
vo.displayName = "TableCell";
const kC = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  "caption",
  {
    ref: n,
    className: G("tw-mt-4 tw-text-sm tw-text-muted-foreground", t),
    ...e
  }
));
kC.displayName = "TableCaption";
function Tf({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "div",
    {
      className: G("pr-twp tw-animate-pulse tw-rounded-md tw-bg-muted", t),
      ...e
    }
  );
}
function EC({
  columns: t,
  data: e,
  enablePagination: n = !1,
  showPaginationControls: r = !1,
  showColumnVisibilityControls: i = !1,
  stickyHeader: o = !1,
  onRowClickHandler: s = () => {
  },
  id: a,
  isLoading: l = !1,
  noResultsMessage: c
}) {
  var N;
  const [u, f] = fe([]), [d, h] = fe([]), [g, m] = fe({}), [b, _] = fe({}), y = Ne(() => e ?? [], [e]), C = wy({
    data: y,
    columns: t,
    getCoreRowModel: yy(),
    ...n && { getPaginationRowModel: S1() },
    onSortingChange: f,
    getSortedRowModel: by(),
    onColumnFiltersChange: h,
    getFilteredRowModel: N1(),
    onColumnVisibilityChange: m,
    onRowSelectionChange: _,
    state: {
      sorting: u,
      columnFilters: d,
      columnVisibility: g,
      rowSelection: b
    }
  }), D = C.getVisibleFlatColumns();
  let R;
  return l ? R = Array.from({ length: 10 }).map((M, q) => `skeleton-row-${q}`).map((M) => /* @__PURE__ */ p(hi, { children: /* @__PURE__ */ p(vo, { colSpan: D.length ?? t.length, className: "tw-border-0 tw-p-0", children: /* @__PURE__ */ p("div", { className: "tw-w-full tw-py-2", children: /* @__PURE__ */ p(Tf, { className: "tw-h-14 tw-w-full tw-rounded-md" }) }) }) }, M)) : ((N = C.getRowModel().rows) == null ? void 0 : N.length) > 0 ? R = C.getRowModel().rows.map((L) => /* @__PURE__ */ p(
    hi,
    {
      onClick: () => s(L, C),
      "data-state": L.getIsSelected() && "selected",
      children: L.getVisibleCells().map((O) => /* @__PURE__ */ p(vo, { children: za(O.column.columnDef.cell, O.getContext()) }, O.id))
    },
    L.id
  )) : R = /* @__PURE__ */ p(hi, { children: /* @__PURE__ */ p(vo, { colSpan: t.length, className: "tw-h-24 tw-text-center", children: c }) }), /* @__PURE__ */ j("div", { className: "pr-twp", id: a, children: [
    i && /* @__PURE__ */ p(hC, { table: C }),
    /* @__PURE__ */ j(Mu, { stickyHeader: o, children: [
      /* @__PURE__ */ p(Ou, { stickyHeader: o, children: C.getHeaderGroups().map((L) => /* @__PURE__ */ p(hi, { children: L.headers.map((O) => /* @__PURE__ */ p(Ya, { children: O.isPlaceholder ? void 0 : za(O.column.columnDef.header, O.getContext()) }, O.id)) }, L.id)) }),
      /* @__PURE__ */ p(Iu, { children: R })
    ] }),
    n && /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-justify-end tw-space-x-2 tw-py-4", children: [
      /* @__PURE__ */ p(
        Pe,
        {
          variant: "outline",
          size: "sm",
          onClick: () => C.previousPage(),
          disabled: !C.getCanPreviousPage(),
          children: "Previous"
        }
      ),
      /* @__PURE__ */ p(
        Pe,
        {
          variant: "outline",
          size: "sm",
          onClick: () => C.nextPage(),
          disabled: !C.getCanNextPage(),
          children: "Next"
        }
      )
    ] }),
    n && r && /* @__PURE__ */ p(bC, { table: C })
  ] });
}
function ML({ id: t, markdown: e, className: n, anchorTarget: r }) {
  const i = Ne(
    () => ({
      overrides: {
        a: {
          props: {
            target: r
          }
        }
      }
    }),
    [r]
  );
  return /* @__PURE__ */ p("div", { id: t, className: G("pr-twp tw-prose", n), children: /* @__PURE__ */ p(M1, { options: i, children: e }) });
}
const NC = Object.freeze([
  "%webView_error_dump_header%",
  "%webView_error_dump_info_message%"
]), Kg = (t, e) => t[e] ?? e;
function SC({
  errorDetails: t,
  handleCopyNotify: e,
  localizedStrings: n,
  id: r
}) {
  const i = Kg(n, "%webView_error_dump_header%"), o = Kg(n, "%webView_error_dump_info_message%");
  function s() {
    navigator.clipboard.writeText(t), e && e();
  }
  return /* @__PURE__ */ j(
    "div",
    {
      id: r,
      className: "tw-inline-flex tw-w-full tw-flex-col tw-items-start tw-justify-start tw-gap-4",
      children: [
        /* @__PURE__ */ j("div", { className: "tw-inline-flex tw-items-start tw-justify-start tw-gap-4 tw-self-stretch", children: [
          /* @__PURE__ */ j("div", { className: "tw-inline-flex tw-flex-1 tw-flex-col tw-items-start tw-justify-start", children: [
            /* @__PURE__ */ p("div", { className: "tw-text-color-text tw-justify-center tw-text-center tw-text-lg tw-font-semibold tw-leading-loose", children: i }),
            /* @__PURE__ */ p("div", { className: "tw-justify-center tw-self-stretch tw-text-sm tw-font-normal tw-leading-tight tw-text-muted-foreground", children: o })
          ] }),
          /* @__PURE__ */ p(Pe, { variant: "secondary", size: "icon", className: "size-8", onClick: () => s(), children: /* @__PURE__ */ p(gy, {}) })
        ] }),
        /* @__PURE__ */ p("div", { className: "tw-prose tw-w-full", children: /* @__PURE__ */ p("pre", { className: "tw-text-xs", children: t }) })
      ]
    }
  );
}
const OL = Object.freeze([
  ...NC,
  "%webView_error_dump_copied_message%"
]);
function IL({
  errorDetails: t,
  handleCopyNotify: e,
  localizedStrings: n,
  children: r,
  className: i,
  id: o
}) {
  const [s, a] = fe(!1), l = () => {
    a(!0), e && e();
  };
  return /* @__PURE__ */ j(ra, { onOpenChange: (u) => {
    u || a(!1);
  }, children: [
    /* @__PURE__ */ p(ia, { asChild: !0, children: r }),
    /* @__PURE__ */ j(Yo, { id: o, className: G("tw-min-w-80 tw-max-w-96", i), children: [
      s && n["%webView_error_dump_copied_message%"] && /* @__PURE__ */ p(Vt, { children: n["%webView_error_dump_copied_message%"] }),
      /* @__PURE__ */ p(
        SC,
        {
          errorDetails: t,
          handleCopyNotify: l,
          localizedStrings: n
        }
      )
    ] })
  ] });
}
var TC = /* @__PURE__ */ ((t) => (t[t.Check = 0] = "Check", t[t.Radio = 1] = "Radio", t))(TC || {});
function RL({ id: t, label: e, groups: n }) {
  const [r, i] = fe(
    Object.fromEntries(
      n.map(
        (c, u) => c.itemType === 0 ? [u, []] : void 0
      ).filter((c) => !!c)
    )
  ), [o, s] = fe({}), a = (c, u) => {
    const f = !r[c][u];
    i((h) => (h[c][u] = f, { ...h }));
    const d = n[c].items[u];
    d.onUpdate(d.id, f);
  }, l = (c, u) => {
    s((d) => (d[c] = u, { ...d }));
    const f = n[c].items.find((d) => d.id === u);
    f ? f.onUpdate(u) : console.error(`Could not find dropdown radio item with id '${u}'!`);
  };
  return /* @__PURE__ */ p("div", { id: t, children: /* @__PURE__ */ j(Au, { children: [
    /* @__PURE__ */ p(Jh, { asChild: !0, children: /* @__PURE__ */ j(Pe, { variant: "default", children: [
      /* @__PURE__ */ p(Q2, { size: 16, className: "tw-mr-2 tw-h-4 tw-w-4" }),
      e,
      /* @__PURE__ */ p(Nu, { size: 16, className: "tw-ml-2 tw-h-4 tw-w-4" })
    ] }) }),
    /* @__PURE__ */ p(Cl, { children: n.map((c, u) => /* @__PURE__ */ j("div", { children: [
      /* @__PURE__ */ p(Yh, { children: c.label }),
      /* @__PURE__ */ p(Ry, { children: c.itemType === 0 ? /* @__PURE__ */ p(Lt, { children: c.items.map((f, d) => /* @__PURE__ */ p("div", { children: /* @__PURE__ */ p(
        Xh,
        {
          checked: r[u][d],
          onCheckedChange: () => a(u, d),
          children: f.label
        }
      ) }, f.id)) }) : /* @__PURE__ */ p(
        dC,
        {
          value: o[u],
          onValueChange: (f) => l(u, f),
          children: c.items.map((f) => /* @__PURE__ */ p("div", { children: /* @__PURE__ */ p(Fy, { value: f.id, children: f.label }) }, f.id))
        }
      ) }),
      /* @__PURE__ */ p(Du, {})
    ] }, c.label)) })
  ] }) });
}
function PL({
  id: t,
  category: e,
  downloads: n,
  languages: r,
  moreInfoUrl: i,
  handleMoreInfoLinkClick: o,
  supportUrl: s,
  handleSupportLinkClick: a
}) {
  const l = new _1("en", {
    notation: "compact",
    compactDisplay: "short"
  }).format(Object.values(n).reduce((u, f) => u + f, 0)), c = () => {
    window.scrollTo(0, document.body.scrollHeight);
  };
  return /* @__PURE__ */ j(
    "div",
    {
      id: t,
      className: "pr-twp tw-flex tw-items-center tw-justify-center tw-gap-4 tw-divide-x tw-border-b tw-border-t tw-py-2 tw-text-center",
      children: [
        e && /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-items-center tw-gap-1", children: [
          /* @__PURE__ */ p("div", { className: "tw-flex", children: /* @__PURE__ */ p("span", { className: "tw-text-xs tw-font-semibold tw-text-foreground", children: e }) }),
          /* @__PURE__ */ p("span", { className: "tw-text-xs tw-text-foreground", children: "CATEGORY" })
        ] }),
        /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-items-center tw-gap-1 tw-ps-4", children: [
          /* @__PURE__ */ j("div", { className: "tw-flex tw-gap-1", children: [
            /* @__PURE__ */ p(Z2, { className: "tw-h-4 tw-w-4" }),
            /* @__PURE__ */ p("span", { className: "tw-text-xs tw-font-semibold tw-text-foreground", children: l })
          ] }),
          /* @__PURE__ */ p("span", { className: "tw-text-xs tw-text-foreground", children: "USERS" })
        ] }),
        /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-items-center tw-gap-1 tw-ps-4", children: [
          /* @__PURE__ */ p("div", { className: "tw-flex tw-gap-2", children: r.slice(0, 3).map((u) => /* @__PURE__ */ p("span", { className: "tw-text-xs tw-font-semibold tw-text-foreground", children: u.toUpperCase() }, u)) }),
          r.length > 3 && /* @__PURE__ */ j(
            "button",
            {
              type: "button",
              onClick: () => c(),
              className: "tw-text-xs tw-text-foreground tw-underline",
              children: [
                "+",
                r.length - 3,
                " more languages"
              ]
            }
          )
        ] }),
        (i || s) && /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-gap-1 tw-ps-4", children: [
          i && /* @__PURE__ */ p("div", { className: "tw-flex tw-gap-1", children: /* @__PURE__ */ j(
            Pe,
            {
              onClick: () => o(),
              variant: "link",
              className: "tw-flex tw-h-auto tw-gap-1 tw-py-0 tw-text-xs tw-font-semibold tw-text-foreground",
              children: [
                "Website",
                /* @__PURE__ */ p(e1, { className: "tw-h-4 tw-w-4" })
              ]
            }
          ) }),
          s && /* @__PURE__ */ p("div", { className: "tw-flex tw-gap-1", children: /* @__PURE__ */ j(
            Pe,
            {
              onClick: () => a(),
              variant: "link",
              className: "tw-flex tw-h-auto tw-gap-1 tw-py-0 tw-text-xs tw-font-semibold tw-text-foreground",
              children: [
                "Support",
                /* @__PURE__ */ p(t1, { className: "tw-h-4 tw-w-4" })
              ]
            }
          ) })
        ] })
      ]
    }
  );
}
function AC({ id: t, versionHistory: e }) {
  const [n, r] = fe(!1), i = /* @__PURE__ */ new Date();
  function o(a) {
    const l = new Date(a), c = new Date(i.getTime() - l.getTime()), u = c.getUTCFullYear() - 1970, f = c.getUTCMonth(), d = c.getUTCDate() - 1;
    let h = "";
    return u > 0 ? h = `${u.toString()} year${u === 1 ? "" : "s"} ago` : f > 0 ? h = `${f.toString()} month${f === 1 ? "" : "s"} ago` : d === 0 ? h = "today" : h = `${d.toString()} day${d === 1 ? "" : "s"} ago`, h;
  }
  const s = Object.entries(e).sort((a, l) => l[0].localeCompare(a[0]));
  return /* @__PURE__ */ j("div", { className: "pr-twp", id: t, children: [
    /* @__PURE__ */ p("h3", { className: "tw-text-md tw-font-semibold", children: "What`s New" }),
    /* @__PURE__ */ p("ul", { className: "tw-list-disc tw-pl-5 tw-pr-4 tw-text-xs tw-text-foreground", children: (n ? s : s.slice(0, 5)).map((a) => /* @__PURE__ */ j("div", { className: "tw-mt-3 tw-flex tw-justify-between", children: [
      /* @__PURE__ */ p("div", { className: "tw-text-foreground", children: /* @__PURE__ */ p("li", { className: "tw-prose tw-text-xs", children: /* @__PURE__ */ p("span", { children: a[1].description }) }) }),
      /* @__PURE__ */ j("div", { className: "tw-justify-end tw-text-right", children: [
        /* @__PURE__ */ j("div", { children: [
          "Version ",
          a[0]
        ] }),
        /* @__PURE__ */ p("div", { children: o(a[1].date) })
      ] })
    ] }, a[0])) }),
    s.length > 5 && /* @__PURE__ */ p(
      "button",
      {
        type: "button",
        onClick: () => r(!n),
        className: "tw-text-xs tw-text-foreground tw-underline",
        children: n ? "Show Less Version History" : "Show All Version History"
      }
    )
  ] });
}
function LL({
  id: t,
  publisherDisplayName: e,
  fileSize: n,
  locales: r,
  versionHistory: i,
  currentVersion: o
}) {
  const s = Ne(() => x1(n), [n]), l = ((c) => {
    const u = new Intl.DisplayNames(C1(), { type: "language" });
    return c.map((f) => u.of(f));
  })(r);
  return /* @__PURE__ */ p("div", { id: t, className: "pr-twp tw-border-t tw-py-2", children: /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-gap-2 tw-divide-y", children: [
    Object.entries(i).length > 0 && /* @__PURE__ */ p(AC, { versionHistory: i }),
    /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-gap-2 tw-py-2", children: [
      /* @__PURE__ */ p("h2", { className: "tw-text-md tw-font-semibold", children: "Information" }),
      /* @__PURE__ */ j("div", { className: "tw-flex tw-items-start tw-justify-between tw-text-xs tw-text-foreground", children: [
        /* @__PURE__ */ j("p", { className: "tw-flex tw-flex-col tw-justify-start tw-gap-1", children: [
          /* @__PURE__ */ p("span", { children: "Publisher" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: e }),
          /* @__PURE__ */ p("span", { children: "Size" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: s })
        ] }),
        /* @__PURE__ */ p("div", { className: "tw-flex tw-w-3/4 tw-items-center tw-justify-between tw-text-xs tw-text-foreground", children: /* @__PURE__ */ j("p", { className: "tw-flex tw-flex-col tw-justify-start tw-gap-1", children: [
          /* @__PURE__ */ p("span", { children: "Version" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: o }),
          /* @__PURE__ */ p("span", { children: "Languages" }),
          /* @__PURE__ */ p("span", { className: "tw-font-semibold", children: l.join(", ") })
        ] }) })
      ] })
    ] })
  ] }) });
}
const DC = Ji(
  "pr-twp tw-inline-flex tw-items-center tw-rounded-full tw-px-2.5 tw-py-0.5 tw-text-xs tw-font-semibold tw-transition-colors focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2",
  {
    variants: {
      variant: {
        default: "tw-border tw-border-transparent tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/80",
        secondary: "tw-border tw-border-transparent tw-bg-secondary tw-text-secondary-foreground hover:tw-bg-secondary/80",
        muted: "tw-border tw-border-transparent tw-bg-muted tw-text-muted-foreground hover:tw-bg-muted/80",
        destructive: "tw-border tw-border-transparent tw-bg-destructive tw-text-destructive-foreground hover:tw-bg-destructive/80",
        outline: "tw-border tw-text-foreground",
        blueIndicator: "tw-w-[5px] tw-h-[5px] tw-bg-blue-400 tw-px-0",
        mutedIndicator: "tw-w-[5px] tw-h-[5px] tw-bg-zinc-400 tw-px-0",
        ghost: "hover:tw-bg-accent hover:tw-text-accent-foreground tw-text-mu"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), Fc = Y.forwardRef(
  ({ className: t, variant: e, ...n }, r) => /* @__PURE__ */ p("div", { ref: r, className: G("pr-twp", DC({ variant: e }), t), ...n })
);
Fc.displayName = "Badge";
function MC({
  entries: t,
  selected: e,
  onChange: n,
  placeholder: r,
  hasToggleAllFeature: i = !1,
  selectAllText: o = "Select All",
  clearAllText: s = "Clear All",
  commandEmptyMessage: a = "No entries found",
  customSelectedText: l,
  isOpen: c = void 0,
  onOpenChange: u = void 0,
  isDisabled: f = !1,
  sortSelected: d = !1,
  icon: h = void 0,
  className: g = void 0,
  variant: m = "ghost",
  id: b
}) {
  const [_, y] = fe(!1), C = be(
    (q) => {
      var I;
      const k = (I = t.find((S) => S.label === q)) == null ? void 0 : I.value;
      k && n(
        e.includes(k) ? e.filter((S) => S !== k) : [...e, k]
      );
    },
    [t, e, n]
  ), D = () => l || r, R = Ne(() => {
    if (!d) return t;
    const q = t.filter((I) => I.starred).sort((I, S) => I.label.localeCompare(S.label)), k = t.filter((I) => !I.starred).sort((I, S) => {
      const P = e.includes(I.value), T = e.includes(S.value);
      return P && !T ? -1 : !P && T ? 1 : I.label.localeCompare(S.label);
    });
    return [...q, ...k];
  }, [t, e, d]), N = () => {
    n(t.map((q) => q.value));
  }, L = () => {
    n([]);
  }, O = c ?? _;
  return /* @__PURE__ */ p("div", { id: b, className: g, children: /* @__PURE__ */ j(ra, { open: O, onOpenChange: u ?? y, children: [
    /* @__PURE__ */ p(ia, { asChild: !0, children: /* @__PURE__ */ j(
      Pe,
      {
        variant: m,
        role: "combobox",
        "aria-expanded": O,
        className: "tw-group tw-w-full tw-justify-between",
        disabled: f,
        children: [
          /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-gap-2", children: [
            h && /* @__PURE__ */ p("div", { className: "tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50", children: /* @__PURE__ */ p("span", { className: "tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center", children: h }) }),
            /* @__PURE__ */ p("div", { className: "tw-font-normal", children: D() })
          ] }),
          /* @__PURE__ */ p(Bh, { className: "tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" })
        ]
      }
    ) }),
    /* @__PURE__ */ p(Yo, { align: "start", className: "tw-w-full tw-p-0", children: /* @__PURE__ */ j(ea, { children: [
      /* @__PURE__ */ p(xl, { placeholder: `Search ${r.toLowerCase()}...` }),
      i && /* @__PURE__ */ j("div", { className: "tw-flex tw-justify-between tw-border-b tw-p-2", children: [
        /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: N, children: o }),
        /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: L, children: s })
      ] }),
      /* @__PURE__ */ j(ta, { children: [
        /* @__PURE__ */ p(Tu, { children: a }),
        /* @__PURE__ */ p(Ao, { children: R.map((q) => /* @__PURE__ */ j(
          Xo,
          {
            value: q.label,
            onSelect: C,
            className: "tw-flex tw-items-center tw-gap-2",
            children: [
              /* @__PURE__ */ p("div", { className: "w-4", children: /* @__PURE__ */ p(
                xi,
                {
                  className: G(
                    "tw-h-4 tw-w-4",
                    e.includes(q.value) ? "tw-opacity-100" : "tw-opacity-0"
                  )
                }
              ) }),
              q.starred && /* @__PURE__ */ p(n1, { className: "tw-h-4 tw-w-4" }),
              /* @__PURE__ */ p("div", { className: "tw-flex-grow", children: q.label }),
              q.secondaryLabel && /* @__PURE__ */ p("div", { className: "tw-text-end tw-text-muted-foreground", children: q.secondaryLabel })
            ]
          },
          q.label
        )) })
      ] })
    ] }) })
  ] }) });
}
function $L({
  entries: t,
  selected: e,
  onChange: n,
  placeholder: r,
  commandEmptyMessage: i,
  customSelectedText: o,
  isDisabled: s,
  sortSelected: a,
  icon: l,
  className: c,
  badgesPlaceholder: u,
  id: f
}) {
  return /* @__PURE__ */ j("div", { id: f, className: "tw-flex tw-items-center tw-gap-2", children: [
    /* @__PURE__ */ p(
      MC,
      {
        entries: t,
        selected: e,
        onChange: n,
        placeholder: r,
        commandEmptyMessage: i,
        customSelectedText: o,
        isDisabled: s,
        sortSelected: a,
        icon: l,
        className: c
      }
    ),
    e.length > 0 ? /* @__PURE__ */ p("div", { className: "tw-flex tw-flex-wrap tw-items-center tw-gap-2", children: e.map((d) => {
      var h;
      return /* @__PURE__ */ j(Fc, { variant: "muted", className: "tw-flex tw-items-center tw-gap-1", children: [
        /* @__PURE__ */ p(
          Pe,
          {
            variant: "ghost",
            size: "icon",
            className: "tw-h-4 tw-w-4 tw-p-0 hover:tw-bg-transparent",
            onClick: () => n(e.filter((g) => g !== d)),
            children: /* @__PURE__ */ p(ku, { className: "tw-h-3 tw-w-3" })
          }
        ),
        (h = t.find((g) => g.value === d)) == null ? void 0 : h.label
      ] }, d);
    }) }) : /* @__PURE__ */ p(Vt, { children: u })
  ] });
}
var Ii = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function OC(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var Ue = {}, qt = {}, Gg;
function oa() {
  if (Gg) return qt;
  Gg = 1;
  function t(_, y, C) {
    if (C === void 0 && (C = Array.prototype), _ && typeof C.find == "function")
      return C.find.call(_, y);
    for (var D = 0; D < _.length; D++)
      if (n(_, D)) {
        var R = _[D];
        if (y.call(void 0, R, D, _))
          return R;
      }
  }
  function e(_, y) {
    return y === void 0 && (y = Object), y && typeof y.getOwnPropertyDescriptors == "function" && (_ = y.create(null, y.getOwnPropertyDescriptors(_))), y && typeof y.freeze == "function" ? y.freeze(_) : _;
  }
  function n(_, y) {
    return Object.prototype.hasOwnProperty.call(_, y);
  }
  function r(_, y) {
    if (_ === null || typeof _ != "object")
      throw new TypeError("target is not an object");
    for (var C in y)
      n(y, C) && (_[C] = y[C]);
    return _;
  }
  var i = e({
    allowfullscreen: !0,
    async: !0,
    autofocus: !0,
    autoplay: !0,
    checked: !0,
    controls: !0,
    default: !0,
    defer: !0,
    disabled: !0,
    formnovalidate: !0,
    hidden: !0,
    ismap: !0,
    itemscope: !0,
    loop: !0,
    multiple: !0,
    muted: !0,
    nomodule: !0,
    novalidate: !0,
    open: !0,
    playsinline: !0,
    readonly: !0,
    required: !0,
    reversed: !0,
    selected: !0
  });
  function o(_) {
    return n(i, _.toLowerCase());
  }
  var s = e({
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
  });
  function a(_) {
    return n(s, _.toLowerCase());
  }
  var l = e({
    script: !1,
    style: !1,
    textarea: !0,
    title: !0
  });
  function c(_) {
    var y = _.toLowerCase();
    return n(l, y) && !l[y];
  }
  function u(_) {
    var y = _.toLowerCase();
    return n(l, y) && l[y];
  }
  function f(_) {
    return _ === h.HTML;
  }
  function d(_) {
    return f(_) || _ === h.XML_XHTML_APPLICATION;
  }
  var h = e({
    /**
     * `text/html`, the only mime type that triggers treating an XML document as HTML.
     *
     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/HTML Wikipedia
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring
     *      WHATWG HTML Spec
     */
    HTML: "text/html",
    /**
     * `application/xml`, the standard mime type for XML documents.
     *
     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType
     *      registration
     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303
     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
     */
    XML_APPLICATION: "application/xml",
    /**
     * `text/xml`, an alias for `application/xml`.
     *
     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303
     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
     */
    XML_TEXT: "text/xml",
    /**
     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,
     * but is parsed as an XML document.
     *
     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType
     *      registration
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec
     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia
     */
    XML_XHTML_APPLICATION: "application/xhtml+xml",
    /**
     * `image/svg+xml`,
     *
     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration
     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1
     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia
     */
    XML_SVG_IMAGE: "image/svg+xml"
  }), g = Object.keys(h).map(function(_) {
    return h[_];
  });
  function m(_) {
    return g.indexOf(_) > -1;
  }
  var b = e({
    /**
     * The XHTML namespace.
     *
     * @see http://www.w3.org/1999/xhtml
     */
    HTML: "http://www.w3.org/1999/xhtml",
    /**
     * The SVG namespace.
     *
     * @see http://www.w3.org/2000/svg
     */
    SVG: "http://www.w3.org/2000/svg",
    /**
     * The `xml:` namespace.
     *
     * @see http://www.w3.org/XML/1998/namespace
     */
    XML: "http://www.w3.org/XML/1998/namespace",
    /**
     * The `xmlns:` namespace.
     *
     * @see https://www.w3.org/2000/xmlns/
     */
    XMLNS: "http://www.w3.org/2000/xmlns/"
  });
  return qt.assign = r, qt.find = t, qt.freeze = e, qt.HTML_BOOLEAN_ATTRIBUTES = i, qt.HTML_RAW_TEXT_ELEMENTS = l, qt.HTML_VOID_ELEMENTS = s, qt.hasDefaultHTMLNamespace = d, qt.hasOwn = n, qt.isHTMLBooleanAttribute = o, qt.isHTMLRawTextElement = c, qt.isHTMLEscapableRawTextElement = u, qt.isHTMLMimeType = f, qt.isHTMLVoidElement = a, qt.isValidMimeType = m, qt.MIME_TYPE = h, qt.NAMESPACE = b, qt;
}
var ds = {}, Jg;
function Ru() {
  if (Jg) return ds;
  Jg = 1;
  var t = oa();
  function e(d, h) {
    d.prototype = Object.create(Error.prototype, {
      constructor: { value: d },
      name: { value: d.name, enumerable: !0, writable: h }
    });
  }
  var n = t.freeze({
    /**
     * the default value as defined by the spec
     */
    Error: "Error",
    /**
     * @deprecated
     * Use RangeError instead.
     */
    IndexSizeError: "IndexSizeError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    DomstringSizeError: "DomstringSizeError",
    HierarchyRequestError: "HierarchyRequestError",
    WrongDocumentError: "WrongDocumentError",
    InvalidCharacterError: "InvalidCharacterError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    NoDataAllowedError: "NoDataAllowedError",
    NoModificationAllowedError: "NoModificationAllowedError",
    NotFoundError: "NotFoundError",
    NotSupportedError: "NotSupportedError",
    InUseAttributeError: "InUseAttributeError",
    InvalidStateError: "InvalidStateError",
    SyntaxError: "SyntaxError",
    InvalidModificationError: "InvalidModificationError",
    NamespaceError: "NamespaceError",
    /**
     * @deprecated
     * Use TypeError for invalid arguments,
     * "NotSupportedError" DOMException for unsupported operations,
     * and "NotAllowedError" DOMException for denied requests instead.
     */
    InvalidAccessError: "InvalidAccessError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    ValidationError: "ValidationError",
    /**
     * @deprecated
     * Use TypeError instead.
     */
    TypeMismatchError: "TypeMismatchError",
    SecurityError: "SecurityError",
    NetworkError: "NetworkError",
    AbortError: "AbortError",
    /**
     * @deprecated
     * Just to match the related static code, not part of the spec.
     */
    URLMismatchError: "URLMismatchError",
    QuotaExceededError: "QuotaExceededError",
    TimeoutError: "TimeoutError",
    InvalidNodeTypeError: "InvalidNodeTypeError",
    DataCloneError: "DataCloneError",
    EncodingError: "EncodingError",
    NotReadableError: "NotReadableError",
    UnknownError: "UnknownError",
    ConstraintError: "ConstraintError",
    DataError: "DataError",
    TransactionInactiveError: "TransactionInactiveError",
    ReadOnlyError: "ReadOnlyError",
    VersionError: "VersionError",
    OperationError: "OperationError",
    NotAllowedError: "NotAllowedError",
    OptOutError: "OptOutError"
  }), r = Object.keys(n);
  function i(d) {
    return typeof d == "number" && d >= 1 && d <= 25;
  }
  function o(d) {
    return typeof d == "string" && d.substring(d.length - n.Error.length) === n.Error;
  }
  function s(d, h) {
    i(d) ? (this.name = r[d], this.message = h || "") : (this.message = d, this.name = o(h) ? h : n.Error), Error.captureStackTrace && Error.captureStackTrace(this, s);
  }
  e(s, !0), Object.defineProperties(s.prototype, {
    code: {
      enumerable: !0,
      get: function() {
        var d = r.indexOf(this.name);
        return i(d) ? d : 0;
      }
    }
  });
  for (var a = {
    INDEX_SIZE_ERR: 1,
    DOMSTRING_SIZE_ERR: 2,
    HIERARCHY_REQUEST_ERR: 3,
    WRONG_DOCUMENT_ERR: 4,
    INVALID_CHARACTER_ERR: 5,
    NO_DATA_ALLOWED_ERR: 6,
    NO_MODIFICATION_ALLOWED_ERR: 7,
    NOT_FOUND_ERR: 8,
    NOT_SUPPORTED_ERR: 9,
    INUSE_ATTRIBUTE_ERR: 10,
    INVALID_STATE_ERR: 11,
    SYNTAX_ERR: 12,
    INVALID_MODIFICATION_ERR: 13,
    NAMESPACE_ERR: 14,
    INVALID_ACCESS_ERR: 15,
    VALIDATION_ERR: 16,
    TYPE_MISMATCH_ERR: 17,
    SECURITY_ERR: 18,
    NETWORK_ERR: 19,
    ABORT_ERR: 20,
    URL_MISMATCH_ERR: 21,
    QUOTA_EXCEEDED_ERR: 22,
    TIMEOUT_ERR: 23,
    INVALID_NODE_TYPE_ERR: 24,
    DATA_CLONE_ERR: 25
  }, l = Object.entries(a), c = 0; c < l.length; c++) {
    var u = l[c][0];
    s[u] = l[c][1];
  }
  function f(d, h) {
    this.message = d, this.locator = h, Error.captureStackTrace && Error.captureStackTrace(this, f);
  }
  return e(f), ds.DOMException = s, ds.DOMExceptionName = n, ds.ExceptionCode = a, ds.ParseError = f, ds;
}
var xt = {}, Oe = {}, Xg;
function jy() {
  if (Xg) return Oe;
  Xg = 1;
  function t(Ze) {
    try {
      typeof Ze != "function" && (Ze = RegExp);
      var bt = new Ze("𝌆", "u").exec("𝌆");
      return !!bt && bt[0].length === 2;
    } catch {
    }
    return !1;
  }
  var e = t();
  function n(Ze) {
    if (Ze.source[0] !== "[")
      throw new Error(Ze + " can not be used with chars");
    return Ze.source.slice(1, Ze.source.lastIndexOf("]"));
  }
  function r(Ze, bt) {
    if (Ze.source[0] !== "[")
      throw new Error("/" + Ze.source + "/ can not be used with chars_without");
    if (!bt || typeof bt != "string")
      throw new Error(JSON.stringify(bt) + " is not a valid search");
    if (Ze.source.indexOf(bt) === -1)
      throw new Error('"' + bt + '" is not is /' + Ze.source + "/");
    if (bt === "-" && Ze.source.indexOf(bt) !== 1)
      throw new Error('"' + bt + '" is not at the first postion of /' + Ze.source + "/");
    return new RegExp(Ze.source.replace(bt, ""), e ? "u" : "");
  }
  function i(Ze) {
    var bt = this;
    return new RegExp(
      Array.prototype.slice.call(arguments).map(function(gn) {
        var mn = typeof gn == "string";
        if (mn && bt === void 0 && gn === "|")
          throw new Error("use regg instead of reg to wrap expressions with `|`!");
        return mn ? gn : gn.source;
      }).join(""),
      e ? "mu" : "m"
    );
  }
  function o(Ze) {
    if (arguments.length === 0)
      throw new Error("no parameters provided");
    return i.apply(o, ["(?:"].concat(Array.prototype.slice.call(arguments), [")"]));
  }
  var s = "�", a = /[-\x09\x0A\x0D\x20-\x2C\x2E-\uD7FF\uE000-\uFFFD]/;
  e && (a = i("[", n(a), "\\u{10000}-\\u{10FFFF}", "]"));
  var l = /[\x20\x09\x0D\x0A]/, c = n(l), u = i(l, "+"), f = i(l, "*"), d = /[:_a-zA-Z\xC0-\xD6\xD8-\xF6\xF8-\u02FF\u0370-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
  e && (d = i("[", n(d), "\\u{10000}-\\u{10FFFF}", "]"));
  var h = n(d), g = i("[", h, n(/[-.0-9\xB7]/), n(/[\u0300-\u036F\u203F-\u2040]/), "]"), m = i(d, g, "*"), b = i(g, "+"), _ = i("&", m, ";"), y = o(/&#[0-9]+;|&#x[0-9a-fA-F]+;/), C = o(_, "|", y), D = i("%", m, ";"), R = o(
    i('"', o(/[^%&"]/, "|", D, "|", C), "*", '"'),
    "|",
    i("'", o(/[^%&']/, "|", D, "|", C), "*", "'")
  ), N = o('"', o(/[^<&"]/, "|", C), "*", '"', "|", "'", o(/[^<&']/, "|", C), "*", "'"), L = r(d, ":"), O = r(g, ":"), M = i(L, O, "*"), q = i(M, o(":", M), "?"), k = i("^", q, "$"), I = i("(", q, ")"), S = o(/"[^"]*"|'[^']*'/), P = i(/^<\?/, "(", m, ")", o(u, "(", a, "*?)"), "?", /\?>/), T = /[\x20\x0D\x0Aa-zA-Z0-9-'()+,./:=?;!*#@$_%]/, A = o('"', T, '*"', "|", "'", r(T, "'"), "*'"), B = "<!--", V = "-->", J = i(B, o(r(a, "-"), "|", i("-", r(a, "-"))), "*", V), H = "#PCDATA", K = o(
    i(/\(/, f, H, o(f, /\|/, f, q), "*", f, /\)\*/),
    "|",
    i(/\(/, f, H, f, /\)/)
  ), ne = /[?*+]?/, re = i(
    /\([^>]+\)/,
    ne
    /*regg(choice, '|', seq), _children_quantity*/
  ), te = o("EMPTY", "|", "ANY", "|", K, "|", re), Q = "<!ELEMENT", ce = i(Q, u, o(q, "|", D), u, o(te, "|", D), f, ">"), pe = i("NOTATION", u, /\(/, f, m, o(f, /\|/, f, m), "*", f, /\)/), me = i(/\(/, f, b, o(f, /\|/, f, b), "*", f, /\)/), ye = o(pe, "|", me), ve = o(/CDATA|ID|IDREF|IDREFS|ENTITY|ENTITIES|NMTOKEN|NMTOKENS/, "|", ye), Ee = o(/#REQUIRED|#IMPLIED/, "|", o(o("#FIXED", u), "?", N)), de = o(u, m, u, ve, u, Ee), Re = "<!ATTLIST", He = i(Re, u, m, de, "*", f, ">"), ae = "about:legacy-compat", Te = o('"' + ae + '"', "|", "'" + ae + "'"), Be = "SYSTEM", Ge = "PUBLIC", rt = o(o(Be, u, S), "|", o(Ge, u, A, u, S)), vt = i(
    "^",
    o(
      o(Be, u, "(?<SystemLiteralOnly>", S, ")"),
      "|",
      o(Ge, u, "(?<PubidLiteral>", A, ")", u, "(?<SystemLiteral>", S, ")")
    )
  ), wt = o(u, "NDATA", u, m), Et = o(R, "|", o(rt, wt, "?")), $e = "<!ENTITY", Dt = i($e, u, m, u, Et, f, ">"), ct = o(R, "|", rt), lr = i($e, u, "%", u, m, u, ct, f, ">"), Pn = o(Dt, "|", lr), kn = i(Ge, u, A), Ln = i("<!NOTATION", u, m, u, o(rt, "|", kn), f, ">"), Ce = i(f, "=", f), Qe = /1[.]\d+/, Mt = i(u, "version", Ce, o("'", Qe, "'", "|", '"', Qe, '"')), Bt = /[A-Za-z][-A-Za-z0-9._]*/, $n = o(u, "encoding", Ce, o('"', Bt, '"', "|", "'", Bt, "'")), Fn = o(u, "standalone", Ce, o("'", o("yes", "|", "no"), "'", "|", '"', o("yes", "|", "no"), '"')), cr = i(/^<\?xml/, Mt, $n, "?", Fn, "?", f, /\?>/), Bn = "<!DOCTYPE", qn = "<![CDATA[", Xt = "]]>", jn = /<!\[CDATA\[/, Un = /\]\]>/, En = i(a, "*?", Un), Dr = i(jn, En);
  return Oe.chars = n, Oe.chars_without = r, Oe.detectUnicodeSupport = t, Oe.reg = i, Oe.regg = o, Oe.ABOUT_LEGACY_COMPAT = ae, Oe.ABOUT_LEGACY_COMPAT_SystemLiteral = Te, Oe.AttlistDecl = He, Oe.CDATA_START = qn, Oe.CDATA_END = Xt, Oe.CDSect = Dr, Oe.Char = a, Oe.Comment = J, Oe.COMMENT_START = B, Oe.COMMENT_END = V, Oe.DOCTYPE_DECL_START = Bn, Oe.elementdecl = ce, Oe.EntityDecl = Pn, Oe.EntityValue = R, Oe.ExternalID = rt, Oe.ExternalID_match = vt, Oe.Name = m, Oe.NotationDecl = Ln, Oe.Reference = C, Oe.PEReference = D, Oe.PI = P, Oe.PUBLIC = Ge, Oe.PubidLiteral = A, Oe.QName = q, Oe.QName_exact = k, Oe.QName_group = I, Oe.S = u, Oe.SChar_s = c, Oe.S_OPT = f, Oe.SYSTEM = Be, Oe.SystemLiteral = S, Oe.UNICODE_REPLACEMENT_CHARACTER = s, Oe.UNICODE_SUPPORT = e, Oe.XMLDecl = cr, Oe;
}
var Yg;
function Uy() {
  if (Yg) return xt;
  Yg = 1;
  var t = oa(), e = t.find, n = t.hasDefaultHTMLNamespace, r = t.hasOwn, i = t.isHTMLMimeType, o = t.isHTMLRawTextElement, s = t.isHTMLVoidElement, a = t.MIME_TYPE, l = t.NAMESPACE, c = Symbol(), u = Ru(), f = u.DOMException, d = u.DOMExceptionName, h = jy();
  function g(v) {
    if (v !== c)
      throw new TypeError("Illegal constructor");
  }
  function m(v) {
    return v !== "";
  }
  function b(v) {
    return v ? v.split(/[\t\n\f\r ]+/).filter(m) : [];
  }
  function _(v, x) {
    return r(v, x) || (v[x] = !0), v;
  }
  function y(v) {
    if (!v) return [];
    var x = b(v);
    return Object.keys(x.reduce(_, {}));
  }
  function C(v) {
    return function(x) {
      return v && v.indexOf(x) !== -1;
    };
  }
  function D(v) {
    if (!h.QName_exact.test(v))
      throw new f(f.INVALID_CHARACTER_ERR, 'invalid character in qualified name "' + v + '"');
  }
  function R(v, x) {
    D(x), v = v || null;
    var $ = null, W = x;
    if (x.indexOf(":") >= 0) {
      var se = x.split(":");
      $ = se[0], W = se[1];
    }
    if ($ !== null && v === null)
      throw new f(f.NAMESPACE_ERR, "prefix is non-null and namespace is null");
    if ($ === "xml" && v !== t.NAMESPACE.XML)
      throw new f(f.NAMESPACE_ERR, 'prefix is "xml" and namespace is not the XML namespace');
    if (($ === "xmlns" || x === "xmlns") && v !== t.NAMESPACE.XMLNS)
      throw new f(
        f.NAMESPACE_ERR,
        'either qualifiedName or prefix is "xmlns" and namespace is not the XMLNS namespace'
      );
    if (v === t.NAMESPACE.XMLNS && $ !== "xmlns" && x !== "xmlns")
      throw new f(
        f.NAMESPACE_ERR,
        'namespace is the XMLNS namespace and neither qualifiedName nor prefix is "xmlns"'
      );
    return [v, $, W];
  }
  function N(v, x) {
    for (var $ in v)
      r(v, $) && (x[$] = v[$]);
  }
  function L(v, x) {
    var $ = v.prototype;
    if (!($ instanceof x)) {
      let W = function() {
      };
      W.prototype = x.prototype, W = new W(), N($, W), v.prototype = $ = W;
    }
    $.constructor != v && (typeof v != "function" && console.error("unknown Class:" + v), $.constructor = v);
  }
  var O = {}, M = O.ELEMENT_NODE = 1, q = O.ATTRIBUTE_NODE = 2, k = O.TEXT_NODE = 3, I = O.CDATA_SECTION_NODE = 4, S = O.ENTITY_REFERENCE_NODE = 5, P = O.ENTITY_NODE = 6, T = O.PROCESSING_INSTRUCTION_NODE = 7, A = O.COMMENT_NODE = 8, B = O.DOCUMENT_NODE = 9, V = O.DOCUMENT_TYPE_NODE = 10, J = O.DOCUMENT_FRAGMENT_NODE = 11, H = O.NOTATION_NODE = 12, K = t.freeze({
    DOCUMENT_POSITION_DISCONNECTED: 1,
    DOCUMENT_POSITION_PRECEDING: 2,
    DOCUMENT_POSITION_FOLLOWING: 4,
    DOCUMENT_POSITION_CONTAINS: 8,
    DOCUMENT_POSITION_CONTAINED_BY: 16,
    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 32
  });
  function ne(v, x) {
    if (x.length < v.length) return ne(x, v);
    var $ = null;
    for (var W in v) {
      if (v[W] !== x[W]) return $;
      $ = v[W];
    }
    return $;
  }
  function re(v) {
    return v.guid || (v.guid = Math.random()), v.guid;
  }
  function te() {
  }
  te.prototype = {
    /**
     * The number of nodes in the list. The range of valid child node indices is 0 to length-1
     * inclusive.
     *
     * @type {number}
     */
    length: 0,
    /**
     * Returns the item at `index`. If index is greater than or equal to the number of nodes in
     * the list, this returns null.
     *
     * @param index
     * Unsigned long Index into the collection.
     * @returns {Node | null}
     * The node at position `index` in the NodeList,
     * or null if that is not a valid index.
     */
    item: function(v) {
      return v >= 0 && v < this.length ? this[v] : null;
    },
    /**
     * Returns a string representation of the NodeList.
     *
     * @param {unknown} nodeFilter
     * __A filter function? Not implemented according to the spec?__.
     * @returns {string}
     * A string representation of the NodeList.
     */
    toString: function(v) {
      for (var x = [], $ = 0; $ < this.length; $++)
        mn(this[$], x, v);
      return x.join("");
    },
    /**
     * Filters the NodeList based on a predicate.
     *
     * @param {function(Node): boolean} predicate
     * - A predicate function to filter the NodeList.
     * @returns {Node[]}
     * An array of nodes that satisfy the predicate.
     * @private
     */
    filter: function(v) {
      return Array.prototype.filter.call(this, v);
    },
    /**
     * Returns the first index at which a given node can be found in the NodeList, or -1 if it is
     * not present.
     *
     * @param {Node} item
     * - The Node item to locate in the NodeList.
     * @returns {number}
     * The first index of the node in the NodeList; -1 if not found.
     * @private
     */
    indexOf: function(v) {
      return Array.prototype.indexOf.call(this, v);
    }
  }, te.prototype[Symbol.iterator] = function() {
    var v = this, x = 0;
    return {
      next: function() {
        return x < v.length ? {
          value: v[x++],
          done: !1
        } : {
          done: !0
        };
      },
      return: function() {
        return {
          done: !0
        };
      }
    };
  };
  function Q(v, x) {
    this._node = v, this._refresh = x, ce(this);
  }
  function ce(v) {
    var x = v._node._inc || v._node.ownerDocument._inc;
    if (v._inc !== x) {
      var $ = v._refresh(v._node);
      if (Qn(v, "length", $.length), !v.$$length || $.length < v.$$length)
        for (var W = $.length; W in v; W++)
          r(v, W) && delete v[W];
      N($, v), v._inc = x;
    }
  }
  Q.prototype.item = function(v) {
    return ce(this), this[v] || null;
  }, L(Q, te);
  function pe() {
  }
  function me(v, x) {
    for (var $ = 0; $ < v.length; ) {
      if (v[$] === x)
        return $;
      $++;
    }
  }
  function ye(v, x, $, W) {
    if (W ? x[me(x, W)] = $ : (x[x.length] = $, x.length++), v) {
      $.ownerElement = v;
      var se = v.ownerDocument;
      se && (W && Be(se, v, W), Te(se, v, $));
    }
  }
  function ve(v, x, $) {
    var W = me(x, $);
    if (W >= 0) {
      for (var se = x.length - 1; W <= se; )
        x[W] = x[++W];
      if (x.length = se, v) {
        var he = v.ownerDocument;
        he && Be(he, v, $), $.ownerElement = null;
      }
    }
  }
  pe.prototype = {
    length: 0,
    item: te.prototype.item,
    /**
     * Get an attribute by name. Note: Name is in lower case in case of HTML namespace and
     * document.
     *
     * @param {string} localName
     * The local name of the attribute.
     * @returns {Attr | null}
     * The attribute with the given local name, or null if no such attribute exists.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name
     */
    getNamedItem: function(v) {
      this._ownerElement && this._ownerElement._isInHTMLDocumentAndNamespace() && (v = v.toLowerCase());
      for (var x = 0; x < this.length; ) {
        var $ = this[x];
        if ($.nodeName === v)
          return $;
        x++;
      }
      return null;
    },
    /**
     * Set an attribute.
     *
     * @param {Attr} attr
     * The attribute to set.
     * @returns {Attr | null}
     * The old attribute with the same local name and namespace URI as the new one, or null if no
     * such attribute exists.
     * @throws {DOMException}
     * With code:
     * - {@link INUSE_ATTRIBUTE_ERR} - If the attribute is already an attribute of another
     * element.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-set
     */
    setNamedItem: function(v) {
      var x = v.ownerElement;
      if (x && x !== this._ownerElement)
        throw new f(f.INUSE_ATTRIBUTE_ERR);
      var $ = this.getNamedItemNS(v.namespaceURI, v.localName);
      return $ === v ? v : (ye(this._ownerElement, this, v, $), $);
    },
    /**
     * Set an attribute, replacing an existing attribute with the same local name and namespace
     * URI if one exists.
     *
     * @param {Attr} attr
     * The attribute to set.
     * @returns {Attr | null}
     * The old attribute with the same local name and namespace URI as the new one, or null if no
     * such attribute exists.
     * @throws {DOMException}
     * Throws a DOMException with the name "InUseAttributeError" if the attribute is already an
     * attribute of another element.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-set
     */
    setNamedItemNS: function(v) {
      return this.setNamedItem(v);
    },
    /**
     * Removes an attribute specified by the local name.
     *
     * @param {string} localName
     * The local name of the attribute to be removed.
     * @returns {Attr}
     * The attribute node that was removed.
     * @throws {DOMException}
     * With code:
     * - {@link DOMException.NOT_FOUND_ERR} if no attribute with the given name is found.
     * @see https://dom.spec.whatwg.org/#dom-namednodemap-removenameditem
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name
     */
    removeNamedItem: function(v) {
      var x = this.getNamedItem(v);
      if (!x)
        throw new f(f.NOT_FOUND_ERR, v);
      return ve(this._ownerElement, this, x), x;
    },
    /**
     * Removes an attribute specified by the namespace and local name.
     *
     * @param {string | null} namespaceURI
     * The namespace URI of the attribute to be removed.
     * @param {string} localName
     * The local name of the attribute to be removed.
     * @returns {Attr}
     * The attribute node that was removed.
     * @throws {DOMException}
     * With code:
     * - {@link DOMException.NOT_FOUND_ERR} if no attribute with the given namespace URI and local
     * name is found.
     * @see https://dom.spec.whatwg.org/#dom-namednodemap-removenameditemns
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace
     */
    removeNamedItemNS: function(v, x) {
      var $ = this.getNamedItemNS(v, x);
      if (!$)
        throw new f(f.NOT_FOUND_ERR, v ? v + " : " + x : x);
      return ve(this._ownerElement, this, $), $;
    },
    /**
     * Get an attribute by namespace and local name.
     *
     * @param {string | null} namespaceURI
     * The namespace URI of the attribute.
     * @param {string} localName
     * The local name of the attribute.
     * @returns {Attr | null}
     * The attribute with the given namespace URI and local name, or null if no such attribute
     * exists.
     * @see https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace
     */
    getNamedItemNS: function(v, x) {
      v || (v = null);
      for (var $ = 0; $ < this.length; ) {
        var W = this[$];
        if (W.localName === x && W.namespaceURI === v)
          return W;
        $++;
      }
      return null;
    }
  }, pe.prototype[Symbol.iterator] = function() {
    var v = this, x = 0;
    return {
      next: function() {
        return x < v.length ? {
          value: v[x++],
          done: !1
        } : {
          done: !0
        };
      },
      return: function() {
        return {
          done: !0
        };
      }
    };
  };
  function Ee() {
  }
  Ee.prototype = {
    /**
     * Test if the DOM implementation implements a specific feature and version, as specified in
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures DOM Features}.
     *
     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given
     * feature is supported. The different implementations fairly diverged in what kind of
     * features were reported. The latest version of the spec settled to force this method to
     * always return true, where the functionality was accurate and in use.
     *
     * @deprecated
     * It is deprecated and modern browsers return true in all cases.
     * @function DOMImplementation#hasFeature
     * @param {string} feature
     * The name of the feature to test.
     * @param {string} [version]
     * This is the version number of the feature to test.
     * @returns {boolean}
     * Always returns true.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN
     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5CED94D7 DOM Level 3 Core
     */
    hasFeature: function(v, x) {
      return !0;
    },
    /**
     * Creates a DOM Document object of the specified type with its document element. Note that
     * based on the {@link DocumentType}
     * given to create the document, the implementation may instantiate specialized
     * {@link Document} objects that support additional features than the "Core", such as "HTML"
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#DOM2HTML DOM Level 2 HTML}.
     * On the other hand, setting the {@link DocumentType} after the document was created makes
     * this very unlikely to happen. Alternatively, specialized {@link Document} creation methods,
     * such as createHTMLDocument
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#DOM2HTML DOM Level 2 HTML},
     * can be used to obtain specific types of {@link Document} objects.
     *
     * __It behaves slightly different from the description in the living standard__:
     * - There is no interface/class `XMLDocument`, it returns a `Document`
     * instance (with it's `type` set to `'xml'`).
     * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     *
     * @function DOMImplementation.createDocument
     * @param {string | null} namespaceURI
     * The
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-namespaceURI namespace URI}
     * of the document element to create or null.
     * @param {string | null} qualifiedName
     * The
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-qualifiedname qualified name}
     * of the document element to be created or null.
     * @param {DocumentType | null} [doctype=null]
     * The type of document to be created or null. When doctype is not null, its
     * {@link Node#ownerDocument} attribute is set to the document being created. Default is
     * `null`
     * @returns {Document}
     * A new {@link Document} object with its document element. If the NamespaceURI,
     * qualifiedName, and doctype are null, the returned {@link Document} is empty with no
     * document element.
     * @throws {DOMException}
     * With code:
     *
     * - `INVALID_CHARACTER_ERR`: Raised if the specified qualified name is not an XML name
     * according to {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#XML XML 1.0}.
     * - `NAMESPACE_ERR`: Raised if the qualifiedName is malformed, if the qualifiedName has a
     * prefix and the namespaceURI is null, or if the qualifiedName is null and the namespaceURI
     * is different from null, or if the qualifiedName has a prefix that is "xml" and the
     * namespaceURI is different from "{@link http://www.w3.org/XML/1998/namespace}"
     * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#Namespaces XML Namespaces},
     * or if the DOM implementation does not support the "XML" feature but a non-null namespace
     * URI was provided, since namespaces were defined by XML.
     * - `WRONG_DOCUMENT_ERR`: Raised if doctype has already been used with a different document
     * or was created from a different implementation.
     * - `NOT_SUPPORTED_ERR`: May be raised if the implementation does not support the feature
     * "XML" and the language exposed through the Document does not support XML Namespaces (such
     * as {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#HTML40 HTML 4.01}).
     * @since DOM Level 2.
     * @see {@link #createHTMLDocument}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument DOM Living Standard
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocument DOM
     *      Level 3 Core
     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM
     *      Level 2 Core (initial)
     */
    createDocument: function(v, x, $) {
      var W = a.XML_APPLICATION;
      v === l.HTML ? W = a.XML_XHTML_APPLICATION : v === l.SVG && (W = a.XML_SVG_IMAGE);
      var se = new ae(c, { contentType: W });
      if (se.implementation = this, se.childNodes = new te(), se.doctype = $ || null, $ && se.appendChild($), x) {
        var he = se.createElementNS(v, x);
        se.appendChild(he);
      }
      return se;
    },
    /**
     * Creates an empty DocumentType node. Entity declarations and notations are not made
     * available. Entity reference expansions and default attribute additions do not occur.
     *
     * **This behavior is slightly different from the one in the specs**:
     * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     * - `publicId` and `systemId` contain the raw data including any possible quotes,
     *   so they can always be serialized back to the original value
     * - `internalSubset` contains the raw string between `[` and `]` if present,
     *   but is not parsed or validated in any form.
     *
     * @function DOMImplementation#createDocumentType
     * @param {string} qualifiedName
     * The {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-qualifiedname qualified
     * name} of the document type to be created.
     * @param {string} [publicId]
     * The external subset public identifier.
     * @param {string} [systemId]
     * The external subset system identifier.
     * @param {string} [internalSubset]
     * the internal subset or an empty string if it is not present
     * @returns {DocumentType}
     * A new {@link DocumentType} node with {@link Node#ownerDocument} set to null.
     * @throws {DOMException}
     * With code:
     *
     * - `INVALID_CHARACTER_ERR`: Raised if the specified qualified name is not an XML name
     * according to {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#XML XML 1.0}.
     * - `NAMESPACE_ERR`: Raised if the qualifiedName is malformed.
     * - `NOT_SUPPORTED_ERR`: May be raised if the implementation does not support the feature
     * "XML" and the language exposed through the Document does not support XML Namespaces (such
     * as {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#HTML40 HTML 4.01}).
     * @since DOM Level 2.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType
     *      MDN
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living
     *      Standard
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-3-Core-DOM-createDocType DOM
     *      Level 3 Core
     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM
     *      Level 2 Core
     * @see https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#050
     * @see https://www.w3.org/TR/DOM-Level-2-Core/#core-ID-Core-DocType-internalSubset
     * @prettierignore
     */
    createDocumentType: function(v, x, $, W) {
      D(v);
      var se = new Bn(c);
      return se.name = v, se.nodeName = v, se.publicId = x || "", se.systemId = $ || "", se.internalSubset = W || "", se.childNodes = new te(), se;
    },
    /**
     * Returns an HTML document, that might already have a basic DOM structure.
     *
     * __It behaves slightly different from the description in the living standard__:
     * - If the first argument is `false` no initial nodes are added (steps 3-7 in the specs are
     * omitted)
     * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     *
     * @param {string | false} [title]
     * A string containing the title to give the new HTML document.
     * @returns {Document}
     * The HTML document.
     * @since WHATWG Living Standard.
     * @see {@link #createDocument}
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createhtmldocument
     * @see https://dom.spec.whatwg.org/#html-document
     */
    createHTMLDocument: function(v) {
      var x = new ae(c, { contentType: a.HTML });
      if (x.implementation = this, x.childNodes = new te(), v !== !1) {
        x.doctype = this.createDocumentType("html"), x.doctype.ownerDocument = x, x.appendChild(x.doctype);
        var $ = x.createElement("html");
        x.appendChild($);
        var W = x.createElement("head");
        if ($.appendChild(W), typeof v == "string") {
          var se = x.createElement("title");
          se.appendChild(x.createTextNode(v)), W.appendChild(se);
        }
        $.appendChild(x.createElement("body"));
      }
      return x;
    }
  };
  function de(v) {
    g(v);
  }
  de.prototype = {
    /**
     * The first child of this node.
     *
     * @type {Node | null}
     */
    firstChild: null,
    /**
     * The last child of this node.
     *
     * @type {Node | null}
     */
    lastChild: null,
    /**
     * The previous sibling of this node.
     *
     * @type {Node | null}
     */
    previousSibling: null,
    /**
     * The next sibling of this node.
     *
     * @type {Node | null}
     */
    nextSibling: null,
    /**
     * The parent node of this node.
     *
     * @type {Node | null}
     */
    parentNode: null,
    /**
     * The parent element of this node.
     *
     * @type {Element | null}
     */
    get parentElement() {
      return this.parentNode && this.parentNode.nodeType === this.ELEMENT_NODE ? this.parentNode : null;
    },
    /**
     * The child nodes of this node.
     *
     * @type {NodeList}
     */
    childNodes: null,
    /**
     * The document object associated with this node.
     *
     * @type {Document | null}
     */
    ownerDocument: null,
    /**
     * The value of this node.
     *
     * @type {string | null}
     */
    nodeValue: null,
    /**
     * The namespace URI of this node.
     *
     * @type {string | null}
     */
    namespaceURI: null,
    /**
     * The prefix of the namespace for this node.
     *
     * @type {string | null}
     */
    prefix: null,
    /**
     * The local part of the qualified name of this node.
     *
     * @type {string | null}
     */
    localName: null,
    /**
     * The baseURI is currently always `about:blank`,
     * since that's what happens when you create a document from scratch.
     *
     * @type {'about:blank'}
     */
    baseURI: "about:blank",
    /**
     * Is true if this node is part of a document.
     *
     * @type {boolean}
     */
    get isConnected() {
      var v = this.getRootNode();
      return v && v.nodeType === v.DOCUMENT_NODE;
    },
    /**
     * Checks whether `other` is an inclusive descendant of this node.
     *
     * @param {Node | null | undefined} other
     * The node to check.
     * @returns {boolean}
     * True if `other` is an inclusive descendant of this node; false otherwise.
     * @see https://dom.spec.whatwg.org/#dom-node-contains
     */
    contains: function(v) {
      if (!v) return !1;
      var x = v;
      do {
        if (this === x) return !0;
        x = v.parentNode;
      } while (x);
      return !1;
    },
    /**
     * @typedef GetRootNodeOptions
     * @property {boolean} [composed=false]
     */
    /**
     * Searches for the root node of this node.
     *
     * **This behavior is slightly different from the in the specs**:
     * - ignores `options.composed`, since `ShadowRoot`s are unsupported, always returns root.
     *
     * @param {GetRootNodeOptions} [options]
     * @returns {Node}
     * Root node.
     * @see https://dom.spec.whatwg.org/#dom-node-getrootnode
     * @see https://dom.spec.whatwg.org/#concept-shadow-including-root
     */
    getRootNode: function(v) {
      var x = this;
      do {
        if (!x.parentNode)
          return x;
        x = x.parentNode;
      } while (x);
    },
    /**
     * Checks whether the given node is equal to this node.
     *
     * @param {Node} [otherNode]
     * @see https://dom.spec.whatwg.org/#concept-node-equals
     */
    isEqualNode: function(v) {
      if (!v || this.nodeType !== v.nodeType) return !1;
      switch (this.nodeType) {
        case this.DOCUMENT_TYPE_NODE:
          if (this.name !== v.name || this.publicId !== v.publicId || this.systemId !== v.systemId) return !1;
          break;
        case this.ELEMENT_NODE:
          if (this.namespaceURI !== v.namespaceURI || this.prefix !== v.prefix || this.localName !== v.localName || this.attributes.length !== v.attributes.length) return !1;
          for (var x = 0; x < this.attributes.length; x++) {
            var $ = this.attributes.item(x);
            if (!$.isEqualNode(v.getAttributeNodeNS($.namespaceURI, $.localName)))
              return !1;
          }
          break;
        case this.ATTRIBUTE_NODE:
          if (this.namespaceURI !== v.namespaceURI || this.localName !== v.localName || this.value !== v.value) return !1;
          break;
        case this.PROCESSING_INSTRUCTION_NODE:
          if (this.target !== v.target || this.data !== v.data)
            return !1;
          break;
        case this.TEXT_NODE:
        case this.COMMENT_NODE:
          if (this.data !== v.data) return !1;
          break;
      }
      if (this.childNodes.length !== v.childNodes.length)
        return !1;
      for (var x = 0; x < this.childNodes.length; x++)
        if (!this.childNodes[x].isEqualNode(v.childNodes[x]))
          return !1;
      return !0;
    },
    /**
     * Checks whether or not the given node is this node.
     *
     * @param {Node} [otherNode]
     */
    isSameNode: function(v) {
      return this === v;
    },
    /**
     * Inserts a node before a reference node as a child of this node.
     *
     * @param {Node} newChild
     * The new child node to be inserted.
     * @param {Node | null} refChild
     * The reference node before which newChild will be inserted.
     * @returns {Node}
     * The new child node successfully inserted.
     * @throws {DOMException}
     * Throws a DOMException if inserting the node would result in a DOM tree that is not
     * well-formed, or if `child` is provided but is not a child of `parent`.
     * See {@link _insertBefore} for more details.
     * @since Modified in DOM L2
     */
    insertBefore: function(v, x) {
      return Ce(this, v, x);
    },
    /**
     * Replaces an old child node with a new child node within this node.
     *
     * @param {Node} newChild
     * The new node that is to replace the old node.
     * If it already exists in the DOM, it is removed from its original position.
     * @param {Node} oldChild
     * The existing child node to be replaced.
     * @returns {Node}
     * Returns the replaced child node.
     * @throws {DOMException}
     * Throws a DOMException if replacing the node would result in a DOM tree that is not
     * well-formed, or if `oldChild` is not a child of `this`.
     * This can also occur if the pre-replacement validity assertion fails.
     * See {@link _insertBefore}, {@link Node.removeChild}, and
     * {@link assertPreReplacementValidityInDocument} for more details.
     * @see https://dom.spec.whatwg.org/#concept-node-replace
     */
    replaceChild: function(v, x) {
      Ce(this, v, x, Ln), x && this.removeChild(x);
    },
    /**
     * Removes an existing child node from this node.
     *
     * @param {Node} oldChild
     * The child node to be removed.
     * @returns {Node}
     * Returns the removed child node.
     * @throws {DOMException}
     * Throws a DOMException if `oldChild` is not a child of `this`.
     * See {@link _removeChild} for more details.
     */
    removeChild: function(v) {
      return rt(this, v);
    },
    /**
     * Appends a child node to this node.
     *
     * @param {Node} newChild
     * The child node to be appended to this node.
     * If it already exists in the DOM, it is removed from its original position.
     * @returns {Node}
     * Returns the appended child node.
     * @throws {DOMException}
     * Throws a DOMException if appending the node would result in a DOM tree that is not
     * well-formed, or if `newChild` is not a valid Node.
     * See {@link insertBefore} for more details.
     */
    appendChild: function(v) {
      return this.insertBefore(v, null);
    },
    /**
     * Determines whether this node has any child nodes.
     *
     * @returns {boolean}
     * Returns true if this node has any child nodes, and false otherwise.
     */
    hasChildNodes: function() {
      return this.firstChild != null;
    },
    /**
     * Creates a copy of the calling node.
     *
     * @param {boolean} deep
     * If true, the contents of the node are recursively copied.
     * If false, only the node itself (and its attributes, if it is an element) are copied.
     * @returns {Node}
     * Returns the newly created copy of the node.
     * @throws {DOMException}
     * May throw a DOMException if operations within {@link Element#setAttributeNode} or
     * {@link Node#appendChild} (which are potentially invoked in this method) do not meet their
     * specific constraints.
     * @see {@link cloneNode}
     */
    cloneNode: function(v) {
      return Ti(this.ownerDocument || this, this, v);
    },
    /**
     * Puts the specified node and all of its subtree into a "normalized" form. In a normalized
     * subtree, no text nodes in the subtree are empty and there are no adjacent text nodes.
     *
     * Specifically, this method merges any adjacent text nodes (i.e., nodes for which `nodeType`
     * is `TEXT_NODE`) into a single node with the combined data. It also removes any empty text
     * nodes.
     *
     * This method operates recursively, so it also normalizes any and all descendent nodes within
     * the subtree.
     *
     * @throws {DOMException}
     * May throw a DOMException if operations within removeChild or appendData (which are
     * potentially invoked in this method) do not meet their specific constraints.
     * @since Modified in DOM Level 2
     * @see {@link Node.removeChild}
     * @see {@link CharacterData.appendData}
     */
    normalize: function() {
      for (var v = this.firstChild; v; ) {
        var x = v.nextSibling;
        x && x.nodeType == k && v.nodeType == k ? (this.removeChild(x), v.appendData(x.data)) : (v.normalize(), v = x);
      }
    },
    /**
     * Checks whether the DOM implementation implements a specific feature and its version.
     *
     * @deprecated
     * Since `DOMImplementation.hasFeature` is deprecated and always returns true.
     * @param {string} feature
     * The package name of the feature to test. This is the same name that can be passed to the
     * method `hasFeature` on `DOMImplementation`.
     * @param {string} version
     * This is the version number of the package name to test.
     * @returns {boolean}
     * Returns true in all cases in the current implementation.
     * @since Introduced in DOM Level 2
     * @see {@link DOMImplementation.hasFeature}
     */
    isSupported: function(v, x) {
      return this.ownerDocument.implementation.hasFeature(v, x);
    },
    /**
     * Look up the prefix associated to the given namespace URI, starting from this node.
     * **The default namespace declarations are ignored by this method.**
     * See Namespace Prefix Lookup for details on the algorithm used by this method.
     *
     * **This behavior is different from the in the specs**:
     * - no node type specific handling
     * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes
     *
     * @param {string | null} namespaceURI
     * The namespace URI for which to find the associated prefix.
     * @returns {string | null}
     * The associated prefix, if found; otherwise, null.
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix
     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo
     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix
     * @see https://github.com/xmldom/xmldom/issues/322
     * @prettierignore
     */
    lookupPrefix: function(v) {
      for (var x = this; x; ) {
        var $ = x._nsMap;
        if ($) {
          for (var W in $)
            if (r($, W) && $[W] === v)
              return W;
        }
        x = x.nodeType == q ? x.ownerDocument : x.parentNode;
      }
      return null;
    },
    /**
     * This function is used to look up the namespace URI associated with the given prefix,
     * starting from this node.
     *
     * **This behavior is different from the in the specs**:
     * - no node type specific handling
     * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes
     *
     * @param {string | null} prefix
     * The prefix for which to find the associated namespace URI.
     * @returns {string | null}
     * The associated namespace URI, if found; otherwise, null.
     * @since DOM Level 3
     * @see https://dom.spec.whatwg.org/#dom-node-lookupnamespaceuri
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI
     * @prettierignore
     */
    lookupNamespaceURI: function(v) {
      for (var x = this; x; ) {
        var $ = x._nsMap;
        if ($ && r($, v))
          return $[v];
        x = x.nodeType == q ? x.ownerDocument : x.parentNode;
      }
      return null;
    },
    /**
     * Determines whether the given namespace URI is the default namespace.
     *
     * The function works by looking up the prefix associated with the given namespace URI. If no
     * prefix is found (i.e., the namespace URI is not registered in the namespace map of this
     * node or any of its ancestors), it returns `true`, implying the namespace URI is considered
     * the default.
     *
     * **This behavior is different from the in the specs**:
     * - no node type specific handling
     * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes
     *
     * @param {string | null} namespaceURI
     * The namespace URI to be checked.
     * @returns {boolean}
     * Returns true if the given namespace URI is the default namespace, false otherwise.
     * @since DOM Level 3
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace
     * @see https://dom.spec.whatwg.org/#dom-node-isdefaultnamespace
     * @prettierignore
     */
    isDefaultNamespace: function(v) {
      var x = this.lookupPrefix(v);
      return x == null;
    },
    /**
     * Compares the reference node with a node with regard to their position in the document and
     * according to the document order.
     *
     * @param {Node} other
     * The node to compare the reference node to.
     * @returns {number}
     * Returns how the node is positioned relatively to the reference node according to the
     * bitmask. 0 if reference node and given node are the same.
     * @since DOM Level 3
     * @see https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-compare
     * @see https://dom.spec.whatwg.org/#dom-node-comparedocumentposition
     */
    compareDocumentPosition: function(v) {
      if (this === v) return 0;
      var x = v, $ = this, W = null, se = null;
      if (x instanceof Mt && (W = x, x = W.ownerElement), $ instanceof Mt && (se = $, $ = se.ownerElement, W && x && $ === x))
        for (var he = 0, Fe; Fe = $.attributes[he]; he++) {
          if (Fe === W)
            return K.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + K.DOCUMENT_POSITION_PRECEDING;
          if (Fe === se)
            return K.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + K.DOCUMENT_POSITION_FOLLOWING;
        }
      if (!x || !$ || $.ownerDocument !== x.ownerDocument)
        return K.DOCUMENT_POSITION_DISCONNECTED + K.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + (re($.ownerDocument) > re(x.ownerDocument) ? K.DOCUMENT_POSITION_FOLLOWING : K.DOCUMENT_POSITION_PRECEDING);
      if (se && x === $)
        return K.DOCUMENT_POSITION_CONTAINS + K.DOCUMENT_POSITION_PRECEDING;
      if (W && x === $)
        return K.DOCUMENT_POSITION_CONTAINED_BY + K.DOCUMENT_POSITION_FOLLOWING;
      for (var _t = [], Nt = x.parentNode; Nt; ) {
        if (!se && Nt === $)
          return K.DOCUMENT_POSITION_CONTAINED_BY + K.DOCUMENT_POSITION_FOLLOWING;
        _t.push(Nt), Nt = Nt.parentNode;
      }
      _t.reverse();
      for (var Yt = [], Ot = $.parentNode; Ot; ) {
        if (!W && Ot === x)
          return K.DOCUMENT_POSITION_CONTAINS + K.DOCUMENT_POSITION_PRECEDING;
        Yt.push(Ot), Ot = Ot.parentNode;
      }
      Yt.reverse();
      var gt = ne(_t, Yt);
      for (var zn in gt.childNodes) {
        var an = gt.childNodes[zn];
        if (an === $) return K.DOCUMENT_POSITION_FOLLOWING;
        if (an === x) return K.DOCUMENT_POSITION_PRECEDING;
        if (Yt.indexOf(an) >= 0) return K.DOCUMENT_POSITION_FOLLOWING;
        if (_t.indexOf(an) >= 0) return K.DOCUMENT_POSITION_PRECEDING;
      }
      return 0;
    }
  };
  function Re(v) {
    return v == "<" && "&lt;" || v == ">" && "&gt;" || v == "&" && "&amp;" || v == '"' && "&quot;" || "&#" + v.charCodeAt() + ";";
  }
  N(O, de), N(O, de.prototype), N(K, de), N(K, de.prototype);
  function He(v, x) {
    if (x(v))
      return !0;
    if (v = v.firstChild)
      do
        if (He(v, x))
          return !0;
      while (v = v.nextSibling);
  }
  function ae(v, x) {
    g(v);
    var $ = x || {};
    this.ownerDocument = this, this.contentType = $.contentType || a.XML_APPLICATION, this.type = i(this.contentType) ? "html" : "xml";
  }
  function Te(v, x, $) {
    v && v._inc++;
    var W = $.namespaceURI;
    W === l.XMLNS && (x._nsMap[$.prefix ? $.localName : ""] = $.value);
  }
  function Be(v, x, $, W) {
    v && v._inc++;
    var se = $.namespaceURI;
    se === l.XMLNS && delete x._nsMap[$.prefix ? $.localName : ""];
  }
  function Ge(v, x, $) {
    if (v && v._inc) {
      v._inc++;
      var W = x.childNodes;
      if ($ && !$.nextSibling)
        W[W.length++] = $;
      else {
        for (var se = x.firstChild, he = 0; se; )
          W[he++] = se, se = se.nextSibling;
        W.length = he, delete W[W.length];
      }
    }
  }
  function rt(v, x) {
    if (v !== x.parentNode)
      throw new f(f.NOT_FOUND_ERR, "child's parent is not parent");
    var $ = x.previousSibling, W = x.nextSibling;
    return $ ? $.nextSibling = W : v.firstChild = W, W ? W.previousSibling = $ : v.lastChild = $, Ge(v.ownerDocument, v), x.parentNode = null, x.previousSibling = null, x.nextSibling = null, x;
  }
  function vt(v) {
    return v && (v.nodeType === de.DOCUMENT_NODE || v.nodeType === de.DOCUMENT_FRAGMENT_NODE || v.nodeType === de.ELEMENT_NODE);
  }
  function wt(v) {
    return v && (v.nodeType === de.CDATA_SECTION_NODE || v.nodeType === de.COMMENT_NODE || v.nodeType === de.DOCUMENT_FRAGMENT_NODE || v.nodeType === de.DOCUMENT_TYPE_NODE || v.nodeType === de.ELEMENT_NODE || v.nodeType === de.PROCESSING_INSTRUCTION_NODE || v.nodeType === de.TEXT_NODE);
  }
  function Et(v) {
    return v && v.nodeType === de.DOCUMENT_TYPE_NODE;
  }
  function $e(v) {
    return v && v.nodeType === de.ELEMENT_NODE;
  }
  function Dt(v) {
    return v && v.nodeType === de.TEXT_NODE;
  }
  function ct(v, x) {
    var $ = v.childNodes || [];
    if (e($, $e) || Et(x))
      return !1;
    var W = e($, Et);
    return !(x && W && $.indexOf(W) > $.indexOf(x));
  }
  function lr(v, x) {
    var $ = v.childNodes || [];
    function W(he) {
      return $e(he) && he !== x;
    }
    if (e($, W))
      return !1;
    var se = e($, Et);
    return !(x && se && $.indexOf(se) > $.indexOf(x));
  }
  function Pn(v, x, $) {
    if (!vt(v))
      throw new f(f.HIERARCHY_REQUEST_ERR, "Unexpected parent node type " + v.nodeType);
    if ($ && $.parentNode !== v)
      throw new f(f.NOT_FOUND_ERR, "child not in parent");
    if (
      // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a "HierarchyRequestError" DOMException.
      !wt(x) || // 5. If either `node` is a Text node and `parent` is a document,
      // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0
      // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)
      // or `node` is a doctype and `parent` is not a document, then throw a "HierarchyRequestError" DOMException.
      Et(x) && v.nodeType !== de.DOCUMENT_NODE
    )
      throw new f(
        f.HIERARCHY_REQUEST_ERR,
        "Unexpected node type " + x.nodeType + " for parent node type " + v.nodeType
      );
  }
  function kn(v, x, $) {
    var W = v.childNodes || [], se = x.childNodes || [];
    if (x.nodeType === de.DOCUMENT_FRAGMENT_NODE) {
      var he = se.filter($e);
      if (he.length > 1 || e(se, Dt))
        throw new f(f.HIERARCHY_REQUEST_ERR, "More than one element or text in fragment");
      if (he.length === 1 && !ct(v, $))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Element in fragment can not be inserted before doctype");
    }
    if ($e(x) && !ct(v, $))
      throw new f(f.HIERARCHY_REQUEST_ERR, "Only one element can be added and only after doctype");
    if (Et(x)) {
      if (e(W, Et))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Only one doctype is allowed");
      var Fe = e(W, $e);
      if ($ && W.indexOf(Fe) < W.indexOf($))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Doctype can only be inserted before an element");
      if (!$ && Fe)
        throw new f(f.HIERARCHY_REQUEST_ERR, "Doctype can not be appended since element is present");
    }
  }
  function Ln(v, x, $) {
    var W = v.childNodes || [], se = x.childNodes || [];
    if (x.nodeType === de.DOCUMENT_FRAGMENT_NODE) {
      var he = se.filter($e);
      if (he.length > 1 || e(se, Dt))
        throw new f(f.HIERARCHY_REQUEST_ERR, "More than one element or text in fragment");
      if (he.length === 1 && !lr(v, $))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Element in fragment can not be inserted before doctype");
    }
    if ($e(x) && !lr(v, $))
      throw new f(f.HIERARCHY_REQUEST_ERR, "Only one element can be added and only after doctype");
    if (Et(x)) {
      if (e(W, function(Nt) {
        return Et(Nt) && Nt !== $;
      }))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Only one doctype is allowed");
      var Fe = e(W, $e);
      if ($ && W.indexOf(Fe) < W.indexOf($))
        throw new f(f.HIERARCHY_REQUEST_ERR, "Doctype can only be inserted before an element");
    }
  }
  function Ce(v, x, $, W) {
    Pn(v, x, $), v.nodeType === de.DOCUMENT_NODE && (W || kn)(v, x, $);
    var se = x.parentNode;
    if (se && se.removeChild(x), x.nodeType === J) {
      var he = x.firstChild;
      if (he == null)
        return x;
      var Fe = x.lastChild;
    } else
      he = Fe = x;
    var _t = $ ? $.previousSibling : v.lastChild;
    he.previousSibling = _t, Fe.nextSibling = $, _t ? _t.nextSibling = he : v.firstChild = he, $ == null ? v.lastChild = Fe : $.previousSibling = Fe;
    do
      he.parentNode = v;
    while (he !== Fe && (he = he.nextSibling));
    return Ge(v.ownerDocument || v, v, x), x.nodeType == J && (x.firstChild = x.lastChild = null), x;
  }
  ae.prototype = {
    /**
     * The implementation that created this document.
     *
     * @type DOMImplementation
     * @readonly
     */
    implementation: null,
    nodeName: "#document",
    nodeType: B,
    /**
     * The DocumentType node of the document.
     *
     * @type DocumentType
     * @readonly
     */
    doctype: null,
    documentElement: null,
    _inc: 1,
    insertBefore: function(v, x) {
      if (v.nodeType === J) {
        for (var $ = v.firstChild; $; ) {
          var W = $.nextSibling;
          this.insertBefore($, x), $ = W;
        }
        return v;
      }
      return Ce(this, v, x), v.ownerDocument = this, this.documentElement === null && v.nodeType === M && (this.documentElement = v), v;
    },
    removeChild: function(v) {
      var x = rt(this, v);
      return x === this.documentElement && (this.documentElement = null), x;
    },
    replaceChild: function(v, x) {
      Ce(this, v, x, Ln), v.ownerDocument = this, x && this.removeChild(x), $e(v) && (this.documentElement = v);
    },
    // Introduced in DOM Level 2:
    importNode: function(v, x) {
      return ur(this, v, x);
    },
    // Introduced in DOM Level 2:
    getElementById: function(v) {
      var x = null;
      return He(this.documentElement, function($) {
        if ($.nodeType == M && $.getAttribute("id") == v)
          return x = $, !0;
      }), x;
    },
    /**
     * Creates a new `Element` that is owned by this `Document`.
     * In HTML Documents `localName` is the lower cased `tagName`,
     * otherwise no transformation is being applied.
     * When `contentType` implies the HTML namespace, it will be set as `namespaceURI`.
     *
     * __This implementation differs from the specification:__ - The provided name is not checked
     * against the `Name` production,
     * so no related error will be thrown.
     * - There is no interface `HTMLElement`, it is always an `Element`.
     * - There is no support for a second argument to indicate using custom elements.
     *
     * @param {string} tagName
     * @returns {Element}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement
     * @see https://dom.spec.whatwg.org/#dom-document-createelement
     * @see https://dom.spec.whatwg.org/#concept-create-element
     */
    createElement: function(v) {
      var x = new Qe(c);
      x.ownerDocument = this, this.type === "html" && (v = v.toLowerCase()), n(this.contentType) && (x.namespaceURI = l.HTML), x.nodeName = v, x.tagName = v, x.localName = v, x.childNodes = new te();
      var $ = x.attributes = new pe();
      return $._ownerElement = x, x;
    },
    /**
     * @returns {DocumentFragment}
     */
    createDocumentFragment: function() {
      var v = new Un(c);
      return v.ownerDocument = this, v.childNodes = new te(), v;
    },
    /**
     * @param {string} data
     * @returns {Text}
     */
    createTextNode: function(v) {
      var x = new $n(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.appendData(v), x;
    },
    /**
     * @param {string} data
     * @returns {Comment}
     */
    createComment: function(v) {
      var x = new Fn(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.appendData(v), x;
    },
    /**
     * @param {string} data
     * @returns {CDATASection}
     */
    createCDATASection: function(v) {
      var x = new cr(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.appendData(v), x;
    },
    /**
     * @param {string} target
     * @param {string} data
     * @returns {ProcessingInstruction}
     */
    createProcessingInstruction: function(v, x) {
      var $ = new En(c);
      return $.ownerDocument = this, $.childNodes = new te(), $.nodeName = $.target = v, $.nodeValue = $.data = x, $;
    },
    /**
     * Creates an `Attr` node that is owned by this document.
     * In HTML Documents `localName` is the lower cased `name`,
     * otherwise no transformation is being applied.
     *
     * __This implementation differs from the specification:__ - The provided name is not checked
     * against the `Name` production,
     * so no related error will be thrown.
     *
     * @param {string} name
     * @returns {Attr}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createAttribute
     * @see https://dom.spec.whatwg.org/#dom-document-createattribute
     */
    createAttribute: function(v) {
      if (!h.QName_exact.test(v))
        throw new f(f.INVALID_CHARACTER_ERR, 'invalid character in name "' + v + '"');
      return this.type === "html" && (v = v.toLowerCase()), this._createAttribute(v);
    },
    _createAttribute: function(v) {
      var x = new Mt(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.name = v, x.nodeName = v, x.localName = v, x.specified = !0, x;
    },
    /**
     * Creates an EntityReference object.
     * The current implementation does not fill the `childNodes` with those of the corresponding
     * `Entity`
     *
     * @deprecated
     * In DOM Level 4.
     * @param {string} name
     * The name of the entity to reference. No namespace well-formedness checks are performed.
     * @returns {EntityReference}
     * @throws {DOMException}
     * With code `INVALID_CHARACTER_ERR` when `name` is not valid.
     * @throws {DOMException}
     * with code `NOT_SUPPORTED_ERR` when the document is of type `html`
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-392B75AE
     */
    createEntityReference: function(v) {
      if (!h.Name.test(v))
        throw new f(f.INVALID_CHARACTER_ERR, 'not a valid xml name "' + v + '"');
      if (this.type === "html")
        throw new f("document is an html document", d.NotSupportedError);
      var x = new jn(c);
      return x.ownerDocument = this, x.childNodes = new te(), x.nodeName = v, x;
    },
    // Introduced in DOM Level 2:
    /**
     * @param {string} namespaceURI
     * @param {string} qualifiedName
     * @returns {Element}
     */
    createElementNS: function(v, x) {
      var $ = R(v, x), W = new Qe(c), se = W.attributes = new pe();
      return W.childNodes = new te(), W.ownerDocument = this, W.nodeName = x, W.tagName = x, W.namespaceURI = $[0], W.prefix = $[1], W.localName = $[2], se._ownerElement = W, W;
    },
    // Introduced in DOM Level 2:
    /**
     * @param {string} namespaceURI
     * @param {string} qualifiedName
     * @returns {Attr}
     */
    createAttributeNS: function(v, x) {
      var $ = R(v, x), W = new Mt(c);
      return W.ownerDocument = this, W.childNodes = new te(), W.nodeName = x, W.name = x, W.specified = !0, W.namespaceURI = $[0], W.prefix = $[1], W.localName = $[2], W;
    }
  }, L(ae, de);
  function Qe(v) {
    g(v), this._nsMap = /* @__PURE__ */ Object.create(null);
  }
  Qe.prototype = {
    nodeType: M,
    /**
     * The attributes of this element.
     *
     * @type {NamedNodeMap | null}
     */
    attributes: null,
    getQualifiedName: function() {
      return this.prefix ? this.prefix + ":" + this.localName : this.localName;
    },
    _isInHTMLDocumentAndNamespace: function() {
      return this.ownerDocument.type === "html" && this.namespaceURI === l.HTML;
    },
    /**
     * Implementaton of Level2 Core function hasAttributes.
     *
     * @returns {boolean}
     * True if attribute list is not empty.
     * @see https://www.w3.org/TR/DOM-Level-2-Core/#core-ID-NodeHasAttrs
     */
    hasAttributes: function() {
      return !!(this.attributes && this.attributes.length);
    },
    hasAttribute: function(v) {
      return !!this.getAttributeNode(v);
    },
    /**
     * Returns element’s first attribute whose qualified name is `name`, and `null`
     * if there is no such attribute.
     *
     * @param {string} name
     * @returns {string | null}
     */
    getAttribute: function(v) {
      var x = this.getAttributeNode(v);
      return x ? x.value : null;
    },
    getAttributeNode: function(v) {
      return this._isInHTMLDocumentAndNamespace() && (v = v.toLowerCase()), this.attributes.getNamedItem(v);
    },
    /**
     * Sets the value of element’s first attribute whose qualified name is qualifiedName to value.
     *
     * @param {string} name
     * @param {string} value
     */
    setAttribute: function(v, x) {
      this._isInHTMLDocumentAndNamespace() && (v = v.toLowerCase());
      var $ = this.getAttributeNode(v);
      $ ? $.value = $.nodeValue = "" + x : ($ = this.ownerDocument._createAttribute(v), $.value = $.nodeValue = "" + x, this.setAttributeNode($));
    },
    removeAttribute: function(v) {
      var x = this.getAttributeNode(v);
      x && this.removeAttributeNode(x);
    },
    setAttributeNode: function(v) {
      return this.attributes.setNamedItem(v);
    },
    setAttributeNodeNS: function(v) {
      return this.attributes.setNamedItemNS(v);
    },
    removeAttributeNode: function(v) {
      return this.attributes.removeNamedItem(v.nodeName);
    },
    //get real attribute name,and remove it by removeAttributeNode
    removeAttributeNS: function(v, x) {
      var $ = this.getAttributeNodeNS(v, x);
      $ && this.removeAttributeNode($);
    },
    hasAttributeNS: function(v, x) {
      return this.getAttributeNodeNS(v, x) != null;
    },
    /**
     * Returns element’s attribute whose namespace is `namespaceURI` and local name is
     * `localName`,
     * or `null` if there is no such attribute.
     *
     * @param {string} namespaceURI
     * @param {string} localName
     * @returns {string | null}
     */
    getAttributeNS: function(v, x) {
      var $ = this.getAttributeNodeNS(v, x);
      return $ ? $.value : null;
    },
    /**
     * Sets the value of element’s attribute whose namespace is `namespaceURI` and local name is
     * `localName` to value.
     *
     * @param {string} namespaceURI
     * @param {string} qualifiedName
     * @param {string} value
     * @see https://dom.spec.whatwg.org/#dom-element-setattributens
     */
    setAttributeNS: function(v, x, $) {
      var W = R(v, x), se = W[2], he = this.getAttributeNodeNS(v, se);
      he ? he.value = he.nodeValue = "" + $ : (he = this.ownerDocument.createAttributeNS(v, x), he.value = he.nodeValue = "" + $, this.setAttributeNode(he));
    },
    getAttributeNodeNS: function(v, x) {
      return this.attributes.getNamedItemNS(v, x);
    },
    /**
     * Returns a LiveNodeList of all child elements which have **all** of the given class name(s).
     *
     * Returns an empty list if `classNames` is an empty string or only contains HTML white space
     * characters.
     *
     * Warning: This returns a live LiveNodeList.
     * Changes in the DOM will reflect in the array as the changes occur.
     * If an element selected by this array no longer qualifies for the selector,
     * it will automatically be removed. Be aware of this for iteration purposes.
     *
     * @param {string} classNames
     * Is a string representing the class name(s) to match; multiple class names are separated by
     * (ASCII-)whitespace.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName
     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname
     */
    getElementsByClassName: function(v) {
      var x = y(v);
      return new Q(this, function($) {
        var W = [];
        return x.length > 0 && He($, function(se) {
          if (se !== $ && se.nodeType === M) {
            var he = se.getAttribute("class");
            if (he) {
              var Fe = v === he;
              if (!Fe) {
                var _t = y(he);
                Fe = x.every(C(_t));
              }
              Fe && W.push(se);
            }
          }
        }), W;
      });
    },
    /**
     * Returns a LiveNodeList of elements with the given qualifiedName.
     * Searching for all descendants can be done by passing `*` as `qualifiedName`.
     *
     * All descendants of the specified element are searched, but not the element itself.
     * The returned list is live, which means it updates itself with the DOM tree automatically.
     * Therefore, there is no need to call `Element.getElementsByTagName()`
     * with the same element and arguments repeatedly if the DOM changes in between calls.
     *
     * When called on an HTML element in an HTML document,
     * `getElementsByTagName` lower-cases the argument before searching for it.
     * This is undesirable when trying to match camel-cased SVG elements (such as
     * `<linearGradient>`) in an HTML document.
     * Instead, use `Element.getElementsByTagNameNS()`,
     * which preserves the capitalization of the tag name.
     *
     * `Element.getElementsByTagName` is similar to `Document.getElementsByTagName()`,
     * except that it only searches for elements that are descendants of the specified element.
     *
     * @param {string} qualifiedName
     * @returns {LiveNodeList}
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName
     * @see https://dom.spec.whatwg.org/#concept-getelementsbytagname
     */
    getElementsByTagName: function(v) {
      var x = (this.nodeType === B ? this : this.ownerDocument).type === "html", $ = v.toLowerCase();
      return new Q(this, function(W) {
        var se = [];
        return He(W, function(he) {
          if (!(he === W || he.nodeType !== M))
            if (v === "*")
              se.push(he);
            else {
              var Fe = he.getQualifiedName(), _t = x && he.namespaceURI === l.HTML ? $ : v;
              Fe === _t && se.push(he);
            }
        }), se;
      });
    },
    getElementsByTagNameNS: function(v, x) {
      return new Q(this, function($) {
        var W = [];
        return He($, function(se) {
          se !== $ && se.nodeType === M && (v === "*" || se.namespaceURI === v) && (x === "*" || se.localName == x) && W.push(se);
        }), W;
      });
    }
  }, ae.prototype.getElementsByClassName = Qe.prototype.getElementsByClassName, ae.prototype.getElementsByTagName = Qe.prototype.getElementsByTagName, ae.prototype.getElementsByTagNameNS = Qe.prototype.getElementsByTagNameNS, L(Qe, de);
  function Mt(v) {
    g(v), this.namespaceURI = null, this.prefix = null, this.ownerElement = null;
  }
  Mt.prototype.nodeType = q, L(Mt, de);
  function Bt(v) {
    g(v);
  }
  Bt.prototype = {
    data: "",
    substringData: function(v, x) {
      return this.data.substring(v, v + x);
    },
    appendData: function(v) {
      v = this.data + v, this.nodeValue = this.data = v, this.length = v.length;
    },
    insertData: function(v, x) {
      this.replaceData(v, 0, x);
    },
    deleteData: function(v, x) {
      this.replaceData(v, x, "");
    },
    replaceData: function(v, x, $) {
      var W = this.data.substring(0, v), se = this.data.substring(v + x);
      $ = W + $ + se, this.nodeValue = this.data = $, this.length = $.length;
    }
  }, L(Bt, de);
  function $n(v) {
    g(v);
  }
  $n.prototype = {
    nodeName: "#text",
    nodeType: k,
    splitText: function(v) {
      var x = this.data, $ = x.substring(v);
      x = x.substring(0, v), this.data = this.nodeValue = x, this.length = x.length;
      var W = this.ownerDocument.createTextNode($);
      return this.parentNode && this.parentNode.insertBefore(W, this.nextSibling), W;
    }
  }, L($n, Bt);
  function Fn(v) {
    g(v);
  }
  Fn.prototype = {
    nodeName: "#comment",
    nodeType: A
  }, L(Fn, Bt);
  function cr(v) {
    g(v);
  }
  cr.prototype = {
    nodeName: "#cdata-section",
    nodeType: I
  }, L(cr, $n);
  function Bn(v) {
    g(v);
  }
  Bn.prototype.nodeType = V, L(Bn, de);
  function qn(v) {
    g(v);
  }
  qn.prototype.nodeType = H, L(qn, de);
  function Xt(v) {
    g(v);
  }
  Xt.prototype.nodeType = P, L(Xt, de);
  function jn(v) {
    g(v);
  }
  jn.prototype.nodeType = S, L(jn, de);
  function Un(v) {
    g(v);
  }
  Un.prototype.nodeName = "#document-fragment", Un.prototype.nodeType = J, L(Un, de);
  function En(v) {
    g(v);
  }
  En.prototype.nodeType = T, L(En, Bt);
  function Dr() {
  }
  Dr.prototype.serializeToString = function(v, x) {
    return Ze.call(v, x);
  }, de.prototype.toString = Ze;
  function Ze(v) {
    var x = [], $ = this.nodeType === B && this.documentElement || this, W = $.prefix, se = $.namespaceURI;
    if (se && W == null) {
      var W = $.lookupPrefix(se);
      if (W == null)
        var he = [
          { namespace: se, prefix: null }
          //{namespace:uri,prefix:''}
        ];
    }
    return mn(this, x, v, he), x.join("");
  }
  function bt(v, x, $) {
    var W = v.prefix || "", se = v.namespaceURI;
    if (!se || W === "xml" && se === l.XML || se === l.XMLNS)
      return !1;
    for (var he = $.length; he--; ) {
      var Fe = $[he];
      if (Fe.prefix === W)
        return Fe.namespace !== se;
    }
    return !0;
  }
  function gn(v, x, $) {
    v.push(" ", x, '="', $.replace(/[<>&"\t\n\r]/g, Re), '"');
  }
  function mn(v, x, $, W) {
    W || (W = []);
    var se = v.nodeType === B ? v : v.ownerDocument, he = se.type === "html";
    if ($)
      if (v = $(v), v) {
        if (typeof v == "string") {
          x.push(v);
          return;
        }
      } else
        return;
    switch (v.nodeType) {
      case M:
        var Fe = v.attributes, _t = Fe.length, Tt = v.firstChild, Nt = v.tagName, Yt = Nt;
        if (!he && !v.prefix && v.namespaceURI) {
          for (var Ot, gt = 0; gt < Fe.length; gt++)
            if (Fe.item(gt).name === "xmlns") {
              Ot = Fe.item(gt).value;
              break;
            }
          if (!Ot)
            for (var zn = W.length - 1; zn >= 0; zn--) {
              var an = W[zn];
              if (an.prefix === "" && an.namespace === v.namespaceURI) {
                Ot = an.namespace;
                break;
              }
            }
          if (Ot !== v.namespaceURI)
            for (var zn = W.length - 1; zn >= 0; zn--) {
              var an = W[zn];
              if (an.namespace === v.namespaceURI) {
                an.prefix && (Yt = an.prefix + ":" + Nt);
                break;
              }
            }
        }
        x.push("<", Yt);
        for (var dr = 0; dr < _t; dr++) {
          var Nn = Fe.item(dr);
          Nn.prefix == "xmlns" ? W.push({
            prefix: Nn.localName,
            namespace: Nn.value
          }) : Nn.nodeName == "xmlns" && W.push({ prefix: "", namespace: Nn.value });
        }
        for (var dr = 0; dr < _t; dr++) {
          var Nn = Fe.item(dr);
          if (bt(Nn, he, W)) {
            var fr = Nn.prefix || "", St = Nn.namespaceURI;
            gn(x, fr ? "xmlns:" + fr : "xmlns", St), W.push({ prefix: fr, namespace: St });
          }
          mn(Nn, x, $, W);
        }
        if (Nt === Yt && bt(v, he, W)) {
          var fr = v.prefix || "", St = v.namespaceURI;
          gn(x, fr ? "xmlns:" + fr : "xmlns", St), W.push({ prefix: fr, namespace: St });
        }
        var so = !Tt;
        if (so && (he || v.namespaceURI === l.HTML) && (so = s(Nt)), so)
          x.push("/>");
        else {
          if (x.push(">"), he && o(Nt))
            for (; Tt; )
              Tt.data ? x.push(Tt.data) : mn(Tt, x, $, W.slice()), Tt = Tt.nextSibling;
          else
            for (; Tt; )
              mn(Tt, x, $, W.slice()), Tt = Tt.nextSibling;
          x.push("</", Yt, ">");
        }
        return;
      case B:
      case J:
        for (var Tt = v.firstChild; Tt; )
          mn(Tt, x, $, W.slice()), Tt = Tt.nextSibling;
        return;
      case q:
        return gn(x, v.name, v.value);
      case k:
        return x.push(v.data.replace(/[<&>]/g, Re));
      case I:
        return x.push(h.CDATA_START, v.data, h.CDATA_END);
      case A:
        return x.push(h.COMMENT_START, v.data, h.COMMENT_END);
      case V:
        var os = v.publicId, Mr = v.systemId;
        x.push(h.DOCTYPE_DECL_START, " ", v.name), os ? (x.push(" ", h.PUBLIC, " ", os), Mr && Mr !== "." && x.push(" ", Mr)) : Mr && Mr !== "." && x.push(" ", h.SYSTEM, " ", Mr), v.internalSubset && x.push(" [", v.internalSubset, "]"), x.push(">");
        return;
      case T:
        return x.push("<?", v.target, " ", v.data, "?>");
      case S:
        return x.push("&", v.nodeName, ";");
      //case ENTITY_NODE:
      //case NOTATION_NODE:
      default:
        x.push("??", v.nodeName);
    }
  }
  function ur(v, x, $) {
    var W;
    switch (x.nodeType) {
      case M:
        W = x.cloneNode(!1), W.ownerDocument = v;
      //var attrs = node2.attributes;
      //var len = attrs.length;
      //for(var i=0;i<len;i++){
      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
      //}
      case J:
        break;
      case q:
        $ = !0;
        break;
    }
    if (W || (W = x.cloneNode(!1)), W.ownerDocument = v, W.parentNode = null, $)
      for (var se = x.firstChild; se; )
        W.appendChild(ur(v, se, $)), se = se.nextSibling;
    return W;
  }
  function Ti(v, x, $) {
    var W = new x.constructor(c);
    for (var se in x)
      if (r(x, se)) {
        var he = x[se];
        typeof he != "object" && he != W[se] && (W[se] = he);
      }
    switch (x.childNodes && (W.childNodes = new te()), W.ownerDocument = v, W.nodeType) {
      case M:
        var Fe = x.attributes, _t = W.attributes = new pe(), Nt = Fe.length;
        _t._ownerElement = W;
        for (var Yt = 0; Yt < Nt; Yt++)
          W.setAttributeNode(Ti(v, Fe.item(Yt), !0));
        break;
      case q:
        $ = !0;
    }
    if ($)
      for (var Ot = x.firstChild; Ot; )
        W.appendChild(Ti(v, Ot, $)), Ot = Ot.nextSibling;
    return W;
  }
  function Qn(v, x, $) {
    v[x] = $;
  }
  try {
    if (Object.defineProperty) {
      let v = function(x) {
        switch (x.nodeType) {
          case M:
          case J:
            var $ = [];
            for (x = x.firstChild; x; )
              x.nodeType !== 7 && x.nodeType !== 8 && $.push(v(x)), x = x.nextSibling;
            return $.join("");
          default:
            return x.nodeValue;
        }
      };
      Object.defineProperty(Q.prototype, "length", {
        get: function() {
          return ce(this), this.$$length;
        }
      }), Object.defineProperty(de.prototype, "textContent", {
        get: function() {
          return v(this);
        },
        set: function(x) {
          switch (this.nodeType) {
            case M:
            case J:
              for (; this.firstChild; )
                this.removeChild(this.firstChild);
              (x || String(x)) && this.appendChild(this.ownerDocument.createTextNode(x));
              break;
            default:
              this.data = x, this.value = x, this.nodeValue = x;
          }
        }
      }), Qn = function(x, $, W) {
        x["$$" + $] = W;
      };
    }
  } catch {
  }
  return xt._updateLiveList = ce, xt.Attr = Mt, xt.CDATASection = cr, xt.CharacterData = Bt, xt.Comment = Fn, xt.Document = ae, xt.DocumentFragment = Un, xt.DocumentType = Bn, xt.DOMImplementation = Ee, xt.Element = Qe, xt.Entity = Xt, xt.EntityReference = jn, xt.LiveNodeList = Q, xt.NamedNodeMap = pe, xt.Node = de, xt.NodeList = te, xt.Notation = qn, xt.Text = $n, xt.ProcessingInstruction = En, xt.XMLSerializer = Dr, xt;
}
var uo = {}, Rd = {}, Qg;
function IC() {
  return Qg || (Qg = 1, function(t) {
    var e = oa().freeze;
    t.XML_ENTITIES = e({
      amp: "&",
      apos: "'",
      gt: ">",
      lt: "<",
      quot: '"'
    }), t.HTML_ENTITIES = e({
      Aacute: "Á",
      aacute: "á",
      Abreve: "Ă",
      abreve: "ă",
      ac: "∾",
      acd: "∿",
      acE: "∾̳",
      Acirc: "Â",
      acirc: "â",
      acute: "´",
      Acy: "А",
      acy: "а",
      AElig: "Æ",
      aelig: "æ",
      af: "⁡",
      Afr: "𝔄",
      afr: "𝔞",
      Agrave: "À",
      agrave: "à",
      alefsym: "ℵ",
      aleph: "ℵ",
      Alpha: "Α",
      alpha: "α",
      Amacr: "Ā",
      amacr: "ā",
      amalg: "⨿",
      AMP: "&",
      amp: "&",
      And: "⩓",
      and: "∧",
      andand: "⩕",
      andd: "⩜",
      andslope: "⩘",
      andv: "⩚",
      ang: "∠",
      ange: "⦤",
      angle: "∠",
      angmsd: "∡",
      angmsdaa: "⦨",
      angmsdab: "⦩",
      angmsdac: "⦪",
      angmsdad: "⦫",
      angmsdae: "⦬",
      angmsdaf: "⦭",
      angmsdag: "⦮",
      angmsdah: "⦯",
      angrt: "∟",
      angrtvb: "⊾",
      angrtvbd: "⦝",
      angsph: "∢",
      angst: "Å",
      angzarr: "⍼",
      Aogon: "Ą",
      aogon: "ą",
      Aopf: "𝔸",
      aopf: "𝕒",
      ap: "≈",
      apacir: "⩯",
      apE: "⩰",
      ape: "≊",
      apid: "≋",
      apos: "'",
      ApplyFunction: "⁡",
      approx: "≈",
      approxeq: "≊",
      Aring: "Å",
      aring: "å",
      Ascr: "𝒜",
      ascr: "𝒶",
      Assign: "≔",
      ast: "*",
      asymp: "≈",
      asympeq: "≍",
      Atilde: "Ã",
      atilde: "ã",
      Auml: "Ä",
      auml: "ä",
      awconint: "∳",
      awint: "⨑",
      backcong: "≌",
      backepsilon: "϶",
      backprime: "‵",
      backsim: "∽",
      backsimeq: "⋍",
      Backslash: "∖",
      Barv: "⫧",
      barvee: "⊽",
      Barwed: "⌆",
      barwed: "⌅",
      barwedge: "⌅",
      bbrk: "⎵",
      bbrktbrk: "⎶",
      bcong: "≌",
      Bcy: "Б",
      bcy: "б",
      bdquo: "„",
      becaus: "∵",
      Because: "∵",
      because: "∵",
      bemptyv: "⦰",
      bepsi: "϶",
      bernou: "ℬ",
      Bernoullis: "ℬ",
      Beta: "Β",
      beta: "β",
      beth: "ℶ",
      between: "≬",
      Bfr: "𝔅",
      bfr: "𝔟",
      bigcap: "⋂",
      bigcirc: "◯",
      bigcup: "⋃",
      bigodot: "⨀",
      bigoplus: "⨁",
      bigotimes: "⨂",
      bigsqcup: "⨆",
      bigstar: "★",
      bigtriangledown: "▽",
      bigtriangleup: "△",
      biguplus: "⨄",
      bigvee: "⋁",
      bigwedge: "⋀",
      bkarow: "⤍",
      blacklozenge: "⧫",
      blacksquare: "▪",
      blacktriangle: "▴",
      blacktriangledown: "▾",
      blacktriangleleft: "◂",
      blacktriangleright: "▸",
      blank: "␣",
      blk12: "▒",
      blk14: "░",
      blk34: "▓",
      block: "█",
      bne: "=⃥",
      bnequiv: "≡⃥",
      bNot: "⫭",
      bnot: "⌐",
      Bopf: "𝔹",
      bopf: "𝕓",
      bot: "⊥",
      bottom: "⊥",
      bowtie: "⋈",
      boxbox: "⧉",
      boxDL: "╗",
      boxDl: "╖",
      boxdL: "╕",
      boxdl: "┐",
      boxDR: "╔",
      boxDr: "╓",
      boxdR: "╒",
      boxdr: "┌",
      boxH: "═",
      boxh: "─",
      boxHD: "╦",
      boxHd: "╤",
      boxhD: "╥",
      boxhd: "┬",
      boxHU: "╩",
      boxHu: "╧",
      boxhU: "╨",
      boxhu: "┴",
      boxminus: "⊟",
      boxplus: "⊞",
      boxtimes: "⊠",
      boxUL: "╝",
      boxUl: "╜",
      boxuL: "╛",
      boxul: "┘",
      boxUR: "╚",
      boxUr: "╙",
      boxuR: "╘",
      boxur: "└",
      boxV: "║",
      boxv: "│",
      boxVH: "╬",
      boxVh: "╫",
      boxvH: "╪",
      boxvh: "┼",
      boxVL: "╣",
      boxVl: "╢",
      boxvL: "╡",
      boxvl: "┤",
      boxVR: "╠",
      boxVr: "╟",
      boxvR: "╞",
      boxvr: "├",
      bprime: "‵",
      Breve: "˘",
      breve: "˘",
      brvbar: "¦",
      Bscr: "ℬ",
      bscr: "𝒷",
      bsemi: "⁏",
      bsim: "∽",
      bsime: "⋍",
      bsol: "\\",
      bsolb: "⧅",
      bsolhsub: "⟈",
      bull: "•",
      bullet: "•",
      bump: "≎",
      bumpE: "⪮",
      bumpe: "≏",
      Bumpeq: "≎",
      bumpeq: "≏",
      Cacute: "Ć",
      cacute: "ć",
      Cap: "⋒",
      cap: "∩",
      capand: "⩄",
      capbrcup: "⩉",
      capcap: "⩋",
      capcup: "⩇",
      capdot: "⩀",
      CapitalDifferentialD: "ⅅ",
      caps: "∩︀",
      caret: "⁁",
      caron: "ˇ",
      Cayleys: "ℭ",
      ccaps: "⩍",
      Ccaron: "Č",
      ccaron: "č",
      Ccedil: "Ç",
      ccedil: "ç",
      Ccirc: "Ĉ",
      ccirc: "ĉ",
      Cconint: "∰",
      ccups: "⩌",
      ccupssm: "⩐",
      Cdot: "Ċ",
      cdot: "ċ",
      cedil: "¸",
      Cedilla: "¸",
      cemptyv: "⦲",
      cent: "¢",
      CenterDot: "·",
      centerdot: "·",
      Cfr: "ℭ",
      cfr: "𝔠",
      CHcy: "Ч",
      chcy: "ч",
      check: "✓",
      checkmark: "✓",
      Chi: "Χ",
      chi: "χ",
      cir: "○",
      circ: "ˆ",
      circeq: "≗",
      circlearrowleft: "↺",
      circlearrowright: "↻",
      circledast: "⊛",
      circledcirc: "⊚",
      circleddash: "⊝",
      CircleDot: "⊙",
      circledR: "®",
      circledS: "Ⓢ",
      CircleMinus: "⊖",
      CirclePlus: "⊕",
      CircleTimes: "⊗",
      cirE: "⧃",
      cire: "≗",
      cirfnint: "⨐",
      cirmid: "⫯",
      cirscir: "⧂",
      ClockwiseContourIntegral: "∲",
      CloseCurlyDoubleQuote: "”",
      CloseCurlyQuote: "’",
      clubs: "♣",
      clubsuit: "♣",
      Colon: "∷",
      colon: ":",
      Colone: "⩴",
      colone: "≔",
      coloneq: "≔",
      comma: ",",
      commat: "@",
      comp: "∁",
      compfn: "∘",
      complement: "∁",
      complexes: "ℂ",
      cong: "≅",
      congdot: "⩭",
      Congruent: "≡",
      Conint: "∯",
      conint: "∮",
      ContourIntegral: "∮",
      Copf: "ℂ",
      copf: "𝕔",
      coprod: "∐",
      Coproduct: "∐",
      COPY: "©",
      copy: "©",
      copysr: "℗",
      CounterClockwiseContourIntegral: "∳",
      crarr: "↵",
      Cross: "⨯",
      cross: "✗",
      Cscr: "𝒞",
      cscr: "𝒸",
      csub: "⫏",
      csube: "⫑",
      csup: "⫐",
      csupe: "⫒",
      ctdot: "⋯",
      cudarrl: "⤸",
      cudarrr: "⤵",
      cuepr: "⋞",
      cuesc: "⋟",
      cularr: "↶",
      cularrp: "⤽",
      Cup: "⋓",
      cup: "∪",
      cupbrcap: "⩈",
      CupCap: "≍",
      cupcap: "⩆",
      cupcup: "⩊",
      cupdot: "⊍",
      cupor: "⩅",
      cups: "∪︀",
      curarr: "↷",
      curarrm: "⤼",
      curlyeqprec: "⋞",
      curlyeqsucc: "⋟",
      curlyvee: "⋎",
      curlywedge: "⋏",
      curren: "¤",
      curvearrowleft: "↶",
      curvearrowright: "↷",
      cuvee: "⋎",
      cuwed: "⋏",
      cwconint: "∲",
      cwint: "∱",
      cylcty: "⌭",
      Dagger: "‡",
      dagger: "†",
      daleth: "ℸ",
      Darr: "↡",
      dArr: "⇓",
      darr: "↓",
      dash: "‐",
      Dashv: "⫤",
      dashv: "⊣",
      dbkarow: "⤏",
      dblac: "˝",
      Dcaron: "Ď",
      dcaron: "ď",
      Dcy: "Д",
      dcy: "д",
      DD: "ⅅ",
      dd: "ⅆ",
      ddagger: "‡",
      ddarr: "⇊",
      DDotrahd: "⤑",
      ddotseq: "⩷",
      deg: "°",
      Del: "∇",
      Delta: "Δ",
      delta: "δ",
      demptyv: "⦱",
      dfisht: "⥿",
      Dfr: "𝔇",
      dfr: "𝔡",
      dHar: "⥥",
      dharl: "⇃",
      dharr: "⇂",
      DiacriticalAcute: "´",
      DiacriticalDot: "˙",
      DiacriticalDoubleAcute: "˝",
      DiacriticalGrave: "`",
      DiacriticalTilde: "˜",
      diam: "⋄",
      Diamond: "⋄",
      diamond: "⋄",
      diamondsuit: "♦",
      diams: "♦",
      die: "¨",
      DifferentialD: "ⅆ",
      digamma: "ϝ",
      disin: "⋲",
      div: "÷",
      divide: "÷",
      divideontimes: "⋇",
      divonx: "⋇",
      DJcy: "Ђ",
      djcy: "ђ",
      dlcorn: "⌞",
      dlcrop: "⌍",
      dollar: "$",
      Dopf: "𝔻",
      dopf: "𝕕",
      Dot: "¨",
      dot: "˙",
      DotDot: "⃜",
      doteq: "≐",
      doteqdot: "≑",
      DotEqual: "≐",
      dotminus: "∸",
      dotplus: "∔",
      dotsquare: "⊡",
      doublebarwedge: "⌆",
      DoubleContourIntegral: "∯",
      DoubleDot: "¨",
      DoubleDownArrow: "⇓",
      DoubleLeftArrow: "⇐",
      DoubleLeftRightArrow: "⇔",
      DoubleLeftTee: "⫤",
      DoubleLongLeftArrow: "⟸",
      DoubleLongLeftRightArrow: "⟺",
      DoubleLongRightArrow: "⟹",
      DoubleRightArrow: "⇒",
      DoubleRightTee: "⊨",
      DoubleUpArrow: "⇑",
      DoubleUpDownArrow: "⇕",
      DoubleVerticalBar: "∥",
      DownArrow: "↓",
      Downarrow: "⇓",
      downarrow: "↓",
      DownArrowBar: "⤓",
      DownArrowUpArrow: "⇵",
      DownBreve: "̑",
      downdownarrows: "⇊",
      downharpoonleft: "⇃",
      downharpoonright: "⇂",
      DownLeftRightVector: "⥐",
      DownLeftTeeVector: "⥞",
      DownLeftVector: "↽",
      DownLeftVectorBar: "⥖",
      DownRightTeeVector: "⥟",
      DownRightVector: "⇁",
      DownRightVectorBar: "⥗",
      DownTee: "⊤",
      DownTeeArrow: "↧",
      drbkarow: "⤐",
      drcorn: "⌟",
      drcrop: "⌌",
      Dscr: "𝒟",
      dscr: "𝒹",
      DScy: "Ѕ",
      dscy: "ѕ",
      dsol: "⧶",
      Dstrok: "Đ",
      dstrok: "đ",
      dtdot: "⋱",
      dtri: "▿",
      dtrif: "▾",
      duarr: "⇵",
      duhar: "⥯",
      dwangle: "⦦",
      DZcy: "Џ",
      dzcy: "џ",
      dzigrarr: "⟿",
      Eacute: "É",
      eacute: "é",
      easter: "⩮",
      Ecaron: "Ě",
      ecaron: "ě",
      ecir: "≖",
      Ecirc: "Ê",
      ecirc: "ê",
      ecolon: "≕",
      Ecy: "Э",
      ecy: "э",
      eDDot: "⩷",
      Edot: "Ė",
      eDot: "≑",
      edot: "ė",
      ee: "ⅇ",
      efDot: "≒",
      Efr: "𝔈",
      efr: "𝔢",
      eg: "⪚",
      Egrave: "È",
      egrave: "è",
      egs: "⪖",
      egsdot: "⪘",
      el: "⪙",
      Element: "∈",
      elinters: "⏧",
      ell: "ℓ",
      els: "⪕",
      elsdot: "⪗",
      Emacr: "Ē",
      emacr: "ē",
      empty: "∅",
      emptyset: "∅",
      EmptySmallSquare: "◻",
      emptyv: "∅",
      EmptyVerySmallSquare: "▫",
      emsp: " ",
      emsp13: " ",
      emsp14: " ",
      ENG: "Ŋ",
      eng: "ŋ",
      ensp: " ",
      Eogon: "Ę",
      eogon: "ę",
      Eopf: "𝔼",
      eopf: "𝕖",
      epar: "⋕",
      eparsl: "⧣",
      eplus: "⩱",
      epsi: "ε",
      Epsilon: "Ε",
      epsilon: "ε",
      epsiv: "ϵ",
      eqcirc: "≖",
      eqcolon: "≕",
      eqsim: "≂",
      eqslantgtr: "⪖",
      eqslantless: "⪕",
      Equal: "⩵",
      equals: "=",
      EqualTilde: "≂",
      equest: "≟",
      Equilibrium: "⇌",
      equiv: "≡",
      equivDD: "⩸",
      eqvparsl: "⧥",
      erarr: "⥱",
      erDot: "≓",
      Escr: "ℰ",
      escr: "ℯ",
      esdot: "≐",
      Esim: "⩳",
      esim: "≂",
      Eta: "Η",
      eta: "η",
      ETH: "Ð",
      eth: "ð",
      Euml: "Ë",
      euml: "ë",
      euro: "€",
      excl: "!",
      exist: "∃",
      Exists: "∃",
      expectation: "ℰ",
      ExponentialE: "ⅇ",
      exponentiale: "ⅇ",
      fallingdotseq: "≒",
      Fcy: "Ф",
      fcy: "ф",
      female: "♀",
      ffilig: "ﬃ",
      fflig: "ﬀ",
      ffllig: "ﬄ",
      Ffr: "𝔉",
      ffr: "𝔣",
      filig: "ﬁ",
      FilledSmallSquare: "◼",
      FilledVerySmallSquare: "▪",
      fjlig: "fj",
      flat: "♭",
      fllig: "ﬂ",
      fltns: "▱",
      fnof: "ƒ",
      Fopf: "𝔽",
      fopf: "𝕗",
      ForAll: "∀",
      forall: "∀",
      fork: "⋔",
      forkv: "⫙",
      Fouriertrf: "ℱ",
      fpartint: "⨍",
      frac12: "½",
      frac13: "⅓",
      frac14: "¼",
      frac15: "⅕",
      frac16: "⅙",
      frac18: "⅛",
      frac23: "⅔",
      frac25: "⅖",
      frac34: "¾",
      frac35: "⅗",
      frac38: "⅜",
      frac45: "⅘",
      frac56: "⅚",
      frac58: "⅝",
      frac78: "⅞",
      frasl: "⁄",
      frown: "⌢",
      Fscr: "ℱ",
      fscr: "𝒻",
      gacute: "ǵ",
      Gamma: "Γ",
      gamma: "γ",
      Gammad: "Ϝ",
      gammad: "ϝ",
      gap: "⪆",
      Gbreve: "Ğ",
      gbreve: "ğ",
      Gcedil: "Ģ",
      Gcirc: "Ĝ",
      gcirc: "ĝ",
      Gcy: "Г",
      gcy: "г",
      Gdot: "Ġ",
      gdot: "ġ",
      gE: "≧",
      ge: "≥",
      gEl: "⪌",
      gel: "⋛",
      geq: "≥",
      geqq: "≧",
      geqslant: "⩾",
      ges: "⩾",
      gescc: "⪩",
      gesdot: "⪀",
      gesdoto: "⪂",
      gesdotol: "⪄",
      gesl: "⋛︀",
      gesles: "⪔",
      Gfr: "𝔊",
      gfr: "𝔤",
      Gg: "⋙",
      gg: "≫",
      ggg: "⋙",
      gimel: "ℷ",
      GJcy: "Ѓ",
      gjcy: "ѓ",
      gl: "≷",
      gla: "⪥",
      glE: "⪒",
      glj: "⪤",
      gnap: "⪊",
      gnapprox: "⪊",
      gnE: "≩",
      gne: "⪈",
      gneq: "⪈",
      gneqq: "≩",
      gnsim: "⋧",
      Gopf: "𝔾",
      gopf: "𝕘",
      grave: "`",
      GreaterEqual: "≥",
      GreaterEqualLess: "⋛",
      GreaterFullEqual: "≧",
      GreaterGreater: "⪢",
      GreaterLess: "≷",
      GreaterSlantEqual: "⩾",
      GreaterTilde: "≳",
      Gscr: "𝒢",
      gscr: "ℊ",
      gsim: "≳",
      gsime: "⪎",
      gsiml: "⪐",
      Gt: "≫",
      GT: ">",
      gt: ">",
      gtcc: "⪧",
      gtcir: "⩺",
      gtdot: "⋗",
      gtlPar: "⦕",
      gtquest: "⩼",
      gtrapprox: "⪆",
      gtrarr: "⥸",
      gtrdot: "⋗",
      gtreqless: "⋛",
      gtreqqless: "⪌",
      gtrless: "≷",
      gtrsim: "≳",
      gvertneqq: "≩︀",
      gvnE: "≩︀",
      Hacek: "ˇ",
      hairsp: " ",
      half: "½",
      hamilt: "ℋ",
      HARDcy: "Ъ",
      hardcy: "ъ",
      hArr: "⇔",
      harr: "↔",
      harrcir: "⥈",
      harrw: "↭",
      Hat: "^",
      hbar: "ℏ",
      Hcirc: "Ĥ",
      hcirc: "ĥ",
      hearts: "♥",
      heartsuit: "♥",
      hellip: "…",
      hercon: "⊹",
      Hfr: "ℌ",
      hfr: "𝔥",
      HilbertSpace: "ℋ",
      hksearow: "⤥",
      hkswarow: "⤦",
      hoarr: "⇿",
      homtht: "∻",
      hookleftarrow: "↩",
      hookrightarrow: "↪",
      Hopf: "ℍ",
      hopf: "𝕙",
      horbar: "―",
      HorizontalLine: "─",
      Hscr: "ℋ",
      hscr: "𝒽",
      hslash: "ℏ",
      Hstrok: "Ħ",
      hstrok: "ħ",
      HumpDownHump: "≎",
      HumpEqual: "≏",
      hybull: "⁃",
      hyphen: "‐",
      Iacute: "Í",
      iacute: "í",
      ic: "⁣",
      Icirc: "Î",
      icirc: "î",
      Icy: "И",
      icy: "и",
      Idot: "İ",
      IEcy: "Е",
      iecy: "е",
      iexcl: "¡",
      iff: "⇔",
      Ifr: "ℑ",
      ifr: "𝔦",
      Igrave: "Ì",
      igrave: "ì",
      ii: "ⅈ",
      iiiint: "⨌",
      iiint: "∭",
      iinfin: "⧜",
      iiota: "℩",
      IJlig: "Ĳ",
      ijlig: "ĳ",
      Im: "ℑ",
      Imacr: "Ī",
      imacr: "ī",
      image: "ℑ",
      ImaginaryI: "ⅈ",
      imagline: "ℐ",
      imagpart: "ℑ",
      imath: "ı",
      imof: "⊷",
      imped: "Ƶ",
      Implies: "⇒",
      in: "∈",
      incare: "℅",
      infin: "∞",
      infintie: "⧝",
      inodot: "ı",
      Int: "∬",
      int: "∫",
      intcal: "⊺",
      integers: "ℤ",
      Integral: "∫",
      intercal: "⊺",
      Intersection: "⋂",
      intlarhk: "⨗",
      intprod: "⨼",
      InvisibleComma: "⁣",
      InvisibleTimes: "⁢",
      IOcy: "Ё",
      iocy: "ё",
      Iogon: "Į",
      iogon: "į",
      Iopf: "𝕀",
      iopf: "𝕚",
      Iota: "Ι",
      iota: "ι",
      iprod: "⨼",
      iquest: "¿",
      Iscr: "ℐ",
      iscr: "𝒾",
      isin: "∈",
      isindot: "⋵",
      isinE: "⋹",
      isins: "⋴",
      isinsv: "⋳",
      isinv: "∈",
      it: "⁢",
      Itilde: "Ĩ",
      itilde: "ĩ",
      Iukcy: "І",
      iukcy: "і",
      Iuml: "Ï",
      iuml: "ï",
      Jcirc: "Ĵ",
      jcirc: "ĵ",
      Jcy: "Й",
      jcy: "й",
      Jfr: "𝔍",
      jfr: "𝔧",
      jmath: "ȷ",
      Jopf: "𝕁",
      jopf: "𝕛",
      Jscr: "𝒥",
      jscr: "𝒿",
      Jsercy: "Ј",
      jsercy: "ј",
      Jukcy: "Є",
      jukcy: "є",
      Kappa: "Κ",
      kappa: "κ",
      kappav: "ϰ",
      Kcedil: "Ķ",
      kcedil: "ķ",
      Kcy: "К",
      kcy: "к",
      Kfr: "𝔎",
      kfr: "𝔨",
      kgreen: "ĸ",
      KHcy: "Х",
      khcy: "х",
      KJcy: "Ќ",
      kjcy: "ќ",
      Kopf: "𝕂",
      kopf: "𝕜",
      Kscr: "𝒦",
      kscr: "𝓀",
      lAarr: "⇚",
      Lacute: "Ĺ",
      lacute: "ĺ",
      laemptyv: "⦴",
      lagran: "ℒ",
      Lambda: "Λ",
      lambda: "λ",
      Lang: "⟪",
      lang: "⟨",
      langd: "⦑",
      langle: "⟨",
      lap: "⪅",
      Laplacetrf: "ℒ",
      laquo: "«",
      Larr: "↞",
      lArr: "⇐",
      larr: "←",
      larrb: "⇤",
      larrbfs: "⤟",
      larrfs: "⤝",
      larrhk: "↩",
      larrlp: "↫",
      larrpl: "⤹",
      larrsim: "⥳",
      larrtl: "↢",
      lat: "⪫",
      lAtail: "⤛",
      latail: "⤙",
      late: "⪭",
      lates: "⪭︀",
      lBarr: "⤎",
      lbarr: "⤌",
      lbbrk: "❲",
      lbrace: "{",
      lbrack: "[",
      lbrke: "⦋",
      lbrksld: "⦏",
      lbrkslu: "⦍",
      Lcaron: "Ľ",
      lcaron: "ľ",
      Lcedil: "Ļ",
      lcedil: "ļ",
      lceil: "⌈",
      lcub: "{",
      Lcy: "Л",
      lcy: "л",
      ldca: "⤶",
      ldquo: "“",
      ldquor: "„",
      ldrdhar: "⥧",
      ldrushar: "⥋",
      ldsh: "↲",
      lE: "≦",
      le: "≤",
      LeftAngleBracket: "⟨",
      LeftArrow: "←",
      Leftarrow: "⇐",
      leftarrow: "←",
      LeftArrowBar: "⇤",
      LeftArrowRightArrow: "⇆",
      leftarrowtail: "↢",
      LeftCeiling: "⌈",
      LeftDoubleBracket: "⟦",
      LeftDownTeeVector: "⥡",
      LeftDownVector: "⇃",
      LeftDownVectorBar: "⥙",
      LeftFloor: "⌊",
      leftharpoondown: "↽",
      leftharpoonup: "↼",
      leftleftarrows: "⇇",
      LeftRightArrow: "↔",
      Leftrightarrow: "⇔",
      leftrightarrow: "↔",
      leftrightarrows: "⇆",
      leftrightharpoons: "⇋",
      leftrightsquigarrow: "↭",
      LeftRightVector: "⥎",
      LeftTee: "⊣",
      LeftTeeArrow: "↤",
      LeftTeeVector: "⥚",
      leftthreetimes: "⋋",
      LeftTriangle: "⊲",
      LeftTriangleBar: "⧏",
      LeftTriangleEqual: "⊴",
      LeftUpDownVector: "⥑",
      LeftUpTeeVector: "⥠",
      LeftUpVector: "↿",
      LeftUpVectorBar: "⥘",
      LeftVector: "↼",
      LeftVectorBar: "⥒",
      lEg: "⪋",
      leg: "⋚",
      leq: "≤",
      leqq: "≦",
      leqslant: "⩽",
      les: "⩽",
      lescc: "⪨",
      lesdot: "⩿",
      lesdoto: "⪁",
      lesdotor: "⪃",
      lesg: "⋚︀",
      lesges: "⪓",
      lessapprox: "⪅",
      lessdot: "⋖",
      lesseqgtr: "⋚",
      lesseqqgtr: "⪋",
      LessEqualGreater: "⋚",
      LessFullEqual: "≦",
      LessGreater: "≶",
      lessgtr: "≶",
      LessLess: "⪡",
      lesssim: "≲",
      LessSlantEqual: "⩽",
      LessTilde: "≲",
      lfisht: "⥼",
      lfloor: "⌊",
      Lfr: "𝔏",
      lfr: "𝔩",
      lg: "≶",
      lgE: "⪑",
      lHar: "⥢",
      lhard: "↽",
      lharu: "↼",
      lharul: "⥪",
      lhblk: "▄",
      LJcy: "Љ",
      ljcy: "љ",
      Ll: "⋘",
      ll: "≪",
      llarr: "⇇",
      llcorner: "⌞",
      Lleftarrow: "⇚",
      llhard: "⥫",
      lltri: "◺",
      Lmidot: "Ŀ",
      lmidot: "ŀ",
      lmoust: "⎰",
      lmoustache: "⎰",
      lnap: "⪉",
      lnapprox: "⪉",
      lnE: "≨",
      lne: "⪇",
      lneq: "⪇",
      lneqq: "≨",
      lnsim: "⋦",
      loang: "⟬",
      loarr: "⇽",
      lobrk: "⟦",
      LongLeftArrow: "⟵",
      Longleftarrow: "⟸",
      longleftarrow: "⟵",
      LongLeftRightArrow: "⟷",
      Longleftrightarrow: "⟺",
      longleftrightarrow: "⟷",
      longmapsto: "⟼",
      LongRightArrow: "⟶",
      Longrightarrow: "⟹",
      longrightarrow: "⟶",
      looparrowleft: "↫",
      looparrowright: "↬",
      lopar: "⦅",
      Lopf: "𝕃",
      lopf: "𝕝",
      loplus: "⨭",
      lotimes: "⨴",
      lowast: "∗",
      lowbar: "_",
      LowerLeftArrow: "↙",
      LowerRightArrow: "↘",
      loz: "◊",
      lozenge: "◊",
      lozf: "⧫",
      lpar: "(",
      lparlt: "⦓",
      lrarr: "⇆",
      lrcorner: "⌟",
      lrhar: "⇋",
      lrhard: "⥭",
      lrm: "‎",
      lrtri: "⊿",
      lsaquo: "‹",
      Lscr: "ℒ",
      lscr: "𝓁",
      Lsh: "↰",
      lsh: "↰",
      lsim: "≲",
      lsime: "⪍",
      lsimg: "⪏",
      lsqb: "[",
      lsquo: "‘",
      lsquor: "‚",
      Lstrok: "Ł",
      lstrok: "ł",
      Lt: "≪",
      LT: "<",
      lt: "<",
      ltcc: "⪦",
      ltcir: "⩹",
      ltdot: "⋖",
      lthree: "⋋",
      ltimes: "⋉",
      ltlarr: "⥶",
      ltquest: "⩻",
      ltri: "◃",
      ltrie: "⊴",
      ltrif: "◂",
      ltrPar: "⦖",
      lurdshar: "⥊",
      luruhar: "⥦",
      lvertneqq: "≨︀",
      lvnE: "≨︀",
      macr: "¯",
      male: "♂",
      malt: "✠",
      maltese: "✠",
      Map: "⤅",
      map: "↦",
      mapsto: "↦",
      mapstodown: "↧",
      mapstoleft: "↤",
      mapstoup: "↥",
      marker: "▮",
      mcomma: "⨩",
      Mcy: "М",
      mcy: "м",
      mdash: "—",
      mDDot: "∺",
      measuredangle: "∡",
      MediumSpace: " ",
      Mellintrf: "ℳ",
      Mfr: "𝔐",
      mfr: "𝔪",
      mho: "℧",
      micro: "µ",
      mid: "∣",
      midast: "*",
      midcir: "⫰",
      middot: "·",
      minus: "−",
      minusb: "⊟",
      minusd: "∸",
      minusdu: "⨪",
      MinusPlus: "∓",
      mlcp: "⫛",
      mldr: "…",
      mnplus: "∓",
      models: "⊧",
      Mopf: "𝕄",
      mopf: "𝕞",
      mp: "∓",
      Mscr: "ℳ",
      mscr: "𝓂",
      mstpos: "∾",
      Mu: "Μ",
      mu: "μ",
      multimap: "⊸",
      mumap: "⊸",
      nabla: "∇",
      Nacute: "Ń",
      nacute: "ń",
      nang: "∠⃒",
      nap: "≉",
      napE: "⩰̸",
      napid: "≋̸",
      napos: "ŉ",
      napprox: "≉",
      natur: "♮",
      natural: "♮",
      naturals: "ℕ",
      nbsp: " ",
      nbump: "≎̸",
      nbumpe: "≏̸",
      ncap: "⩃",
      Ncaron: "Ň",
      ncaron: "ň",
      Ncedil: "Ņ",
      ncedil: "ņ",
      ncong: "≇",
      ncongdot: "⩭̸",
      ncup: "⩂",
      Ncy: "Н",
      ncy: "н",
      ndash: "–",
      ne: "≠",
      nearhk: "⤤",
      neArr: "⇗",
      nearr: "↗",
      nearrow: "↗",
      nedot: "≐̸",
      NegativeMediumSpace: "​",
      NegativeThickSpace: "​",
      NegativeThinSpace: "​",
      NegativeVeryThinSpace: "​",
      nequiv: "≢",
      nesear: "⤨",
      nesim: "≂̸",
      NestedGreaterGreater: "≫",
      NestedLessLess: "≪",
      NewLine: `
`,
      nexist: "∄",
      nexists: "∄",
      Nfr: "𝔑",
      nfr: "𝔫",
      ngE: "≧̸",
      nge: "≱",
      ngeq: "≱",
      ngeqq: "≧̸",
      ngeqslant: "⩾̸",
      nges: "⩾̸",
      nGg: "⋙̸",
      ngsim: "≵",
      nGt: "≫⃒",
      ngt: "≯",
      ngtr: "≯",
      nGtv: "≫̸",
      nhArr: "⇎",
      nharr: "↮",
      nhpar: "⫲",
      ni: "∋",
      nis: "⋼",
      nisd: "⋺",
      niv: "∋",
      NJcy: "Њ",
      njcy: "њ",
      nlArr: "⇍",
      nlarr: "↚",
      nldr: "‥",
      nlE: "≦̸",
      nle: "≰",
      nLeftarrow: "⇍",
      nleftarrow: "↚",
      nLeftrightarrow: "⇎",
      nleftrightarrow: "↮",
      nleq: "≰",
      nleqq: "≦̸",
      nleqslant: "⩽̸",
      nles: "⩽̸",
      nless: "≮",
      nLl: "⋘̸",
      nlsim: "≴",
      nLt: "≪⃒",
      nlt: "≮",
      nltri: "⋪",
      nltrie: "⋬",
      nLtv: "≪̸",
      nmid: "∤",
      NoBreak: "⁠",
      NonBreakingSpace: " ",
      Nopf: "ℕ",
      nopf: "𝕟",
      Not: "⫬",
      not: "¬",
      NotCongruent: "≢",
      NotCupCap: "≭",
      NotDoubleVerticalBar: "∦",
      NotElement: "∉",
      NotEqual: "≠",
      NotEqualTilde: "≂̸",
      NotExists: "∄",
      NotGreater: "≯",
      NotGreaterEqual: "≱",
      NotGreaterFullEqual: "≧̸",
      NotGreaterGreater: "≫̸",
      NotGreaterLess: "≹",
      NotGreaterSlantEqual: "⩾̸",
      NotGreaterTilde: "≵",
      NotHumpDownHump: "≎̸",
      NotHumpEqual: "≏̸",
      notin: "∉",
      notindot: "⋵̸",
      notinE: "⋹̸",
      notinva: "∉",
      notinvb: "⋷",
      notinvc: "⋶",
      NotLeftTriangle: "⋪",
      NotLeftTriangleBar: "⧏̸",
      NotLeftTriangleEqual: "⋬",
      NotLess: "≮",
      NotLessEqual: "≰",
      NotLessGreater: "≸",
      NotLessLess: "≪̸",
      NotLessSlantEqual: "⩽̸",
      NotLessTilde: "≴",
      NotNestedGreaterGreater: "⪢̸",
      NotNestedLessLess: "⪡̸",
      notni: "∌",
      notniva: "∌",
      notnivb: "⋾",
      notnivc: "⋽",
      NotPrecedes: "⊀",
      NotPrecedesEqual: "⪯̸",
      NotPrecedesSlantEqual: "⋠",
      NotReverseElement: "∌",
      NotRightTriangle: "⋫",
      NotRightTriangleBar: "⧐̸",
      NotRightTriangleEqual: "⋭",
      NotSquareSubset: "⊏̸",
      NotSquareSubsetEqual: "⋢",
      NotSquareSuperset: "⊐̸",
      NotSquareSupersetEqual: "⋣",
      NotSubset: "⊂⃒",
      NotSubsetEqual: "⊈",
      NotSucceeds: "⊁",
      NotSucceedsEqual: "⪰̸",
      NotSucceedsSlantEqual: "⋡",
      NotSucceedsTilde: "≿̸",
      NotSuperset: "⊃⃒",
      NotSupersetEqual: "⊉",
      NotTilde: "≁",
      NotTildeEqual: "≄",
      NotTildeFullEqual: "≇",
      NotTildeTilde: "≉",
      NotVerticalBar: "∤",
      npar: "∦",
      nparallel: "∦",
      nparsl: "⫽⃥",
      npart: "∂̸",
      npolint: "⨔",
      npr: "⊀",
      nprcue: "⋠",
      npre: "⪯̸",
      nprec: "⊀",
      npreceq: "⪯̸",
      nrArr: "⇏",
      nrarr: "↛",
      nrarrc: "⤳̸",
      nrarrw: "↝̸",
      nRightarrow: "⇏",
      nrightarrow: "↛",
      nrtri: "⋫",
      nrtrie: "⋭",
      nsc: "⊁",
      nsccue: "⋡",
      nsce: "⪰̸",
      Nscr: "𝒩",
      nscr: "𝓃",
      nshortmid: "∤",
      nshortparallel: "∦",
      nsim: "≁",
      nsime: "≄",
      nsimeq: "≄",
      nsmid: "∤",
      nspar: "∦",
      nsqsube: "⋢",
      nsqsupe: "⋣",
      nsub: "⊄",
      nsubE: "⫅̸",
      nsube: "⊈",
      nsubset: "⊂⃒",
      nsubseteq: "⊈",
      nsubseteqq: "⫅̸",
      nsucc: "⊁",
      nsucceq: "⪰̸",
      nsup: "⊅",
      nsupE: "⫆̸",
      nsupe: "⊉",
      nsupset: "⊃⃒",
      nsupseteq: "⊉",
      nsupseteqq: "⫆̸",
      ntgl: "≹",
      Ntilde: "Ñ",
      ntilde: "ñ",
      ntlg: "≸",
      ntriangleleft: "⋪",
      ntrianglelefteq: "⋬",
      ntriangleright: "⋫",
      ntrianglerighteq: "⋭",
      Nu: "Ν",
      nu: "ν",
      num: "#",
      numero: "№",
      numsp: " ",
      nvap: "≍⃒",
      nVDash: "⊯",
      nVdash: "⊮",
      nvDash: "⊭",
      nvdash: "⊬",
      nvge: "≥⃒",
      nvgt: ">⃒",
      nvHarr: "⤄",
      nvinfin: "⧞",
      nvlArr: "⤂",
      nvle: "≤⃒",
      nvlt: "<⃒",
      nvltrie: "⊴⃒",
      nvrArr: "⤃",
      nvrtrie: "⊵⃒",
      nvsim: "∼⃒",
      nwarhk: "⤣",
      nwArr: "⇖",
      nwarr: "↖",
      nwarrow: "↖",
      nwnear: "⤧",
      Oacute: "Ó",
      oacute: "ó",
      oast: "⊛",
      ocir: "⊚",
      Ocirc: "Ô",
      ocirc: "ô",
      Ocy: "О",
      ocy: "о",
      odash: "⊝",
      Odblac: "Ő",
      odblac: "ő",
      odiv: "⨸",
      odot: "⊙",
      odsold: "⦼",
      OElig: "Œ",
      oelig: "œ",
      ofcir: "⦿",
      Ofr: "𝔒",
      ofr: "𝔬",
      ogon: "˛",
      Ograve: "Ò",
      ograve: "ò",
      ogt: "⧁",
      ohbar: "⦵",
      ohm: "Ω",
      oint: "∮",
      olarr: "↺",
      olcir: "⦾",
      olcross: "⦻",
      oline: "‾",
      olt: "⧀",
      Omacr: "Ō",
      omacr: "ō",
      Omega: "Ω",
      omega: "ω",
      Omicron: "Ο",
      omicron: "ο",
      omid: "⦶",
      ominus: "⊖",
      Oopf: "𝕆",
      oopf: "𝕠",
      opar: "⦷",
      OpenCurlyDoubleQuote: "“",
      OpenCurlyQuote: "‘",
      operp: "⦹",
      oplus: "⊕",
      Or: "⩔",
      or: "∨",
      orarr: "↻",
      ord: "⩝",
      order: "ℴ",
      orderof: "ℴ",
      ordf: "ª",
      ordm: "º",
      origof: "⊶",
      oror: "⩖",
      orslope: "⩗",
      orv: "⩛",
      oS: "Ⓢ",
      Oscr: "𝒪",
      oscr: "ℴ",
      Oslash: "Ø",
      oslash: "ø",
      osol: "⊘",
      Otilde: "Õ",
      otilde: "õ",
      Otimes: "⨷",
      otimes: "⊗",
      otimesas: "⨶",
      Ouml: "Ö",
      ouml: "ö",
      ovbar: "⌽",
      OverBar: "‾",
      OverBrace: "⏞",
      OverBracket: "⎴",
      OverParenthesis: "⏜",
      par: "∥",
      para: "¶",
      parallel: "∥",
      parsim: "⫳",
      parsl: "⫽",
      part: "∂",
      PartialD: "∂",
      Pcy: "П",
      pcy: "п",
      percnt: "%",
      period: ".",
      permil: "‰",
      perp: "⊥",
      pertenk: "‱",
      Pfr: "𝔓",
      pfr: "𝔭",
      Phi: "Φ",
      phi: "φ",
      phiv: "ϕ",
      phmmat: "ℳ",
      phone: "☎",
      Pi: "Π",
      pi: "π",
      pitchfork: "⋔",
      piv: "ϖ",
      planck: "ℏ",
      planckh: "ℎ",
      plankv: "ℏ",
      plus: "+",
      plusacir: "⨣",
      plusb: "⊞",
      pluscir: "⨢",
      plusdo: "∔",
      plusdu: "⨥",
      pluse: "⩲",
      PlusMinus: "±",
      plusmn: "±",
      plussim: "⨦",
      plustwo: "⨧",
      pm: "±",
      Poincareplane: "ℌ",
      pointint: "⨕",
      Popf: "ℙ",
      popf: "𝕡",
      pound: "£",
      Pr: "⪻",
      pr: "≺",
      prap: "⪷",
      prcue: "≼",
      prE: "⪳",
      pre: "⪯",
      prec: "≺",
      precapprox: "⪷",
      preccurlyeq: "≼",
      Precedes: "≺",
      PrecedesEqual: "⪯",
      PrecedesSlantEqual: "≼",
      PrecedesTilde: "≾",
      preceq: "⪯",
      precnapprox: "⪹",
      precneqq: "⪵",
      precnsim: "⋨",
      precsim: "≾",
      Prime: "″",
      prime: "′",
      primes: "ℙ",
      prnap: "⪹",
      prnE: "⪵",
      prnsim: "⋨",
      prod: "∏",
      Product: "∏",
      profalar: "⌮",
      profline: "⌒",
      profsurf: "⌓",
      prop: "∝",
      Proportion: "∷",
      Proportional: "∝",
      propto: "∝",
      prsim: "≾",
      prurel: "⊰",
      Pscr: "𝒫",
      pscr: "𝓅",
      Psi: "Ψ",
      psi: "ψ",
      puncsp: " ",
      Qfr: "𝔔",
      qfr: "𝔮",
      qint: "⨌",
      Qopf: "ℚ",
      qopf: "𝕢",
      qprime: "⁗",
      Qscr: "𝒬",
      qscr: "𝓆",
      quaternions: "ℍ",
      quatint: "⨖",
      quest: "?",
      questeq: "≟",
      QUOT: '"',
      quot: '"',
      rAarr: "⇛",
      race: "∽̱",
      Racute: "Ŕ",
      racute: "ŕ",
      radic: "√",
      raemptyv: "⦳",
      Rang: "⟫",
      rang: "⟩",
      rangd: "⦒",
      range: "⦥",
      rangle: "⟩",
      raquo: "»",
      Rarr: "↠",
      rArr: "⇒",
      rarr: "→",
      rarrap: "⥵",
      rarrb: "⇥",
      rarrbfs: "⤠",
      rarrc: "⤳",
      rarrfs: "⤞",
      rarrhk: "↪",
      rarrlp: "↬",
      rarrpl: "⥅",
      rarrsim: "⥴",
      Rarrtl: "⤖",
      rarrtl: "↣",
      rarrw: "↝",
      rAtail: "⤜",
      ratail: "⤚",
      ratio: "∶",
      rationals: "ℚ",
      RBarr: "⤐",
      rBarr: "⤏",
      rbarr: "⤍",
      rbbrk: "❳",
      rbrace: "}",
      rbrack: "]",
      rbrke: "⦌",
      rbrksld: "⦎",
      rbrkslu: "⦐",
      Rcaron: "Ř",
      rcaron: "ř",
      Rcedil: "Ŗ",
      rcedil: "ŗ",
      rceil: "⌉",
      rcub: "}",
      Rcy: "Р",
      rcy: "р",
      rdca: "⤷",
      rdldhar: "⥩",
      rdquo: "”",
      rdquor: "”",
      rdsh: "↳",
      Re: "ℜ",
      real: "ℜ",
      realine: "ℛ",
      realpart: "ℜ",
      reals: "ℝ",
      rect: "▭",
      REG: "®",
      reg: "®",
      ReverseElement: "∋",
      ReverseEquilibrium: "⇋",
      ReverseUpEquilibrium: "⥯",
      rfisht: "⥽",
      rfloor: "⌋",
      Rfr: "ℜ",
      rfr: "𝔯",
      rHar: "⥤",
      rhard: "⇁",
      rharu: "⇀",
      rharul: "⥬",
      Rho: "Ρ",
      rho: "ρ",
      rhov: "ϱ",
      RightAngleBracket: "⟩",
      RightArrow: "→",
      Rightarrow: "⇒",
      rightarrow: "→",
      RightArrowBar: "⇥",
      RightArrowLeftArrow: "⇄",
      rightarrowtail: "↣",
      RightCeiling: "⌉",
      RightDoubleBracket: "⟧",
      RightDownTeeVector: "⥝",
      RightDownVector: "⇂",
      RightDownVectorBar: "⥕",
      RightFloor: "⌋",
      rightharpoondown: "⇁",
      rightharpoonup: "⇀",
      rightleftarrows: "⇄",
      rightleftharpoons: "⇌",
      rightrightarrows: "⇉",
      rightsquigarrow: "↝",
      RightTee: "⊢",
      RightTeeArrow: "↦",
      RightTeeVector: "⥛",
      rightthreetimes: "⋌",
      RightTriangle: "⊳",
      RightTriangleBar: "⧐",
      RightTriangleEqual: "⊵",
      RightUpDownVector: "⥏",
      RightUpTeeVector: "⥜",
      RightUpVector: "↾",
      RightUpVectorBar: "⥔",
      RightVector: "⇀",
      RightVectorBar: "⥓",
      ring: "˚",
      risingdotseq: "≓",
      rlarr: "⇄",
      rlhar: "⇌",
      rlm: "‏",
      rmoust: "⎱",
      rmoustache: "⎱",
      rnmid: "⫮",
      roang: "⟭",
      roarr: "⇾",
      robrk: "⟧",
      ropar: "⦆",
      Ropf: "ℝ",
      ropf: "𝕣",
      roplus: "⨮",
      rotimes: "⨵",
      RoundImplies: "⥰",
      rpar: ")",
      rpargt: "⦔",
      rppolint: "⨒",
      rrarr: "⇉",
      Rrightarrow: "⇛",
      rsaquo: "›",
      Rscr: "ℛ",
      rscr: "𝓇",
      Rsh: "↱",
      rsh: "↱",
      rsqb: "]",
      rsquo: "’",
      rsquor: "’",
      rthree: "⋌",
      rtimes: "⋊",
      rtri: "▹",
      rtrie: "⊵",
      rtrif: "▸",
      rtriltri: "⧎",
      RuleDelayed: "⧴",
      ruluhar: "⥨",
      rx: "℞",
      Sacute: "Ś",
      sacute: "ś",
      sbquo: "‚",
      Sc: "⪼",
      sc: "≻",
      scap: "⪸",
      Scaron: "Š",
      scaron: "š",
      sccue: "≽",
      scE: "⪴",
      sce: "⪰",
      Scedil: "Ş",
      scedil: "ş",
      Scirc: "Ŝ",
      scirc: "ŝ",
      scnap: "⪺",
      scnE: "⪶",
      scnsim: "⋩",
      scpolint: "⨓",
      scsim: "≿",
      Scy: "С",
      scy: "с",
      sdot: "⋅",
      sdotb: "⊡",
      sdote: "⩦",
      searhk: "⤥",
      seArr: "⇘",
      searr: "↘",
      searrow: "↘",
      sect: "§",
      semi: ";",
      seswar: "⤩",
      setminus: "∖",
      setmn: "∖",
      sext: "✶",
      Sfr: "𝔖",
      sfr: "𝔰",
      sfrown: "⌢",
      sharp: "♯",
      SHCHcy: "Щ",
      shchcy: "щ",
      SHcy: "Ш",
      shcy: "ш",
      ShortDownArrow: "↓",
      ShortLeftArrow: "←",
      shortmid: "∣",
      shortparallel: "∥",
      ShortRightArrow: "→",
      ShortUpArrow: "↑",
      shy: "­",
      Sigma: "Σ",
      sigma: "σ",
      sigmaf: "ς",
      sigmav: "ς",
      sim: "∼",
      simdot: "⩪",
      sime: "≃",
      simeq: "≃",
      simg: "⪞",
      simgE: "⪠",
      siml: "⪝",
      simlE: "⪟",
      simne: "≆",
      simplus: "⨤",
      simrarr: "⥲",
      slarr: "←",
      SmallCircle: "∘",
      smallsetminus: "∖",
      smashp: "⨳",
      smeparsl: "⧤",
      smid: "∣",
      smile: "⌣",
      smt: "⪪",
      smte: "⪬",
      smtes: "⪬︀",
      SOFTcy: "Ь",
      softcy: "ь",
      sol: "/",
      solb: "⧄",
      solbar: "⌿",
      Sopf: "𝕊",
      sopf: "𝕤",
      spades: "♠",
      spadesuit: "♠",
      spar: "∥",
      sqcap: "⊓",
      sqcaps: "⊓︀",
      sqcup: "⊔",
      sqcups: "⊔︀",
      Sqrt: "√",
      sqsub: "⊏",
      sqsube: "⊑",
      sqsubset: "⊏",
      sqsubseteq: "⊑",
      sqsup: "⊐",
      sqsupe: "⊒",
      sqsupset: "⊐",
      sqsupseteq: "⊒",
      squ: "□",
      Square: "□",
      square: "□",
      SquareIntersection: "⊓",
      SquareSubset: "⊏",
      SquareSubsetEqual: "⊑",
      SquareSuperset: "⊐",
      SquareSupersetEqual: "⊒",
      SquareUnion: "⊔",
      squarf: "▪",
      squf: "▪",
      srarr: "→",
      Sscr: "𝒮",
      sscr: "𝓈",
      ssetmn: "∖",
      ssmile: "⌣",
      sstarf: "⋆",
      Star: "⋆",
      star: "☆",
      starf: "★",
      straightepsilon: "ϵ",
      straightphi: "ϕ",
      strns: "¯",
      Sub: "⋐",
      sub: "⊂",
      subdot: "⪽",
      subE: "⫅",
      sube: "⊆",
      subedot: "⫃",
      submult: "⫁",
      subnE: "⫋",
      subne: "⊊",
      subplus: "⪿",
      subrarr: "⥹",
      Subset: "⋐",
      subset: "⊂",
      subseteq: "⊆",
      subseteqq: "⫅",
      SubsetEqual: "⊆",
      subsetneq: "⊊",
      subsetneqq: "⫋",
      subsim: "⫇",
      subsub: "⫕",
      subsup: "⫓",
      succ: "≻",
      succapprox: "⪸",
      succcurlyeq: "≽",
      Succeeds: "≻",
      SucceedsEqual: "⪰",
      SucceedsSlantEqual: "≽",
      SucceedsTilde: "≿",
      succeq: "⪰",
      succnapprox: "⪺",
      succneqq: "⪶",
      succnsim: "⋩",
      succsim: "≿",
      SuchThat: "∋",
      Sum: "∑",
      sum: "∑",
      sung: "♪",
      Sup: "⋑",
      sup: "⊃",
      sup1: "¹",
      sup2: "²",
      sup3: "³",
      supdot: "⪾",
      supdsub: "⫘",
      supE: "⫆",
      supe: "⊇",
      supedot: "⫄",
      Superset: "⊃",
      SupersetEqual: "⊇",
      suphsol: "⟉",
      suphsub: "⫗",
      suplarr: "⥻",
      supmult: "⫂",
      supnE: "⫌",
      supne: "⊋",
      supplus: "⫀",
      Supset: "⋑",
      supset: "⊃",
      supseteq: "⊇",
      supseteqq: "⫆",
      supsetneq: "⊋",
      supsetneqq: "⫌",
      supsim: "⫈",
      supsub: "⫔",
      supsup: "⫖",
      swarhk: "⤦",
      swArr: "⇙",
      swarr: "↙",
      swarrow: "↙",
      swnwar: "⤪",
      szlig: "ß",
      Tab: "	",
      target: "⌖",
      Tau: "Τ",
      tau: "τ",
      tbrk: "⎴",
      Tcaron: "Ť",
      tcaron: "ť",
      Tcedil: "Ţ",
      tcedil: "ţ",
      Tcy: "Т",
      tcy: "т",
      tdot: "⃛",
      telrec: "⌕",
      Tfr: "𝔗",
      tfr: "𝔱",
      there4: "∴",
      Therefore: "∴",
      therefore: "∴",
      Theta: "Θ",
      theta: "θ",
      thetasym: "ϑ",
      thetav: "ϑ",
      thickapprox: "≈",
      thicksim: "∼",
      ThickSpace: "  ",
      thinsp: " ",
      ThinSpace: " ",
      thkap: "≈",
      thksim: "∼",
      THORN: "Þ",
      thorn: "þ",
      Tilde: "∼",
      tilde: "˜",
      TildeEqual: "≃",
      TildeFullEqual: "≅",
      TildeTilde: "≈",
      times: "×",
      timesb: "⊠",
      timesbar: "⨱",
      timesd: "⨰",
      tint: "∭",
      toea: "⤨",
      top: "⊤",
      topbot: "⌶",
      topcir: "⫱",
      Topf: "𝕋",
      topf: "𝕥",
      topfork: "⫚",
      tosa: "⤩",
      tprime: "‴",
      TRADE: "™",
      trade: "™",
      triangle: "▵",
      triangledown: "▿",
      triangleleft: "◃",
      trianglelefteq: "⊴",
      triangleq: "≜",
      triangleright: "▹",
      trianglerighteq: "⊵",
      tridot: "◬",
      trie: "≜",
      triminus: "⨺",
      TripleDot: "⃛",
      triplus: "⨹",
      trisb: "⧍",
      tritime: "⨻",
      trpezium: "⏢",
      Tscr: "𝒯",
      tscr: "𝓉",
      TScy: "Ц",
      tscy: "ц",
      TSHcy: "Ћ",
      tshcy: "ћ",
      Tstrok: "Ŧ",
      tstrok: "ŧ",
      twixt: "≬",
      twoheadleftarrow: "↞",
      twoheadrightarrow: "↠",
      Uacute: "Ú",
      uacute: "ú",
      Uarr: "↟",
      uArr: "⇑",
      uarr: "↑",
      Uarrocir: "⥉",
      Ubrcy: "Ў",
      ubrcy: "ў",
      Ubreve: "Ŭ",
      ubreve: "ŭ",
      Ucirc: "Û",
      ucirc: "û",
      Ucy: "У",
      ucy: "у",
      udarr: "⇅",
      Udblac: "Ű",
      udblac: "ű",
      udhar: "⥮",
      ufisht: "⥾",
      Ufr: "𝔘",
      ufr: "𝔲",
      Ugrave: "Ù",
      ugrave: "ù",
      uHar: "⥣",
      uharl: "↿",
      uharr: "↾",
      uhblk: "▀",
      ulcorn: "⌜",
      ulcorner: "⌜",
      ulcrop: "⌏",
      ultri: "◸",
      Umacr: "Ū",
      umacr: "ū",
      uml: "¨",
      UnderBar: "_",
      UnderBrace: "⏟",
      UnderBracket: "⎵",
      UnderParenthesis: "⏝",
      Union: "⋃",
      UnionPlus: "⊎",
      Uogon: "Ų",
      uogon: "ų",
      Uopf: "𝕌",
      uopf: "𝕦",
      UpArrow: "↑",
      Uparrow: "⇑",
      uparrow: "↑",
      UpArrowBar: "⤒",
      UpArrowDownArrow: "⇅",
      UpDownArrow: "↕",
      Updownarrow: "⇕",
      updownarrow: "↕",
      UpEquilibrium: "⥮",
      upharpoonleft: "↿",
      upharpoonright: "↾",
      uplus: "⊎",
      UpperLeftArrow: "↖",
      UpperRightArrow: "↗",
      Upsi: "ϒ",
      upsi: "υ",
      upsih: "ϒ",
      Upsilon: "Υ",
      upsilon: "υ",
      UpTee: "⊥",
      UpTeeArrow: "↥",
      upuparrows: "⇈",
      urcorn: "⌝",
      urcorner: "⌝",
      urcrop: "⌎",
      Uring: "Ů",
      uring: "ů",
      urtri: "◹",
      Uscr: "𝒰",
      uscr: "𝓊",
      utdot: "⋰",
      Utilde: "Ũ",
      utilde: "ũ",
      utri: "▵",
      utrif: "▴",
      uuarr: "⇈",
      Uuml: "Ü",
      uuml: "ü",
      uwangle: "⦧",
      vangrt: "⦜",
      varepsilon: "ϵ",
      varkappa: "ϰ",
      varnothing: "∅",
      varphi: "ϕ",
      varpi: "ϖ",
      varpropto: "∝",
      vArr: "⇕",
      varr: "↕",
      varrho: "ϱ",
      varsigma: "ς",
      varsubsetneq: "⊊︀",
      varsubsetneqq: "⫋︀",
      varsupsetneq: "⊋︀",
      varsupsetneqq: "⫌︀",
      vartheta: "ϑ",
      vartriangleleft: "⊲",
      vartriangleright: "⊳",
      Vbar: "⫫",
      vBar: "⫨",
      vBarv: "⫩",
      Vcy: "В",
      vcy: "в",
      VDash: "⊫",
      Vdash: "⊩",
      vDash: "⊨",
      vdash: "⊢",
      Vdashl: "⫦",
      Vee: "⋁",
      vee: "∨",
      veebar: "⊻",
      veeeq: "≚",
      vellip: "⋮",
      Verbar: "‖",
      verbar: "|",
      Vert: "‖",
      vert: "|",
      VerticalBar: "∣",
      VerticalLine: "|",
      VerticalSeparator: "❘",
      VerticalTilde: "≀",
      VeryThinSpace: " ",
      Vfr: "𝔙",
      vfr: "𝔳",
      vltri: "⊲",
      vnsub: "⊂⃒",
      vnsup: "⊃⃒",
      Vopf: "𝕍",
      vopf: "𝕧",
      vprop: "∝",
      vrtri: "⊳",
      Vscr: "𝒱",
      vscr: "𝓋",
      vsubnE: "⫋︀",
      vsubne: "⊊︀",
      vsupnE: "⫌︀",
      vsupne: "⊋︀",
      Vvdash: "⊪",
      vzigzag: "⦚",
      Wcirc: "Ŵ",
      wcirc: "ŵ",
      wedbar: "⩟",
      Wedge: "⋀",
      wedge: "∧",
      wedgeq: "≙",
      weierp: "℘",
      Wfr: "𝔚",
      wfr: "𝔴",
      Wopf: "𝕎",
      wopf: "𝕨",
      wp: "℘",
      wr: "≀",
      wreath: "≀",
      Wscr: "𝒲",
      wscr: "𝓌",
      xcap: "⋂",
      xcirc: "◯",
      xcup: "⋃",
      xdtri: "▽",
      Xfr: "𝔛",
      xfr: "𝔵",
      xhArr: "⟺",
      xharr: "⟷",
      Xi: "Ξ",
      xi: "ξ",
      xlArr: "⟸",
      xlarr: "⟵",
      xmap: "⟼",
      xnis: "⋻",
      xodot: "⨀",
      Xopf: "𝕏",
      xopf: "𝕩",
      xoplus: "⨁",
      xotime: "⨂",
      xrArr: "⟹",
      xrarr: "⟶",
      Xscr: "𝒳",
      xscr: "𝓍",
      xsqcup: "⨆",
      xuplus: "⨄",
      xutri: "△",
      xvee: "⋁",
      xwedge: "⋀",
      Yacute: "Ý",
      yacute: "ý",
      YAcy: "Я",
      yacy: "я",
      Ycirc: "Ŷ",
      ycirc: "ŷ",
      Ycy: "Ы",
      ycy: "ы",
      yen: "¥",
      Yfr: "𝔜",
      yfr: "𝔶",
      YIcy: "Ї",
      yicy: "ї",
      Yopf: "𝕐",
      yopf: "𝕪",
      Yscr: "𝒴",
      yscr: "𝓎",
      YUcy: "Ю",
      yucy: "ю",
      Yuml: "Ÿ",
      yuml: "ÿ",
      Zacute: "Ź",
      zacute: "ź",
      Zcaron: "Ž",
      zcaron: "ž",
      Zcy: "З",
      zcy: "з",
      Zdot: "Ż",
      zdot: "ż",
      zeetrf: "ℨ",
      ZeroWidthSpace: "​",
      Zeta: "Ζ",
      zeta: "ζ",
      Zfr: "ℨ",
      zfr: "𝔷",
      ZHcy: "Ж",
      zhcy: "ж",
      zigrarr: "⇝",
      Zopf: "ℤ",
      zopf: "𝕫",
      Zscr: "𝒵",
      zscr: "𝓏",
      zwj: "‍",
      zwnj: "‌"
    }), t.entityMap = t.HTML_ENTITIES;
  }(Rd)), Rd;
}
var Na = {}, Zg;
function RC() {
  if (Zg) return Na;
  Zg = 1;
  var t = oa(), e = jy(), n = Ru(), r = t.isHTMLEscapableRawTextElement, i = t.isHTMLMimeType, o = t.isHTMLRawTextElement, s = t.hasOwn, a = t.NAMESPACE, l = n.ParseError, c = n.DOMException, u = 0, f = 1, d = 2, h = 3, g = 4, m = 5, b = 6, _ = 7;
  function y() {
  }
  y.prototype = {
    parse: function(T, A, B) {
      var V = this.domBuilder;
      V.startDocument(), M(A, A = /* @__PURE__ */ Object.create(null)), D(T, A, B, V, this.errorHandler), V.endDocument();
    }
  };
  var C = /&#?\w+;?/g;
  function D(T, A, B, V, J) {
    var H = i(V.mimeType);
    T.indexOf(e.UNICODE_REPLACEMENT_CHARACTER) >= 0 && J.warning("Unicode replacement character detected, source encoding issues?");
    function K(Ce) {
      if (Ce > 65535) {
        Ce -= 65536;
        var Qe = 55296 + (Ce >> 10), Mt = 56320 + (Ce & 1023);
        return String.fromCharCode(Qe, Mt);
      } else
        return String.fromCharCode(Ce);
    }
    function ne(Ce) {
      var Qe = Ce[Ce.length - 1] === ";" ? Ce : Ce + ";";
      if (!H && Qe !== Ce)
        return J.error("EntityRef: expecting ;"), Ce;
      var Mt = e.Reference.exec(Qe);
      if (!Mt || Mt[0].length !== Qe.length)
        return J.error("entity not matching Reference production: " + Ce), Ce;
      var Bt = Qe.slice(1, -1);
      return s(B, Bt) ? B[Bt] : Bt.charAt(0) === "#" ? K(parseInt(Bt.substring(1).replace("x", "0x"))) : (J.error("entity not found:" + Ce), Ce);
    }
    function re(Ce) {
      if (Ce > Ee) {
        var Qe = T.substring(Ee, Ce).replace(C, ne);
        pe && me(Ee), V.characters(Qe, 0, Ce - Ee), Ee = Ce;
      }
    }
    var te = 0, Q = 0, ce = /\r\n?|\n|$/g, pe = V.locator;
    function me(Ce, Qe) {
      for (; Ce >= Q && (Qe = ce.exec(T)); )
        te = Q, Q = Qe.index + Qe[0].length, pe.lineNumber++;
      pe.columnNumber = Ce - te + 1;
    }
    for (var ye = [{ currentNSMap: A }], ve = [], Ee = 0; ; ) {
      try {
        var de = T.indexOf("<", Ee);
        if (de < 0) {
          if (!H && ve.length > 0)
            return J.fatalError("unclosed xml tag(s): " + ve.join(", "));
          if (!T.substring(Ee).match(/^\s*$/)) {
            var Re = V.doc, He = Re.createTextNode(T.substring(Ee));
            if (Re.documentElement)
              return J.error("Extra content at the end of the document");
            Re.appendChild(He), V.currentElement = He;
          }
          return;
        }
        if (de > Ee) {
          var ae = T.substring(Ee, de);
          !H && ve.length === 0 && (ae = ae.replace(new RegExp(e.S_OPT.source, "g"), ""), ae && J.error("Unexpected content outside root element: '" + ae + "'")), re(de);
        }
        switch (T.charAt(de + 1)) {
          case "/":
            var ct = T.indexOf(">", de + 2), Te = T.substring(de + 2, ct > 0 ? ct : void 0);
            if (!Te)
              return J.fatalError("end tag name missing");
            var Be = ct > 0 && e.reg("^", e.QName_group, e.S_OPT, "$").exec(Te);
            if (!Be)
              return J.fatalError('end tag name contains invalid characters: "' + Te + '"');
            if (!V.currentElement && !V.doc.documentElement)
              return;
            var Ge = ve[ve.length - 1] || V.currentElement.tagName || V.doc.documentElement.tagName || "";
            if (Ge !== Be[1]) {
              var rt = Be[1].toLowerCase();
              if (!H || Ge.toLowerCase() !== rt)
                return J.fatalError('Opening and ending tag mismatch: "' + Ge + '" != "' + Te + '"');
            }
            var vt = ye.pop();
            ve.pop();
            var wt = vt.localNSMap;
            if (V.endElement(vt.uri, vt.localName, Ge), wt)
              for (var Et in wt)
                s(wt, Et) && V.endPrefixMapping(Et);
            ct++;
            break;
          // end element
          case "?":
            pe && me(de), ct = S(T, de, V, J);
            break;
          case "!":
            pe && me(de), ct = I(T, de, V, J, H);
            break;
          default:
            pe && me(de);
            var $e = new P(), Dt = ye[ye.length - 1].currentNSMap, ct = N(T, de, $e, Dt, ne, J, H), lr = $e.length;
            if ($e.closed || (H && t.isHTMLVoidElement($e.tagName) ? $e.closed = !0 : ve.push($e.tagName)), pe && lr) {
              for (var Pn = R(pe, {}), kn = 0; kn < lr; kn++) {
                var Ln = $e[kn];
                me(Ln.offset), Ln.locator = R(pe, {});
              }
              V.locator = Pn, L($e, V, Dt) && ye.push($e), V.locator = pe;
            } else
              L($e, V, Dt) && ye.push($e);
            H && !$e.closed ? ct = O(T, ct, $e.tagName, ne, V) : ct++;
        }
      } catch (Ce) {
        if (Ce instanceof l)
          throw Ce;
        if (Ce instanceof c)
          throw new l(Ce.name + ": " + Ce.message, V.locator, Ce);
        J.error("element parse error: " + Ce), ct = -1;
      }
      ct > Ee ? Ee = ct : re(Math.max(de, Ee) + 1);
    }
  }
  function R(T, A) {
    return A.lineNumber = T.lineNumber, A.columnNumber = T.columnNumber, A;
  }
  function N(T, A, B, V, J, H, K) {
    function ne(me, ye, ve) {
      if (s(B.attributeNames, me))
        return H.fatalError("Attribute " + me + " redefined");
      if (!K && ye.indexOf("<") >= 0)
        return H.fatalError("Unescaped '<' not allowed in attributes values");
      B.addValue(
        me,
        // @see https://www.w3.org/TR/xml/#AVNormalize
        // since the xmldom sax parser does not "interpret" DTD the following is not implemented:
        // - recursive replacement of (DTD) entity references
        // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA
        ye.replace(/[\t\n\r]/g, " ").replace(C, J),
        ve
      );
    }
    for (var re, te, Q = ++A, ce = u; ; ) {
      var pe = T.charAt(Q);
      switch (pe) {
        case "=":
          if (ce === f)
            re = T.slice(A, Q), ce = h;
          else if (ce === d)
            ce = h;
          else
            throw new Error("attribute equal must after attrName");
          break;
        case "'":
        case '"':
          if (ce === h || ce === f)
            if (ce === f && (H.warning('attribute value must after "="'), re = T.slice(A, Q)), A = Q + 1, Q = T.indexOf(pe, A), Q > 0)
              te = T.slice(A, Q), ne(re, te, A - 1), ce = m;
            else
              throw new Error("attribute value no end '" + pe + "' match");
          else if (ce == g)
            te = T.slice(A, Q), ne(re, te, A), H.warning('attribute "' + re + '" missed start quot(' + pe + ")!!"), A = Q + 1, ce = m;
          else
            throw new Error('attribute value must after "="');
          break;
        case "/":
          switch (ce) {
            case u:
              B.setTagName(T.slice(A, Q));
            case m:
            case b:
            case _:
              ce = _, B.closed = !0;
            case g:
            case f:
              break;
            case d:
              B.closed = !0;
              break;
            //case S_EQ:
            default:
              throw new Error("attribute invalid close char('/')");
          }
          break;
        case "":
          return H.error("unexpected end of input"), ce == u && B.setTagName(T.slice(A, Q)), Q;
        case ">":
          switch (ce) {
            case u:
              B.setTagName(T.slice(A, Q));
            case m:
            case b:
            case _:
              break;
            //normal
            case g:
            //Compatible state
            case f:
              te = T.slice(A, Q), te.slice(-1) === "/" && (B.closed = !0, te = te.slice(0, -1));
            case d:
              ce === d && (te = re), ce == g ? (H.warning('attribute "' + te + '" missed quot(")!'), ne(re, te, A)) : (K || H.warning('attribute "' + te + '" missed value!! "' + te + '" instead!!'), ne(te, te, A));
              break;
            case h:
              if (!K)
                return H.fatalError(`AttValue: ' or " expected`);
          }
          return Q;
        /*xml space '\x20' | #x9 | #xD | #xA; */
        case "":
          pe = " ";
        default:
          if (pe <= " ")
            switch (ce) {
              case u:
                B.setTagName(T.slice(A, Q)), ce = b;
                break;
              case f:
                re = T.slice(A, Q), ce = d;
                break;
              case g:
                var te = T.slice(A, Q);
                H.warning('attribute "' + te + '" missed quot(")!!'), ne(re, te, A);
              case m:
                ce = b;
                break;
            }
          else
            switch (ce) {
              //case S_TAG:void();break;
              //case S_ATTR:void();break;
              //case S_ATTR_NOQUOT_VALUE:void();break;
              case d:
                K || H.warning('attribute "' + re + '" missed value!! "' + re + '" instead2!!'), ne(re, re, A), A = Q, ce = f;
                break;
              case m:
                H.warning('attribute space is required"' + re + '"!!');
              case b:
                ce = f, A = Q;
                break;
              case h:
                ce = g, A = Q;
                break;
              case _:
                throw new Error("elements closed character '/' and '>' must be connected to");
            }
      }
      Q++;
    }
  }
  function L(T, A, B) {
    for (var V = T.tagName, J = null, ce = T.length; ce--; ) {
      var H = T[ce], K = H.qName, ne = H.value, pe = K.indexOf(":");
      if (pe > 0)
        var re = H.prefix = K.slice(0, pe), te = K.slice(pe + 1), Q = re === "xmlns" && te;
      else
        te = K, re = null, Q = K === "xmlns" && "";
      H.localName = te, Q !== !1 && (J == null && (J = /* @__PURE__ */ Object.create(null), M(B, B = /* @__PURE__ */ Object.create(null))), B[Q] = J[Q] = ne, H.uri = a.XMLNS, A.startPrefixMapping(Q, ne));
    }
    for (var ce = T.length; ce--; )
      H = T[ce], H.prefix && (H.prefix === "xml" && (H.uri = a.XML), H.prefix !== "xmlns" && (H.uri = B[H.prefix]));
    var pe = V.indexOf(":");
    pe > 0 ? (re = T.prefix = V.slice(0, pe), te = T.localName = V.slice(pe + 1)) : (re = null, te = T.localName = V);
    var me = T.uri = B[re || ""];
    if (A.startElement(me, te, V, T), T.closed) {
      if (A.endElement(me, te, V), J)
        for (re in J)
          s(J, re) && A.endPrefixMapping(re);
    } else
      return T.currentNSMap = B, T.localNSMap = J, !0;
  }
  function O(T, A, B, V, J) {
    var H = r(B);
    if (H || o(B)) {
      var K = T.indexOf("</" + B + ">", A), ne = T.substring(A + 1, K);
      return H && (ne = ne.replace(C, V)), J.characters(ne, 0, ne.length), K;
    }
    return A + 1;
  }
  function M(T, A) {
    for (var B in T)
      s(T, B) && (A[B] = T[B]);
  }
  function q(T, A) {
    var B = A;
    function V(Q) {
      return Q = Q || 0, T.charAt(B + Q);
    }
    function J(Q) {
      Q = Q || 1, B += Q;
    }
    function H() {
      for (var Q = 0; B < T.length; ) {
        var ce = V();
        if (ce !== " " && ce !== `
` && ce !== "	" && ce !== "\r")
          return Q;
        Q++, J();
      }
      return -1;
    }
    function K() {
      return T.substring(B);
    }
    function ne(Q) {
      return T.substring(B, B + Q.length) === Q;
    }
    function re(Q) {
      return T.substring(B, B + Q.length).toUpperCase() === Q.toUpperCase();
    }
    function te(Q) {
      var ce = e.reg("^", Q), pe = ce.exec(K());
      return pe ? (J(pe[0].length), pe[0]) : null;
    }
    return {
      char: V,
      getIndex: function() {
        return B;
      },
      getMatch: te,
      getSource: function() {
        return T;
      },
      skip: J,
      skipBlanks: H,
      substringFromIndex: K,
      substringStartsWith: ne,
      substringStartsWithCaseInsensitive: re
    };
  }
  function k(T, A) {
    function B(ne, re) {
      var te = e.PI.exec(ne.substringFromIndex());
      return te ? te[1].toLowerCase() === "xml" ? re.fatalError(
        "xml declaration is only allowed at the start of the document, but found at position " + ne.getIndex()
      ) : (ne.skip(te[0].length), te[0]) : re.fatalError("processing instruction is not well-formed at position " + ne.getIndex());
    }
    var V = T.getSource();
    if (T.char() === "[") {
      T.skip(1);
      for (var J = T.getIndex(); T.getIndex() < V.length; ) {
        if (T.skipBlanks(), T.char() === "]") {
          var H = V.substring(J, T.getIndex());
          return T.skip(1), H;
        }
        var K = null;
        if (T.char() === "<" && T.char(1) === "!")
          switch (T.char(2)) {
            case "E":
              T.char(3) === "L" ? K = T.getMatch(e.elementdecl) : T.char(3) === "N" && (K = T.getMatch(e.EntityDecl));
              break;
            case "A":
              K = T.getMatch(e.AttlistDecl);
              break;
            case "N":
              K = T.getMatch(e.NotationDecl);
              break;
            case "-":
              K = T.getMatch(e.Comment);
              break;
          }
        else if (T.char() === "<" && T.char(1) === "?")
          K = B(T, A);
        else if (T.char() === "%")
          K = T.getMatch(e.PEReference);
        else
          return A.fatalError("Error detected in Markup declaration");
        if (!K)
          return A.fatalError("Error in internal subset at position " + T.getIndex());
      }
      return A.fatalError("doctype internal subset is not well-formed, missing ]");
    }
  }
  function I(T, A, B, V, J) {
    var H = q(T, A);
    switch (J ? H.char(2).toUpperCase() : H.char(2)) {
      case "-":
        var K = H.getMatch(e.Comment);
        return K ? (B.comment(K, e.COMMENT_START.length, K.length - e.COMMENT_START.length - e.COMMENT_END.length), H.getIndex()) : V.fatalError("comment is not well-formed at position " + H.getIndex());
      case "[":
        var ne = H.getMatch(e.CDSect);
        return ne ? !J && !B.currentElement ? V.fatalError("CDATA outside of element") : (B.startCDATA(), B.characters(ne, e.CDATA_START.length, ne.length - e.CDATA_START.length - e.CDATA_END.length), B.endCDATA(), H.getIndex()) : V.fatalError("Invalid CDATA starting at position " + A);
      case "D": {
        if (B.doc && B.doc.documentElement)
          return V.fatalError("Doctype not allowed inside or after documentElement at position " + H.getIndex());
        if (J ? !H.substringStartsWithCaseInsensitive(e.DOCTYPE_DECL_START) : !H.substringStartsWith(e.DOCTYPE_DECL_START))
          return V.fatalError("Expected " + e.DOCTYPE_DECL_START + " at position " + H.getIndex());
        if (H.skip(e.DOCTYPE_DECL_START.length), H.skipBlanks() < 1)
          return V.fatalError("Expected whitespace after " + e.DOCTYPE_DECL_START + " at position " + H.getIndex());
        var re = {
          name: void 0,
          publicId: void 0,
          systemId: void 0,
          internalSubset: void 0
        };
        if (re.name = H.getMatch(e.Name), !re.name)
          return V.fatalError("doctype name missing or contains unexpected characters at position " + H.getIndex());
        if (J && re.name.toLowerCase() !== "html" && V.warning("Unexpected DOCTYPE in HTML document at position " + H.getIndex()), H.skipBlanks(), H.substringStartsWith(e.PUBLIC) || H.substringStartsWith(e.SYSTEM)) {
          var te = e.ExternalID_match.exec(H.substringFromIndex());
          if (!te)
            return V.fatalError("doctype external id is not well-formed at position " + H.getIndex());
          te.groups.SystemLiteralOnly !== void 0 ? re.systemId = te.groups.SystemLiteralOnly : (re.systemId = te.groups.SystemLiteral, re.publicId = te.groups.PubidLiteral), H.skip(te[0].length);
        } else if (J && H.substringStartsWithCaseInsensitive(e.SYSTEM)) {
          if (H.skip(e.SYSTEM.length), H.skipBlanks() < 1)
            return V.fatalError("Expected whitespace after " + e.SYSTEM + " at position " + H.getIndex());
          if (re.systemId = H.getMatch(e.ABOUT_LEGACY_COMPAT_SystemLiteral), !re.systemId)
            return V.fatalError(
              "Expected " + e.ABOUT_LEGACY_COMPAT + " in single or double quotes after " + e.SYSTEM + " at position " + H.getIndex()
            );
        }
        return J && re.systemId && !e.ABOUT_LEGACY_COMPAT_SystemLiteral.test(re.systemId) && V.warning("Unexpected doctype.systemId in HTML document at position " + H.getIndex()), J || (H.skipBlanks(), re.internalSubset = k(H, V)), H.skipBlanks(), H.char() !== ">" ? V.fatalError("doctype not terminated with > at position " + H.getIndex()) : (H.skip(1), B.startDTD(re.name, re.publicId, re.systemId, re.internalSubset), B.endDTD(), H.getIndex());
      }
      default:
        return V.fatalError('Not well-formed XML starting with "<!" at position ' + A);
    }
  }
  function S(T, A, B, V) {
    var J = T.substring(A).match(e.PI);
    if (!J)
      return V.fatalError("Invalid processing instruction starting at position " + A);
    if (J[1].toLowerCase() === "xml") {
      if (A > 0)
        return V.fatalError(
          "processing instruction at position " + A + " is an xml declaration which is only at the start of the document"
        );
      if (!e.XMLDecl.test(T.substring(A)))
        return V.fatalError("xml declaration is not well-formed");
    }
    return B.processingInstruction(J[1], J[2]), A + J[0].length;
  }
  function P() {
    this.attributeNames = /* @__PURE__ */ Object.create(null);
  }
  return P.prototype = {
    setTagName: function(T) {
      if (!e.QName_exact.test(T))
        throw new Error("invalid tagName:" + T);
      this.tagName = T;
    },
    addValue: function(T, A, B) {
      if (!e.QName_exact.test(T))
        throw new Error("invalid attribute:" + T);
      this.attributeNames[T] = this.length, this[this.length++] = { qName: T, value: A, offset: B };
    },
    length: 0,
    getLocalName: function(T) {
      return this[T].localName;
    },
    getLocator: function(T) {
      return this[T].locator;
    },
    getQName: function(T) {
      return this[T].qName;
    },
    getURI: function(T) {
      return this[T].uri;
    },
    getValue: function(T) {
      return this[T].value;
    }
    //	,getIndex:function(uri, localName)){
    //		if(localName){
    //
    //		}else{
    //			var qName = uri
    //		}
    //	},
    //	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
    //	getType:function(uri,localName){}
    //	getType:function(i){},
  }, Na.XMLReader = y, Na.parseUtils = q, Na.parseDoctypeCommentOrCData = I, Na;
}
var em;
function PC() {
  if (em) return uo;
  em = 1;
  var t = oa(), e = Uy(), n = Ru(), r = IC(), i = RC(), o = e.DOMImplementation, s = t.hasDefaultHTMLNamespace, a = t.isHTMLMimeType, l = t.isValidMimeType, c = t.MIME_TYPE, u = t.NAMESPACE, f = n.ParseError, d = i.XMLReader;
  function h(N) {
    return N.replace(/\r[\n\u0085]/g, `
`).replace(/[\r\u0085\u2028\u2029]/g, `
`);
  }
  function g(N) {
    if (N = N || {}, N.locator === void 0 && (N.locator = !0), this.assign = N.assign || t.assign, this.domHandler = N.domHandler || m, this.onError = N.onError || N.errorHandler, N.errorHandler && typeof N.errorHandler != "function")
      throw new TypeError("errorHandler object is no longer supported, switch to onError!");
    N.errorHandler && N.errorHandler("warning", "The `errorHandler` option has been deprecated, use `onError` instead!", this), this.normalizeLineEndings = N.normalizeLineEndings || h, this.locator = !!N.locator, this.xmlns = this.assign(/* @__PURE__ */ Object.create(null), N.xmlns);
  }
  g.prototype.parseFromString = function(N, L) {
    if (!l(L))
      throw new TypeError('DOMParser.parseFromString: the provided mimeType "' + L + '" is not valid.');
    var O = this.assign(/* @__PURE__ */ Object.create(null), this.xmlns), M = r.XML_ENTITIES, q = O[""] || null;
    s(L) ? (M = r.HTML_ENTITIES, q = u.HTML) : L === c.XML_SVG_IMAGE && (q = u.SVG), O[""] = q, O.xml = O.xml || u.XML;
    var k = new this.domHandler({
      mimeType: L,
      defaultNamespace: q,
      onError: this.onError
    }), I = this.locator ? {} : void 0;
    this.locator && k.setDocumentLocator(I);
    var S = new d();
    S.errorHandler = k, S.domBuilder = k;
    var P = !t.isHTMLMimeType(L);
    return P && typeof N != "string" && S.errorHandler.fatalError("source is not a string"), S.parse(this.normalizeLineEndings(String(N)), O, M), k.doc.documentElement || S.errorHandler.fatalError("missing root element"), k.doc;
  };
  function m(N) {
    var L = N || {};
    this.mimeType = L.mimeType || c.XML_APPLICATION, this.defaultNamespace = L.defaultNamespace || null, this.cdata = !1, this.currentElement = void 0, this.doc = void 0, this.locator = void 0, this.onError = L.onError;
  }
  function b(N, L) {
    L.lineNumber = N.lineNumber, L.columnNumber = N.columnNumber;
  }
  m.prototype = {
    /**
     * Either creates an XML or an HTML document and stores it under `this.doc`.
     * If it is an XML document, `this.defaultNamespace` is used to create it,
     * and it will not contain any `childNodes`.
     * If it is an HTML document, it will be created without any `childNodes`.
     *
     * @see http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
     */
    startDocument: function() {
      var N = new o();
      this.doc = a(this.mimeType) ? N.createHTMLDocument(!1) : N.createDocument(this.defaultNamespace, "");
    },
    startElement: function(N, L, O, M) {
      var q = this.doc, k = q.createElementNS(N, O || L), I = M.length;
      C(this, k), this.currentElement = k, this.locator && b(this.locator, k);
      for (var S = 0; S < I; S++) {
        var N = M.getURI(S), P = M.getValue(S), O = M.getQName(S), T = q.createAttributeNS(N, O);
        this.locator && b(M.getLocator(S), T), T.value = T.nodeValue = P, k.setAttributeNode(T);
      }
    },
    endElement: function(N, L, O) {
      this.currentElement = this.currentElement.parentNode;
    },
    startPrefixMapping: function(N, L) {
    },
    endPrefixMapping: function(N) {
    },
    processingInstruction: function(N, L) {
      var O = this.doc.createProcessingInstruction(N, L);
      this.locator && b(this.locator, O), C(this, O);
    },
    ignorableWhitespace: function(N, L, O) {
    },
    characters: function(N, L, O) {
      if (N = y.apply(this, arguments), N) {
        if (this.cdata)
          var M = this.doc.createCDATASection(N);
        else
          var M = this.doc.createTextNode(N);
        this.currentElement ? this.currentElement.appendChild(M) : /^\s*$/.test(N) && this.doc.appendChild(M), this.locator && b(this.locator, M);
      }
    },
    skippedEntity: function(N) {
    },
    endDocument: function() {
      this.doc.normalize();
    },
    /**
     * Stores the locator to be able to set the `columnNumber` and `lineNumber`
     * on the created DOM nodes.
     *
     * @param {Locator} locator
     */
    setDocumentLocator: function(N) {
      N && (N.lineNumber = 0), this.locator = N;
    },
    //LexicalHandler
    comment: function(N, L, O) {
      N = y.apply(this, arguments);
      var M = this.doc.createComment(N);
      this.locator && b(this.locator, M), C(this, M);
    },
    startCDATA: function() {
      this.cdata = !0;
    },
    endCDATA: function() {
      this.cdata = !1;
    },
    startDTD: function(N, L, O, M) {
      var q = this.doc.implementation;
      if (q && q.createDocumentType) {
        var k = q.createDocumentType(N, L, O, M);
        this.locator && b(this.locator, k), C(this, k), this.doc.doctype = k;
      }
    },
    reportError: function(N, L) {
      if (typeof this.onError == "function")
        try {
          this.onError(N, L, this);
        } catch (O) {
          throw new f("Reporting " + N + ' "' + L + '" caused ' + O, this.locator);
        }
      else
        console.error("[xmldom " + N + "]	" + L, _(this.locator));
    },
    /**
     * @see http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
     */
    warning: function(N) {
      this.reportError("warning", N);
    },
    error: function(N) {
      this.reportError("error", N);
    },
    /**
     * This function reports a fatal error and throws a ParseError.
     *
     * @param {string} message
     * - The message to be used for reporting and throwing the error.
     * @returns {never}
     * This function always throws an error and never returns a value.
     * @throws {ParseError}
     * Always throws a ParseError with the provided message.
     */
    fatalError: function(N) {
      throw this.reportError("fatalError", N), new f(N, this.locator);
    }
  };
  function _(N) {
    if (N)
      return `
@#[line:` + N.lineNumber + ",col:" + N.columnNumber + "]";
  }
  function y(N, L, O) {
    return typeof N == "string" ? N.substr(L, O) : N.length >= L + O || L ? new java.lang.String(N, L, O) + "" : N;
  }
  "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(
    /\w+/g,
    function(N) {
      m.prototype[N] = function() {
        return null;
      };
    }
  );
  function C(N, L) {
    N.currentElement ? N.currentElement.appendChild(L) : N.doc.appendChild(L);
  }
  function D(N) {
    if (N === "error") throw "onErrorStopParsing";
  }
  function R() {
    throw "onWarningStopParsing";
  }
  return uo.__DOMHandler = m, uo.DOMParser = g, uo.normalizeLineEndings = h, uo.onErrorStopParsing = D, uo.onWarningStopParsing = R, uo;
}
var tm;
function LC() {
  if (tm) return Ue;
  tm = 1;
  var t = oa();
  Ue.assign = t.assign, Ue.hasDefaultHTMLNamespace = t.hasDefaultHTMLNamespace, Ue.isHTMLMimeType = t.isHTMLMimeType, Ue.isValidMimeType = t.isValidMimeType, Ue.MIME_TYPE = t.MIME_TYPE, Ue.NAMESPACE = t.NAMESPACE;
  var e = Ru();
  Ue.DOMException = e.DOMException, Ue.DOMExceptionName = e.DOMExceptionName, Ue.ExceptionCode = e.ExceptionCode, Ue.ParseError = e.ParseError;
  var n = Uy();
  Ue.Attr = n.Attr, Ue.CDATASection = n.CDATASection, Ue.CharacterData = n.CharacterData, Ue.Comment = n.Comment, Ue.Document = n.Document, Ue.DocumentFragment = n.DocumentFragment, Ue.DocumentType = n.DocumentType, Ue.DOMImplementation = n.DOMImplementation, Ue.Element = n.Element, Ue.Entity = n.Entity, Ue.EntityReference = n.EntityReference, Ue.LiveNodeList = n.LiveNodeList, Ue.NamedNodeMap = n.NamedNodeMap, Ue.Node = n.Node, Ue.NodeList = n.NodeList, Ue.Notation = n.Notation, Ue.ProcessingInstruction = n.ProcessingInstruction, Ue.Text = n.Text, Ue.XMLSerializer = n.XMLSerializer;
  var r = PC();
  return Ue.DOMParser = r.DOMParser, Ue.normalizeLineEndings = r.normalizeLineEndings, Ue.onErrorStopParsing = r.onErrorStopParsing, Ue.onWarningStopParsing = r.onWarningStopParsing, Ue;
}
LC();
const Qa = "USJ", Za = "3.1", Qh = Object.freeze({ type: Qa, version: Za, content: [] }), $C = [
  "type",
  "marker",
  "content",
  "sid",
  "eid",
  "number",
  "code",
  "altnumber",
  "pubnumber",
  "caller",
  "align",
  "category"
];
function FC(t) {
  return BC.includes(t);
}
const BC = [
  // Old Testament
  "GEN",
  "EXO",
  "LEV",
  "NUM",
  "DEU",
  "JOS",
  "JDG",
  "RUT",
  "1SA",
  "2SA",
  "1KI",
  "2KI",
  "1CH",
  "2CH",
  "EZR",
  "NEH",
  "EST",
  "JOB",
  "PSA",
  "PRO",
  "ECC",
  "SNG",
  "ISA",
  "JER",
  "LAM",
  "EZK",
  "DAN",
  "HOS",
  "JOL",
  "AMO",
  "OBA",
  "JON",
  "MIC",
  "NAM",
  "HAB",
  "ZEP",
  "HAG",
  "ZEC",
  "MAL",
  // New Testament
  "MAT",
  "MRK",
  "LUK",
  "JHN",
  "ACT",
  "ROM",
  "1CO",
  "2CO",
  "GAL",
  "EPH",
  "PHP",
  "COL",
  "1TH",
  "2TH",
  "1TI",
  "2TI",
  "TIT",
  "PHM",
  "HEB",
  "JAS",
  "1PE",
  "2PE",
  "1JN",
  "2JN",
  "3JN",
  "JUD",
  "REV",
  // Deuterocanon
  "TOB",
  "JDT",
  "ESG",
  "WIS",
  "SIR",
  "BAR",
  "LJE",
  "S3Y",
  "SUS",
  "BEL",
  "1MA",
  "2MA",
  "3MA",
  "4MA",
  "1ES",
  "2ES",
  "MAN",
  "PS2",
  "ODA",
  "PSS",
  "EZA",
  "5EZ",
  "6EZ",
  "DAG",
  "PS3",
  "2BA",
  "LBA",
  "JUB",
  "ENO",
  "1MQ",
  "2MQ",
  "3MQ",
  "REP",
  "4BA",
  "LAO",
  // Non scripture
  "FRT",
  "BAK",
  "OTH",
  "INT",
  "CNC",
  "GLO",
  "TDX",
  "NDX",
  "XXA",
  "XXB",
  "XXC",
  "XXD",
  "XXE",
  "XXF",
  "XXG"
], Af = "$", zy = ".content[";
function qC(t) {
  const e = t.split(zy);
  if (e.shift() !== Af)
    throw new Error(`indexesFromJsonPath: jsonPath didn't start with '${Af}'`);
  return e.map((n) => parseInt(n, 10));
}
function jC(t) {
  return t.reduce((e, n) => `${e}${zy}${n}]`, Af);
}
function le(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
const Tr = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, UC = Tr && "documentMode" in document ? document.documentMode : null, qr = Tr && /Mac|iPod|iPhone|iPad/.test(navigator.platform), Io = Tr && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent), Bc = !(!Tr || !("InputEvent" in window) || UC) && "getTargetRanges" in new window.InputEvent("input"), el = Tr && /Version\/[\d.]+.*Safari/.test(navigator.userAgent), Ms = Tr && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream, zC = Tr && /Android/.test(navigator.userAgent), Vy = Tr && /^(?=.*Chrome).*/i.test(navigator.userAgent), nm = Tr && zC && Vy, qc = Tr && /AppleWebKit\/[\d.]+/.test(navigator.userAgent) && !Vy;
function jc(...t) {
  const e = [];
  for (const n of t) if (n && typeof n == "string") for (const [r] of n.matchAll(/\S+/g)) e.push(r);
  return e;
}
const VC = 1, HC = 3, WC = 9, KC = 11, Ro = 0, Hy = 1, Os = 2, GC = 0, JC = 1, XC = 2, Uc = 4, zc = 8, Zh = 128, YC = 1792 | (112 | (3 | Uc | zc) | Zh), ep = 1, tp = 2, np = 3, rp = 4, ip = 5, op = 6, Pu = el || Ms || qc ? " " : "​", wi = `

`, QC = Io ? " " : Pu, Wy = "֑-߿יִ-﷽ﹰ-ﻼ", Ky = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿‎Ⰰ-﬜︀-﹯﻽-￿", ZC = new RegExp("^[^" + Ky + "]*[" + Wy + "]"), ek = new RegExp("^[^" + Wy + "]*[" + Ky + "]"), ji = { bold: 1, capitalize: 1024, code: 16, highlight: Zh, italic: 2, lowercase: 256, strikethrough: Uc, subscript: 32, superscript: 64, underline: zc, uppercase: 512 }, tk = { directionless: 1, unmergeable: 2 }, rm = { center: tp, end: op, justify: rp, left: ep, right: np, start: ip }, nk = { [tp]: "center", [op]: "end", [rp]: "justify", [ep]: "left", [np]: "right", [ip]: "start" }, rk = { normal: 0, segmented: 2, token: 1 }, ik = { [GC]: "normal", [XC]: "segmented", [JC]: "token" }, im = "$config";
function Gy(t, e, n, r, i, o) {
  let s = t.getFirstChild();
  for (; s !== null; ) {
    const a = s.__key;
    s.__parent === e && (X(s) && Gy(s, a, n, r, i, o), n.has(a) || o.delete(a), i.push(a)), s = s.getNextSibling();
  }
}
const ok = 100;
let Df = !1, sp = 0;
function sk(t) {
  sp = t.timeStamp;
}
function Pd(t, e, n) {
  const r = t.nodeName === "BR", i = e.__lexicalLineBreak;
  return i && (t === i || r && t.previousSibling === i) || r && Vu(t, n) !== void 0;
}
function ak(t, e, n) {
  const r = vr(or(n));
  let i = null, o = null;
  r !== null && r.anchorNode === t && (i = r.anchorOffset, o = r.focusOffset);
  const s = t.nodeValue;
  s !== null && Ap(e, s, i, o, !1);
}
function lk(t, e, n) {
  if (Z(t)) {
    const r = t.anchor.getNode();
    if (r.is(n) && t.format !== r.getFormat()) return !1;
  }
  return ki(e) && n.isAttached();
}
function ck(t, e, n, r) {
  for (let i = t; i && !aE(i); i = Ol(i)) {
    const o = Vu(i, e);
    if (o !== void 0) {
      const s = Me(o, n);
      if (s) return Xe(s) || !it(i) ? void 0 : [i, s];
    } else if (i === r) return [r, W0(n)];
  }
}
function Jy(t, e, n) {
  Df = !0;
  const r = performance.now() - sp > ok;
  try {
    Wn(t, () => {
      const i = oe() || function(d) {
        return d.getEditorState().read(() => {
          const h = oe();
          return h !== null ? h.clone() : null;
        });
      }(t), o = /* @__PURE__ */ new Map(), s = t.getRootElement(), a = t._editorState, l = t._blockCursorElement;
      let c = !1, u = "";
      for (let d = 0; d < e.length; d++) {
        const h = e[d], g = h.type, m = h.target, b = ck(m, t, a, s);
        if (!b) continue;
        const [_, y] = b;
        if (g === "characterData") r && ie(y) && ki(m) && lk(i, m, y) && ak(m, y, t);
        else if (g === "childList") {
          c = !0;
          const C = h.addedNodes;
          for (let N = 0; N < C.length; N++) {
            const L = C[N], O = V0(L), M = L.parentNode;
            if (M != null && L !== l && O === null && !Pd(L, M, t)) {
              if (Io) {
                const q = (it(L) ? L.innerText : null) || L.nodeValue;
                q && (u += q);
              }
              M.removeChild(L);
            }
          }
          const D = h.removedNodes, R = D.length;
          if (R > 0) {
            let N = 0;
            for (let L = 0; L < R; L++) {
              const O = D[L];
              (Pd(O, m, t) || l === O) && (m.appendChild(O), N++);
            }
            R !== N && o.set(_, y);
          }
        }
      }
      if (o.size > 0) for (const [d, h] of o) h.reconcileObservedMutation(d, t);
      const f = n.takeRecords();
      if (f.length > 0) {
        for (let d = 0; d < f.length; d++) {
          const h = f[d], g = h.addedNodes, m = h.target;
          for (let b = 0; b < g.length; b++) {
            const _ = g[b], y = _.parentNode;
            y == null || _.nodeName !== "BR" || Pd(_, m, t) || y.removeChild(_);
          }
        }
        n.takeRecords();
      }
      i !== null && (c && sn(i), Io && Y0(t) && i.insertRawText(u));
    });
  } finally {
    Df = !1;
  }
}
function Xy(t) {
  const e = t._observer;
  e !== null && Jy(t, e.takeRecords(), e);
}
function Yy(t) {
  (function(e) {
    sp === 0 && or(e).addEventListener("textInput", sk, !0);
  })(t), t._observer = new MutationObserver((e, n) => {
    Jy(t, e, n);
  });
}
let uk = class {
  constructor(e, n) {
    this.key = e, this.parse = n.parse.bind(n), this.unparse = (n.unparse || hk).bind(n), this.isEqual = (n.isEqual || Object.is).bind(n), this.defaultValue = this.parse(void 0);
  }
};
function Qy(t, e) {
  return new uk(t, e);
}
function Is(t, e, n = "latest") {
  const r = (n === "latest" ? t.getLatest() : t).__state;
  return r ? r.getValue(e) : e.defaultValue;
}
function pi(t, e, n) {
  let r;
  if (Zt(), typeof n == "function") {
    const o = t.getLatest(), s = Is(o, e);
    if (r = n(s), e.isEqual(s, r)) return o;
  } else r = n;
  const i = t.getWritable();
  return e0(i).updateFromKnown(e, r), i;
}
function dk(t) {
  const e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set();
  for (let r = typeof t == "function" ? t : t.replace; r.prototype && r.prototype.getType !== void 0; r = Object.getPrototypeOf(r)) {
    const { ownNodeConfig: i } = Ip(r);
    if (i && i.stateConfigs) for (const o of i.stateConfigs) {
      let s;
      "stateConfig" in o ? (s = o.stateConfig, o.flat && n.add(s.key)) : s = o, e.set(s.key, s);
    }
  }
  return { flatKeys: n, sharedConfigMap: e };
}
let fk = class Zy {
  constructor(e, n, r = void 0, i = /* @__PURE__ */ new Map(), o = void 0) {
    this.node = e, this.sharedNodeState = n, this.unknownState = r, this.knownState = i;
    const { sharedConfigMap: s } = this.sharedNodeState, a = o !== void 0 ? o : function(l, c, u) {
      let f = u.size;
      if (c) for (const d in c) {
        const h = l.get(d);
        h && u.has(h) || f++;
      }
      return f;
    }(s, r, i);
    this.size = a;
  }
  getValue(e) {
    const n = this.knownState.get(e);
    if (n !== void 0) return n;
    this.sharedNodeState.sharedConfigMap.set(e.key, e);
    let r = e.defaultValue;
    if (this.unknownState && e.key in this.unknownState) {
      const i = this.unknownState[e.key];
      i !== void 0 && (r = e.parse(i)), this.updateFromKnown(e, r);
    }
    return r;
  }
  getInternalState() {
    return [this.unknownState, this.knownState];
  }
  toJSON() {
    const e = { ...this.unknownState }, n = {};
    for (const [r, i] of this.knownState) r.isEqual(i, r.defaultValue) ? delete e[r.key] : e[r.key] = r.unparse(i);
    for (const r of this.sharedNodeState.flatKeys) r in e && (n[r] = e[r], delete e[r]);
    return om(e) && (n.$ = e), n;
  }
  getWritable(e) {
    if (this.node === e) return this;
    const { sharedNodeState: n, unknownState: r } = this, i = new Map(this.knownState);
    return new Zy(e, n, function(o, s, a) {
      let l;
      if (a) for (const [c, u] of Object.entries(a)) {
        const f = o.get(c);
        f ? s.has(f) || s.set(f, f.parse(u)) : (l = l || {}, l[c] = u);
      }
      return l;
    }(n.sharedConfigMap, i, r), i, this.size);
  }
  updateFromKnown(e, n) {
    const r = e.key;
    this.sharedNodeState.sharedConfigMap.set(r, e);
    const { knownState: i, unknownState: o } = this;
    i.has(e) || o && r in o || (o && (delete o[r], this.unknownState = om(o)), this.size++), i.set(e, n);
  }
  updateFromUnknown(e, n) {
    const r = this.sharedNodeState.sharedConfigMap.get(e);
    r ? this.updateFromKnown(r, r.parse(n)) : (this.unknownState = this.unknownState || {}, e in this.unknownState || this.size++, this.unknownState[e] = n);
  }
  updateFromJSON(e) {
    const { knownState: n } = this;
    for (const r of n.keys()) n.set(r, r.defaultValue);
    if (this.size = n.size, this.unknownState = void 0, e) for (const [r, i] of Object.entries(e)) this.updateFromUnknown(r, i);
  }
};
function e0(t) {
  const e = t.getWritable(), n = e.__state ? e.__state.getWritable(e) : new fk(e, t0(e));
  return e.__state = n, n;
}
function t0(t) {
  return t.__state ? t.__state.sharedNodeState : U0(Wu(), t.getType()).sharedNodeState;
}
function om(t) {
  if (t) for (const e in t) return t;
}
function hk(t) {
  return t;
}
function sm(t, e, n) {
  for (const [r, i] of e.knownState) {
    if (t.has(r.key)) continue;
    t.add(r.key);
    const o = n ? n.getValue(r) : r.defaultValue;
    if (o !== i && !r.isEqual(o, i)) return !0;
  }
  return !1;
}
function am(t, e, n) {
  const { unknownState: r } = e, i = n ? n.unknownState : void 0;
  if (r) {
    for (const [o, s] of Object.entries(r))
      if (!t.has(o) && (t.add(o), s !== (i ? i[o] : void 0)))
        return !0;
  }
  return !1;
}
function lm(t, e) {
  const n = t.__state;
  return n && n.node === t ? n.getWritable(e) : n;
}
function cm(t, e) {
  const n = t.__mode, r = t.__format, i = t.__style, o = e.__mode, s = e.__format, a = e.__style, l = t.__state, c = e.__state;
  return (n === null || n === o) && (r === null || r === s) && (i === null || i === a) && (t.__state === null || l === c || function(u, f) {
    if (u === f) return !0;
    if (u && f && u.size !== f.size) return !1;
    const d = /* @__PURE__ */ new Set();
    return !(u && sm(d, u, f) || f && sm(d, f, u) || u && am(d, u, f) || f && am(d, f, u));
  }(l, c));
}
function um(t, e) {
  const n = t.mergeWithSibling(e), r = mt()._normalizedNodes;
  return r.add(t.__key), r.add(e.__key), n;
}
function dm(t) {
  let e, n, r = t;
  if (r.__text !== "" || !r.isSimpleText() || r.isUnmergeable()) {
    for (; (e = r.getPreviousSibling()) !== null && ie(e) && e.isSimpleText() && !e.isUnmergeable(); ) {
      if (e.__text !== "") {
        if (cm(e, r)) {
          r = um(e, r);
          break;
        }
        break;
      }
      e.remove();
    }
    for (; (n = r.getNextSibling()) !== null && ie(n) && n.isSimpleText() && !n.isUnmergeable(); ) {
      if (n.__text !== "") {
        if (cm(r, n)) {
          r = um(r, n);
          break;
        }
        break;
      }
      n.remove();
    }
  } else r.remove();
}
function tl(t) {
  return fm(t.anchor), fm(t.focus), t;
}
function fm(t) {
  for (; t.type === "element"; ) {
    const e = t.getNode(), n = t.offset;
    let r, i;
    if (n === e.getChildrenSize() ? (r = e.getChildAtIndex(n - 1), i = !0) : (r = e.getChildAtIndex(n), i = !1), ie(r)) {
      t.set(r.__key, i ? r.getTextContentSize() : 0, "text", !0);
      break;
    }
    if (!X(r)) break;
    t.set(r.__key, i ? r.getChildrenSize() : 0, "element", !0);
  }
}
let Ui, vn, nl, Lu, Mf, Of, Po, mr, If, rl, Rt = "", yn = "", $r = null, Fr = "", ci = "", n0 = !1, il = !1, Cc = null;
function Vc(t, e) {
  const n = Po.get(t);
  if (e !== null) {
    const r = Lf(t);
    r.parentNode === e && e.removeChild(r);
  }
  if (mr.has(t) || vn._keyToDOMMap.delete(t), X(n)) {
    const r = Wc(n, Po);
    Rf(r, 0, r.length - 1, null);
  }
  n !== void 0 && Dp(rl, nl, Lu, n, "destroyed");
}
function Rf(t, e, n, r) {
  let i = e;
  for (; i <= n; ++i) {
    const o = t[i];
    o !== void 0 && Vc(o, r);
  }
}
function fo(t, e) {
  t.setProperty("text-align", e);
}
const pk = "40px";
function r0(t, e) {
  const n = Ui.theme.indent;
  if (typeof n == "string") {
    const i = t.classList.contains(n);
    e > 0 && !i ? t.classList.add(n) : e < 1 && i && t.classList.remove(n);
  }
  const r = getComputedStyle(t).getPropertyValue("--lexical-indent-base-value") || pk;
  t.style.setProperty("padding-inline-start", e === 0 ? "" : `calc(${e} * ${r})`);
}
function i0(t, e) {
  const n = t.style;
  e === 0 ? fo(n, "") : e === ep ? fo(n, "left") : e === tp ? fo(n, "center") : e === np ? fo(n, "right") : e === rp ? fo(n, "justify") : e === ip ? fo(n, "start") : e === op && fo(n, "end");
}
function Hc(t, e) {
  const n = mr.get(t);
  n === void 0 && le(60);
  const r = n.createDOM(Ui, vn);
  if (function(i, o, s) {
    const a = s._keyToDOMMap;
    (function(l, c, u) {
      const f = `__lexicalKey_${c._key}`;
      l[f] = u;
    })(o, s, i), a.set(i, o);
  }(t, r, vn), ie(n) ? r.setAttribute("data-lexical-text", "true") : Xe(n) && r.setAttribute("data-lexical-decorator", "true"), X(n)) {
    const i = n.__indent, o = n.__size;
    if (i !== 0 && r0(r, i), o !== 0) {
      const a = o - 1;
      (function(l, c, u, f) {
        const d = yn;
        yn = "", Pf(l, u, 0, c, u.getDOMSlot(f)), s0(u, f), yn = d;
      })(Wc(n, mr), a, n, r);
    }
    const s = n.__format;
    s !== 0 && i0(r, s), n.isInline() || o0(null, n, r), Hu(n) && (Rt += wi, ci += wi);
  } else {
    const i = n.getTextContent();
    if (Xe(n)) {
      const o = n.decorate(vn, Ui);
      o !== null && a0(t, o), r.contentEditable = "false";
    } else ie(n) && (n.isDirectionless() || (yn += i));
    Rt += i, ci += i;
  }
  return e !== null && e.insertChild(r), Dp(rl, nl, Lu, n, "created"), r;
}
function Pf(t, e, n, r, i) {
  const o = Rt;
  Rt = "";
  let s = n;
  for (; s <= r; ++s) {
    Hc(t[s], i);
    const a = mr.get(t[s]);
    a !== null && ie(a) && ($r === null && ($r = a.getFormat()), Fr === "" && (Fr = a.getStyle()));
  }
  Hu(e) && (Rt += wi), i.element.__lexicalTextContent = Rt, Rt = o + Rt;
}
function hm(t, e) {
  if (t) {
    const n = t.__last;
    if (n) {
      const r = e.get(n);
      if (r) return xo(r) ? "line-break" : Xe(r) && r.isInline() ? "decorator" : null;
    }
    return "empty";
  }
  return null;
}
function o0(t, e, n) {
  const r = hm(t, Po), i = hm(e, mr);
  r !== i && e.getDOMSlot(n).setManagedLineBreak(i);
}
function s0(t, e) {
  const n = e.__lexicalDirTextContent || "", r = e.__lexicalDir || "";
  if (n !== yn || r !== Cc) {
    const i = yn === "", o = i ? Cc : function(s) {
      return ZC.test(s) ? "rtl" : ek.test(s) ? "ltr" : null;
    }(yn);
    if (o !== r) {
      const s = e.classList, a = Ui.theme;
      let l = r !== null ? a[r] : void 0, c = o !== null ? a[o] : void 0;
      if (l !== void 0) {
        if (typeof l == "string") {
          const u = jc(l);
          l = a[r] = u;
        }
        s.remove(...l);
      }
      if (o === null || i && o === "ltr") e.removeAttribute("dir");
      else {
        if (c !== void 0) {
          if (typeof c == "string") {
            const u = jc(c);
            c = a[o] = u;
          }
          c !== void 0 && s.add(...c);
        }
        e.dir = o;
      }
      il || (t.getWritable().__dir = o);
    }
    Cc = o, e.__lexicalDirTextContent = yn, e.__lexicalDir = o;
  }
}
function gk(t, e, n) {
  const r = yn;
  var i;
  yn = "", $r = null, Fr = "", function(o, s, a) {
    const l = Rt, c = o.__size, u = s.__size;
    Rt = "";
    const f = a.element;
    if (c === 1 && u === 1) {
      const d = o.__first, h = s.__first;
      if (d === h) Pa(d, f);
      else {
        const m = Lf(d), b = Hc(h, null);
        try {
          f.replaceChild(b, m);
        } catch (_) {
          if (typeof _ == "object" && _ != null) {
            const y = `${_.toString()} Parent: ${f.tagName}, new child: {tag: ${b.tagName} key: ${h}}, old child: {tag: ${m.tagName}, key: ${d}}.`;
            throw new Error(y);
          }
          throw _;
        }
        Vc(d, null);
      }
      const g = mr.get(h);
      ie(g) && ($r === null && ($r = g.getFormat()), Fr === "" && (Fr = g.getStyle()));
    } else {
      const d = Wc(o, Po), h = Wc(s, mr);
      if (d.length !== c && le(227), h.length !== u && le(228), c === 0) u !== 0 && Pf(h, s, 0, u - 1, a);
      else if (u === 0) {
        if (c !== 0) {
          const g = a.after == null && a.before == null && a.element.__lexicalLineBreak == null;
          Rf(d, 0, c - 1, g ? null : f), g && (f.textContent = "");
        }
      } else (function(g, m, b, _, y, C) {
        const D = _ - 1, R = y - 1;
        let N, L, O = C.getFirstChild(), M = 0, q = 0;
        for (; M <= D && q <= R; ) {
          const S = m[M], P = b[q];
          if (S === P) O = Ld(Pa(P, C.element)), M++, q++;
          else {
            N === void 0 && (N = new Set(m)), L === void 0 && (L = new Set(b));
            const A = L.has(S), B = N.has(P);
            if (A) if (B) {
              const V = Fs(vn, P);
              V === O ? O = Ld(Pa(P, C.element)) : (C.withBefore(O).insertChild(V), Pa(P, C.element)), M++, q++;
            } else Hc(P, C.withBefore(O)), q++;
            else O = Ld(Lf(S)), Vc(S, C.element), M++;
          }
          const T = mr.get(P);
          T !== null && ie(T) && ($r === null && ($r = T.getFormat()), Fr === "" && (Fr = T.getStyle()));
        }
        const k = M > D, I = q > R;
        if (k && !I) {
          const S = b[R + 1], P = S === void 0 ? null : vn.getElementByKey(S);
          Pf(b, g, q, R, C.withBefore(P));
        } else I && !k && Rf(m, M, D, C.element);
      })(s, d, h, c, u, a);
    }
    Hu(s) && (Rt += wi), f.__lexicalTextContent = Rt, Rt = l + Rt;
  }(t, e, e.getDOMSlot(n)), s0(e, n), i = e, $r == null || $r === i.__textFormat || il || i.setTextFormat($r), function(o) {
    Fr === "" || Fr === o.__textStyle || il || o.setTextStyle(Fr);
  }(e), yn = r;
}
function Wc(t, e) {
  const n = [];
  let r = t.__first;
  for (; r !== null; ) {
    const i = e.get(r);
    i === void 0 && le(101), n.push(r), r = i.__next;
  }
  return n;
}
function Pa(t, e) {
  const n = Po.get(t);
  let r = mr.get(t);
  n !== void 0 && r !== void 0 || le(61);
  const i = n0 || Of.has(t) || Mf.has(t), o = Fs(vn, t);
  if (n === r && !i) {
    if (X(n)) {
      const s = o.__lexicalTextContent;
      s !== void 0 && (Rt += s, ci += s);
      const a = o.__lexicalDirTextContent;
      a !== void 0 && (yn += a);
    } else {
      const s = n.getTextContent();
      ie(n) && !n.isDirectionless() && (yn += s), ci += s, Rt += s;
    }
    return o;
  }
  if (n !== r && i && Dp(rl, nl, Lu, r, "updated"), r.updateDOM(n, o, Ui)) {
    const s = Hc(t, null);
    return e === null && le(62), e.replaceChild(s, o), Vc(t, null), s;
  }
  if (X(n) && X(r)) {
    const s = r.__indent;
    s !== n.__indent && r0(o, s);
    const a = r.__format;
    a !== n.__format && i0(o, a), i && (gk(n, r, o), tn(r) || r.isInline() || o0(n, r, o)), Hu(r) && (Rt += wi, ci += wi);
  } else {
    const s = r.getTextContent();
    if (Xe(r)) {
      const a = r.decorate(vn, Ui);
      a !== null && a0(t, a);
    } else ie(r) && !r.isDirectionless() && (yn += s);
    Rt += s, ci += s;
  }
  if (!il && tn(r) && r.__cachedText !== ci) {
    const s = r.getWritable();
    s.__cachedText = ci, r = s;
  }
  return o;
}
function a0(t, e) {
  let n = vn._pendingDecorators;
  const r = vn._decorators;
  if (n === null) {
    if (r[t] === e) return;
    n = H0(vn);
  }
  n[t] = e;
}
function Ld(t) {
  let e = t.nextSibling;
  return e !== null && e === vn._blockCursorElement && (e = e.nextSibling), e;
}
function mk(t, e, n, r, i, o) {
  Rt = "", ci = "", yn = "", n0 = r === Os, Cc = null, vn = n, Ui = n._config, nl = n._nodes, Lu = vn._listeners.mutation, Mf = i, Of = o, Po = t._nodeMap, mr = e._nodeMap, il = e._readOnly, If = new Map(n._keyToDOMMap);
  const s = /* @__PURE__ */ new Map();
  return rl = s, Pa("root", null), vn = void 0, nl = void 0, Mf = void 0, Of = void 0, Po = void 0, mr = void 0, Ui = void 0, If = void 0, rl = void 0, s;
}
function Lf(t) {
  const e = If.get(t);
  return e === void 0 && le(75, t), e;
}
function Se(t) {
  return { type: t };
}
const Xi = Se("SELECTION_CHANGE_COMMAND"), wk = Se("SELECTION_INSERT_CLIPBOARD_NODES_COMMAND"), l0 = Se("CLICK_COMMAND"), Hr = Se("DELETE_CHARACTER_COMMAND"), Fi = Se("INSERT_LINE_BREAK_COMMAND"), ol = Se("INSERT_PARAGRAPH_COMMAND"), _o = Se("CONTROLLED_TEXT_INSERTION_COMMAND"), Qo = Se("PASTE_COMMAND"), Kc = Se("REMOVE_TEXT_COMMAND"), Rs = Se("DELETE_WORD_COMMAND"), Ps = Se("DELETE_LINE_COMMAND"), Ri = Se("FORMAT_TEXT_COMMAND"), kl = Se("UNDO_COMMAND"), El = Se("REDO_COMMAND"), sa = Se("KEYDOWN_COMMAND"), ap = Se("KEY_ARROW_RIGHT_COMMAND"), bk = Se("MOVE_TO_END"), lp = Se("KEY_ARROW_LEFT_COMMAND"), yk = Se("MOVE_TO_START"), cp = Se("KEY_ARROW_UP_COMMAND"), up = Se("KEY_ARROW_DOWN_COMMAND"), Ls = Se("KEY_ENTER_COMMAND"), c0 = Se("KEY_SPACE_COMMAND"), dp = Se("KEY_BACKSPACE_COMMAND"), $u = Se("KEY_ESCAPE_COMMAND"), fp = Se("KEY_DELETE_COMMAND"), hp = Se("KEY_TAB_COMMAND"), vk = Se("INSERT_TAB_COMMAND"), _k = Se("INDENT_CONTENT_COMMAND"), pm = Se("OUTDENT_CONTENT_COMMAND"), Fu = Se("DROP_COMMAND"), xk = Se("FORMAT_ELEMENT_COMMAND"), pp = Se("DRAGSTART_COMMAND"), u0 = Se("DRAGOVER_COMMAND"), Ck = Se("DRAGEND_COMMAND"), Yi = Se("COPY_COMMAND"), Zo = Se("CUT_COMMAND"), Gc = Se("SELECT_ALL_COMMAND"), gp = Se("CLEAR_EDITOR_COMMAND"), d0 = Se("CLEAR_HISTORY_COMMAND"), La = Se("CAN_REDO_COMMAND"), $a = Se("CAN_UNDO_COMMAND"), kk = Se("FOCUS_COMMAND"), Ek = Se("BLUR_COMMAND"), Nk = Se("KEY_MODIFIER_COMMAND"), ii = Object.freeze({}), $f = 30, Ff = [["keydown", function(t, e) {
  if (Va = t.timeStamp, f0 = t.key, !e.isComposing() && !ge(e, sa, t) && t.key != null) {
    if ($d && Um(t)) return Wn(e, () => {
      rc(e, Fd);
    }), $d = !1, void (Fd = "");
    if (function(n) {
      return et(n, "ArrowRight", { shiftKey: "any" });
    }(t)) ge(e, ap, t);
    else if (function(n) {
      return et(n, "ArrowRight", ai);
    }(t)) ge(e, bk, t);
    else if (function(n) {
      return et(n, "ArrowLeft", { shiftKey: "any" });
    }(t)) ge(e, lp, t);
    else if (function(n) {
      return et(n, "ArrowLeft", ai);
    }(t)) ge(e, yk, t);
    else if (function(n) {
      return et(n, "ArrowUp", { altKey: "any", shiftKey: "any" });
    }(t)) ge(e, cp, t);
    else if (function(n) {
      return et(n, "ArrowDown", { altKey: "any", shiftKey: "any" });
    }(t)) ge(e, up, t);
    else if (function(n) {
      return et(n, "Enter", { altKey: "any", ctrlKey: "any", metaKey: "any", shiftKey: !0 });
    }(t)) Ha = !0, ge(e, Ls, t);
    else if (function(n) {
      return n.key === " ";
    }(t)) ge(e, c0, t);
    else if (function(n) {
      return qr && et(n, "o", { ctrlKey: !0 });
    }(t)) t.preventDefault(), Ha = !0, ge(e, Fi, !0);
    else if (function(n) {
      return et(n, "Enter", { altKey: "any", ctrlKey: "any", metaKey: "any" });
    }(t)) Ha = !1, ge(e, Ls, t);
    else if (function(n) {
      return et(n, "Backspace", { shiftKey: "any" }) || qr && et(n, "h", { ctrlKey: !0 });
    }(t)) Um(t) ? ge(e, dp, t) : (t.preventDefault(), ge(e, Hr, !0));
    else if (function(n) {
      return n.key === "Escape";
    }(t)) ge(e, $u, t);
    else if (function(n) {
      return et(n, "Delete", {}) || qr && et(n, "d", { ctrlKey: !0 });
    }(t)) (function(n) {
      return n.key === "Delete";
    })(t) ? ge(e, fp, t) : (t.preventDefault(), ge(e, Hr, !1));
    else if (function(n) {
      return et(n, "Backspace", jm);
    }(t)) t.preventDefault(), ge(e, Rs, !0);
    else if (function(n) {
      return et(n, "Delete", jm);
    }(t)) t.preventDefault(), ge(e, Rs, !1);
    else if (function(n) {
      return qr && et(n, "Backspace", { metaKey: !0 });
    }(t)) t.preventDefault(), ge(e, Ps, !0);
    else if (function(n) {
      return qr && (et(n, "Delete", { metaKey: !0 }) || et(n, "k", { ctrlKey: !0 }));
    }(t)) t.preventDefault(), ge(e, Ps, !1);
    else if (function(n) {
      return et(n, "b", ai);
    }(t)) t.preventDefault(), ge(e, Ri, "bold");
    else if (function(n) {
      return et(n, "u", ai);
    }(t)) t.preventDefault(), ge(e, Ri, "underline");
    else if (function(n) {
      return et(n, "i", ai);
    }(t)) t.preventDefault(), ge(e, Ri, "italic");
    else if (function(n) {
      return et(n, "Tab", { shiftKey: "any" });
    }(t)) ge(e, hp, t);
    else if (function(n) {
      return et(n, "z", ai);
    }(t)) t.preventDefault(), ge(e, kl, void 0);
    else if (function(n) {
      return qr ? et(n, "z", { metaKey: !0, shiftKey: !0 }) : et(n, "y", { ctrlKey: !0 }) || et(n, "z", { ctrlKey: !0, shiftKey: !0 });
    }(t)) t.preventDefault(), ge(e, El, void 0);
    else {
      const n = e._editorState._selection;
      n === null || Z(n) ? zm(t) && (t.preventDefault(), ge(e, Gc, t)) : function(r) {
        return et(r, "c", ai);
      }(t) ? (t.preventDefault(), ge(e, Yi, t)) : function(r) {
        return et(r, "x", ai);
      }(t) ? (t.preventDefault(), ge(e, Zo, t)) : zm(t) && (t.preventDefault(), ge(e, Gc, t));
    }
    (function(n) {
      return n.ctrlKey || n.shiftKey || n.altKey || n.metaKey;
    })(t) && ge(e, Nk, t);
  }
}], ["pointerdown", function(t, e) {
  const n = t.target, r = t.pointerType;
  ts(n) && r !== "touch" && r !== "pen" && t.button === 0 && Wn(e, () => {
    Fm(n) || (qf = !0);
  });
}], ["compositionstart", function(t, e) {
  Wn(e, () => {
    const n = oe();
    if (Z(n) && !e.isComposing()) {
      const r = n.anchor, i = n.anchor.getNode();
      en(r.key), (t.timeStamp < Va + $f || r.type === "element" || !n.isCollapsed() || i.getFormat() !== n.format || ie(i) && i.getStyle() !== n.style) && ge(e, _o, QC);
    }
  });
}], ["compositionend", function(t, e) {
  Io ? Sa = !0 : Ms || !el && !qc ? Wn(e, () => {
    rc(e, t.data);
  }) : ($d = !0, Fd = t.data);
}], ["input", function(t, e) {
  t.stopPropagation(), Wn(e, () => {
    if (it(t.target) && Fm(t.target)) return;
    const n = oe(), r = t.data, i = w0(t);
    if (r != null && Z(n) && g0(n, i, r, t.timeStamp, !1)) {
      Sa && (rc(e, r), Sa = !1);
      const o = n.anchor.getNode(), s = vr(or(e));
      if (s === null) return;
      const a = n.isBackward(), l = a ? n.anchor.offset : n.focus.offset, c = a ? n.focus.offset : n.anchor.offset;
      Bc && !n.isCollapsed() && ie(o) && s.anchorNode !== null && o.getTextContent().slice(0, l) + r + o.getTextContent().slice(l + c) === J0(s.anchorNode) || ge(e, _o, r);
      const u = r.length;
      Io && u > 1 && t.inputType === "insertCompositionText" && !e.isComposing() && (n.anchor.offset -= u), el || Ms || qc || !e.isComposing() || (Va = 0, en(null));
    } else
      Tp(!1, e, r !== null ? r : void 0), Sa && (rc(e, r || void 0), Sa = !1);
    (function() {
      Zt();
      const o = mt();
      Xy(o);
    })();
  }, { event: t }), hs = null;
}], ["click", function(t, e) {
  Wn(e, () => {
    const n = oe(), r = vr(or(e)), i = la();
    if (r) {
      if (Z(n)) {
        const o = n.anchor, s = o.getNode();
        if (o.type === "element" && o.offset === 0 && n.isCollapsed() && !tn(s) && Ve().getChildrenSize() === 1 && s.getTopLevelElementOrThrow().isEmpty() && i !== null && n.is(i)) r.removeAllRanges(), n.dirty = !0;
        else if (t.detail === 3 && !n.isCollapsed() && s !== n.focus.getNode()) {
          const a = function(l, c) {
            let u = l;
            for (; u !== Ve() && u != null; ) {
              if (c(u)) return u;
              u = u.getParent();
            }
            return null;
          }(s, (l) => X(l) && !l.isInline());
          X(a) && a.select(0);
        }
      } else if (t.pointerType === "touch" || t.pointerType === "pen") {
        const o = r.anchorNode;
        (it(o) || ki(o)) && sn(wp(i, r, e, t));
      }
    }
    ge(e, l0, t);
  });
}], ["cut", ii], ["copy", ii], ["dragstart", ii], ["dragover", ii], ["dragend", ii], ["paste", ii], ["focus", ii], ["blur", ii], ["drop", ii]];
Bc && Ff.push(["beforeinput", (t, e) => function(n, r) {
  const i = n.inputType, o = w0(n);
  i === "deleteCompositionText" || Io && Y0(r) || i !== "insertCompositionText" && Wn(r, () => {
    const s = oe();
    if (i === "deleteContentBackward") {
      if (s === null) {
        const h = la();
        if (!Z(h)) return;
        sn(h.clone());
      }
      if (Z(s)) {
        const h = s.anchor.key === s.focus.key;
        if (a = n.timeStamp, f0 === "MediaLast" && a < Va + $f && r.isComposing() && h) {
          if (en(null), Va = 0, setTimeout(() => {
            Wn(r, () => {
              en(null);
            });
          }, $f), Z(s)) {
            const g = s.anchor.getNode();
            g.markDirty(), ie(g) || le(142), m0(s, g);
          }
        } else {
          en(null), n.preventDefault();
          const g = s.anchor.getNode(), m = g.getTextContent(), b = g.canInsertTextAfter(), _ = s.anchor.offset === 0 && s.focus.offset === m.length;
          let y = nm && h && !_ && b;
          if (y && s.isCollapsed() && (y = !Xe(Wf(s.anchor, !0))), !y) {
            ge(r, Hr, !0);
            const C = oe();
            nm && Z(C) && C.isCollapsed() && (wo = C, setTimeout(() => wo = null));
          }
        }
        return;
      }
    }
    var a;
    if (!Z(s)) return;
    const l = n.data;
    hs !== null && Tp(!1, r, hs), s.dirty && hs === null || !s.isCollapsed() || tn(s.anchor.getNode()) || o === null || s.applyDOMRange(o), hs = null;
    const c = s.anchor, u = s.focus, f = c.getNode(), d = u.getNode();
    if (i !== "insertText" && i !== "insertTranspose") switch (n.preventDefault(), i) {
      case "insertFromYank":
      case "insertFromDrop":
      case "insertReplacementText":
        ge(r, _o, n);
        break;
      case "insertFromComposition":
        en(null), ge(r, _o, n);
        break;
      case "insertLineBreak":
        en(null), ge(r, Fi, !1);
        break;
      case "insertParagraph":
        en(null), Ha && !Ms ? (Ha = !1, ge(r, Fi, !1)) : ge(r, ol, void 0);
        break;
      case "insertFromPaste":
      case "insertFromPasteAsQuotation":
        ge(r, Qo, n);
        break;
      case "deleteByComposition":
        (function(h, g) {
          return h !== g || X(h) || X(g) || !ko(h) || !ko(g);
        })(f, d) && ge(r, Kc, n);
        break;
      case "deleteByDrag":
      case "deleteByCut":
        ge(r, Kc, n);
        break;
      case "deleteContent":
        ge(r, Hr, !1);
        break;
      case "deleteWordBackward":
        ge(r, Rs, !0);
        break;
      case "deleteWordForward":
        ge(r, Rs, !1);
        break;
      case "deleteHardLineBackward":
      case "deleteSoftLineBackward":
        ge(r, Ps, !0);
        break;
      case "deleteContentForward":
      case "deleteHardLineForward":
      case "deleteSoftLineForward":
        ge(r, Ps, !1);
        break;
      case "formatStrikeThrough":
        ge(r, Ri, "strikethrough");
        break;
      case "formatBold":
        ge(r, Ri, "bold");
        break;
      case "formatItalic":
        ge(r, Ri, "italic");
        break;
      case "formatUnderline":
        ge(r, Ri, "underline");
        break;
      case "historyUndo":
        ge(r, kl, void 0);
        break;
      case "historyRedo":
        ge(r, El, void 0);
    }
    else {
      if (l === `
`) n.preventDefault(), ge(r, Fi, !1);
      else if (l === wi) n.preventDefault(), ge(r, ol, void 0);
      else if (l == null && n.dataTransfer) {
        const h = n.dataTransfer.getData("text/plain");
        n.preventDefault(), s.insertRawText(h);
      } else l != null && g0(s, o, l, n.timeStamp, !0) ? (n.preventDefault(), ge(r, _o, l)) : hs = l;
      h0 = n.timeStamp;
    }
  });
}(t, e)]);
let Va = 0, f0 = null, h0 = 0, hs = null;
const Jc = /* @__PURE__ */ new WeakMap();
let Bf = !1, qf = !1, Ha = !1, Sa = !1, $d = !1, Fd = "", wo = null, p0 = [0, "", 0, "root", 0];
function g0(t, e, n, r, i) {
  const o = t.anchor, s = t.focus, a = o.getNode(), l = mt(), c = vr(or(l)), u = c !== null ? c.anchorNode : null, f = o.key, d = l.getElementByKey(f), h = n.length;
  return f !== s.key || !ie(a) || (!i && (!Bc || h0 < r + 50) || a.isDirty() && h < 2 || K0(n)) && o.offset !== s.offset && !a.isComposing() || li(a) || a.isDirty() && h > 1 || (i || !Bc) && d !== null && !a.isComposing() && u !== $s(d) || c !== null && e !== null && (!e.collapsed || e.startContainer !== c.anchorNode || e.startOffset !== c.anchorOffset) || a.getFormat() !== t.format || a.getStyle() !== t.style || function(g, m) {
    if (m.isSegmented()) return !0;
    if (!g.isCollapsed()) return !1;
    const b = g.anchor.offset, _ = m.getParentOrThrow(), y = ko(m);
    return b === 0 ? !m.canInsertTextBefore() || !_.canInsertTextBefore() && !m.isComposing() || y || function(C) {
      const D = C.getPreviousSibling();
      return (ie(D) || X(D) && D.isInline()) && !D.canInsertTextAfter();
    }(m) : b === m.getTextContentSize() && (!m.canInsertTextAfter() || !_.canInsertTextAfter() && !m.isComposing() || y);
  }(t, a);
}
function gm(t, e) {
  return ki(t) && t.nodeValue !== null && e !== 0 && e !== t.nodeValue.length;
}
function mm(t, e, n) {
  const { anchorNode: r, anchorOffset: i, focusNode: o, focusOffset: s } = t;
  Bf && (Bf = !1, gm(r, i) && gm(o, s) && !wo) || Wn(e, () => {
    if (!n) return void sn(null);
    if (!Ml(e, r, o)) return;
    let a = oe();
    if (wo && Z(a) && a.isCollapsed()) {
      const l = a.anchor, c = wo.anchor;
      (l.key === c.key && l.offset === c.offset + 1 || l.offset === 1 && c.getNode().is(l.getNode().getPreviousSibling())) && (a = wo.clone(), sn(a));
    }
    if (wo = null, Z(a)) {
      const l = a.anchor, c = l.getNode();
      if (a.isCollapsed()) {
        t.type === "Range" && t.anchorNode === t.focusNode && (a.dirty = !0);
        const u = or(e).event, f = u ? u.timeStamp : performance.now(), [d, h, g, m, b] = p0, _ = Ve(), y = e.isComposing() === !1 && _.getTextContent() === "";
        if (f < b + 200 && l.offset === g && l.key === m) kc(a, d, h);
        else if (l.type === "text") ie(c) || le(141), m0(a, c);
        else if (l.type === "element" && !y) {
          X(c) || le(259);
          const C = l.getNode();
          C.isEmpty() ? function(D, R) {
            const N = R.getTextFormat(), L = R.getTextStyle();
            kc(D, N, L);
          }(a, C) : kc(a, 0, "");
        }
      } else {
        const u = l.key, f = a.focus.key, d = a.getNodes(), h = d.length, g = a.isBackward(), m = g ? s : i, b = g ? i : s, _ = g ? f : u, y = g ? u : f;
        let C = YC, D = !1;
        for (let R = 0; R < h; R++) {
          const N = d[R], L = N.getTextContentSize();
          if (ie(N) && L !== 0 && !(R === 0 && N.__key === _ && m === L || R === h - 1 && N.__key === y && b === 0) && (D = !0, C &= N.getFormat(), C === 0)) break;
        }
        a.format = D ? C : 0;
      }
    }
    ge(e, Xi, void 0);
  });
}
function kc(t, e, n) {
  t.format === e && t.style === n || (t.format = e, t.style = n, t.dirty = !0);
}
function m0(t, e) {
  kc(t, e.getFormat(), e.getStyle());
}
function w0(t) {
  if (!t.getTargetRanges) return null;
  const e = t.getTargetRanges();
  return e.length === 0 ? null : e[0];
}
function rc(t, e) {
  const n = t._compositionKey;
  if (en(null), n !== null && e != null) {
    if (e === "") {
      const r = Me(n), i = $s(t.getElementByKey(n));
      return void (i !== null && i.nodeValue !== null && ie(r) && Ap(r, i.nodeValue, null, null, !0));
    }
    if (e[e.length - 1] === `
`) {
      const r = oe();
      if (Z(r)) {
        const i = r.focus;
        return r.anchor.set(i.key, i.offset, i.type), void ge(t, Ls, null);
      }
    }
  }
  Tp(!0, t, e);
}
function b0(t) {
  let e = t.__lexicalEventHandles;
  return e === void 0 && (e = [], t.__lexicalEventHandles = e), e;
}
const vs = /* @__PURE__ */ new Map();
function y0(t) {
  const e = rE(t.target);
  if (e === null) return;
  const n = z0(e.anchorNode);
  if (n === null) return;
  qf && (qf = !1, Wn(n, () => {
    const l = la(), c = e.anchorNode;
    (it(c) || ki(c)) && sn(wp(l, e, n, t));
  }));
  const r = Sp(n), i = r[r.length - 1], o = i._key, s = vs.get(o), a = s || i;
  a !== n && mm(e, a, !1), mm(e, n, !0), n !== i ? vs.set(o, n) : s && vs.delete(o);
}
function wm(t) {
  t._lexicalHandled = !0;
}
function bm(t) {
  return t._lexicalHandled === !0;
}
function Sk(t) {
  const e = t.ownerDocument, n = Jc.get(e);
  if (n === void 0) return;
  const r = n - 1;
  r >= 0 || le(164), Jc.set(e, r), r === 0 && e.removeEventListener("selectionchange", y0);
  const i = zu(t);
  Np(i) ? (function(s) {
    if (s._parentEditor !== null) {
      const a = Sp(s), l = a[a.length - 1]._key;
      vs.get(l) === s && vs.delete(l);
    } else vs.delete(s._key);
  }(i), t.__lexicalEditor = null) : i && le(198);
  const o = b0(t);
  for (let s = 0; s < o.length; s++) o[s]();
  t.__lexicalEventHandles = [];
}
function jf(t, e, n) {
  Zt();
  const r = t.__key, i = t.getParent();
  if (i === null) return;
  const o = function(a) {
    const l = oe();
    if (!Z(l) || !X(a)) return l;
    const { anchor: c, focus: u } = l, f = c.getNode(), d = u.getNode();
    return Kf(f, a) && c.set(a.__key, 0, "element"), Kf(d, a) && u.set(a.__key, 0, "element"), l;
  }(t);
  let s = !1;
  if (Z(o) && e) {
    const a = o.anchor, l = o.focus;
    a.key === r && (Yc(a, t, i, t.getPreviousSibling(), t.getNextSibling()), s = !0), l.key === r && (Yc(l, t, i, t.getPreviousSibling(), t.getNextSibling()), s = !0);
  } else bn(o) && e && t.isSelected() && t.selectPrevious();
  if (Z(o) && e && !s) {
    const a = t.getIndexWithinParent();
    Eo(t), Xc(o, i, a, -1);
  } else Eo(t);
  n || Zr(i) || i.canBeEmpty() || !i.isEmpty() || jf(i, e), e && o && tn(i) && i.isEmpty() && i.selectEnd();
}
let aa = class {
  static getType() {
    const { ownNodeType: e } = Ip(this);
    return e === void 0 && le(64, this.name), e;
  }
  static clone(e) {
    le(65, this.name);
  }
  $config() {
    return {};
  }
  config(e, n) {
    const r = n.extends || Object.getPrototypeOf(this.constructor);
    return Object.assign(n, { extends: r, type: e }), { [e]: n };
  }
  afterCloneFrom(e) {
    this.__key === e.__key ? (this.__parent = e.__parent, this.__next = e.__next, this.__prev = e.__prev, this.__state = e.__state) : e.__state && (this.__state = e.__state.getWritable(this));
  }
  constructor(e) {
    this.__type = this.constructor.getType(), this.__parent = null, this.__prev = null, this.__next = null, Object.defineProperty(this, "__state", { configurable: !0, enumerable: !1, value: void 0, writable: !0 }), Xk(this, e);
  }
  getType() {
    return this.__type;
  }
  isInline() {
    le(137, this.constructor.name);
  }
  isAttached() {
    let e = this.__key;
    for (; e !== null; ) {
      if (e === "root") return !0;
      const n = Me(e);
      if (n === null) break;
      e = n.__parent;
    }
    return !1;
  }
  isSelected(e) {
    const n = e || oe();
    if (n == null) return !1;
    const r = n.getNodes().some((i) => i.__key === this.__key);
    if (ie(this)) return r;
    if (Z(n) && n.anchor.type === "element" && n.focus.type === "element") {
      if (n.isCollapsed()) return !1;
      const i = this.getParent();
      if (Xe(this) && this.isInline() && i) {
        const o = n.isBackward() ? n.focus : n.anchor;
        if (i.is(o.getNode()) && o.offset === i.getChildrenSize() && this.is(i.getLastChild())) return !1;
      }
    }
    return r;
  }
  getKey() {
    return this.__key;
  }
  getIndexWithinParent() {
    const e = this.getParent();
    if (e === null) return -1;
    let n = e.getFirstChild(), r = 0;
    for (; n !== null; ) {
      if (this.is(n)) return r;
      r++, n = n.getNextSibling();
    }
    return -1;
  }
  getParent() {
    const e = this.getLatest().__parent;
    return e === null ? null : Me(e);
  }
  getParentOrThrow() {
    const e = this.getParent();
    return e === null && le(66, this.__key), e;
  }
  getTopLevelElement() {
    let e = this;
    for (; e !== null; ) {
      const n = e.getParent();
      if (Zr(n)) return X(e) || e === this && Xe(e) || le(194), e;
      e = n;
    }
    return null;
  }
  getTopLevelElementOrThrow() {
    const e = this.getTopLevelElement();
    return e === null && le(67, this.__key), e;
  }
  getParents() {
    const e = [];
    let n = this.getParent();
    for (; n !== null; ) e.push(n), n = n.getParent();
    return e;
  }
  getParentKeys() {
    const e = [];
    let n = this.getParent();
    for (; n !== null; ) e.push(n.__key), n = n.getParent();
    return e;
  }
  getPreviousSibling() {
    const e = this.getLatest().__prev;
    return e === null ? null : Me(e);
  }
  getPreviousSiblings() {
    const e = [], n = this.getParent();
    if (n === null) return e;
    let r = n.getFirstChild();
    for (; r !== null && !r.is(this); ) e.push(r), r = r.getNextSibling();
    return e;
  }
  getNextSibling() {
    const e = this.getLatest().__next;
    return e === null ? null : Me(e);
  }
  getNextSiblings() {
    const e = [];
    let n = this.getNextSibling();
    for (; n !== null; ) e.push(n), n = n.getNextSibling();
    return e;
  }
  getCommonAncestor(e) {
    const n = X(this) ? this : this.getParent(), r = X(e) ? e : e.getParent(), i = n && r ? Ka(n, r) : null;
    return i ? i.commonAncestor : null;
  }
  is(e) {
    return e != null && this.__key === e.__key;
  }
  isBefore(e) {
    const n = Ka(this, e);
    return n !== null && (n.type === "descendant" || (n.type === "branch" ? iv(n) === -1 : (n.type !== "same" && n.type !== "ancestor" && le(279), !1)));
  }
  isParentOf(e) {
    const n = Ka(this, e);
    return n !== null && n.type === "ancestor";
  }
  getNodesBetween(e) {
    const n = this.isBefore(e), r = [], i = /* @__PURE__ */ new Set();
    let o = this;
    for (; o !== null; ) {
      const s = o.__key;
      if (i.has(s) || (i.add(s), r.push(o)), o === e) break;
      const a = X(o) ? n ? o.getFirstChild() : o.getLastChild() : null;
      if (a !== null) {
        o = a;
        continue;
      }
      const l = n ? o.getNextSibling() : o.getPreviousSibling();
      if (l !== null) {
        o = l;
        continue;
      }
      const c = o.getParentOrThrow();
      if (i.has(c.__key) || r.push(c), c === e) break;
      let u = null, f = c;
      do {
        if (f === null && le(68), u = n ? f.getNextSibling() : f.getPreviousSibling(), f = f.getParent(), f === null) break;
        u !== null || i.has(f.__key) || r.push(f);
      } while (u === null);
      o = u;
    }
    return n || r.reverse(), r;
  }
  isDirty() {
    const e = mt()._dirtyLeaves;
    return e !== null && e.has(this.__key);
  }
  getLatest() {
    const e = Me(this.__key);
    return e === null && le(113), e;
  }
  getWritable() {
    Zt();
    const e = Qi(), n = mt(), r = e._nodeMap, i = this.__key, o = this.getLatest(), s = n._cloneNotNeeded, a = oe();
    if (a !== null && a.setCachedNodes(null), s.has(i)) return Zc(o), o;
    const l = Op(o);
    return s.add(i), Zc(l), r.set(i, l), l;
  }
  getTextContent() {
    return "";
  }
  getTextContentSize() {
    return this.getTextContent().length;
  }
  createDOM(e, n) {
    le(70);
  }
  updateDOM(e, n, r) {
    le(71);
  }
  exportDOM(e) {
    return { element: this.createDOM(e._config, e) };
  }
  exportJSON() {
    const e = this.__state ? this.__state.toJSON() : void 0;
    return { type: this.__type, version: 1, ...e };
  }
  static importJSON(e) {
    le(18, this.name);
  }
  updateFromJSON(e) {
    return function(n, r) {
      const i = n.getWritable(), o = r.$;
      let s = o;
      for (const a of t0(i).flatKeys) a in r && (s !== void 0 && s !== o || (s = { ...o }), s[a] = r[a]);
      return (i.__state || s) && e0(n).updateFromJSON(s), i;
    }(this, e);
  }
  static transform() {
    return null;
  }
  remove(e) {
    jf(this, !0, e);
  }
  replace(e, n) {
    Zt();
    let r = oe();
    r !== null && (r = r.clone()), Vd(this, e);
    const i = this.getLatest(), o = this.__key, s = e.__key, a = e.getWritable(), l = this.getParentOrThrow().getWritable(), c = l.__size;
    Eo(a);
    const u = i.getPreviousSibling(), f = i.getNextSibling(), d = i.__prev, h = i.__next, g = i.__parent;
    if (jf(i, !1, !0), u === null ? l.__first = s : u.getWritable().__next = s, a.__prev = d, f === null ? l.__last = s : f.getWritable().__prev = s, a.__next = h, a.__parent = g, l.__size = c, n && (X(this) && X(a) || le(139), this.getChildren().forEach((m) => {
      a.append(m);
    })), Z(r)) {
      sn(r);
      const m = r.anchor, b = r.focus;
      m.key === o && xm(m, a), b.key === o && xm(b, a);
    }
    return Pi() === o && en(s), a;
  }
  insertAfter(e, n = !0) {
    Zt(), Vd(this, e);
    const r = this.getWritable(), i = e.getWritable(), o = i.getParent(), s = oe();
    let a = !1, l = !1;
    if (o !== null) {
      const h = e.getIndexWithinParent();
      if (Eo(i), Z(s)) {
        const g = o.__key, m = s.anchor, b = s.focus;
        a = m.type === "element" && m.key === g && m.offset === h + 1, l = b.type === "element" && b.key === g && b.offset === h + 1;
      }
    }
    const c = this.getNextSibling(), u = this.getParentOrThrow().getWritable(), f = i.__key, d = r.__next;
    if (c === null ? u.__last = f : c.getWritable().__prev = f, u.__size++, r.__next = f, i.__next = d, i.__prev = r.__key, i.__parent = r.__parent, n && Z(s)) {
      const h = this.getIndexWithinParent();
      Xc(s, u, h + 1);
      const g = u.__key;
      a && s.anchor.set(g, h + 2, "element"), l && s.focus.set(g, h + 2, "element");
    }
    return e;
  }
  insertBefore(e, n = !0) {
    Zt(), Vd(this, e);
    const r = this.getWritable(), i = e.getWritable(), o = i.__key;
    Eo(i);
    const s = this.getPreviousSibling(), a = this.getParentOrThrow().getWritable(), l = r.__prev, c = this.getIndexWithinParent();
    s === null ? a.__first = o : s.getWritable().__next = o, a.__size++, r.__prev = o, i.__prev = l, i.__next = r.__key, i.__parent = r.__parent;
    const u = oe();
    return n && Z(u) && Xc(u, this.getParentOrThrow(), c), e;
  }
  isParentRequired() {
    return !1;
  }
  createParentElementNode() {
    return Jn();
  }
  selectStart() {
    return this.selectPrevious();
  }
  selectEnd() {
    return this.selectNext(0, 0);
  }
  selectPrevious(e, n) {
    Zt();
    const r = this.getPreviousSibling(), i = this.getParentOrThrow();
    if (r === null) return i.select(0, 0);
    if (X(r)) return r.select();
    if (!ie(r)) {
      const o = r.getIndexWithinParent() + 1;
      return i.select(o, o);
    }
    return r.select(e, n);
  }
  selectNext(e, n) {
    Zt();
    const r = this.getNextSibling(), i = this.getParentOrThrow();
    if (r === null) return i.select();
    if (X(r)) return r.select(0, 0);
    if (!ie(r)) {
      const o = r.getIndexWithinParent();
      return i.select(o, o);
    }
    return r.select(e, n);
  }
  markDirty() {
    this.getWritable();
  }
  reconcileObservedMutation(e, n) {
    this.markDirty();
  }
}, Nl = class v0 extends aa {
  static getType() {
    return "linebreak";
  }
  static clone(e) {
    return new v0(e.__key);
  }
  constructor(e) {
    super(e);
  }
  getTextContent() {
    return `
`;
  }
  createDOM() {
    return document.createElement("br");
  }
  updateDOM() {
    return !1;
  }
  isInline() {
    return !0;
  }
  static importDOM() {
    return { br: (e) => function(n) {
      const r = n.parentElement;
      if (r !== null && eu(r)) {
        const i = r.firstChild;
        if (i === n || i.nextSibling === n && ic(i)) {
          const o = r.lastChild;
          if (o === n || o.previousSibling === n && ic(o)) return !0;
        }
      }
      return !1;
    }(e) || function(n) {
      const r = n.parentElement;
      if (r !== null && eu(r)) {
        const i = r.firstChild;
        if (i === n || i.nextSibling === n && ic(i)) return !1;
        const o = r.lastChild;
        if (o === n || o.previousSibling === n && ic(o)) return !0;
      }
      return !1;
    }(e) ? null : { conversion: Tk, priority: 0 } };
  }
  static importJSON(e) {
    return Lo().updateFromJSON(e);
  }
};
function Tk(t) {
  return { node: Lo() };
}
function Lo() {
  return lt(new Nl());
}
function xo(t) {
  return t instanceof Nl;
}
function ic(t) {
  return ki(t) && /^( |\t|\r?\n)+$/.test(t.textContent || "");
}
function Bd(t, e) {
  return 16 & e ? "code" : e & Zh ? "mark" : 32 & e ? "sub" : 64 & e ? "sup" : null;
}
function qd(t, e) {
  return 1 & e ? "strong" : 2 & e ? "em" : "span";
}
function _0(t, e, n, r, i) {
  const o = r.classList;
  let s = xs(i, "base");
  s !== void 0 && o.add(...s), s = xs(i, "underlineStrikethrough");
  let a = !1;
  const l = e & zc && e & Uc;
  s !== void 0 && (n & zc && n & Uc ? (a = !0, l || o.add(...s)) : l && o.remove(...s));
  for (const c in ji) {
    const u = ji[c];
    if (s = xs(i, c), s !== void 0) if (n & u) {
      if (a && (c === "underline" || c === "strikethrough")) {
        e & u && o.remove(...s);
        continue;
      }
      e & u && (!l || c !== "underline") && c !== "strikethrough" || o.add(...s);
    } else e & u && o.remove(...s);
  }
}
function x0(t, e, n) {
  const r = e.firstChild, i = n.isComposing(), o = t + (i ? Pu : "");
  if (r == null) e.textContent = o;
  else {
    const s = r.nodeValue;
    if (s !== o) if (i || Io) {
      const [a, l, c] = function(u, f) {
        const d = u.length, h = f.length;
        let g = 0, m = 0;
        for (; g < d && g < h && u[g] === f[g]; ) g++;
        for (; m + g < d && m + g < h && u[d - m - 1] === f[h - m - 1]; ) m++;
        return [g, d - g - m, f.slice(g, h - m)];
      }(s, o);
      l !== 0 && r.deleteData(a, l), r.insertData(a, c);
    } else r.nodeValue = o;
  }
}
function ym(t, e, n, r, i, o) {
  x0(i, t, e);
  const s = o.theme.text;
  s !== void 0 && _0(0, 0, r, t, s);
}
function oc(t, e) {
  const n = document.createElement(e);
  return n.appendChild(t), n;
}
let Gn = class C0 extends aa {
  static getType() {
    return "text";
  }
  static clone(e) {
    return new C0(e.__text, e.__key);
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__text = e.__text, this.__format = e.__format, this.__style = e.__style, this.__mode = e.__mode, this.__detail = e.__detail;
  }
  constructor(e = "", n) {
    super(n), this.__text = e, this.__format = 0, this.__style = "", this.__mode = 0, this.__detail = 0;
  }
  getFormat() {
    return this.getLatest().__format;
  }
  getDetail() {
    return this.getLatest().__detail;
  }
  getMode() {
    const e = this.getLatest();
    return ik[e.__mode];
  }
  getStyle() {
    return this.getLatest().__style;
  }
  isToken() {
    return this.getLatest().__mode === 1;
  }
  isComposing() {
    return this.__key === Pi();
  }
  isSegmented() {
    return this.getLatest().__mode === 2;
  }
  isDirectionless() {
    return !!(1 & this.getLatest().__detail);
  }
  isUnmergeable() {
    return !!(2 & this.getLatest().__detail);
  }
  hasFormat(e) {
    const n = ji[e];
    return !!(this.getFormat() & n);
  }
  isSimpleText() {
    return this.__type === "text" && this.__mode === 0;
  }
  getTextContent() {
    return this.getLatest().__text;
  }
  getFormatFlags(e, n) {
    return Qc(this.getLatest().__format, e, n);
  }
  canHaveFormat() {
    return !0;
  }
  isInline() {
    return !0;
  }
  createDOM(e, n) {
    const r = this.__format, i = Bd(0, r), o = qd(0, r), s = i === null ? o : i, a = document.createElement(s);
    let l = a;
    this.hasFormat("code") && a.setAttribute("spellcheck", "false"), i !== null && (l = document.createElement(o), a.appendChild(l)), ym(l, this, 0, r, this.__text, e);
    const c = this.__style;
    return c !== "" && (a.style.cssText = c), a;
  }
  updateDOM(e, n, r) {
    const i = this.__text, o = e.__format, s = this.__format, a = Bd(0, o), l = Bd(0, s), c = qd(0, o), u = qd(0, s);
    if ((a === null ? c : a) !== (l === null ? u : l)) return !0;
    if (a === l && c !== u) {
      const m = n.firstChild;
      m == null && le(48);
      const b = document.createElement(u);
      return ym(b, this, 0, s, i, r), n.replaceChild(b, m), !1;
    }
    let f = n;
    l !== null && a !== null && (f = n.firstChild, f == null && le(49)), x0(i, f, this);
    const d = r.theme.text;
    d !== void 0 && o !== s && _0(0, o, s, f, d);
    const h = e.__style, g = this.__style;
    return h !== g && (n.style.cssText = g), !1;
  }
  static importDOM() {
    return { "#text": () => ({ conversion: Ok, priority: 0 }), b: () => ({ conversion: Dk, priority: 0 }), code: () => ({ conversion: oi, priority: 0 }), em: () => ({ conversion: oi, priority: 0 }), i: () => ({ conversion: oi, priority: 0 }), mark: () => ({ conversion: oi, priority: 0 }), s: () => ({ conversion: oi, priority: 0 }), span: () => ({ conversion: Ak, priority: 0 }), strong: () => ({ conversion: oi, priority: 0 }), sub: () => ({ conversion: oi, priority: 0 }), sup: () => ({ conversion: oi, priority: 0 }), u: () => ({ conversion: oi, priority: 0 }) };
  }
  static importJSON(e) {
    return Ie().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTextContent(e.text).setFormat(e.format).setDetail(e.detail).setMode(e.mode).setStyle(e.style);
  }
  exportDOM(e) {
    let { element: n } = super.exportDOM(e);
    return it(n) || le(132), n.style.whiteSpace = "pre-wrap", this.hasFormat("lowercase") ? n.style.textTransform = "lowercase" : this.hasFormat("uppercase") ? n.style.textTransform = "uppercase" : this.hasFormat("capitalize") && (n.style.textTransform = "capitalize"), this.hasFormat("bold") && (n = oc(n, "b")), this.hasFormat("italic") && (n = oc(n, "i")), this.hasFormat("strikethrough") && (n = oc(n, "s")), this.hasFormat("underline") && (n = oc(n, "u")), { element: n };
  }
  exportJSON() {
    return { detail: this.getDetail(), format: this.getFormat(), mode: this.getMode(), style: this.getStyle(), text: this.getTextContent(), ...super.exportJSON() };
  }
  selectionTransform(e, n) {
  }
  setFormat(e) {
    const n = this.getWritable();
    return n.__format = typeof e == "string" ? ji[e] : e, n;
  }
  setDetail(e) {
    const n = this.getWritable();
    return n.__detail = typeof e == "string" ? tk[e] : e, n;
  }
  setStyle(e) {
    const n = this.getWritable();
    return n.__style = e, n;
  }
  toggleFormat(e) {
    const n = Qc(this.getFormat(), e, null);
    return this.setFormat(n);
  }
  toggleDirectionless() {
    const e = this.getWritable();
    return e.__detail ^= 1, e;
  }
  toggleUnmergeable() {
    const e = this.getWritable();
    return e.__detail ^= 2, e;
  }
  setMode(e) {
    const n = rk[e];
    if (this.__mode === n) return this;
    const r = this.getWritable();
    return r.__mode = n, r;
  }
  setTextContent(e) {
    if (this.__text === e) return this;
    const n = this.getWritable();
    return n.__text = e, n;
  }
  select(e, n) {
    Zt();
    let r = e, i = n;
    const o = oe(), s = this.getTextContent(), a = this.__key;
    if (typeof s == "string") {
      const l = s.length;
      r === void 0 && (r = l), i === void 0 && (i = l);
    } else r = 0, i = 0;
    if (!Z(o)) return D0(a, r, a, i, "text", "text");
    {
      const l = Pi();
      l !== o.anchor.key && l !== o.focus.key || en(a), o.setTextNodeRange(this, r, this, i);
    }
    return o;
  }
  selectStart() {
    return this.select(0, 0);
  }
  selectEnd() {
    const e = this.getTextContentSize();
    return this.select(e, e);
  }
  spliceText(e, n, r, i) {
    const o = this.getWritable(), s = o.__text, a = r.length;
    let l = e;
    l < 0 && (l = a + l, l < 0 && (l = 0));
    const c = oe();
    if (i && Z(c)) {
      const f = e + a;
      c.setTextNodeRange(o, f, o, f);
    }
    const u = s.slice(0, l) + r + s.slice(l + n);
    return o.__text = u, o;
  }
  canInsertTextBefore() {
    return !0;
  }
  canInsertTextAfter() {
    return !0;
  }
  splitText(...e) {
    Zt();
    const n = this.getLatest(), r = n.getTextContent();
    if (r === "") return [];
    const i = n.__key, o = Pi(), s = r.length;
    e.sort((O, M) => O - M), e.push(s);
    const a = [], l = e.length;
    for (let O = 0, M = 0; O < s && M <= l; M++) {
      const q = e[M];
      q > O && (a.push(r.slice(O, q)), O = q);
    }
    const c = a.length;
    if (c === 1) return [n];
    const u = a[0], f = n.getParent();
    let d;
    const h = n.getFormat(), g = n.getStyle(), m = n.__detail;
    let b = !1, _ = null, y = null;
    const C = oe();
    if (Z(C)) {
      const [O, M] = C.isBackward() ? [C.focus, C.anchor] : [C.anchor, C.focus];
      O.type === "text" && O.key === i && (_ = O), M.type === "text" && M.key === i && (y = M);
    }
    n.isSegmented() ? (d = Ie(u), d.__format = h, d.__style = g, d.__detail = m, d.__state = lm(n, d), b = !0) : d = n.setTextContent(u);
    const D = [d];
    for (let O = 1; O < c; O++) {
      const M = Ie(a[O]);
      M.__format = h, M.__style = g, M.__detail = m, M.__state = lm(n, M);
      const q = M.__key;
      o === i && en(q), D.push(M);
    }
    const R = _ ? _.offset : null, N = y ? y.offset : null;
    let L = 0;
    for (const O of D) {
      if (!_ && !y) break;
      const M = L + O.getTextContentSize();
      if (_ !== null && R !== null && R <= M && R >= L && (_.set(O.getKey(), R - L, "text"), R < M && (_ = null)), y !== null && N !== null && N <= M && N >= L) {
        y.set(O.getKey(), N - L, "text");
        break;
      }
      L = M;
    }
    if (f !== null) {
      (function(q) {
        const k = q.getPreviousSibling(), I = q.getNextSibling();
        k !== null && Zc(k), I !== null && Zc(I);
      })(this);
      const O = f.getWritable(), M = this.getIndexWithinParent();
      b ? (O.splice(M, 0, D), this.remove()) : O.splice(M, 1, D), Z(C) && Xc(C, f, M, c - 1);
    }
    return D;
  }
  mergeWithSibling(e) {
    const n = e === this.getPreviousSibling();
    n || e === this.getNextSibling() || le(50);
    const r = this.__key, i = e.__key, o = this.__text, s = o.length;
    Pi() === i && en(r);
    const a = oe();
    if (Z(a)) {
      const f = a.anchor, d = a.focus;
      f !== null && f.key === i && Am(f, n, r, e, s), d !== null && d.key === i && Am(d, n, r, e, s);
    }
    const l = e.__text, c = n ? l + o : o + l;
    this.setTextContent(c);
    const u = this.getWritable();
    return e.remove(), u;
  }
  isTextEntity() {
    return !1;
  }
};
function Ak(t) {
  return { forChild: mp(t.style), node: null };
}
function Dk(t) {
  const e = t, n = e.style.fontWeight === "normal";
  return { forChild: mp(e.style, n ? void 0 : "bold"), node: null };
}
const vm = /* @__PURE__ */ new WeakMap();
function Mk(t) {
  if (!it(t)) return !1;
  if (t.nodeName === "PRE") return !0;
  const e = t.style.whiteSpace;
  return typeof e == "string" && e.startsWith("pre");
}
function Ok(t) {
  const e = t;
  t.parentElement === null && le(129);
  let n = e.textContent || "";
  if (function(r) {
    let i, o = r.parentNode;
    const s = [r];
    for (; o !== null && (i = vm.get(o)) === void 0 && !Mk(o); ) s.push(o), o = o.parentNode;
    const a = i === void 0 ? o : i;
    for (let l = 0; l < s.length; l++) vm.set(s[l], a);
    return a;
  }(e) !== null) {
    const r = n.split(/(\r?\n|\t)/), i = [], o = r.length;
    for (let s = 0; s < o; s++) {
      const a = r[s];
      a === `
` || a === `\r
` ? i.push(Lo()) : a === "	" ? i.push(Tl()) : a !== "" && i.push(Ie(a));
    }
    return { node: i };
  }
  if (n = n.replace(/\r/g, "").replace(/[ \t\n]+/g, " "), n === "") return { node: null };
  if (n[0] === " ") {
    let r = e, i = !0;
    for (; r !== null && (r = _m(r, !1)) !== null; ) {
      const o = r.textContent || "";
      if (o.length > 0) {
        /[ \t\n]$/.test(o) && (n = n.slice(1)), i = !1;
        break;
      }
    }
    i && (n = n.slice(1));
  }
  if (n[n.length - 1] === " ") {
    let r = e, i = !0;
    for (; r !== null && (r = _m(r, !0)) !== null; )
      if ((r.textContent || "").replace(/^( |\t|\r?\n)+/, "").length > 0) {
        i = !1;
        break;
      }
    i && (n = n.slice(0, n.length - 1));
  }
  return n === "" ? { node: null } : { node: Ie(n) };
}
function _m(t, e) {
  let n = t;
  for (; ; ) {
    let r;
    for (; (r = e ? n.nextSibling : n.previousSibling) === null; ) {
      const o = n.parentElement;
      if (o === null) return null;
      n = o;
    }
    if (n = r, it(n)) {
      const o = n.style.display;
      if (o === "" && !Xf(n) || o !== "" && !o.startsWith("inline")) return null;
    }
    let i = n;
    for (; (i = e ? n.firstChild : n.lastChild) !== null; ) n = i;
    if (ki(n)) return n;
    if (n.nodeName === "BR") return null;
  }
}
const Ik = { code: "code", em: "italic", i: "italic", mark: "highlight", s: "strikethrough", strong: "bold", sub: "subscript", sup: "superscript", u: "underline" };
function oi(t) {
  const e = Ik[t.nodeName.toLowerCase()];
  return e === void 0 ? { node: null } : { forChild: mp(t.style, e), node: null };
}
function Ie(t = "") {
  return lt(new Gn(t));
}
function ie(t) {
  return t instanceof Gn;
}
function mp(t, e) {
  const n = t.fontWeight, r = t.textDecoration.split(" "), i = n === "700" || n === "bold", o = r.includes("line-through"), s = t.fontStyle === "italic", a = r.includes("underline"), l = t.verticalAlign;
  return (c) => (ie(c) && (i && !c.hasFormat("bold") && c.toggleFormat("bold"), o && !c.hasFormat("strikethrough") && c.toggleFormat("strikethrough"), s && !c.hasFormat("italic") && c.toggleFormat("italic"), a && !c.hasFormat("underline") && c.toggleFormat("underline"), l !== "sub" || c.hasFormat("subscript") || c.toggleFormat("subscript"), l !== "super" || c.hasFormat("superscript") || c.toggleFormat("superscript"), e && !c.hasFormat(e) && c.toggleFormat(e)), c);
}
class Sl extends Gn {
  static getType() {
    return "tab";
  }
  static clone(e) {
    return new Sl(e.__key);
  }
  constructor(e) {
    super("	", e), this.__detail = 2;
  }
  static importDOM() {
    return null;
  }
  createDOM(e) {
    const n = super.createDOM(e), r = xs(e.theme, "tab");
    return r !== void 0 && n.classList.add(...r), n;
  }
  static importJSON(e) {
    return Tl().updateFromJSON(e);
  }
  setTextContent(e) {
    return e !== "	" && e !== "" && le(126), super.setTextContent("	");
  }
  spliceText(e, n, r, i) {
    return r === "" && n === 0 || r === "	" && n === 1 || le(286), this;
  }
  setDetail(e) {
    return e !== 2 && le(127), this;
  }
  setMode(e) {
    return e !== "normal" && le(128), this;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
}
function Tl() {
  return lt(new Sl());
}
function k0(t) {
  return t instanceof Sl;
}
class Rk {
  constructor(e, n, r) {
    this._selection = null, this.key = e, this.offset = n, this.type = r;
  }
  is(e) {
    return this.key === e.key && this.offset === e.offset && this.type === e.type;
  }
  isBefore(e) {
    return this.key === e.key ? this.offset < e.offset : rv(Vr(bi(this, "next")), Vr(bi(e, "next"))) < 0;
  }
  getNode() {
    const e = Me(this.key);
    return e === null && le(20), e;
  }
  set(e, n, r, i) {
    const o = this._selection, s = this.key;
    i && this.key === e && this.offset === n && this.type === r || (this.key = e, this.offset = n, this.type = r, ca() || (Pi() === s && en(e), o !== null && (o.setCachedNodes(null), o.dirty = !0)));
  }
}
function Mn(t, e, n) {
  return new Rk(t, e, n);
}
function jd(t, e) {
  let n = e.__key, r = t.offset, i = "element";
  if (ie(e)) {
    i = "text";
    const o = e.getTextContentSize();
    r > o && (r = o);
  } else if (!X(e)) {
    const o = e.getNextSibling();
    if (ie(o)) n = o.__key, r = 0, i = "text";
    else {
      const s = e.getParent();
      s && (n = s.__key, r = e.getIndexWithinParent() + 1);
    }
  }
  t.set(n, r, i);
}
function xm(t, e) {
  if (X(e)) {
    const n = e.getLastDescendant();
    X(n) || ie(n) ? jd(t, n) : jd(t, e);
  } else jd(t, e);
}
let E0 = class N0 {
  constructor(e) {
    this._cachedNodes = null, this._nodes = e, this.dirty = !1;
  }
  getCachedNodes() {
    return this._cachedNodes;
  }
  setCachedNodes(e) {
    this._cachedNodes = e;
  }
  is(e) {
    if (!bn(e)) return !1;
    const n = this._nodes, r = e._nodes;
    return n.size === r.size && Array.from(n).every((i) => r.has(i));
  }
  isCollapsed() {
    return !1;
  }
  isBackward() {
    return !1;
  }
  getStartEndPoints() {
    return null;
  }
  add(e) {
    this.dirty = !0, this._nodes.add(e), this._cachedNodes = null;
  }
  delete(e) {
    this.dirty = !0, this._nodes.delete(e), this._cachedNodes = null;
  }
  clear() {
    this.dirty = !0, this._nodes.clear(), this._cachedNodes = null;
  }
  has(e) {
    return this._nodes.has(e);
  }
  clone() {
    return new N0(new Set(this._nodes));
  }
  extract() {
    return this.getNodes();
  }
  insertRawText(e) {
  }
  insertText() {
  }
  insertNodes(e) {
    const n = this.getNodes(), r = n.length, i = n[r - 1];
    let o;
    if (ie(i)) o = i.select();
    else {
      const s = i.getIndexWithinParent() + 1;
      o = i.getParentOrThrow().select(s, s);
    }
    o.insertNodes(e);
    for (let s = 0; s < r; s++) n[s].remove();
  }
  getNodes() {
    const e = this._cachedNodes;
    if (e !== null) return e;
    const n = this._nodes, r = [];
    for (const i of n) {
      const o = Me(i);
      o !== null && r.push(o);
    }
    return ca() || (this._cachedNodes = r), r;
  }
  getTextContent() {
    const e = this.getNodes();
    let n = "";
    for (let r = 0; r < e.length; r++) n += e[r].getTextContent();
    return n;
  }
  deleteNodes() {
    const e = this.getNodes();
    if ((oe() || la()) === this && e[0]) {
      const n = $t(e[0], "next");
      wE(Vi(n, n));
    }
    for (const n of e) n.remove();
  }
};
function Z(t) {
  return t instanceof Al;
}
let Al = class S0 {
  constructor(e, n, r, i) {
    this.anchor = e, this.focus = n, e._selection = this, n._selection = this, this._cachedNodes = null, this.format = r, this.style = i, this.dirty = !1;
  }
  getCachedNodes() {
    return this._cachedNodes;
  }
  setCachedNodes(e) {
    this._cachedNodes = e;
  }
  is(e) {
    return !!Z(e) && this.anchor.is(e.anchor) && this.focus.is(e.focus) && this.format === e.format && this.style === e.style;
  }
  isCollapsed() {
    return this.anchor.is(this.focus);
  }
  getNodes() {
    const e = this._cachedNodes;
    if (e !== null) return e;
    const n = function(r) {
      const i = [], [o, s] = r.getTextSlices();
      o && i.push(o.caret.origin);
      const a = /* @__PURE__ */ new Set(), l = /* @__PURE__ */ new Set();
      for (const c of r) if (wr(c)) {
        const { origin: u } = c;
        i.length === 0 ? a.add(u) : (l.add(u), i.push(u));
      } else {
        const { origin: u } = c;
        X(u) && l.has(u) || i.push(u);
      }
      if (s && i.push(s.caret.origin), $o(r.focus) && X(r.focus.origin) && r.focus.getNodeAtCaret() === null) for (let c = _r(r.focus.origin, "previous"); wr(c) && a.has(c.origin) && !c.origin.isEmpty() && c.origin.is(i[i.length - 1]); c = sl(c)) a.delete(c.origin), i.pop();
      for (; i.length > 1; ) {
        const c = i[i.length - 1];
        if (!X(c) || l.has(c) || c.isEmpty() || a.has(c)) break;
        i.pop();
      }
      if (i.length === 0 && r.isCollapsed()) {
        const c = Vr(r.anchor), u = Vr(r.anchor.getFlipped()), f = (h) => Bi(h) ? h.origin : h.getNodeAtCaret(), d = f(c) || f(u) || (r.anchor.getNodeAtCaret() ? c.origin : u.origin);
        i.push(d);
      }
      return i;
    }(sv(Jm(this), "next"));
    return ca() || (this._cachedNodes = n), n;
  }
  setTextNodeRange(e, n, r, i) {
    this.anchor.set(e.__key, n, "text"), this.focus.set(r.__key, i, "text");
  }
  getTextContent() {
    const e = this.getNodes();
    if (e.length === 0) return "";
    const n = e[0], r = e[e.length - 1], i = this.anchor, o = this.focus, s = i.isBefore(o), [a, l] = Uf(this);
    let c = "", u = !0;
    for (let f = 0; f < e.length; f++) {
      const d = e[f];
      if (X(d) && !d.isInline()) u || (c += `
`), u = !d.isEmpty();
      else if (u = !1, ie(d)) {
        let h = d.getTextContent();
        d === n ? d === r ? i.type === "element" && o.type === "element" && o.offset !== i.offset || (h = a < l ? h.slice(a, l) : h.slice(l, a)) : h = s ? h.slice(a) : h.slice(l) : d === r && (h = s ? h.slice(0, l) : h.slice(0, a)), c += h;
      } else !Xe(d) && !xo(d) || d === r && this.isCollapsed() || (c += d.getTextContent());
    }
    return c;
  }
  applyDOMRange(e) {
    const n = mt(), r = n.getEditorState()._selection, i = A0(e.startContainer, e.startOffset, e.endContainer, e.endOffset, n, r);
    if (i === null) return;
    const [o, s] = i;
    this.anchor.set(o.key, o.offset, o.type, !0), this.focus.set(s.key, s.offset, s.type, !0), tl(this);
  }
  clone() {
    const e = this.anchor, n = this.focus;
    return new S0(Mn(e.key, e.offset, e.type), Mn(n.key, n.offset, n.type), this.format, this.style);
  }
  toggleFormat(e) {
    this.format = Qc(this.format, e, null), this.dirty = !0;
  }
  setFormat(e) {
    this.format = e, this.dirty = !0;
  }
  setStyle(e) {
    this.style = e, this.dirty = !0;
  }
  hasFormat(e) {
    const n = ji[e];
    return !!(this.format & n);
  }
  insertRawText(e) {
    const n = e.split(/(\r?\n|\t)/), r = [], i = n.length;
    for (let o = 0; o < i; o++) {
      const s = n[o];
      s === `
` || s === `\r
` ? r.push(Lo()) : s === "	" ? r.push(Tl()) : r.push(Ie(s));
    }
    this.insertNodes(r);
  }
  insertText(e) {
    const n = this.anchor, r = this.focus, i = this.format, o = this.style;
    let s = n, a = r;
    !this.isCollapsed() && r.isBefore(n) && (s = r, a = n), s.type === "element" && function(b, _, y, C) {
      const D = b.getNode(), R = D.getChildAtIndex(b.offset), N = Ie(), L = tn(D) ? Jn().append(N) : N;
      N.setFormat(y), N.setStyle(C), R === null ? D.append(L) : R.insertBefore(L), b.is(_) && _.set(N.__key, 0, "text"), b.set(N.__key, 0, "text");
    }(s, a, i, o), a.type === "element" && al(a, Vr(bi(a, "next")));
    const l = s.offset;
    let c = a.offset;
    const u = this.getNodes(), f = u.length;
    let d = u[0];
    ie(d) || le(26);
    const h = d.getTextContent().length, g = d.getParentOrThrow();
    let m = u[f - 1];
    if (f === 1 && a.type === "element" && (c = h, a.set(s.key, c, "text")), this.isCollapsed() && l === h && (li(d) || !d.canInsertTextAfter() || !g.canInsertTextAfter() && d.getNextSibling() === null)) {
      let b = d.getNextSibling();
      if (ie(b) && b.canInsertTextBefore() && !li(b) || (b = Ie(), b.setFormat(i), b.setStyle(o), g.canInsertTextAfter() ? d.insertAfter(b) : g.insertAfter(b)), b.select(0, 0), d = b, e !== "") return void this.insertText(e);
    } else if (this.isCollapsed() && l === 0 && (li(d) || !d.canInsertTextBefore() || !g.canInsertTextBefore() && d.getPreviousSibling() === null)) {
      let b = d.getPreviousSibling();
      if (ie(b) && !li(b) || (b = Ie(), b.setFormat(i), g.canInsertTextBefore() ? d.insertBefore(b) : g.insertBefore(b)), b.select(), d = b, e !== "") return void this.insertText(e);
    } else if (d.isSegmented() && l !== h) {
      const b = Ie(d.getTextContent());
      b.setFormat(i), d.replace(b), d = b;
    } else if (!this.isCollapsed() && e !== "") {
      const b = m.getParent();
      if (!g.canInsertTextBefore() || !g.canInsertTextAfter() || X(b) && (!b.canInsertTextBefore() || !b.canInsertTextAfter())) return this.insertText(""), T0(this.anchor, this.focus, null), void this.insertText(e);
    }
    if (f === 1) {
      if (ko(d)) {
        const C = Ie(e);
        return C.select(), void d.replace(C);
      }
      const b = d.getFormat(), _ = d.getStyle();
      if (l !== c || b === i && _ === o) {
        if (k0(d)) {
          const C = Ie(e);
          return C.setFormat(i), C.setStyle(o), C.select(), void d.replace(C);
        }
      } else {
        if (d.getTextContent() !== "") {
          const C = Ie(e);
          if (C.setFormat(i), C.setStyle(o), C.select(), l === 0) d.insertBefore(C, !1);
          else {
            const [D] = d.splitText(l);
            D.insertAfter(C, !1);
          }
          return void (C.isComposing() && this.anchor.type === "text" && (this.anchor.offset -= e.length));
        }
        d.setFormat(i), d.setStyle(o);
      }
      const y = c - l;
      d = d.spliceText(l, y, e, !0), d.getTextContent() === "" ? d.remove() : this.anchor.type === "text" && (d.isComposing() ? this.anchor.offset -= e.length : (this.format = b, this.style = _));
    } else {
      const b = /* @__PURE__ */ new Set([...d.getParentKeys(), ...m.getParentKeys()]), _ = X(d) ? d : d.getParentOrThrow();
      let y = X(m) ? m : m.getParentOrThrow(), C = m;
      if (!_.is(y) && y.isInline()) do
        C = y, y = y.getParentOrThrow();
      while (y.isInline());
      if (a.type === "text" && (c !== 0 || m.getTextContent() === "") || a.type === "element" && m.getIndexWithinParent() < c) if (ie(m) && !ko(m) && c !== m.getTextContentSize()) {
        if (m.isSegmented()) {
          const O = Ie(m.getTextContent());
          m.replace(O), m = O;
        }
        tn(a.getNode()) || a.type !== "text" || (m = m.spliceText(0, c, "")), b.add(m.__key);
      } else {
        const O = m.getParentOrThrow();
        O.canBeEmpty() || O.getChildrenSize() !== 1 ? m.remove() : O.remove();
      }
      else b.add(m.__key);
      const D = y.getChildren(), R = new Set(u), N = _.is(y), L = _.isInline() && d.getNextSibling() === null ? _ : d;
      for (let O = D.length - 1; O >= 0; O--) {
        const M = D[O];
        if (M.is(d) || X(M) && M.isParentOf(d)) break;
        M.isAttached() && (!R.has(M) || M.is(C) ? N || L.insertAfter(M, !1) : M.remove());
      }
      if (!N) {
        let O = y, M = null;
        for (; O !== null; ) {
          const q = O.getChildren(), k = q.length;
          (k === 0 || q[k - 1].is(M)) && (b.delete(O.__key), M = O), O = O.getParent();
        }
      }
      if (ko(d)) if (l === h) d.select();
      else {
        const O = Ie(e);
        O.select(), d.replace(O);
      }
      else d = d.spliceText(l, h - l, e, !0), d.getTextContent() === "" ? d.remove() : d.isComposing() && this.anchor.type === "text" && (this.anchor.offset -= e.length);
      for (let O = 1; O < f; O++) {
        const M = u[O], q = M.__key;
        b.has(q) || M.remove();
      }
    }
  }
  removeText() {
    const e = oe() === this;
    Tc(this, bE(Jm(this))), e && oe() !== this && sn(this);
  }
  formatText(e, n = null) {
    if (this.isCollapsed()) return this.toggleFormat(e), void en(null);
    const r = this.getNodes(), i = [];
    for (const D of r) ie(D) && i.push(D);
    const o = (D) => {
      r.forEach((R) => {
        if (X(R)) {
          const N = R.getFormatFlags(e, D);
          R.setTextFormat(N);
        }
      });
    }, s = i.length;
    if (s === 0) return this.toggleFormat(e), en(null), void o(n);
    const a = this.anchor, l = this.focus, c = this.isBackward(), u = c ? l : a, f = c ? a : l;
    let d = 0, h = i[0], g = u.type === "element" ? 0 : u.offset;
    if (u.type === "text" && g === h.getTextContentSize() && (d = 1, h = i[1], g = 0), h == null) return;
    const m = h.getFormatFlags(e, n);
    o(m);
    const b = s - 1;
    let _ = i[b];
    const y = f.type === "text" ? f.offset : _.getTextContentSize();
    if (h.is(_)) {
      if (g === y) return;
      if (li(h) || g === 0 && y === h.getTextContentSize()) h.setFormat(m);
      else {
        const D = h.splitText(g, y), R = g === 0 ? D[0] : D[1];
        R.setFormat(m), u.type === "text" && u.set(R.__key, 0, "text"), f.type === "text" && f.set(R.__key, y - g, "text");
      }
      return void (this.format = m);
    }
    g === 0 || li(h) || ([, h] = h.splitText(g), g = 0), h.setFormat(m);
    const C = _.getFormatFlags(e, m);
    y > 0 && (y === _.getTextContentSize() || li(_) || ([_] = _.splitText(y)), _.setFormat(C));
    for (let D = d + 1; D < b; D++) {
      const R = i[D], N = R.getFormatFlags(e, C);
      R.setFormat(N);
    }
    u.type === "text" && u.set(h.__key, g, "text"), f.type === "text" && f.set(_.__key, y, "text"), this.format = m | C;
  }
  insertNodes(e) {
    if (e.length === 0) return;
    if (this.isCollapsed() || this.removeText(), this.anchor.key === "root") {
      this.insertParagraph();
      const g = oe();
      return Z(g) || le(134), g.insertNodes(e);
    }
    const n = (this.isBackward() ? this.focus : this.anchor).getNode(), r = Wd(n, nr), i = e[e.length - 1];
    if (X(r) && "__language" in r) {
      if ("__language" in e[0]) this.insertText(e[0].getTextContent());
      else {
        const g = Ud(this);
        r.splice(g, 0, e), i.selectEnd();
      }
      return;
    }
    if (!e.some((g) => (X(g) || Xe(g)) && !g.isInline())) {
      X(r) || le(211, n.constructor.name, n.getType());
      const g = Ud(this);
      return r.splice(g, 0, e), void i.selectEnd();
    }
    const o = function(g) {
      const m = Jn();
      let b = null;
      for (let _ = 0; _ < g.length; _++) {
        const y = g[_], C = xo(y);
        if (C || Xe(y) && y.isInline() || X(y) && y.isInline() || ie(y) || y.isParentRequired()) {
          if (b === null && (b = y.createParentElementNode(), m.append(b), C)) continue;
          b !== null && b.append(y);
        } else m.append(y), b = null;
      }
      return m;
    }(e), s = o.getLastDescendant(), a = o.getChildren(), l = !X(r) || !r.isEmpty() ? this.insertParagraph() : null, c = a[a.length - 1];
    let u = a[0];
    var f;
    X(f = u) && nr(f) && !f.isEmpty() && X(r) && (!r.isEmpty() || r.canMergeWhenEmpty()) && (X(r) || le(211, n.constructor.name, n.getType()), r.append(...u.getChildren()), u = a[1]), u && (r === null && le(212, n.constructor.name, n.getType()), function(g, m, b) {
      const _ = m.getParentOrThrow().getLastChild();
      let y = m;
      const C = [m];
      for (; y !== _; ) y.getNextSibling() || le(140), y = y.getNextSibling(), C.push(y);
      let D = g;
      for (const R of C) D = D.insertAfter(R);
    }(r, u));
    const d = Wd(s, nr);
    l && X(d) && (l.canMergeWhenEmpty() || nr(c)) && (d.append(...l.getChildren()), l.remove()), X(r) && r.isEmpty() && r.remove(), s.selectEnd();
    const h = X(r) ? r.getLastChild() : null;
    xo(h) && d !== r && h.remove();
  }
  insertParagraph() {
    if (this.anchor.key === "root") {
      const s = Jn();
      return Ve().splice(this.anchor.offset, 0, [s]), s.select(), s;
    }
    const e = Ud(this), n = Wd(this.anchor.getNode(), nr);
    X(n) || le(213);
    const r = n.getChildAtIndex(e), i = r ? [r, ...r.getNextSiblings()] : [], o = n.insertNewAfter(this, !1);
    return o ? (o.append(...i), o.selectStart(), o) : null;
  }
  insertLineBreak(e) {
    const n = Lo();
    if (this.insertNodes([n]), e) {
      const r = n.getParentOrThrow(), i = n.getIndexWithinParent();
      r.select(i, i);
    }
  }
  extract() {
    const e = this.getNodes(), n = e.length, r = n - 1, i = this.anchor, o = this.focus;
    let s = e[0], a = e[r];
    const [l, c] = Uf(this);
    if (n === 0) return [];
    if (n === 1) {
      if (ie(s) && !this.isCollapsed()) {
        const f = l > c ? c : l, d = l > c ? l : c, h = s.splitText(f, d), g = f === 0 ? h[0] : h[1];
        return g != null ? [g] : [];
      }
      return [s];
    }
    const u = i.isBefore(o);
    if (ie(s)) {
      const f = u ? l : c;
      f === s.getTextContentSize() ? e.shift() : f !== 0 && ([, s] = s.splitText(f), e[0] = s);
    }
    if (ie(a)) {
      const f = a.getTextContent().length, d = u ? c : l;
      d === 0 ? e.pop() : d !== f && ([a] = a.splitText(d), e[r] = a);
    }
    return e;
  }
  modify(e, n, r) {
    if (Dm(this, e, n, r)) return;
    const i = e === "move", o = mt(), s = vr(or(o));
    if (!s) return;
    const a = o._blockCursorElement, l = o._rootElement, c = this.focus.getNode();
    if (l === null || a === null || !X(c) || c.isInline() || c.canBeEmpty() || Gf(a, o, l), this.dirty) {
      let u = Fs(o, this.anchor.key), f = Fs(o, this.focus.key);
      this.anchor.type === "text" && (u = $s(u)), this.focus.type === "text" && (f = $s(f)), u && f && O0(s, u, this.anchor.offset, f, this.focus.offset);
    }
    if (function(u, f, d, h) {
      u.modify(f, d, h);
    }(s, e, n ? "backward" : "forward", r), s.rangeCount > 0) {
      const u = s.getRangeAt(0), f = this.anchor.getNode(), d = tn(f) ? f : tE(f);
      if (this.applyDOMRange(u), this.dirty = !0, !i) {
        const h = this.getNodes(), g = [];
        let m = !1;
        for (let b = 0; b < h.length; b++) {
          const _ = h[b];
          Kf(_, d) ? g.push(_) : m = !0;
        }
        if (m && g.length > 0) if (n) {
          const b = g[0];
          X(b) ? b.selectStart() : b.getParentOrThrow().selectStart();
        } else {
          const b = g[g.length - 1];
          X(b) ? b.selectEnd() : b.getParentOrThrow().selectEnd();
        }
        s.anchorNode === u.startContainer && s.anchorOffset === u.startOffset || function(b) {
          const _ = b.focus, y = b.anchor, C = y.key, D = y.offset, R = y.type;
          y.set(_.key, _.offset, _.type, !0), _.set(C, D, R, !0);
        }(this);
      }
    }
    r === "lineboundary" && Dm(this, e, n, r, "decorators");
  }
  forwardDeletion(e, n, r) {
    if (!r && (e.type === "element" && X(n) && e.offset === n.getChildrenSize() || e.type === "text" && e.offset === n.getTextContentSize())) {
      const i = n.getParent(), o = n.getNextSibling() || (i === null ? null : i.getNextSibling());
      if (X(o) && o.isShadowRoot()) return !0;
    }
    return !1;
  }
  deleteCharacter(e) {
    const n = this.isCollapsed();
    if (this.isCollapsed()) {
      const r = this.anchor;
      let i = r.getNode();
      if (this.forwardDeletion(r, i, e)) return;
      const o = Lp(bi(r, e ? "previous" : "next"));
      if (o.getTextSlices().every((a) => a === null || a.distance === 0)) {
        let a = { type: "initial" };
        for (const l of o.iterNodeCarets("shadowRoot")) if (wr(l)) {
          if (!l.origin.isInline()) {
            if (l.origin.isShadowRoot()) {
              if (a.type === "merge-block") break;
              if (X(o.anchor.origin) && o.anchor.origin.isEmpty()) {
                const c = Vr(l);
                Tc(this, Vi(c, c)), o.anchor.origin.remove();
              }
              return;
            }
            a.type !== "merge-next-block" && a.type !== "merge-block" || (a = { block: a.block, caret: l, type: "merge-block" });
          }
        } else {
          if (a.type === "merge-block") break;
          if ($o(l)) {
            if (X(l.origin)) {
              if (l.origin.isInline()) {
                if (!l.origin.isParentOf(o.anchor.origin)) break;
              } else a = { block: l.origin, type: "merge-next-block" };
              continue;
            }
            if (Xe(l.origin)) {
              if (!l.origin.isIsolated()) if (a.type === "merge-next-block" && (l.origin.isKeyboardSelectable() || !l.origin.isInline()) && X(o.anchor.origin) && o.anchor.origin.isEmpty()) {
                o.anchor.origin.remove();
                const c = M0();
                c.add(l.origin.getKey()), sn(c);
              } else l.origin.remove();
              return;
            }
            break;
          }
        }
        if (a.type === "merge-block") {
          const { caret: l, block: c } = a;
          return Tc(this, Vi(!l.origin.isEmpty() && c.isEmpty() ? Gu($t(c, l.direction)) : o.anchor, l)), this.removeText();
        }
      }
      const s = this.focus;
      if (this.modify("extend", e, "character"), this.isCollapsed()) {
        if (e && r.offset === 0 && km(this, r.getNode())) return;
      } else {
        const a = s.type === "text" ? s.getNode() : null;
        if (i = r.type === "text" ? r.getNode() : null, a !== null && a.isSegmented()) {
          const l = s.offset, c = a.getTextContentSize();
          if (a.is(i) || e && l !== c || !e && l !== 0) return void Em(a, e, l);
        } else if (i !== null && i.isSegmented()) {
          const l = r.offset, c = i.getTextContentSize();
          if (i.is(a) || e && l !== 0 || !e && l !== c) return void Em(i, e, l);
        }
        (function(l, c) {
          const u = l.anchor, f = l.focus, d = u.getNode(), h = f.getNode();
          if (d === h && u.type === "text" && f.type === "text") {
            const g = u.offset, m = f.offset, b = g < m, _ = b ? g : m, y = b ? m : g, C = y - 1;
            _ !== C && function(D) {
              return !(K0(D) || Pk(D));
            }(d.getTextContent().slice(_, y)) && (c ? f.set(f.key, C, f.type) : u.set(u.key, C, u.type));
          }
        })(this, e);
      }
    }
    if (this.removeText(), e && !n && this.isCollapsed() && this.anchor.type === "element" && this.anchor.offset === 0) {
      const r = this.anchor.getNode();
      r.isEmpty() && tn(r.getParent()) && r.getPreviousSibling() === null && km(this, r);
    }
  }
  deleteLine(e) {
    this.isCollapsed() && this.modify("extend", e, "lineboundary"), this.isCollapsed() ? this.deleteCharacter(e) : this.removeText();
  }
  deleteWord(e) {
    if (this.isCollapsed()) {
      const n = this.anchor, r = n.getNode();
      if (this.forwardDeletion(n, r, e)) return;
      this.modify("extend", e, "word");
    }
    this.removeText();
  }
  isBackward() {
    return this.focus.isBefore(this.anchor);
  }
  getStartEndPoints() {
    return [this.anchor, this.focus];
  }
};
function bn(t) {
  return t instanceof E0;
}
function Cm(t) {
  const e = t.offset;
  if (t.type === "text") return e;
  const n = t.getNode();
  return e === n.getChildrenSize() ? n.getTextContent().length : 0;
}
function Uf(t) {
  const e = t.getStartEndPoints();
  if (e === null) return [0, 0];
  const [n, r] = e;
  return n.type === "element" && r.type === "element" && n.key === r.key && n.offset === r.offset ? [0, 0] : [Cm(n), Cm(r)];
}
function km(t, e) {
  for (let n = e; n; n = n.getParent()) {
    if (X(n)) {
      if (n.collapseAtStart(t)) return !0;
      if (Zr(n)) break;
    }
    if (n.getPreviousSibling()) break;
  }
  return !1;
}
const Pk = (() => {
  try {
    const t = new RegExp("\\p{Emoji}", "u"), e = t.test.bind(t);
    if (e("❤️") && e("#️⃣") && e("👍")) return e;
  } catch {
  }
  return () => !1;
})();
function Em(t, e, n) {
  const r = t, i = r.getTextContent().split(/(?=\s)/g), o = i.length;
  let s = 0, a = 0;
  for (let c = 0; c < o; c++) {
    const u = c === o - 1;
    if (a = s, s += i[c].length, e && s === n || s > n || u) {
      i.splice(c, 1), u && (a = void 0);
      break;
    }
  }
  const l = i.join("").trim();
  l === "" ? r.remove() : (r.setTextContent(l), r.select(a, a));
}
function Nm(t, e, n, r) {
  let i, o = e;
  if (it(t)) {
    let s = !1;
    const a = t.childNodes, l = a.length, c = r._blockCursorElement;
    o === l && (s = !0, o = l - 1);
    let u = a[o], f = !1;
    if (u === c) u = a[o + 1], f = !0;
    else if (c !== null) {
      const d = c.parentNode;
      t === d && e > Array.prototype.indexOf.call(d.children, c) && o--;
    }
    if (i = ms(u), ie(i)) o = qi(i, s ? "next" : "previous");
    else {
      let d = ms(t);
      if (d === null) return null;
      if (X(d)) {
        const h = r.getElementByKey(d.getKey());
        h === null && le(214), [d, o] = d.getDOMSlot(h).resolveChildIndex(d, h, t, e), X(d) || le(215), s && o >= d.getChildrenSize() && (o = Math.max(0, d.getChildrenSize() - 1));
        let m = d.getChildAtIndex(o);
        if (X(m) && function(b, _, y) {
          const C = b.getParent();
          return y === null || C === null || !C.canBeEmpty() || C !== y.getNode();
        }(m, 0, n)) {
          const b = s ? m.getLastDescendant() : m.getFirstDescendant();
          b === null ? d = m : (m = b, d = X(m) ? m : m.getParentOrThrow()), o = 0;
        }
        ie(m) ? (i = m, d = null, o = qi(m, s ? "next" : "previous")) : m !== d && s && !f && (X(d) || le(216), o = Math.min(d.getChildrenSize(), o + 1));
      } else {
        const h = d.getIndexWithinParent();
        o = e === 0 && Xe(d) && ms(t) === d ? h : h + 1, d = d.getParentOrThrow();
      }
      if (X(d)) return Mn(d.__key, o, "element");
    }
  } else i = ms(t);
  return ie(i) ? Mn(i.__key, qi(i, o, "clamp"), "text") : null;
}
function Sm(t, e, n) {
  const r = t.offset, i = t.getNode();
  if (r === 0) {
    const o = i.getPreviousSibling(), s = i.getParent();
    if (e) {
      if ((n || !e) && o === null && X(s) && s.isInline()) {
        const a = s.getPreviousSibling();
        ie(a) && t.set(a.__key, a.getTextContent().length, "text");
      }
    } else X(o) && !n && o.isInline() ? t.set(o.__key, o.getChildrenSize(), "element") : ie(o) && t.set(o.__key, o.getTextContent().length, "text");
  } else if (r === i.getTextContent().length) {
    const o = i.getNextSibling(), s = i.getParent();
    if (e && X(o) && o.isInline()) t.set(o.__key, 0, "element");
    else if ((n || e) && o === null && X(s) && s.isInline() && !s.canInsertTextAfter()) {
      const a = s.getNextSibling();
      ie(a) && t.set(a.__key, 0, "text");
    }
  }
}
function T0(t, e, n) {
  if (t.type === "text" && e.type === "text") {
    const r = t.isBefore(e), i = t.is(e);
    Sm(t, r, i), Sm(e, !r, i), i && e.set(t.key, t.offset, t.type);
    const o = mt();
    if (o.isComposing() && o._compositionKey !== t.key && Z(n)) {
      const s = n.anchor, a = n.focus;
      t.set(s.key, s.offset, s.type, !0), e.set(a.key, a.offset, a.type, !0);
    }
  }
}
function A0(t, e, n, r, i, o) {
  if (t === null || n === null || !Ml(i, t, n)) return null;
  const s = Nm(t, e, Z(o) ? o.anchor : null, i);
  if (s === null) return null;
  const a = Nm(n, r, Z(o) ? o.focus : null, i);
  if (a === null) return null;
  if (s.type === "element" && a.type === "element") {
    const l = ms(t), c = ms(n);
    if (Xe(l) && Xe(c)) return null;
  }
  return T0(s, a, o), [s, a];
}
function zf(t) {
  return X(t) && !t.isInline();
}
function D0(t, e, n, r, i, o) {
  const s = Qi(), a = new Al(Mn(t, e, i), Mn(n, r, o), 0, "");
  return a.dirty = !0, s._selection = a, a;
}
function Dl() {
  const t = Mn("root", 0, "element"), e = Mn("root", 0, "element");
  return new Al(t, e, 0, "");
}
function M0() {
  return new E0(/* @__PURE__ */ new Set());
}
function wp(t, e, n, r) {
  const i = n._window;
  if (i === null) return null;
  const o = r || i.event, s = o ? o.type : void 0, a = s === "selectionchange", l = !Df && (a || s === "beforeinput" || s === "compositionstart" || s === "compositionend" || s === "click" && o && o.detail === 3 || s === "drop" || s === void 0);
  let c, u, f, d;
  if (Z(t) && !l) return t.clone();
  if (e === null) return null;
  if (c = e.anchorNode, u = e.focusNode, f = e.anchorOffset, d = e.focusOffset, a && Z(t) && !Ml(n, c, u)) return t.clone();
  const h = A0(c, f, u, d, n, t);
  if (h === null) return null;
  const [g, m] = h;
  return new Al(g, m, Z(t) ? t.format : 0, Z(t) ? t.style : "");
}
function oe() {
  return Qi()._selection;
}
function la() {
  return mt()._editorState._selection;
}
function Xc(t, e, n, r = 1) {
  const i = t.anchor, o = t.focus, s = i.getNode(), a = o.getNode();
  if (!e.is(s) && !e.is(a)) return;
  const l = e.__key;
  if (t.isCollapsed()) {
    const c = i.offset;
    if (n <= c && r > 0 || n < c && r < 0) {
      const u = Math.max(0, c + r);
      i.set(l, u, "element"), o.set(l, u, "element"), Tm(t);
    }
  } else {
    const c = t.isBackward(), u = c ? o : i, f = u.getNode(), d = c ? i : o, h = d.getNode();
    if (e.is(f)) {
      const g = u.offset;
      (n <= g && r > 0 || n < g && r < 0) && u.set(l, Math.max(0, g + r), "element");
    }
    if (e.is(h)) {
      const g = d.offset;
      (n <= g && r > 0 || n < g && r < 0) && d.set(l, Math.max(0, g + r), "element");
    }
  }
  Tm(t);
}
function Tm(t) {
  const e = t.anchor, n = e.offset, r = t.focus, i = r.offset, o = e.getNode(), s = r.getNode();
  if (t.isCollapsed()) {
    if (!X(o)) return;
    const a = o.getChildrenSize(), l = n >= a, c = l ? o.getChildAtIndex(a - 1) : o.getChildAtIndex(n);
    if (ie(c)) {
      let u = 0;
      l && (u = c.getTextContentSize()), e.set(c.__key, u, "text"), r.set(c.__key, u, "text");
    }
  } else {
    if (X(o)) {
      const a = o.getChildrenSize(), l = n >= a, c = l ? o.getChildAtIndex(a - 1) : o.getChildAtIndex(n);
      if (ie(c)) {
        let u = 0;
        l && (u = c.getTextContentSize()), e.set(c.__key, u, "text");
      }
    }
    if (X(s)) {
      const a = s.getChildrenSize(), l = i >= a, c = l ? s.getChildAtIndex(a - 1) : s.getChildAtIndex(i);
      if (ie(c)) {
        let u = 0;
        l && (u = c.getTextContentSize()), r.set(c.__key, u, "text");
      }
    }
  }
}
function Yc(t, e, n, r, i) {
  let o = null, s = 0, a = null;
  r !== null ? (o = r.__key, ie(r) ? (s = r.getTextContentSize(), a = "text") : X(r) && (s = r.getChildrenSize(), a = "element")) : i !== null && (o = i.__key, ie(i) ? a = "text" : X(i) && (a = "element")), o !== null && a !== null ? t.set(o, s, a) : (s = e.getIndexWithinParent(), s === -1 && (s = n.getChildrenSize()), t.set(n.__key, s, "element"));
}
function Am(t, e, n, r, i) {
  t.type === "text" ? t.set(n, t.offset + (e ? 0 : i), "text") : t.offset > r.getIndexWithinParent() && t.set(t.key, t.offset - 1, "element");
}
function O0(t, e, n, r, i) {
  try {
    t.setBaseAndExtent(e, n, r, i);
  } catch {
  }
}
function Lk(t, e, n, r, i, o, s) {
  const a = r.anchorNode, l = r.focusNode, c = r.anchorOffset, u = r.focusOffset, f = document.activeElement;
  if (i.has(Uk) && f !== o || f !== null && Ep(f)) return;
  if (!Z(e)) return void (t !== null && Ml(n, a, l) && r.removeAllRanges());
  const d = e.anchor, h = e.focus, g = d.key, m = h.key, b = Fs(n, g), _ = Fs(n, m), y = d.offset, C = h.offset, D = e.format, R = e.style, N = e.isCollapsed();
  let L = b, O = _, M = !1;
  if (d.type === "text") {
    L = $s(b);
    const T = d.getNode();
    M = T.getFormat() !== D || T.getStyle() !== R;
  } else Z(t) && t.anchor.type === "text" && (M = !0);
  var q, k, I, S, P;
  if (h.type === "text" && (O = $s(_)), L !== null && O !== null && (N && (t === null || M || Z(t) && (t.format !== D || t.style !== R)) && (q = D, k = R, I = y, S = g, P = performance.now(), p0 = [q, k, I, S, P]), c !== y || u !== C || a !== L || l !== O || r.type === "Range" && N || (f !== null && o.contains(f) || o.focus({ preventScroll: !0 }), d.type === "element"))) {
    if (O0(r, L, y, O, C), !i.has(zk) && e.isCollapsed() && o !== null && o === document.activeElement) {
      const T = Z(e) && e.anchor.type === "element" ? L.childNodes[y] || null : r.rangeCount > 0 ? r.getRangeAt(0) : null;
      if (T !== null) {
        let A;
        if (T instanceof Text) {
          const B = document.createRange();
          B.selectNode(T), A = B.getBoundingClientRect();
        } else A = T.getBoundingClientRect();
        (function(B, V, J) {
          const H = Q0(J), K = Mp(H);
          if (H === null || K === null) return;
          let { top: ne, bottom: re } = V, te = 0, Q = 0, ce = J;
          for (; ce !== null; ) {
            const pe = ce === H.body;
            if (pe) te = 0, Q = or(B).innerHeight;
            else {
              const ye = ce.getBoundingClientRect();
              te = ye.top, Q = ye.bottom;
            }
            let me = 0;
            if (ne < te ? me = -(te - ne) : re > Q && (me = re - Q), me !== 0) if (pe) K.scrollBy(0, me);
            else {
              const ye = ce.scrollTop;
              ce.scrollTop += me;
              const ve = ce.scrollTop - ye;
              ne -= ve, re -= ve;
            }
            if (pe) break;
            ce = Ol(ce);
          }
        })(n, A, o);
      }
    }
    Bf = !0;
  }
}
function $k(t) {
  let e = oe() || la();
  e === null && (e = Ve().selectEnd()), e.insertNodes(t);
}
function Ud(t) {
  let e = t;
  t.isCollapsed() || e.removeText();
  const n = oe();
  Z(n) && (e = n), Z(e) || le(161);
  const r = e.anchor;
  let i = r.getNode(), o = r.offset;
  for (; !nr(i); ) {
    const s = i;
    if ([i, o] = Fk(i, o), s.is(i)) break;
  }
  return o;
}
function Fk(t, e) {
  const n = t.getParent();
  if (!n) {
    const i = Jn();
    return Ve().append(i), i.select(), [Ve(), 0];
  }
  if (ie(t)) {
    const i = t.splitText(e);
    if (i.length === 0) return [n, t.getIndexWithinParent()];
    const o = e === 0 ? 0 : 1;
    return [n, i[0].getIndexWithinParent() + o];
  }
  if (!X(t) || e === 0) return [n, t.getIndexWithinParent()];
  const r = t.getChildAtIndex(e);
  if (r) {
    const i = new Al(Mn(t.__key, e, "element"), Mn(t.__key, e, "element"), 0, ""), o = t.insertNewAfter(i);
    o && o.append(r, ...r.getNextSiblings());
  }
  return [n, t.getIndexWithinParent() + 1];
}
function Dm(t, e, n, r, i = "decorators-and-blocks") {
  if (e === "move" && r === "character" && !t.isCollapsed()) {
    const [u, f] = n === t.isBackward() ? [t.focus, t.anchor] : [t.anchor, t.focus];
    return f.set(u.key, u.offset, u.type), !0;
  }
  const o = bi(t.focus, n ? "previous" : "next"), s = r === "lineboundary", a = e === "move";
  let l = o, c = i === "decorators-and-blocks";
  if (!ov(l)) {
    for (const u of l) {
      c = !1;
      const { origin: f } = u;
      if (!Xe(f) || f.isIsolated() || (l = u, !s || !f.isInline())) break;
    }
    if (c) for (const u of Lp(o).iterNodeCarets(e === "extend" ? "shadowRoot" : "root")) {
      if (wr(u)) u.origin.isInline() || (l = u);
      else {
        if (X(u.origin)) continue;
        Xe(u.origin) && !u.origin.isInline() && (l = u);
      }
      break;
    }
  }
  if (l === o) return !1;
  if (a && !s && Xe(l.origin) && l.origin.isKeyboardSelectable()) {
    const u = M0();
    return u.add(l.origin.getKey()), sn(u), !0;
  }
  return l = Vr(l), a && al(t.anchor, l), al(t.focus, l), c || !s;
}
let Ut = null, zt = null, Dn = !1, zd = !1, Ec = 0;
const Mm = { characterData: !0, childList: !0, subtree: !0 };
function ca() {
  return Dn || Ut !== null && Ut._readOnly;
}
function Zt() {
  Dn && le(13);
}
function I0() {
  Ec > 99 && le(14);
}
function Qi() {
  return Ut === null && le(195, R0()), Ut;
}
function mt() {
  return zt === null && le(196, R0()), zt;
}
function R0() {
  let t = 0;
  const e = /* @__PURE__ */ new Set(), n = Uu.version;
  if (typeof window < "u") for (const i of document.querySelectorAll("[contenteditable]")) {
    const o = zu(i);
    if (Np(o)) t++;
    else if (o) {
      let s = String(o.constructor.version || "<0.17.1");
      s === n && (s += " (separately built, likely a bundler configuration issue)"), e.add(s);
    }
  }
  let r = ` Detected on the page: ${t} compatible editor(s) with version ${n}`;
  return e.size && (r += ` and incompatible editors with versions ${Array.from(e).join(", ")}`), r;
}
function Bk() {
  return zt;
}
function Om(t, e, n) {
  const r = e.__type, i = U0(t, r);
  let o = n.get(r);
  o === void 0 && (o = Array.from(i.transforms), n.set(r, o));
  const s = o.length;
  for (let a = 0; a < s && (o[a](e), e.isAttached()); a++) ;
}
function Im(t, e) {
  return t !== void 0 && t.__key !== e && t.isAttached();
}
function P0(t, e) {
  if (!e) return;
  const n = t._updateTags;
  let r = e;
  Array.isArray(e) || (r = [e]);
  for (const i of r) n.add(i);
}
function L0(t) {
  return bp(t, mt()._nodes);
}
function bp(t, e) {
  const n = t.type, r = e.get(n);
  r === void 0 && le(17, n);
  const i = r.klass;
  t.type !== i.getType() && le(18, i.name);
  const o = i.importJSON(t), s = t.children;
  if (X(o) && Array.isArray(s)) for (let a = 0; a < s.length; a++) {
    const l = bp(s[a], e);
    o.append(l);
  }
  return o;
}
function Rm(t, e, n) {
  const r = Ut, i = Dn, o = zt;
  Ut = e, Dn = !0, zt = t;
  try {
    return n();
  } finally {
    Ut = r, Dn = i, zt = o;
  }
}
function di(t, e) {
  const n = t._pendingEditorState, r = t._rootElement, i = t._headless || r === null;
  if (n === null) return;
  const o = t._editorState, s = o._selection, a = n._selection, l = t._dirtyType !== Ro, c = Ut, u = Dn, f = zt, d = t._updating, h = t._observer;
  let g = null;
  if (t._pendingEditorState = null, t._editorState = n, !i && l && h !== null) {
    zt = t, Ut = n, Dn = !1, t._updating = !0;
    try {
      const N = t._dirtyType, L = t._dirtyElements, O = t._dirtyLeaves;
      h.disconnect(), g = mk(o, n, t, N, L, O);
    } catch (N) {
      if (N instanceof Error && t._onError(N), zd) throw N;
      return j0(t, null, r, n), Yy(t), t._dirtyType = Os, zd = !0, di(t, o), void (zd = !1);
    } finally {
      h.observe(r, Mm), t._updating = d, Ut = c, Dn = u, zt = f;
    }
  }
  n._readOnly || (n._readOnly = !0);
  const m = t._dirtyLeaves, b = t._dirtyElements, _ = t._normalizedNodes, y = t._updateTags, C = t._deferred;
  l && (t._dirtyType = Ro, t._cloneNotNeeded.clear(), t._dirtyLeaves = /* @__PURE__ */ new Set(), t._dirtyElements = /* @__PURE__ */ new Map(), t._normalizedNodes = /* @__PURE__ */ new Set(), t._updateTags = /* @__PURE__ */ new Set()), function(N, L) {
    const O = N._decorators;
    let M = N._pendingDecorators || O;
    const q = L._nodeMap;
    let k;
    for (k in M) q.has(k) || (M === O && (M = H0(N)), delete M[k]);
  }(t, n);
  const D = i ? null : vr(or(t));
  if (t._editable && D !== null && (l || a === null || a.dirty) && r !== null && !y.has(Vk)) {
    zt = t, Ut = n;
    try {
      if (h !== null && h.disconnect(), l || a === null || a.dirty) {
        const N = t._blockCursorElement;
        N !== null && Gf(N, t, r), Lk(s, a, t, D, y, r);
      }
      (function(N, L, O) {
        let M = N._blockCursorElement;
        if (Z(O) && O.isCollapsed() && O.anchor.type === "element" && L.contains(document.activeElement)) {
          const q = O.anchor, k = q.getNode(), I = q.offset;
          let S = !1, P = null;
          if (I === k.getChildrenSize())
            Hd(k.getChildAtIndex(I - 1)) && (S = !0);
          else {
            const T = k.getChildAtIndex(I);
            if (T !== null && Hd(T)) {
              const A = T.getPreviousSibling();
              (A === null || Hd(A)) && (S = !0, P = N.getElementByKey(T.__key));
            }
          }
          if (S) {
            const T = N.getElementByKey(k.__key);
            return M === null && (N._blockCursorElement = M = function(A) {
              const B = A.theme, V = document.createElement("div");
              V.contentEditable = "false", V.setAttribute("data-lexical-cursor", "true");
              let J = B.blockCursor;
              if (J !== void 0) {
                if (typeof J == "string") {
                  const H = jc(J);
                  J = B.blockCursor = H;
                }
                J !== void 0 && V.classList.add(...J);
              }
              return V;
            }(N._config)), L.style.caretColor = "transparent", void (P === null ? T.appendChild(M) : T.insertBefore(M, P));
          }
        }
        M !== null && Gf(M, N, L);
      })(t, r, a);
    } finally {
      h !== null && h.observe(r, Mm), zt = f, Ut = c;
    }
  }
  g !== null && function(N, L, O, M, q) {
    const k = Array.from(N._listeners.mutation), I = k.length;
    for (let S = 0; S < I; S++) {
      const [P, T] = k[S];
      for (const A of T) {
        const B = L.get(A);
        B !== void 0 && P(B, { dirtyLeaves: M, prevEditorState: q, updateTags: O });
      }
    }
  }(t, g, y, m, o), Z(a) || a === null || s !== null && s.is(a) || t.dispatchCommand(Xi, void 0);
  const R = t._pendingDecorators;
  R !== null && (t._decorators = R, t._pendingDecorators = null, Wa("decorator", t, !0, R)), function(N, L, O) {
    const M = Bm(L), q = Bm(O);
    M !== q && Wa("textcontent", N, !0, q);
  }(t, e || o, n), Wa("update", t, !0, { dirtyElements: b, dirtyLeaves: m, editorState: n, mutatedNodes: g, normalizedNodes: _, prevEditorState: e || o, tags: y }), function(N, L) {
    if (N._deferred = [], L.length !== 0) {
      const O = N._updating;
      N._updating = !0;
      try {
        for (let M = 0; M < L.length; M++) L[M]();
      } finally {
        N._updating = O;
      }
    }
  }(t, C), function(N) {
    const L = N._updates;
    if (L.length !== 0) {
      const O = L.shift();
      if (O) {
        const [M, q] = O;
        Bu(N, M, q);
      }
    }
  }(t);
}
function Wa(t, e, n, ...r) {
  const i = e._updating;
  e._updating = n;
  try {
    const o = Array.from(e._listeners[t]);
    for (let s = 0; s < o.length; s++) o[s].apply(null, r);
  } finally {
    e._updating = i;
  }
}
function Pm(t, e) {
  const n = t._updates;
  let r = e || !1;
  for (; n.length !== 0; ) {
    const i = n.shift();
    if (i) {
      const [o, s] = i, a = t._pendingEditorState;
      let l;
      s !== void 0 && (l = s.onUpdate, s.skipTransforms && (r = !0), s.discrete && (a === null && le(191), a._flushSync = !0), l && t._deferred.push(l), P0(t, s.tag)), a == null ? Bu(t, o, s) : o();
    }
  }
  return r;
}
function Bu(t, e, n) {
  const r = t._updateTags;
  let i, o = !1, s = !1;
  n !== void 0 && (i = n.onUpdate, P0(t, n.tag), o = n.skipTransforms || !1, s = n.discrete || !1), i && t._deferred.push(i);
  const a = t._editorState;
  let l = t._pendingEditorState, c = !1;
  (l === null || l._readOnly) && (l = t._pendingEditorState = F0(l || a), c = !0), l._flushSync = s;
  const u = Ut, f = Dn, d = zt, h = t._updating;
  Ut = l, Dn = !1, t._updating = !0, zt = t;
  const g = t._headless || t.getRootElement() === null;
  Cp(null);
  try {
    c && (g ? a._selection !== null && (l._selection = a._selection.clone()) : l._selection = function(y, C) {
      const D = y.getEditorState()._selection, R = vr(or(y));
      return Z(D) || D == null ? wp(D, R, y, C) : D.clone();
    }(t, n && n.event || null));
    const b = t._compositionKey;
    e(), o = Pm(t, o), function(y, C) {
      const D = C.getEditorState()._selection, R = y._selection;
      if (Z(R)) {
        const N = R.anchor, L = R.focus;
        let O;
        if (N.type === "text" && (O = N.getNode(), O.selectionTransform(D, R)), L.type === "text") {
          const M = L.getNode();
          O !== M && M.selectionTransform(D, R);
        }
      }
    }(l, t), t._dirtyType !== Ro && (o ? function(y, C) {
      const D = C._dirtyLeaves, R = y._nodeMap;
      for (const N of D) {
        const L = R.get(N);
        ie(L) && L.isAttached() && L.isSimpleText() && !L.isUnmergeable() && dm(L);
      }
    }(l, t) : function(y, C) {
      const D = C._dirtyLeaves, R = C._dirtyElements, N = y._nodeMap, L = Pi(), O = /* @__PURE__ */ new Map();
      let M = D, q = M.size, k = R, I = k.size;
      for (; q > 0 || I > 0; ) {
        if (q > 0) {
          C._dirtyLeaves = /* @__PURE__ */ new Set();
          for (const S of M) {
            const P = N.get(S);
            ie(P) && P.isAttached() && P.isSimpleText() && !P.isUnmergeable() && dm(P), P !== void 0 && Im(P, L) && Om(C, P, O), D.add(S);
          }
          if (M = C._dirtyLeaves, q = M.size, q > 0) {
            Ec++;
            continue;
          }
        }
        C._dirtyLeaves = /* @__PURE__ */ new Set(), C._dirtyElements = /* @__PURE__ */ new Map(), k.delete("root") && k.set("root", !0);
        for (const S of k) {
          const P = S[0], T = S[1];
          if (R.set(P, T), !T) continue;
          const A = N.get(P);
          A !== void 0 && Im(A, L) && Om(C, A, O);
        }
        M = C._dirtyLeaves, q = M.size, k = C._dirtyElements, I = k.size, Ec++;
      }
      C._dirtyLeaves = D, C._dirtyElements = R;
    }(l, t), Pm(t), function(y, C, D, R) {
      const N = y._nodeMap, L = C._nodeMap, O = [];
      for (const [M] of R) {
        const q = L.get(M);
        q !== void 0 && (q.isAttached() || (X(q) && Gy(q, M, N, L, O, R), N.has(M) || R.delete(M), O.push(M)));
      }
      for (const M of O) L.delete(M);
      for (const M of D) {
        const q = L.get(M);
        q === void 0 || q.isAttached() || (N.has(M) || D.delete(M), L.delete(M));
      }
    }(a, l, t._dirtyLeaves, t._dirtyElements)), b !== t._compositionKey && (l._flushSync = !0);
    const _ = l._selection;
    if (Z(_)) {
      const y = l._nodeMap, C = _.anchor.key, D = _.focus.key;
      y.get(C) !== void 0 && y.get(D) !== void 0 || le(19);
    } else bn(_) && _._nodes.size === 0 && (l._selection = null);
  } catch (b) {
    return b instanceof Error && t._onError(b), t._pendingEditorState = a, t._dirtyType = Os, t._cloneNotNeeded.clear(), t._dirtyLeaves = /* @__PURE__ */ new Set(), t._dirtyElements.clear(), void di(t);
  } finally {
    Ut = u, Dn = f, zt = d, t._updating = h, Ec = 0;
  }
  t._dirtyType !== Ro || t._deferred.length > 0 || function(b, _) {
    const y = _.getEditorState()._selection, C = b._selection;
    if (C !== null) {
      if (C.dirty || !C.is(y)) return !0;
    } else if (y !== null) return !0;
    return !1;
  }(l, t) ? l._flushSync ? (l._flushSync = !1, di(t)) : c && Gk(() => {
    di(t);
  }) : (l._flushSync = !1, c && (r.clear(), t._deferred = [], t._pendingEditorState = null));
}
function Wn(t, e, n) {
  zt === t && n === void 0 ? e() : Bu(t, e, n);
}
let qk = class Nc {
  constructor(e, n, r) {
    this.element = e, this.before = n || null, this.after = r || null;
  }
  withBefore(e) {
    return new Nc(this.element, e, this.after);
  }
  withAfter(e) {
    return new Nc(this.element, this.before, e);
  }
  withElement(e) {
    return this.element === e ? this : new Nc(e, this.before, this.after);
  }
  insertChild(e) {
    const n = this.before || this.getManagedLineBreak();
    return n !== null && n.parentElement !== this.element && le(222), this.element.insertBefore(e, n), this;
  }
  removeChild(e) {
    return e.parentElement !== this.element && le(223), this.element.removeChild(e), this;
  }
  replaceChild(e, n) {
    return n.parentElement !== this.element && le(224), this.element.replaceChild(e, n), this;
  }
  getFirstChild() {
    const e = this.after ? this.after.nextSibling : this.element.firstChild;
    return e === this.before || e === this.getManagedLineBreak() ? null : e;
  }
  getManagedLineBreak() {
    return this.element.__lexicalLineBreak || null;
  }
  setManagedLineBreak(e) {
    if (e === null) this.removeManagedLineBreak();
    else {
      const n = e === "decorator" && (Ms || el);
      this.insertManagedLineBreak(n);
    }
  }
  removeManagedLineBreak() {
    const e = this.getManagedLineBreak();
    if (e) {
      const n = this.element, r = e.nodeName === "IMG" ? e.nextSibling : null;
      r && n.removeChild(r), n.removeChild(e), n.__lexicalLineBreak = void 0;
    }
  }
  insertManagedLineBreak(e) {
    const n = this.getManagedLineBreak();
    if (n) {
      if (e === (n.nodeName === "IMG")) return;
      this.removeManagedLineBreak();
    }
    const r = this.element, i = this.before, o = document.createElement("br");
    if (r.insertBefore(o, i), e) {
      const s = document.createElement("img");
      s.setAttribute("data-lexical-linebreak", "true"), s.style.cssText = "display: inline !important; border: 0px !important; margin: 0px !important;", s.alt = "", r.insertBefore(s, o), r.__lexicalLineBreak = s;
    } else r.__lexicalLineBreak = o;
  }
  getFirstChildOffset() {
    let e = 0;
    for (let n = this.after; n !== null; n = n.previousSibling) e++;
    return e;
  }
  resolveChildIndex(e, n, r, i) {
    if (r === this.element) {
      const l = this.getFirstChildOffset();
      return [e, Math.min(l + e.getChildrenSize(), Math.max(l, i))];
    }
    const o = Lm(n, r);
    o.push(i);
    const s = Lm(n, this.element);
    let a = e.getIndexWithinParent();
    for (let l = 0; l < s.length; l++) {
      const c = o[l], u = s[l];
      if (c === void 0 || c < u) break;
      if (c > u) {
        a += 1;
        break;
      }
    }
    return [e.getParentOrThrow(), a];
  }
};
function Lm(t, e) {
  const n = [];
  let r = e;
  for (; r !== t && r !== null; r = r.parentNode) {
    let i = 0;
    for (let o = r.previousSibling; o !== null; o = o.previousSibling) i++;
    n.push(i);
  }
  return r !== t && le(225), n.reverse();
}
let pn = class extends aa {
  constructor(e) {
    super(e), this.__first = null, this.__last = null, this.__size = 0, this.__format = 0, this.__style = "", this.__indent = 0, this.__dir = null, this.__textFormat = 0, this.__textStyle = "";
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__key === e.__key && (this.__first = e.__first, this.__last = e.__last, this.__size = e.__size), this.__indent = e.__indent, this.__format = e.__format, this.__style = e.__style, this.__dir = e.__dir, this.__textFormat = e.__textFormat, this.__textStyle = e.__textStyle;
  }
  getFormat() {
    return this.getLatest().__format;
  }
  getFormatType() {
    const e = this.getFormat();
    return nk[e] || "";
  }
  getStyle() {
    return this.getLatest().__style;
  }
  getIndent() {
    return this.getLatest().__indent;
  }
  getChildren() {
    const e = [];
    let n = this.getFirstChild();
    for (; n !== null; ) e.push(n), n = n.getNextSibling();
    return e;
  }
  getChildrenKeys() {
    const e = [];
    let n = this.getFirstChild();
    for (; n !== null; ) e.push(n.__key), n = n.getNextSibling();
    return e;
  }
  getChildrenSize() {
    return this.getLatest().__size;
  }
  isEmpty() {
    return this.getChildrenSize() === 0;
  }
  isDirty() {
    const e = mt()._dirtyElements;
    return e !== null && e.has(this.__key);
  }
  isLastChild() {
    const e = this.getLatest(), n = this.getParentOrThrow().getLastChild();
    return n !== null && n.is(e);
  }
  getAllTextNodes() {
    const e = [];
    let n = this.getFirstChild();
    for (; n !== null; ) {
      if (ie(n) && e.push(n), X(n)) {
        const r = n.getAllTextNodes();
        e.push(...r);
      }
      n = n.getNextSibling();
    }
    return e;
  }
  getFirstDescendant() {
    let e = this.getFirstChild();
    for (; X(e); ) {
      const n = e.getFirstChild();
      if (n === null) break;
      e = n;
    }
    return e;
  }
  getLastDescendant() {
    let e = this.getLastChild();
    for (; X(e); ) {
      const n = e.getLastChild();
      if (n === null) break;
      e = n;
    }
    return e;
  }
  getDescendantByIndex(e) {
    const n = this.getChildren(), r = n.length;
    if (e >= r) {
      const o = n[r - 1];
      return X(o) && o.getLastDescendant() || o || null;
    }
    const i = n[e];
    return X(i) && i.getFirstDescendant() || i || null;
  }
  getFirstChild() {
    const e = this.getLatest().__first;
    return e === null ? null : Me(e);
  }
  getFirstChildOrThrow() {
    const e = this.getFirstChild();
    return e === null && le(45, this.__key), e;
  }
  getLastChild() {
    const e = this.getLatest().__last;
    return e === null ? null : Me(e);
  }
  getLastChildOrThrow() {
    const e = this.getLastChild();
    return e === null && le(96, this.__key), e;
  }
  getChildAtIndex(e) {
    const n = this.getChildrenSize();
    let r, i;
    if (e < n / 2) {
      for (r = this.getFirstChild(), i = 0; r !== null && i <= e; ) {
        if (i === e) return r;
        r = r.getNextSibling(), i++;
      }
      return null;
    }
    for (r = this.getLastChild(), i = n - 1; r !== null && i >= e; ) {
      if (i === e) return r;
      r = r.getPreviousSibling(), i--;
    }
    return null;
  }
  getTextContent() {
    let e = "";
    const n = this.getChildren(), r = n.length;
    for (let i = 0; i < r; i++) {
      const o = n[i];
      e += o.getTextContent(), X(o) && i !== r - 1 && !o.isInline() && (e += wi);
    }
    return e;
  }
  getTextContentSize() {
    let e = 0;
    const n = this.getChildren(), r = n.length;
    for (let i = 0; i < r; i++) {
      const o = n[i];
      e += o.getTextContentSize(), X(o) && i !== r - 1 && !o.isInline() && (e += wi.length);
    }
    return e;
  }
  getDirection() {
    return this.getLatest().__dir;
  }
  getTextFormat() {
    return this.getLatest().__textFormat;
  }
  hasFormat(e) {
    if (e !== "") {
      const n = rm[e];
      return !!(this.getFormat() & n);
    }
    return !1;
  }
  hasTextFormat(e) {
    const n = ji[e];
    return !!(this.getTextFormat() & n);
  }
  getFormatFlags(e, n) {
    return Qc(this.getLatest().__textFormat, e, n);
  }
  getTextStyle() {
    return this.getLatest().__textStyle;
  }
  select(e, n) {
    Zt();
    const r = oe();
    let i = e, o = n;
    const s = this.getChildrenSize();
    if (!this.canBeEmpty()) {
      if (e === 0 && n === 0) {
        const l = this.getFirstChild();
        if (ie(l) || X(l)) return l.select(0, 0);
      } else if (!(e !== void 0 && e !== s || n !== void 0 && n !== s)) {
        const l = this.getLastChild();
        if (ie(l) || X(l)) return l.select();
      }
    }
    i === void 0 && (i = s), o === void 0 && (o = s);
    const a = this.__key;
    return Z(r) ? (r.anchor.set(a, i, "element"), r.focus.set(a, o, "element"), r.dirty = !0, r) : D0(a, i, a, o, "element", "element");
  }
  selectStart() {
    const e = this.getFirstDescendant();
    return e ? e.selectStart() : this.select();
  }
  selectEnd() {
    const e = this.getLastDescendant();
    return e ? e.selectEnd() : this.select();
  }
  clear() {
    const e = this.getWritable();
    return this.getChildren().forEach((n) => n.remove()), e;
  }
  append(...e) {
    return this.splice(this.getChildrenSize(), 0, e);
  }
  setDirection(e) {
    const n = this.getWritable();
    return n.__dir = e, n;
  }
  setFormat(e) {
    return this.getWritable().__format = e !== "" ? rm[e] : 0, this;
  }
  setStyle(e) {
    return this.getWritable().__style = e || "", this;
  }
  setTextFormat(e) {
    const n = this.getWritable();
    return n.__textFormat = e, n;
  }
  setTextStyle(e) {
    const n = this.getWritable();
    return n.__textStyle = e, n;
  }
  setIndent(e) {
    return this.getWritable().__indent = e, this;
  }
  splice(e, n, r) {
    const i = r.length, o = this.getChildrenSize(), s = this.getWritable();
    e + n <= o || le(226, String(e), String(n), String(o));
    const a = s.__key, l = [], c = [], u = this.getChildAtIndex(e + n);
    let f = null, d = o - n + i;
    if (e !== 0) if (e === o) f = this.getLastChild();
    else {
      const g = this.getChildAtIndex(e);
      g !== null && (f = g.getPreviousSibling());
    }
    if (n > 0) {
      let g = f === null ? this.getFirstChild() : f.getNextSibling();
      for (let m = 0; m < n; m++) {
        g === null && le(100);
        const b = g.getNextSibling(), _ = g.__key;
        Eo(g.getWritable()), c.push(_), g = b;
      }
    }
    let h = f;
    for (let g = 0; g < i; g++) {
      const m = r[g];
      h !== null && m.is(h) && (f = h = h.getPreviousSibling());
      const b = m.getWritable();
      b.__parent === a && d--, Eo(b);
      const _ = m.__key;
      if (h === null) s.__first = _, b.__prev = null;
      else {
        const y = h.getWritable();
        y.__next = _, b.__prev = y.__key;
      }
      m.__key === a && le(76), b.__parent = a, l.push(_), h = m;
    }
    if (e + n === o)
      h !== null && (h.getWritable().__next = null, s.__last = h.__key);
    else if (u !== null) {
      const g = u.getWritable();
      if (h !== null) {
        const m = h.getWritable();
        g.__prev = h.__key, m.__next = u.__key;
      } else g.__prev = null;
    }
    if (s.__size = d, c.length) {
      const g = oe();
      if (Z(g)) {
        const m = new Set(c), b = new Set(l), { anchor: _, focus: y } = g;
        $m(_, m, b) && Yc(_, _.getNode(), this, f, u), $m(y, m, b) && Yc(y, y.getNode(), this, f, u), d !== 0 || this.canBeEmpty() || Zr(this) || this.remove();
      }
    }
    return s;
  }
  getDOMSlot(e) {
    return new qk(e);
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    if (it(n)) {
      const r = this.getIndent();
      r > 0 && (n.style.paddingInlineStart = 40 * r + "px");
      const i = this.getDirection();
      i && (n.dir = i);
    }
    return { element: n };
  }
  exportJSON() {
    const e = { children: [], direction: this.getDirection(), format: this.getFormatType(), indent: this.getIndent(), ...super.exportJSON() }, n = this.getTextFormat(), r = this.getTextStyle();
    return n !== 0 && (e.textFormat = n), r !== "" && (e.textStyle = r), e;
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setFormat(e.format).setIndent(e.indent).setDirection(e.direction).setTextFormat(e.textFormat || 0).setTextStyle(e.textStyle || "");
  }
  insertNewAfter(e, n) {
    return null;
  }
  canIndent() {
    return !0;
  }
  collapseAtStart(e) {
    return !1;
  }
  excludeFromCopy(e) {
    return !1;
  }
  canReplaceWith(e) {
    return !0;
  }
  canInsertAfter(e) {
    return !0;
  }
  canBeEmpty() {
    return !0;
  }
  canInsertTextBefore() {
    return !0;
  }
  canInsertTextAfter() {
    return !0;
  }
  isInline() {
    return !1;
  }
  isShadowRoot() {
    return !1;
  }
  canMergeWith(e) {
    return !1;
  }
  extractWithChild(e, n, r) {
    return !1;
  }
  canMergeWhenEmpty() {
    return !1;
  }
  reconcileObservedMutation(e, n) {
    const r = this.getDOMSlot(e);
    let i = r.getFirstChild();
    for (let o = this.getFirstChild(); o; o = o.getNextSibling()) {
      const s = n.getElementByKey(o.getKey());
      s !== null && (i == null ? (r.insertChild(s), i = s) : i !== s && r.replaceChild(s, i), i = i.nextSibling);
    }
  }
};
function X(t) {
  return t instanceof pn;
}
function $m(t, e, n) {
  let r = t.getNode();
  for (; r; ) {
    const i = r.__key;
    if (e.has(i) && !n.has(i)) return !0;
    r = r.getParent();
  }
  return !1;
}
class Zi extends aa {
  decorate(e, n) {
    le(47);
  }
  isIsolated() {
    return !1;
  }
  isInline() {
    return !0;
  }
  isKeyboardSelectable() {
    return !0;
  }
}
function Xe(t) {
  return t instanceof Zi;
}
let yp = class $0 extends pn {
  static getType() {
    return "root";
  }
  static clone() {
    return new $0();
  }
  constructor() {
    super("root"), this.__cachedText = null;
  }
  getTopLevelElementOrThrow() {
    le(51);
  }
  getTextContent() {
    const e = this.__cachedText;
    return !ca() && mt()._dirtyType !== Ro || e === null ? super.getTextContent() : e;
  }
  remove() {
    le(52);
  }
  replace(e) {
    le(53);
  }
  insertBefore(e) {
    le(54);
  }
  insertAfter(e) {
    le(55);
  }
  updateDOM(e, n) {
    return !1;
  }
  splice(e, n, r) {
    for (const i of r) X(i) || Xe(i) || le(282);
    return super.splice(e, n, r);
  }
  static importJSON(e) {
    return Ve().updateFromJSON(e);
  }
  collapseAtStart() {
    return !0;
  }
};
function tn(t) {
  return t instanceof yp;
}
function F0(t) {
  return new qu(new Map(t._nodeMap));
}
function vp() {
  return new qu(/* @__PURE__ */ new Map([["root", new yp()]]));
}
function B0(t) {
  const e = t.exportJSON(), n = t.constructor;
  if (e.type !== n.getType() && le(130, n.name), X(t)) {
    const r = e.children;
    Array.isArray(r) || le(59, n.name);
    const i = t.getChildren();
    for (let o = 0; o < i.length; o++) {
      const s = B0(i[o]);
      r.push(s);
    }
  }
  return e;
}
class qu {
  constructor(e, n) {
    this._nodeMap = e, this._selection = n || null, this._flushSync = !1, this._readOnly = !1;
  }
  isEmpty() {
    return this._nodeMap.size === 1 && this._selection === null;
  }
  read(e, n) {
    return Rm(n && n.editor || null, this, e);
  }
  clone(e) {
    const n = new qu(this._nodeMap, e === void 0 ? this._selection : e);
    return n._readOnly = !0, n;
  }
  toJSON() {
    return Rm(null, this, () => ({ root: B0(Ve()) }));
  }
}
const Vf = "historic", jk = "history-push", Co = "history-merge", q0 = "paste", Uk = "collaboration", zk = "skip-scroll-into-view", Vk = "skip-dom-selection";
class _p extends pn {
  static getType() {
    return "artificial";
  }
  createDOM(e) {
    return document.createElement("div");
  }
}
class eo extends pn {
  static getType() {
    return "paragraph";
  }
  static clone(e) {
    return new eo(e.__key);
  }
  createDOM(e) {
    const n = document.createElement("p"), r = xs(e.theme, "paragraph");
    return r !== void 0 && n.classList.add(...r), n;
  }
  updateDOM(e, n, r) {
    return !1;
  }
  static importDOM() {
    return { p: (e) => ({ conversion: Hk, priority: 0 }) };
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    if (it(n)) {
      this.isEmpty() && n.append(document.createElement("br"));
      const r = this.getFormatType();
      r && (n.style.textAlign = r);
    }
    return { element: n };
  }
  static importJSON(e) {
    return Jn().updateFromJSON(e);
  }
  exportJSON() {
    return { ...super.exportJSON(), textFormat: this.getTextFormat(), textStyle: this.getTextStyle() };
  }
  insertNewAfter(e, n) {
    const r = Jn();
    r.setTextFormat(e.format), r.setTextStyle(e.style);
    const i = this.getDirection();
    return r.setDirection(i), r.setFormat(this.getFormatType()), r.setStyle(this.getStyle()), this.insertAfter(r, n), r;
  }
  collapseAtStart() {
    const e = this.getChildren();
    if (e.length === 0 || ie(e[0]) && e[0].getTextContent().trim() === "") {
      if (this.getNextSibling() !== null) return this.selectNext(), this.remove(), !0;
      if (this.getPreviousSibling() !== null) return this.selectPrevious(), this.remove(), !0;
    }
    return !1;
  }
}
function Hk(t) {
  const e = Jn();
  return t.style && (e.setFormat(t.style.textAlign), oE(t, e)), { node: e };
}
function Jn() {
  return lt(new eo());
}
function xp(t) {
  return t instanceof eo;
}
const ke = 0, es = 1, Sc = 2, ju = 3, _s = 4;
function j0(t, e, n, r) {
  const i = t._keyToDOMMap;
  i.clear(), t._editorState = vp(), t._pendingEditorState = r, t._compositionKey = null, t._dirtyType = Ro, t._cloneNotNeeded.clear(), t._dirtyLeaves = /* @__PURE__ */ new Set(), t._dirtyElements.clear(), t._normalizedNodes = /* @__PURE__ */ new Set(), t._updateTags = /* @__PURE__ */ new Set(), t._updates = [], t._blockCursorElement = null;
  const o = t._observer;
  o !== null && (o.disconnect(), t._observer = null), e !== null && (e.textContent = ""), n !== null && (n.textContent = "", i.set("root", n));
}
function Wk(t) {
  const e = t || {}, n = Bk(), r = e.theme || {}, i = t === void 0 ? n : e.parentEditor || null, o = e.disableEvents || !1, s = vp(), a = e.namespace || (i !== null ? i._config.namespace : G0()), l = e.editorState, c = [yp, Gn, Nl, Sl, eo, _p, ...e.nodes || []], { onError: u, html: f } = e, d = e.editable === void 0 || e.editable;
  let h;
  if (t === void 0 && n !== null) h = n._nodes;
  else {
    h = /* @__PURE__ */ new Map();
    for (let m = 0; m < c.length; m++) {
      let b = c[m], _ = null, y = null;
      if (typeof b != "function") {
        const L = b;
        b = L.replace, _ = L.with, y = L.withKlass || null;
      }
      const { ownNodeConfig: C } = Ip(b), D = b.getType(), R = b.transform(), N = /* @__PURE__ */ new Set();
      C && C.$transform && N.add(C.$transform), R !== null && N.add(R), h.set(D, { exportDOM: f && f.export ? f.export.get(b) : void 0, klass: b, replace: _, replaceWithKlass: y, sharedNodeState: dk(c[m]), transforms: N });
    }
  }
  const g = new Uu(s, i, h, { disableEvents: o, namespace: a, theme: r }, u || console.error, function(m, b) {
    const _ = /* @__PURE__ */ new Map(), y = /* @__PURE__ */ new Set(), C = (D) => {
      Object.keys(D).forEach((R) => {
        let N = _.get(R);
        N === void 0 && (N = [], _.set(R, N)), N.push(D[R]);
      });
    };
    return m.forEach((D) => {
      const R = D.klass.importDOM;
      if (R == null || y.has(R)) return;
      y.add(R);
      const N = R.call(D.klass);
      N !== null && C(N);
    }), b && C(b), _;
  }(h, f ? f.import : void 0), d, t);
  return l !== void 0 && (g._pendingEditorState = l, g._dirtyType = Os), g;
}
class Uu {
  constructor(e, n, r, i, o, s, a, l) {
    this._createEditorArgs = l, this._parentEditor = n, this._rootElement = null, this._editorState = e, this._pendingEditorState = null, this._compositionKey = null, this._deferred = [], this._keyToDOMMap = /* @__PURE__ */ new Map(), this._updates = [], this._updating = !1, this._listeners = { decorator: /* @__PURE__ */ new Set(), editable: /* @__PURE__ */ new Set(), mutation: /* @__PURE__ */ new Map(), root: /* @__PURE__ */ new Set(), textcontent: /* @__PURE__ */ new Set(), update: /* @__PURE__ */ new Set() }, this._commands = /* @__PURE__ */ new Map(), this._config = i, this._nodes = r, this._decorators = {}, this._pendingDecorators = null, this._dirtyType = Ro, this._cloneNotNeeded = /* @__PURE__ */ new Set(), this._dirtyLeaves = /* @__PURE__ */ new Set(), this._dirtyElements = /* @__PURE__ */ new Map(), this._normalizedNodes = /* @__PURE__ */ new Set(), this._updateTags = /* @__PURE__ */ new Set(), this._observer = null, this._key = G0(), this._onError = o, this._htmlConversions = s, this._editable = a, this._headless = n !== null && n._headless, this._window = null, this._blockCursorElement = null;
  }
  isComposing() {
    return this._compositionKey != null;
  }
  registerUpdateListener(e) {
    const n = this._listeners.update;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerEditableListener(e) {
    const n = this._listeners.editable;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerDecoratorListener(e) {
    const n = this._listeners.decorator;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerTextContentListener(e) {
    const n = this._listeners.textcontent;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  registerRootListener(e) {
    const n = this._listeners.root;
    return e(this._rootElement, null), n.add(e), () => {
      e(null, this._rootElement), n.delete(e);
    };
  }
  registerCommand(e, n, r) {
    r === void 0 && le(35);
    const i = this._commands;
    i.has(e) || i.set(e, [/* @__PURE__ */ new Set(), /* @__PURE__ */ new Set(), /* @__PURE__ */ new Set(), /* @__PURE__ */ new Set(), /* @__PURE__ */ new Set()]);
    const o = i.get(e);
    o === void 0 && le(36, String(e));
    const s = o[r];
    return s.add(n), () => {
      s.delete(n), o.every((a) => a.size === 0) && i.delete(e);
    };
  }
  registerMutationListener(e, n, r) {
    const i = this.resolveRegisteredNodeAfterReplacements(this.getRegisteredNode(e)).klass, o = this._listeners.mutation;
    let s = o.get(n);
    s === void 0 && (s = /* @__PURE__ */ new Set(), o.set(n, s)), s.add(i);
    const a = r && r.skipInitialization;
    return a !== void 0 && a || this.initializeMutationListener(n, i), () => {
      s.delete(i), s.size === 0 && o.delete(n);
    };
  }
  getRegisteredNode(e) {
    const n = this._nodes.get(e.getType());
    return n === void 0 && le(37, e.name), n;
  }
  resolveRegisteredNodeAfterReplacements(e) {
    for (; e.replaceWithKlass; ) e = this.getRegisteredNode(e.replaceWithKlass);
    return e;
  }
  initializeMutationListener(e, n) {
    const r = this._editorState, i = Wm(r).get(n.getType());
    if (!i) return;
    const o = /* @__PURE__ */ new Map();
    for (const s of i.keys()) o.set(s, "created");
    o.size > 0 && e(o, { dirtyLeaves: /* @__PURE__ */ new Set(), prevEditorState: r, updateTags: /* @__PURE__ */ new Set(["registerMutationListener"]) });
  }
  registerNodeTransformToKlass(e, n) {
    const r = this.getRegisteredNode(e);
    return r.transforms.add(n), r;
  }
  registerNodeTransform(e, n) {
    const r = this.registerNodeTransformToKlass(e, n), i = [r], o = r.replaceWithKlass;
    if (o != null) {
      const s = this.registerNodeTransformToKlass(o, n);
      i.push(s);
    }
    return function(s, a) {
      const l = Wm(s.getEditorState()), c = [];
      for (const u of a) {
        const f = l.get(u);
        f && c.push(f);
      }
      c.length !== 0 && s.update(() => {
        for (const u of c) for (const f of u.keys()) {
          const d = Me(f);
          d && d.markDirty();
        }
      }, s._pendingEditorState === null ? { tag: Co } : void 0);
    }(this, i.map((s) => s.klass.getType())), () => {
      i.forEach((s) => s.transforms.delete(n));
    };
  }
  hasNode(e) {
    return this._nodes.has(e.getType());
  }
  hasNodes(e) {
    return e.every(this.hasNode.bind(this));
  }
  dispatchCommand(e, n) {
    return ge(this, e, n);
  }
  getDecorators() {
    return this._decorators;
  }
  getRootElement() {
    return this._rootElement;
  }
  getKey() {
    return this._key;
  }
  setRootElement(e) {
    const n = this._rootElement;
    if (e !== n) {
      const r = xs(this._config.theme, "root"), i = this._pendingEditorState || this._editorState;
      if (this._rootElement = e, j0(this, n, e, i), n !== null && (this._config.disableEvents || Sk(n), r != null && n.classList.remove(...r)), e !== null) {
        const o = Mp(e), s = e.style;
        s.userSelect = "text", s.whiteSpace = "pre-wrap", s.wordBreak = "break-word", e.setAttribute("data-lexical-editor", "true"), this._window = o, this._dirtyType = Os, Yy(this), this._updateTags.add(Co), di(this), this._config.disableEvents || function(a, l) {
          const c = a.ownerDocument, u = Jc.get(c);
          (u === void 0 || u < 1) && c.addEventListener("selectionchange", y0), Jc.set(c, (u || 0) + 1), a.__lexicalEditor = l;
          const f = b0(a);
          for (let d = 0; d < Ff.length; d++) {
            const [h, g] = Ff[d], m = typeof g == "function" ? (b) => {
              bm(b) || (wm(b), (l.isEditable() || h === "click") && g(b, l));
            } : (b) => {
              if (bm(b)) return;
              wm(b);
              const _ = l.isEditable();
              switch (h) {
                case "cut":
                  return _ && ge(l, Zo, b);
                case "copy":
                  return ge(l, Yi, b);
                case "paste":
                  return _ && ge(l, Qo, b);
                case "dragstart":
                  return _ && ge(l, pp, b);
                case "dragover":
                  return _ && ge(l, u0, b);
                case "dragend":
                  return _ && ge(l, Ck, b);
                case "focus":
                  return _ && ge(l, kk, b);
                case "blur":
                  return _ && ge(l, Ek, b);
                case "drop":
                  return _ && ge(l, Fu, b);
              }
            };
            a.addEventListener(h, m), f.push(() => {
              a.removeEventListener(h, m);
            });
          }
        }(e, this), r != null && e.classList.add(...r);
      } else this._window = null, this._updateTags.add(Co), di(this);
      Wa("root", this, !1, e, n);
    }
  }
  getElementByKey(e) {
    return this._keyToDOMMap.get(e) || null;
  }
  getEditorState() {
    return this._editorState;
  }
  setEditorState(e, n) {
    e.isEmpty() && le(38);
    let r = e;
    r._readOnly && (r = F0(e), r._selection = e._selection ? e._selection.clone() : null), Xy(this);
    const i = this._pendingEditorState, o = this._updateTags, s = n !== void 0 ? n.tag : null;
    i === null || i.isEmpty() || (s != null && o.add(s), di(this)), this._pendingEditorState = r, this._dirtyType = Os, this._dirtyElements.set("root", !1), this._compositionKey = null, s != null && o.add(s), this._updating || di(this);
  }
  parseEditorState(e, n) {
    return function(r, i, o) {
      const s = vp(), a = Ut, l = Dn, c = zt, u = i._dirtyElements, f = i._dirtyLeaves, d = i._cloneNotNeeded, h = i._dirtyType;
      i._dirtyElements = /* @__PURE__ */ new Map(), i._dirtyLeaves = /* @__PURE__ */ new Set(), i._cloneNotNeeded = /* @__PURE__ */ new Set(), i._dirtyType = 0, Ut = s, Dn = !1, zt = i, Cp(null);
      try {
        const g = i._nodes;
        bp(r.root, g), o && o(), s._readOnly = !0;
      } catch (g) {
        g instanceof Error && i._onError(g);
      } finally {
        i._dirtyElements = u, i._dirtyLeaves = f, i._cloneNotNeeded = d, i._dirtyType = h, Ut = a, Dn = l, zt = c;
      }
      return s;
    }(typeof e == "string" ? JSON.parse(e) : e, this, n);
  }
  read(e) {
    return di(this), this.getEditorState().read(e, { editor: this });
  }
  update(e, n) {
    (function(r, i, o) {
      r._updating ? r._updates.push([i, o]) : Bu(r, i, o);
    })(this, e, n);
  }
  focus(e, n = {}) {
    const r = this._rootElement;
    r !== null && (r.setAttribute("autocapitalize", "off"), Wn(this, () => {
      const i = oe(), o = Ve();
      i !== null ? i.dirty || sn(i.clone()) : o.getChildrenSize() !== 0 && (n.defaultSelection === "rootStart" ? o.selectStart() : o.selectEnd()), Z0("focus"), Zk(() => {
        r.removeAttribute("autocapitalize"), e && e();
      });
    }), this._pendingEditorState === null && r.removeAttribute("autocapitalize"));
  }
  blur() {
    const e = this._rootElement;
    e !== null && e.blur();
    const n = vr(this._window);
    n !== null && n.removeAllRanges();
  }
  isEditable() {
    return this._editable;
  }
  setEditable(e) {
    this._editable !== e && (this._editable = e, Wa("editable", this, !0, e));
  }
  toJSON() {
    return { editorState: this._editorState.toJSON() };
  }
}
Uu.version = "0.34.0+prod.esm";
let Hf = null;
function Cp(t) {
  Hf = t;
}
let Kk = 1;
function U0(t, e) {
  const n = kp(t, e);
  return n === void 0 && le(30, e), n;
}
function kp(t, e) {
  return t._nodes.get(e);
}
const Gk = typeof queueMicrotask == "function" ? queueMicrotask : (t) => {
  Promise.resolve().then(t);
};
function Fm(t) {
  return Xe(zi(t));
}
function Ep(t) {
  const e = document.activeElement;
  if (!it(e)) return !1;
  const n = e.nodeName;
  return Xe(zi(t)) && (n === "INPUT" || n === "TEXTAREA" || e.contentEditable === "true" && zu(e) == null);
}
function Ml(t, e, n) {
  const r = t.getRootElement();
  try {
    return r !== null && r.contains(e) && r.contains(n) && e !== null && !Ep(e) && z0(e) === t;
  } catch {
    return !1;
  }
}
function Np(t) {
  return t instanceof Uu;
}
function z0(t) {
  let e = t;
  for (; e != null; ) {
    const n = zu(e);
    if (Np(n)) return n;
    e = Ol(e);
  }
  return null;
}
function zu(t) {
  return t ? t.__lexicalEditor : null;
}
function ko(t) {
  return k0(t) || t.isToken();
}
function li(t) {
  return ko(t) || t.isSegmented();
}
function ki(t) {
  return ts(t) && t.nodeType === HC;
}
function Jk(t) {
  return ts(t) && t.nodeType === WC;
}
function $s(t) {
  let e = t;
  for (; e != null; ) {
    if (ki(e)) return e;
    e = e.firstChild;
  }
  return null;
}
function Qc(t, e, n) {
  const r = ji[e];
  if (n !== null && (t & r) == (n & r)) return t;
  let i = t ^ r;
  return e === "subscript" ? i &= -65 : e === "superscript" ? i &= -33 : e === "lowercase" ? (i &= -513, i &= -1025) : e === "uppercase" ? (i &= -257, i &= -1025) : e === "capitalize" && (i &= -257, i &= -513), i;
}
function Xk(t, e) {
  const n = function() {
    const s = Hf;
    return Hf = null, s;
  }();
  if ((e = e || n && n.__key) != null) return void (t.__key = e);
  Zt(), I0();
  const r = mt(), i = Qi(), o = "" + Kk++;
  i._nodeMap.set(o, t), X(t) ? r._dirtyElements.set(o, !0) : r._dirtyLeaves.add(o), r._cloneNotNeeded.add(o), r._dirtyType = Hy, t.__key = o;
}
function Eo(t) {
  const e = t.getParent();
  if (e !== null) {
    const n = t.getWritable(), r = e.getWritable(), i = t.getPreviousSibling(), o = t.getNextSibling(), s = o !== null ? o.__key : null, a = i !== null ? i.__key : null, l = i !== null ? i.getWritable() : null, c = o !== null ? o.getWritable() : null;
    i === null && (r.__first = s), o === null && (r.__last = a), l !== null && (l.__next = s), c !== null && (c.__prev = a), n.__prev = null, n.__next = null, n.__parent = null, r.__size--;
  }
}
function Zc(t) {
  I0();
  const e = t.getLatest(), n = e.__parent, r = Qi(), i = mt(), o = r._nodeMap, s = i._dirtyElements;
  n !== null && function(l, c, u) {
    let f = l;
    for (; f !== null; ) {
      if (u.has(f)) return;
      const d = c.get(f);
      if (d === void 0) break;
      u.set(f, !1), f = d.__parent;
    }
  }(n, o, s);
  const a = e.__key;
  i._dirtyType = Hy, X(t) ? s.set(a, !0) : i._dirtyLeaves.add(a);
}
function en(t) {
  Zt();
  const e = mt(), n = e._compositionKey;
  if (t !== n) {
    if (e._compositionKey = t, n !== null) {
      const r = Me(n);
      r !== null && r.getWritable();
    }
    if (t !== null) {
      const r = Me(t);
      r !== null && r.getWritable();
    }
  }
}
function Pi() {
  return ca() ? null : mt()._compositionKey;
}
function Me(t, e) {
  const n = (e || Qi())._nodeMap.get(t);
  return n === void 0 ? null : n;
}
function V0(t, e) {
  const n = Vu(t, mt());
  return n !== void 0 ? Me(n, e) : null;
}
function Vu(t, e) {
  return t[`__lexicalKey_${e._key}`];
}
function zi(t, e) {
  let n = t;
  for (; n != null; ) {
    const r = V0(n, e);
    if (r !== null) return r;
    n = Ol(n);
  }
  return null;
}
function H0(t) {
  const e = t._decorators, n = Object.assign({}, e);
  return t._pendingDecorators = n, n;
}
function Bm(t) {
  return t.read(() => Ve().getTextContent());
}
function Ve() {
  return W0(Qi());
}
function W0(t) {
  return t._nodeMap.get("root");
}
function sn(t) {
  Zt();
  const e = Qi();
  t !== null && (t.dirty = !0, t.setCachedNodes(null)), e._selection = t;
}
function ms(t) {
  const e = mt(), n = function(r, i) {
    let o = r;
    for (; o != null; ) {
      const s = Vu(o, i);
      if (s !== void 0) return s;
      o = Ol(o);
    }
    return null;
  }(t, e);
  return n === null ? t === e.getRootElement() ? Me("root") : null : Me(n);
}
function K0(t) {
  return /[\uD800-\uDBFF][\uDC00-\uDFFF]/g.test(t);
}
function Sp(t) {
  const e = [];
  let n = t;
  for (; n !== null; ) e.push(n), n = n._parentEditor;
  return e;
}
function G0() {
  return Math.random().toString(36).replace(/[^a-z]+/g, "").substring(0, 5);
}
function J0(t) {
  return ki(t) ? t.nodeValue : null;
}
function Tp(t, e, n) {
  const r = vr(or(e));
  if (r === null) return;
  const i = r.anchorNode;
  let { anchorOffset: o, focusOffset: s } = r;
  if (i !== null) {
    let a = J0(i);
    const l = zi(i);
    if (a !== null && ie(l)) {
      if (a === Pu && n) {
        const c = n.length;
        a = n, o = c, s = c;
      }
      a !== null && Ap(l, a, o, s, t);
    }
  }
}
function Ap(t, e, n, r, i) {
  let o = t;
  if (o.isAttached() && (i || !o.isDirty())) {
    const s = o.isComposing();
    let a = e;
    (s || i) && e[e.length - 1] === Pu && (a = e.slice(0, -1));
    const l = o.getTextContent();
    if (i || a !== l) {
      if (a === "") {
        if (en(null), el || Ms || qc) o.remove();
        else {
          const m = mt();
          setTimeout(() => {
            m.update(() => {
              o.isAttached() && o.remove();
            });
          }, 20);
        }
        return;
      }
      const c = o.getParent(), u = la(), f = o.getTextContentSize(), d = Pi(), h = o.getKey();
      if (o.isToken() || d !== null && h === d && !s || Z(u) && (c !== null && !c.canInsertTextBefore() && u.anchor.offset === 0 || u.anchor.key === t.__key && u.anchor.offset === 0 && !o.canInsertTextBefore() && !s || u.focus.key === t.__key && u.focus.offset === f && !o.canInsertTextAfter() && !s)) return void o.markDirty();
      const g = oe();
      if (!Z(g) || n === null || r === null) return void qm(o, a, g);
      if (g.setTextNodeRange(o, n, o, r), o.isSegmented()) {
        const m = Ie(o.getTextContent());
        o.replace(m), o = m;
      }
      qm(o, a, g);
    }
  }
}
function qm(t, e, n) {
  if (t.setTextContent(e), Z(n)) {
    const r = t.getKey();
    for (const i of ["anchor", "focus"]) {
      const o = n[i];
      o.type === "text" && o.key === r && (o.offset = qi(t, o.offset, "clamp"));
    }
  }
}
function sc(t, e, n) {
  const r = e[n] || !1;
  return r === "any" || r === t[n];
}
function Yk(t, e) {
  return sc(t, e, "altKey") && sc(t, e, "ctrlKey") && sc(t, e, "shiftKey") && sc(t, e, "metaKey");
}
function et(t, e, n) {
  return Yk(t, n) && t.key.toLowerCase() === e.toLowerCase();
}
const ai = { ctrlKey: !qr, metaKey: qr }, jm = { altKey: qr, ctrlKey: !qr };
function Um(t) {
  return t.key === "Backspace";
}
function zm(t) {
  return et(t, "a", ai);
}
function X0(t) {
  const e = Ve();
  if (Z(t)) {
    const n = t.anchor, r = t.focus, i = n.getNode().getTopLevelElementOrThrow().getParentOrThrow();
    return n.set(i.getKey(), 0, "element"), r.set(i.getKey(), i.getChildrenSize(), "element"), tl(t), t;
  }
  {
    const n = e.select(0, e.getChildrenSize());
    return sn(tl(n)), n;
  }
}
function xs(t, e) {
  t.__lexicalClassNameCache === void 0 && (t.__lexicalClassNameCache = {});
  const n = t.__lexicalClassNameCache, r = n[e];
  if (r !== void 0) return r;
  const i = t[e];
  if (typeof i == "string") {
    const o = jc(i);
    return n[e] = o, o;
  }
  return i;
}
function Dp(t, e, n, r, i) {
  if (n.size === 0) return;
  const o = r.__type, s = r.__key, a = e.get(o);
  a === void 0 && le(33, o);
  const l = a.klass;
  let c = t.get(l);
  c === void 0 && (c = /* @__PURE__ */ new Map(), t.set(l, c));
  const u = c.get(s), f = u === "destroyed" && i === "created";
  (u === void 0 || f) && c.set(s, f ? "updated" : i);
}
function Vm(t, e, n) {
  const r = t.getParent();
  let i = n, o = t;
  return r !== null && (e && n === 0 ? (i = o.getIndexWithinParent(), o = r) : e || n !== o.getChildrenSize() || (i = o.getIndexWithinParent() + 1, o = r)), o.getChildAtIndex(e ? i - 1 : i);
}
function Wf(t, e) {
  const n = t.offset;
  if (t.type === "element")
    return Vm(t.getNode(), e, n);
  {
    const r = t.getNode();
    if (e && n === 0 || !e && n === r.getTextContentSize()) {
      const i = e ? r.getPreviousSibling() : r.getNextSibling();
      return i === null ? Vm(r.getParentOrThrow(), e, r.getIndexWithinParent() + (e ? 0 : 1)) : i;
    }
  }
  return null;
}
function Y0(t) {
  const e = or(t).event, n = e && e.inputType;
  return n === "insertFromPaste" || n === "insertFromPasteAsQuotation";
}
function ge(t, e, n) {
  return function(r, i, o) {
    const s = Sp(r);
    for (let a = 4; a >= 0; a--) for (let l = 0; l < s.length; l++) {
      const c = s[l], u = c._commands.get(i);
      if (u !== void 0) {
        const f = u[a];
        if (f !== void 0) {
          const d = Array.from(f), h = d.length;
          let g = !1;
          if (Wn(c, () => {
            for (let m = 0; m < h; m++) if (d[m](o, r)) return void (g = !0);
          }), g) return g;
        }
      }
    }
    return !1;
  }(t, e, n);
}
function Hu(t) {
  return !tn(t) && !t.isLastChild() && !t.isInline();
}
function Fs(t, e) {
  const n = t._keyToDOMMap.get(e);
  return n === void 0 && le(75, e), n;
}
function Ol(t) {
  const e = t.assignedSlot || t.parentElement;
  return Jf(e) ? e.host : e;
}
function Q0(t) {
  return Jk(t) ? t : it(t) ? t.ownerDocument : null;
}
function Qk(t) {
  return mt()._updateTags.has(t);
}
function Z0(t) {
  Zt(), mt()._updateTags.add(t);
}
function Zk(t) {
  Zt(), mt()._deferred.push(t);
}
function Kf(t, e) {
  let n = t.getParent();
  for (; n !== null; ) {
    if (n.is(e)) return !0;
    n = n.getParent();
  }
  return !1;
}
function Mp(t) {
  const e = Q0(t);
  return e ? e.defaultView : null;
}
function or(t) {
  const e = t._window;
  return e === null && le(78), e;
}
function eE(t) {
  return X(t) && t.isInline() || Xe(t) && t.isInline();
}
function tE(t) {
  let e = t.getParentOrThrow();
  for (; e !== null; ) {
    if (Zr(e)) return e;
    e = e.getParentOrThrow();
  }
  return e;
}
function Zr(t) {
  return tn(t) || X(t) && t.isShadowRoot();
}
function lt(t) {
  const e = mt(), n = t.getType(), r = kp(e, n);
  r === void 0 && le(200, t.constructor.name, n);
  const { replace: i, replaceWithKlass: o } = r;
  if (i !== null) {
    const s = i(t), a = s.constructor;
    return o !== null ? s instanceof o || le(201, o.name, o.getType(), a.name, a.getType(), t.constructor.name, n) : s instanceof t.constructor && a !== t.constructor || le(202, a.name, a.getType(), t.constructor.name, n), s.__key === t.__key && le(203, t.constructor.name, n, a.name, a.getType()), s;
  }
  return t;
}
function Vd(t, e) {
  !tn(t.getParent()) || X(e) || Xe(e) || le(99);
}
function nE(t) {
  const e = Me(t);
  return e === null && le(63, t), e;
}
function Hd(t) {
  return (Xe(t) || X(t) && !t.canBeEmpty()) && !t.isInline();
}
function Gf(t, e, n) {
  n.style.removeProperty("caret-color"), e._blockCursorElement = null;
  const r = t.parentElement;
  r !== null && r.removeChild(t);
}
function vr(t) {
  return Tr ? (t || window).getSelection() : null;
}
function rE(t) {
  const e = Mp(t);
  return e ? e.getSelection() : null;
}
function ev(t) {
  return it(t) && t.tagName === "A";
}
function it(t) {
  return ts(t) && t.nodeType === VC;
}
function ts(t) {
  return typeof t == "object" && t !== null && "nodeType" in t && typeof t.nodeType == "number";
}
function Jf(t) {
  return ts(t) && t.nodeType === KC;
}
function Xf(t) {
  const e = new RegExp(/^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|mark|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var|#text)$/, "i");
  return t.nodeName.match(e) !== null;
}
function eu(t) {
  const e = new RegExp(/^(address|article|aside|blockquote|canvas|dd|div|dl|dt|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|header|hr|li|main|nav|noscript|ol|p|pre|section|table|td|tfoot|ul|video)$/, "i");
  return t.nodeName.match(e) !== null;
}
function nr(t) {
  if (Xe(t) && !t.isInline()) return !0;
  if (!X(t) || Zr(t)) return !1;
  const e = t.getFirstChild(), n = e === null || xo(e) || ie(e) || e.isInline();
  return !t.isInline() && t.canBeEmpty() !== !1 && n;
}
function Wd(t, e) {
  let n = t;
  for (; n !== null && n.getParent() !== null && !e(n); ) n = n.getParentOrThrow();
  return e(n) ? n : null;
}
function Wu() {
  return mt();
}
const Hm = /* @__PURE__ */ new WeakMap(), iE = /* @__PURE__ */ new Map();
function Wm(t) {
  if (!t._readOnly && t.isEmpty()) return iE;
  t._readOnly || le(192);
  let e = Hm.get(t);
  return e || (e = function(n) {
    const r = /* @__PURE__ */ new Map();
    for (const [i, o] of n._nodeMap) {
      const s = o.__type;
      let a = r.get(s);
      a || (a = /* @__PURE__ */ new Map(), r.set(s, a)), a.set(i, o);
    }
    return r;
  }(t), Hm.set(t, e)), e;
}
function Op(t) {
  const e = t.constructor.clone(t);
  return e.afterCloneFrom(t), e;
}
function oE(t, e) {
  const n = parseInt(t.style.paddingInlineStart, 10) || 0, r = Math.round(n / 40);
  e.setIndent(r);
}
function sE(t) {
  t.__lexicalUnmanaged = !0;
}
function aE(t) {
  return t.__lexicalUnmanaged === !0;
}
function Ta(t, e) {
  return function(n, r) {
    return Object.prototype.hasOwnProperty.call(n, r);
  }(t, e) && t[e] !== aa[e];
}
function Ip(t) {
  const e = im in t.prototype ? t.prototype[im]() : void 0, n = /* @__PURE__ */ function(s) {
    return s === Zi || s === pn || s === aa;
  }(t), r = !n && Ta(t, "getType") ? t.getType() : void 0;
  let i, o = r;
  if (e) if (r) i = e[r];
  else for (const [s, a] of Object.entries(e)) o = s, i = a;
  if (!n && o && (Ta(t, "getType") || (t.getType = () => o), Ta(t, "clone") || (t.clone = (s) => (Cp(s), new t())), Ta(t, "importJSON") || (t.importJSON = i && i.$importJSON || ((s) => new t().updateFromJSON(s))), !Ta(t, "importDOM") && i)) {
    const { importDOM: s } = i;
    s && (t.importDOM = () => s);
  }
  return { ownNodeConfig: i, ownNodeType: o };
}
const lE = { next: "previous", previous: "next" };
let Rp = class {
  constructor(e) {
    this.origin = e;
  }
  [Symbol.iterator]() {
    return Ku({ hasNext: $o, initial: this.getAdjacentCaret(), map: (e) => e, step: (e) => e.getAdjacentCaret() });
  }
  getAdjacentCaret() {
    return $t(this.getNodeAtCaret(), this.direction);
  }
  getSiblingCaret() {
    return $t(this.origin, this.direction);
  }
  remove() {
    const e = this.getNodeAtCaret();
    return e && e.remove(), this;
  }
  replaceOrInsert(e, n) {
    const r = this.getNodeAtCaret();
    return e.is(this.origin) || e.is(r) || (r === null ? this.insert(e) : r.replace(e, n)), this;
  }
  splice(e, n, r = "next") {
    const i = r === this.direction ? n : Array.from(n).reverse();
    let o = this;
    const s = this.getParentAtCaret(), a = /* @__PURE__ */ new Map();
    for (let l = o.getAdjacentCaret(); l !== null && a.size < e; l = l.getAdjacentCaret()) {
      const c = l.origin.getWritable();
      a.set(c.getKey(), c);
    }
    for (const l of i) {
      if (a.size > 0) {
        const c = o.getNodeAtCaret();
        if (c) {
          if (a.delete(c.getKey()), a.delete(l.getKey()), !(c.is(l) || o.origin.is(l))) {
            const u = l.getParent();
            u && u.is(s) && l.remove(), c.replace(l);
          }
        } else c === null && le(263, Array.from(a).join(" "));
      } else o.insert(l);
      o = $t(l, this.direction);
    }
    for (const l of a.values()) l.remove();
    return this;
  }
}, Yf = class tv extends Rp {
  constructor() {
    super(...arguments);
    Zn(this, "type", "child");
  }
  getLatest() {
    const n = this.origin.getLatest();
    return n === this.origin ? this : _r(n, this.direction);
  }
  getParentCaret(n = "root") {
    return $t(Pp(this.getParentAtCaret(), n), this.direction);
  }
  getFlipped() {
    const n = ua(this.direction);
    return $t(this.getNodeAtCaret(), n) || _r(this.origin, n);
  }
  getParentAtCaret() {
    return this.origin;
  }
  getChildCaret() {
    return this;
  }
  isSameNodeCaret(n) {
    return n instanceof tv && this.direction === n.direction && this.origin.is(n.origin);
  }
  isSamePointCaret(n) {
    return this.isSameNodeCaret(n);
  }
};
const cE = { root: tn, shadowRoot: Zr };
function ua(t) {
  return lE[t];
}
function Pp(t, e = "root") {
  return cE[e](t) ? null : t;
}
let tu = class Qf extends Rp {
  constructor() {
    super(...arguments);
    Zn(this, "type", "sibling");
  }
  getLatest() {
    const n = this.origin.getLatest();
    return n === this.origin ? this : $t(n, this.direction);
  }
  getSiblingCaret() {
    return this;
  }
  getParentAtCaret() {
    return this.origin.getParent();
  }
  getChildCaret() {
    return X(this.origin) ? _r(this.origin, this.direction) : null;
  }
  getParentCaret(n = "root") {
    return $t(Pp(this.getParentAtCaret(), n), this.direction);
  }
  getFlipped() {
    const n = ua(this.direction);
    return $t(this.getNodeAtCaret(), n) || _r(this.origin.getParentOrThrow(), n);
  }
  isSamePointCaret(n) {
    return n instanceof Qf && this.direction === n.direction && this.origin.is(n.origin);
  }
  isSameNodeCaret(n) {
    return (n instanceof Qf || n instanceof nu) && this.direction === n.direction && this.origin.is(n.origin);
  }
}, nu = class Zf extends Rp {
  constructor(n, r) {
    super(n);
    Zn(this, "type", "text");
    this.offset = r;
  }
  getLatest() {
    const n = this.origin.getLatest();
    return n === this.origin ? this : Fo(n, this.direction, this.offset);
  }
  getParentAtCaret() {
    return this.origin.getParent();
  }
  getChildCaret() {
    return null;
  }
  getParentCaret(n = "root") {
    return $t(Pp(this.getParentAtCaret(), n), this.direction);
  }
  getFlipped() {
    return Fo(this.origin, ua(this.direction), this.offset);
  }
  isSamePointCaret(n) {
    return n instanceof Zf && this.direction === n.direction && this.origin.is(n.origin) && this.offset === n.offset;
  }
  isSameNodeCaret(n) {
    return (n instanceof tu || n instanceof Zf) && this.direction === n.direction && this.origin.is(n.origin);
  }
  getSiblingCaret() {
    return $t(this.origin, this.direction);
  }
};
function Bi(t) {
  return t instanceof nu;
}
function $o(t) {
  return t instanceof tu;
}
function wr(t) {
  return t instanceof Yf;
}
const uE = { next: class extends nu {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "next");
  }
  getNodeAtCaret() {
    return this.origin.getNextSibling();
  }
  insert(e) {
    return this.origin.insertAfter(e), this;
  }
}, previous: class extends nu {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "previous");
  }
  getNodeAtCaret() {
    return this.origin.getPreviousSibling();
  }
  insert(e) {
    return this.origin.insertBefore(e), this;
  }
} }, dE = { next: class extends tu {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "next");
  }
  getNodeAtCaret() {
    return this.origin.getNextSibling();
  }
  insert(e) {
    return this.origin.insertAfter(e), this;
  }
}, previous: class extends tu {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "previous");
  }
  getNodeAtCaret() {
    return this.origin.getPreviousSibling();
  }
  insert(e) {
    return this.origin.insertBefore(e), this;
  }
} }, fE = { next: class extends Yf {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "next");
  }
  getNodeAtCaret() {
    return this.origin.getFirstChild();
  }
  insert(e) {
    return this.origin.splice(0, 0, [e]), this;
  }
}, previous: class extends Yf {
  constructor() {
    super(...arguments);
    Zn(this, "direction", "previous");
  }
  getNodeAtCaret() {
    return this.origin.getLastChild();
  }
  insert(e) {
    return this.origin.splice(this.origin.getChildrenSize(), 0, [e]), this;
  }
} };
function $t(t, e) {
  return t ? new dE[e](t) : null;
}
function Fo(t, e, n) {
  return t ? new uE[e](t, qi(t, n)) : null;
}
function qi(t, e, n = "error") {
  const r = t.getTextContentSize();
  let i = e === "next" ? r : e === "previous" ? 0 : e;
  return (i < 0 || i > r) && (n !== "clamp" && function(o, ...s) {
    const a = new URL("https://lexical.dev/docs/error"), l = new URLSearchParams();
    l.append("code", o);
    for (const c of s) l.append("v", c);
    a.search = l.toString(), console.warn(`Minified Lexical warning #${o}; visit ${a.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
  }(284, String(e), String(r), t.getKey()), i = i < 0 ? 0 : r), i;
}
function Km(t, e) {
  return new gE(t, e);
}
function _r(t, e) {
  return X(t) ? new fE[e](t) : null;
}
function hE(t) {
  return t && t.getChildCaret() || t;
}
function sl(t) {
  return t && hE(t.getAdjacentCaret());
}
let pE = class nv {
  constructor(e, n, r) {
    Zn(this, "type", "node-caret-range");
    this.anchor = e, this.focus = n, this.direction = r;
  }
  getLatest() {
    const e = this.anchor.getLatest(), n = this.focus.getLatest();
    return e === this.anchor && n === this.focus ? this : new nv(e, n, this.direction);
  }
  isCollapsed() {
    return this.anchor.isSamePointCaret(this.focus);
  }
  getTextSlices() {
    const e = (i) => {
      const o = this[i].getLatest();
      return Bi(o) ? function(s, a) {
        const { direction: l, origin: c } = s, u = qi(c, a === "focus" ? ua(l) : l);
        return Km(s, u - s.offset);
      }(o, i) : null;
    }, n = e("anchor"), r = e("focus");
    if (n && r) {
      const { caret: i } = n, { caret: o } = r;
      if (i.isSameNodeCaret(o)) return [Km(i, o.offset - i.offset), null];
    }
    return [n, r];
  }
  iterNodeCarets(e = "root") {
    const n = Bi(this.anchor) ? this.anchor.getSiblingCaret() : this.anchor.getLatest(), r = this.focus.getLatest(), i = Bi(r), o = (s) => s.isSameNodeCaret(r) ? null : sl(s) || s.getParentCaret(e);
    return Ku({ hasNext: (s) => s !== null && !(i && r.isSameNodeCaret(s)), initial: n.isSameNodeCaret(r) ? null : o(n), map: (s) => s, step: o });
  }
  [Symbol.iterator]() {
    return this.iterNodeCarets("root");
  }
}, gE = class {
  constructor(e, n) {
    Zn(this, "type", "slice");
    this.caret = e, this.distance = n;
  }
  getSliceIndices() {
    const { distance: e, caret: { offset: n } } = this, r = n + e;
    return r < n ? [r, n] : [n, r];
  }
  getTextContent() {
    const [e, n] = this.getSliceIndices();
    return this.caret.origin.getTextContent().slice(e, n);
  }
  getTextContentSize() {
    return Math.abs(this.distance);
  }
  removeTextSlice() {
    const { caret: { origin: e, direction: n } } = this, [r, i] = this.getSliceIndices(), o = e.getTextContent();
    return Fo(e.setTextContent(o.slice(0, r) + o.slice(i)), n, r);
  }
};
function Lp(t) {
  return Vi(t, $t(Ve(), t.direction));
}
function mE(t) {
  return Vi(t, t);
}
function Vi(t, e) {
  return t.direction !== e.direction && le(265), new pE(t, e, t.direction);
}
function Ku(t) {
  const { initial: e, hasNext: n, step: r, map: i } = t;
  let o = e;
  return { [Symbol.iterator]() {
    return this;
  }, next() {
    if (!n(o)) return { done: !0, value: void 0 };
    const s = { done: !1, value: i(o) };
    return o = r(o), s;
  } };
}
function rv(t, e) {
  const n = Ka(t.origin, e.origin);
  switch (n === null && le(275, t.origin.getKey(), e.origin.getKey()), n.type) {
    case "same": {
      const r = t.type === "text", i = e.type === "text";
      return r && i ? function(o, s) {
        return Math.sign(o - s);
      }(t.offset, e.offset) : t.type === e.type ? 0 : r ? -1 : i ? 1 : t.type === "child" ? -1 : 1;
    }
    case "ancestor":
      return t.type === "child" ? -1 : 1;
    case "descendant":
      return e.type === "child" ? 1 : -1;
    case "branch":
      return iv(n);
  }
}
function iv(t) {
  const { a: e, b: n } = t, r = e.__key, i = n.__key;
  let o = e, s = n;
  for (; o && s; o = o.getNextSibling(), s = s.getNextSibling()) {
    if (o.__key === i) return -1;
    if (s.__key === r) return 1;
  }
  return o === null ? 1 : -1;
}
function ac(t, e) {
  return e.is(t);
}
function Gm(t) {
  return X(t) ? [t.getLatest(), null] : [t.getParent(), t.getLatest()];
}
function Ka(t, e) {
  if (t.is(e)) return { commonAncestor: t, type: "same" };
  const n = /* @__PURE__ */ new Map();
  for (let [r, i] = Gm(t); r; i = r, r = r.getParent()) n.set(r, i);
  for (let [r, i] = Gm(e); r; i = r, r = r.getParent()) {
    const o = n.get(r);
    if (o !== void 0) return o === null ? (ac(t, r) || le(276), { commonAncestor: r, type: "ancestor" }) : i === null ? (ac(e, r) || le(277), { commonAncestor: r, type: "descendant" }) : ((X(o) || ac(t, o)) && (X(i) || ac(e, i)) && r.is(o.getParent()) && r.is(i.getParent()) || le(278), { a: o, b: i, commonAncestor: r, type: "branch" });
  }
  return null;
}
function bi(t, e) {
  const { type: n, key: r, offset: i } = t, o = nE(t.key);
  return n === "text" ? (ie(o) || le(266, o.getType(), r), Fo(o, e, i)) : (X(o) || le(267, o.getType(), r), yE(o, t.offset, e));
}
function al(t, e) {
  const { origin: n, direction: r } = e, i = r === "next";
  Bi(e) ? t.set(n.getKey(), e.offset, "text") : $o(e) ? ie(n) ? t.set(n.getKey(), qi(n, r), "text") : t.set(n.getParentOrThrow().getKey(), n.getIndexWithinParent() + (i ? 1 : 0), "element") : (wr(e) && X(n) || le(268), t.set(n.getKey(), i ? 0 : n.getChildrenSize(), "element"));
}
function wE(t) {
  const e = oe(), n = Z(e) ? e : Dl();
  return Tc(n, t), sn(n), n;
}
function Tc(t, e) {
  al(t.anchor, e.anchor), al(t.focus, e.focus);
}
function Jm(t) {
  const { anchor: e, focus: n } = t, r = bi(e, "next"), i = bi(n, "next"), o = rv(r, i) <= 0 ? "next" : "previous";
  return Vi(Bs(r, o), Bs(i, o));
}
function Gu(t) {
  const { direction: e, origin: n } = t, r = $t(n, ua(e)).getNodeAtCaret();
  return r ? $t(r, e) : _r(n.getParentOrThrow(), e);
}
function Xm(t, e = "root") {
  const n = [t];
  for (let r = wr(t) ? t.getParentCaret(e) : t.getSiblingCaret(); r !== null; r = r.getParentCaret(e)) n.push(Gu(r));
  return n;
}
function Kd(t) {
  return !!t && t.origin.isAttached();
}
function bE(t, e = "removeEmptySlices") {
  if (t.isCollapsed()) return t;
  const n = "root", r = "next";
  let i = e;
  const o = sv(t, r), s = Xm(o.anchor, n), a = Xm(o.focus.getFlipped(), n), l = /* @__PURE__ */ new Set(), c = [];
  for (const g of o.iterNodeCarets(n)) if (wr(g)) l.add(g.origin.getKey());
  else if ($o(g)) {
    const { origin: m } = g;
    X(m) && !l.has(m.getKey()) || c.push(m);
  }
  for (const g of c) g.remove();
  for (const g of o.getTextSlices()) {
    if (!g) continue;
    const { origin: m } = g.caret, b = m.getTextContentSize(), _ = Gu($t(m, r)), y = m.getMode();
    if (Math.abs(g.distance) === b && i === "removeEmptySlices" || y === "token" && g.distance !== 0) _.remove();
    else if (g.distance !== 0) {
      i = "removeEmptySlices";
      let C = g.removeTextSlice();
      const D = g.caret.origin;
      if (y === "segmented") {
        const R = C.origin, N = Ie(R.getTextContent()).setStyle(R.getStyle()).setFormat(R.getFormat());
        _.replaceOrInsert(N), C = Fo(N, r, C.offset);
      }
      D.is(s[0].origin) && (s[0] = C), D.is(a[0].origin) && (a[0] = C.getFlipped());
    }
  }
  let u, f;
  for (const g of s) if (Kd(g)) {
    u = Vr(g);
    break;
  }
  for (const g of a) if (Kd(g)) {
    f = Vr(g);
    break;
  }
  const d = function(g, m, b) {
    if (!g || !m) return null;
    const _ = g.getParentAtCaret(), y = m.getParentAtCaret();
    if (!_ || !y) return null;
    const C = _.getParents().reverse();
    C.push(_);
    const D = y.getParents().reverse();
    D.push(y);
    const R = Math.min(C.length, D.length);
    let N;
    for (N = 0; N < R && C[N] === D[N]; N++) ;
    const L = (q, k) => {
      let I;
      for (let S = N; S < q.length; S++) {
        const P = q[S];
        if (Zr(P)) return;
        !I && k(P) && (I = P);
      }
      return I;
    }, O = L(C, nr), M = O && L(D, (q) => b.has(q.getKey()) && nr(q));
    return O && M ? [O, M] : null;
  }(u, f, l);
  if (d) {
    const [g, m] = d;
    _r(g, "previous").splice(0, m.getChildren()), m.remove();
  }
  const h = [u, f, ...s, ...a].find(Kd);
  if (h)
    return mE(Bs(Vr(h), t.direction));
  le(269, JSON.stringify(s.map((g) => g.origin.__key)));
}
function Vr(t) {
  const e = function(i) {
    let o = i;
    for (; wr(o); ) {
      const s = sl(o);
      if (!wr(s)) break;
      o = s;
    }
    return o;
  }(t.getLatest()), { direction: n } = e;
  if (ie(e.origin)) return Bi(e) ? e : Fo(e.origin, n, n);
  const r = e.getAdjacentCaret();
  return $o(r) && ie(r.origin) ? Fo(r.origin, n, ua(n)) : e;
}
function ov(t) {
  return Bi(t) && t.offset !== qi(t.origin, t.direction);
}
function Bs(t, e) {
  return t.direction === e ? t : t.getFlipped();
}
function sv(t, e) {
  return t.direction === e ? t : Vi(Bs(t.focus, e), Bs(t.anchor, e));
}
function yE(t, e, n) {
  let r = _r(t, "next");
  for (let i = 0; i < e; i++) {
    const o = r.getAdjacentCaret();
    if (o === null) break;
    r = o;
  }
  return Bs(r, n);
}
const vE = /* @__PURE__ */ new Map();
function Ym(t) {
  let e = t;
  for (; e != null; ) {
    if (e.nodeType === Node.TEXT_NODE) return e;
    e = e.firstChild;
  }
  return null;
}
function Qm(t) {
  const e = t.parentNode;
  if (e == null) throw new Error("Should never happen");
  return [e, Array.from(e.childNodes).indexOf(t)];
}
function _E(t, e, n, r, i) {
  const o = e.getKey(), s = r.getKey(), a = document.createRange();
  let l = t.getElementByKey(o), c = t.getElementByKey(s), u = n, f = i;
  if (ie(e) && (l = Ym(l)), ie(r) && (c = Ym(c)), e === void 0 || r === void 0 || l === null || c === null) return null;
  l.nodeName === "BR" && ([l, u] = Qm(l)), c.nodeName === "BR" && ([c, f] = Qm(c));
  const d = l.firstChild;
  l === c && d != null && d.nodeName === "BR" && u === 0 && f === 0 && (f = 1);
  try {
    a.setStart(l, u), a.setEnd(c, f);
  } catch {
    return null;
  }
  return !a.collapsed || u === f && o === s || (a.setStart(c, f), a.setEnd(l, u)), a;
}
function xE(t, e) {
  const n = t.getRootElement();
  if (n === null) return [];
  const r = n.getBoundingClientRect(), i = getComputedStyle(n), o = parseFloat(i.paddingLeft) + parseFloat(i.paddingRight), s = Array.from(e.getClientRects());
  let a, l = s.length;
  s.sort((c, u) => {
    const f = c.top - u.top;
    return Math.abs(f) <= 3 ? c.left - u.left : f;
  });
  for (let c = 0; c < l; c++) {
    const u = s[c], f = a && a.top <= u.top && a.top + a.height > u.top && a.left + a.width > u.left, d = u.width + o === r.width;
    f || d ? (s.splice(c--, 1), l--) : a = u;
  }
  return s;
}
function CE(t) {
  const e = {};
  if (!t) return e;
  const n = t.split(";");
  for (const r of n) if (r !== "") {
    const [i, o] = r.split(/:([^]+)/);
    i && o && (e[i.trim()] = o.trim());
  }
  return e;
}
function av(t, e) {
  const n = t.getStartEndPoints();
  if (e.isSelected(t) && !li(e) && n !== null) {
    const [r, i] = n, o = t.isBackward(), s = r.getNode(), a = i.getNode(), l = e.is(s), c = e.is(a);
    if (l || c) {
      const [u, f] = Uf(t), d = s.is(a), h = e.is(o ? a : s), g = e.is(o ? s : a);
      let m, b = 0;
      d ? (b = u > f ? f : u, m = u > f ? u : f) : h ? (b = o ? f : u, m = void 0) : g && (b = 0, m = o ? u : f), e.__text = e.__text.slice(b, m);
    }
  }
  return e;
}
function kE(t) {
  const e = t.getStyle(), n = CE(e);
  vE.set(e, n);
}
function EE(t, e) {
  const n = t.getFormatType(), r = t.getIndent();
  n !== e.getFormatType() && e.setFormat(n), r !== e.getIndent() && e.setIndent(r);
}
function NE(t, e, n = EE) {
  if (t === null) return;
  const r = t.getStartEndPoints(), i = /* @__PURE__ */ new Map();
  let o = null;
  if (r) {
    const [s, a] = r;
    o = Dl(), o.anchor.set(s.key, s.offset, s.type), o.focus.set(a.key, a.offset, a.type);
    const l = Gd(s.getNode(), nr), c = Gd(a.getNode(), nr);
    X(l) && i.set(l.getKey(), l), X(c) && i.set(c.getKey(), c);
  }
  for (const s of t.getNodes()) if (X(s) && nr(s)) i.set(s.getKey(), s);
  else if (r === null) {
    const a = Gd(s, nr);
    X(a) && i.set(a.getKey(), a);
  }
  for (const [s, a] of i) {
    const l = e();
    n(a, l), a.replace(l, !0), o && (s === o.anchor.key && o.anchor.set(l.getKey(), o.anchor.offset, o.anchor.type), s === o.focus.key && o.focus.set(l.getKey(), o.focus.offset, o.focus.type));
  }
  o && t.is(oe()) && sn(o);
}
function lv(t) {
  const e = t.anchor.getNode(), n = tn(e) ? e : e.getParentOrThrow(), r = Wu().getElementByKey(n.getKey());
  if (r === null) return !1;
  const i = r.ownerDocument.defaultView;
  return i === null ? !1 : i.getComputedStyle(r).writingMode === "vertical-rl";
}
function ru(t, e) {
  let n = lv(t) ? !e : e;
  cv(t) && (n = !n);
  const r = bi(t.focus, n ? "previous" : "next");
  if (ov(r)) return !1;
  for (const i of Lp(r)) {
    if (wr(i)) return !i.origin.isInline();
    if (!X(i.origin)) {
      if (Xe(i.origin)) return !0;
      break;
    }
  }
  return !1;
}
function SE(t, e, n, r) {
  t.modify(e ? "extend" : "move", n, r);
}
function cv(t) {
  const e = t.anchor.getNode();
  return (tn(e) ? e : e.getParentOrThrow()).getDirection() === "rtl";
}
function iu(t, e, n) {
  const r = cv(t);
  let i;
  i = lv(t) || r ? !n : n, SE(t, e, i, "character");
}
function Gd(t, e) {
  let n = t;
  for (; n !== null && n.getParent() !== null && !e(n); ) n = n.getParentOrThrow();
  return e(n) ? n : null;
}
function TE(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
const Il = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, AE = Il && "documentMode" in document ? document.documentMode : null, DE = Il && /Mac|iPod|iPhone|iPad/.test(navigator.platform), ME = Il && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);
!(!Il || !("InputEvent" in window) || AE) && "getTargetRanges" in new window.InputEvent("input");
function uv(...t) {
  const e = [];
  for (const n of t) if (n && typeof n == "string") for (const [r] of n.matchAll(/\S+/g)) e.push(r);
  return e;
}
function Ht(...t) {
  return () => {
    for (let e = t.length - 1; e >= 0; e--) t[e]();
    t.length = 0;
  };
}
const OE = Il, eh = DE, IE = ME;
function un(t, ...e) {
  const n = uv(...e);
  n.length > 0 && t.classList.add(...n);
}
function No(t, ...e) {
  const n = uv(...e);
  n.length > 0 && t.classList.remove(...n);
}
function Rl(t, e) {
  return Array.from(RE(t));
}
function RE(t, e) {
  return PE("next", t);
}
function PE(t, e, n) {
  const r = Ve(), i = e || r, o = X(i) ? _r(i, t) : $t(i, t), s = LE(i), a = function(c, u) {
    const f = ew($t(c, u));
    return f && f[0];
  }(i, t);
  let l = s;
  return Ku({ hasNext: (c) => c !== null, initial: o, map: (c) => ({ depth: l, node: c.origin }), step: (c) => {
    if (c.isSameNodeCaret(a)) return null;
    wr(c) && l++;
    const u = ew(c);
    return !u || u[0].isSameNodeCaret(a) ? null : (l += u[1], u[0]);
  } });
}
function LE(t) {
  let e = -1;
  for (let n = t; n !== null; n = n.getParent()) e++;
  return e;
}
function $E(t) {
  const e = xr(t, (n) => X(n) && !n.isInline());
  return X(e) || TE(4, t.__key), e;
}
const xr = (t, e) => {
  let n = t;
  for (; n !== Ve() && n != null; ) {
    if (e(n)) return n;
    n = n.getParent();
  }
  return null;
};
function dv(t, e, n, r) {
  const i = (o) => o instanceof e;
  return t.registerNodeTransform(e, (o) => {
    const s = ((a) => {
      const l = a.getChildren();
      for (let f = 0; f < l.length; f++) {
        const d = l[f];
        if (i(d)) return null;
      }
      let c = a, u = a;
      for (; c !== null; ) if (u = c, c = c.getParent(), i(c)) return { child: u, parent: c };
      return null;
    })(o);
    if (s !== null) {
      const { child: a, parent: l } = s;
      if (a.is(o)) {
        r(l, o);
        const c = a.getNextSiblings(), u = c.length;
        if (l.insertAfter(a), u !== 0) {
          const f = n(l);
          a.insertAfter(f);
          for (let d = 0; d < u; d++) f.append(c[d]);
        }
        l.canBeEmpty() || l.getChildrenSize() !== 0 || l.remove();
      }
    }
  });
}
function gi(t, e) {
  return t !== null && Object.getPrototypeOf(t).constructor.name === e.name;
}
let Jd = !(IE || !OE) && void 0;
function FE(t) {
  let e = 1;
  if (function() {
    if (Jd === void 0) {
      const n = document.createElement("div");
      n.style.cssText = "position: absolute; opacity: 0; width: 100px; left: -1000px;", document.body.appendChild(n);
      const r = n.getBoundingClientRect();
      n.style.setProperty("zoom", "2"), Jd = n.getBoundingClientRect().width === r.width, document.body.removeChild(n);
    }
    return Jd;
  }()) for (; t; ) e *= Number(window.getComputedStyle(t).getPropertyValue("zoom")), t = t.parentElement;
  return e;
}
function fv(t, e) {
  const n = [], r = Array.from(t).reverse();
  for (let i = r.pop(); i !== void 0; i = r.pop()) if (e(i)) n.push(i);
  else if (X(i)) for (const o of BE(i)) r.push(o);
  return n;
}
function BE(t) {
  return qE(_r(t, "previous"));
}
function qE(t) {
  return Ku({ hasNext: $o, initial: t.getAdjacentCaret(), map: (e) => e.origin.getLatest(), step: (e) => e.getAdjacentCaret() });
}
function Zm(t) {
  Gu($t(t, "next")).splice(1, t.getChildren());
}
function ew(t, e = "root") {
  let n = 0, r = t, i = sl(r);
  for (; i === null; ) {
    if (n--, i = r.getParentCaret(e), !i) return null;
    r = i, i = sl(r);
  }
  return i && [i, n];
}
var lc = { exports: {} }, Xd, tw;
function jE() {
  if (tw) return Xd;
  tw = 1;
  var t = -1, e = 1, n = 0;
  function r(k, I, S, P, T) {
    if (k === I)
      return k ? [[n, k]] : [];
    if (S != null) {
      var A = M(k, I, S);
      if (A)
        return A;
    }
    var B = a(k, I), V = k.substring(0, B);
    k = k.substring(B), I = I.substring(B), B = c(k, I);
    var J = k.substring(k.length - B);
    k = k.substring(0, k.length - B), I = I.substring(0, I.length - B);
    var H = i(k, I);
    return V && H.unshift([n, V]), J && H.push([n, J]), y(H, T), P && f(H), H;
  }
  function i(k, I) {
    var S;
    if (!k)
      return [[e, I]];
    if (!I)
      return [[t, k]];
    var P = k.length > I.length ? k : I, T = k.length > I.length ? I : k, A = P.indexOf(T);
    if (A !== -1)
      return S = [
        [e, P.substring(0, A)],
        [n, T],
        [e, P.substring(A + T.length)]
      ], k.length > I.length && (S[0][0] = S[2][0] = t), S;
    if (T.length === 1)
      return [
        [t, k],
        [e, I]
      ];
    var B = u(k, I);
    if (B) {
      var V = B[0], J = B[1], H = B[2], K = B[3], ne = B[4], re = r(V, H), te = r(J, K);
      return re.concat([[n, ne]], te);
    }
    return o(k, I);
  }
  function o(k, I) {
    for (var S = k.length, P = I.length, T = Math.ceil((S + P) / 2), A = T, B = 2 * T, V = new Array(B), J = new Array(B), H = 0; H < B; H++)
      V[H] = -1, J[H] = -1;
    V[A + 1] = 0, J[A + 1] = 0;
    for (var K = S - P, ne = K % 2 !== 0, re = 0, te = 0, Q = 0, ce = 0, pe = 0; pe < T; pe++) {
      for (var me = -pe + re; me <= pe - te; me += 2) {
        var ye = A + me, ve;
        me === -pe || me !== pe && V[ye - 1] < V[ye + 1] ? ve = V[ye + 1] : ve = V[ye - 1] + 1;
        for (var Ee = ve - me; ve < S && Ee < P && k.charAt(ve) === I.charAt(Ee); )
          ve++, Ee++;
        if (V[ye] = ve, ve > S)
          te += 2;
        else if (Ee > P)
          re += 2;
        else if (ne) {
          var de = A + K - me;
          if (de >= 0 && de < B && J[de] !== -1) {
            var Re = S - J[de];
            if (ve >= Re)
              return s(k, I, ve, Ee);
          }
        }
      }
      for (var He = -pe + Q; He <= pe - ce; He += 2) {
        var de = A + He, Re;
        He === -pe || He !== pe && J[de - 1] < J[de + 1] ? Re = J[de + 1] : Re = J[de - 1] + 1;
        for (var ae = Re - He; Re < S && ae < P && k.charAt(S - Re - 1) === I.charAt(P - ae - 1); )
          Re++, ae++;
        if (J[de] = Re, Re > S)
          ce += 2;
        else if (ae > P)
          Q += 2;
        else if (!ne) {
          var ye = A + K - He;
          if (ye >= 0 && ye < B && V[ye] !== -1) {
            var ve = V[ye], Ee = A + ve - ye;
            if (Re = S - Re, ve >= Re)
              return s(k, I, ve, Ee);
          }
        }
      }
    }
    return [
      [t, k],
      [e, I]
    ];
  }
  function s(k, I, S, P) {
    var T = k.substring(0, S), A = I.substring(0, P), B = k.substring(S), V = I.substring(P), J = r(T, A), H = r(B, V);
    return J.concat(H);
  }
  function a(k, I) {
    if (!k || !I || k.charAt(0) !== I.charAt(0))
      return 0;
    for (var S = 0, P = Math.min(k.length, I.length), T = P, A = 0; S < T; )
      k.substring(A, T) == I.substring(A, T) ? (S = T, A = S) : P = T, T = Math.floor((P - S) / 2 + S);
    return C(k.charCodeAt(T - 1)) && T--, T;
  }
  function l(k, I) {
    var S = k.length, P = I.length;
    if (S == 0 || P == 0)
      return 0;
    S > P ? k = k.substring(S - P) : S < P && (I = I.substring(0, S));
    var T = Math.min(S, P);
    if (k == I)
      return T;
    for (var A = 0, B = 1; ; ) {
      var V = k.substring(T - B), J = I.indexOf(V);
      if (J == -1)
        return A;
      B += J, (J == 0 || k.substring(T - B) == I.substring(0, B)) && (A = B, B++);
    }
  }
  function c(k, I) {
    if (!k || !I || k.slice(-1) !== I.slice(-1))
      return 0;
    for (var S = 0, P = Math.min(k.length, I.length), T = P, A = 0; S < T; )
      k.substring(k.length - T, k.length - A) == I.substring(I.length - T, I.length - A) ? (S = T, A = S) : P = T, T = Math.floor((P - S) / 2 + S);
    return D(k.charCodeAt(k.length - T)) && T--, T;
  }
  function u(k, I) {
    var S = k.length > I.length ? k : I, P = k.length > I.length ? I : k;
    if (S.length < 4 || P.length * 2 < S.length)
      return null;
    function T(te, Q, ce) {
      for (var pe = te.substring(ce, ce + Math.floor(te.length / 4)), me = -1, ye = "", ve, Ee, de, Re; (me = Q.indexOf(pe, me + 1)) !== -1; ) {
        var He = a(
          te.substring(ce),
          Q.substring(me)
        ), ae = c(
          te.substring(0, ce),
          Q.substring(0, me)
        );
        ye.length < ae + He && (ye = Q.substring(me - ae, me) + Q.substring(me, me + He), ve = te.substring(0, ce - ae), Ee = te.substring(ce + He), de = Q.substring(0, me - ae), Re = Q.substring(me + He));
      }
      return ye.length * 2 >= te.length ? [
        ve,
        Ee,
        de,
        Re,
        ye
      ] : null;
    }
    var A = T(
      S,
      P,
      Math.ceil(S.length / 4)
    ), B = T(
      S,
      P,
      Math.ceil(S.length / 2)
    ), V;
    if (!A && !B)
      return null;
    B ? A ? V = A[4].length > B[4].length ? A : B : V = B : V = A;
    var J, H, K, ne;
    k.length > I.length ? (J = V[0], H = V[1], K = V[2], ne = V[3]) : (K = V[0], ne = V[1], J = V[2], H = V[3]);
    var re = V[4];
    return [J, H, K, ne, re];
  }
  function f(k) {
    for (var I = !1, S = [], P = 0, T = null, A = 0, B = 0, V = 0, J = 0, H = 0; A < k.length; )
      k[A][0] == n ? (S[P++] = A, B = J, V = H, J = 0, H = 0, T = k[A][1]) : (k[A][0] == e ? J += k[A][1].length : H += k[A][1].length, T && T.length <= Math.max(B, V) && T.length <= Math.max(J, H) && (k.splice(S[P - 1], 0, [
        t,
        T
      ]), k[S[P - 1] + 1][0] = e, P--, P--, A = P > 0 ? S[P - 1] : -1, B = 0, V = 0, J = 0, H = 0, T = null, I = !0)), A++;
    for (I && y(k), _(k), A = 1; A < k.length; ) {
      if (k[A - 1][0] == t && k[A][0] == e) {
        var K = k[A - 1][1], ne = k[A][1], re = l(K, ne), te = l(ne, K);
        re >= te ? (re >= K.length / 2 || re >= ne.length / 2) && (k.splice(A, 0, [
          n,
          ne.substring(0, re)
        ]), k[A - 1][1] = K.substring(
          0,
          K.length - re
        ), k[A + 1][1] = ne.substring(re), A++) : (te >= K.length / 2 || te >= ne.length / 2) && (k.splice(A, 0, [
          n,
          K.substring(0, te)
        ]), k[A - 1][0] = e, k[A - 1][1] = ne.substring(
          0,
          ne.length - te
        ), k[A + 1][0] = t, k[A + 1][1] = K.substring(te), A++), A++;
      }
      A++;
    }
  }
  var d = /[^a-zA-Z0-9]/, h = /\s/, g = /[\r\n]/, m = /\n\r?\n$/, b = /^\r?\n\r?\n/;
  function _(k) {
    function I(te, Q) {
      if (!te || !Q)
        return 6;
      var ce = te.charAt(te.length - 1), pe = Q.charAt(0), me = ce.match(d), ye = pe.match(d), ve = me && ce.match(h), Ee = ye && pe.match(h), de = ve && ce.match(g), Re = Ee && pe.match(g), He = de && te.match(m), ae = Re && Q.match(b);
      return He || ae ? 5 : de || Re ? 4 : me && !ve && Ee ? 3 : ve || Ee ? 2 : me || ye ? 1 : 0;
    }
    for (var S = 1; S < k.length - 1; ) {
      if (k[S - 1][0] == n && k[S + 1][0] == n) {
        var P = k[S - 1][1], T = k[S][1], A = k[S + 1][1], B = c(P, T);
        if (B) {
          var V = T.substring(T.length - B);
          P = P.substring(0, P.length - B), T = V + T.substring(0, T.length - B), A = V + A;
        }
        for (var J = P, H = T, K = A, ne = I(P, T) + I(T, A); T.charAt(0) === A.charAt(0); ) {
          P += T.charAt(0), T = T.substring(1) + A.charAt(0), A = A.substring(1);
          var re = I(P, T) + I(T, A);
          re >= ne && (ne = re, J = P, H = T, K = A);
        }
        k[S - 1][1] != J && (J ? k[S - 1][1] = J : (k.splice(S - 1, 1), S--), k[S][1] = H, K ? k[S + 1][1] = K : (k.splice(S + 1, 1), S--));
      }
      S++;
    }
  }
  function y(k, I) {
    k.push([n, ""]);
    for (var S = 0, P = 0, T = 0, A = "", B = "", V; S < k.length; ) {
      if (S < k.length - 1 && !k[S][1]) {
        k.splice(S, 1);
        continue;
      }
      switch (k[S][0]) {
        case e:
          T++, B += k[S][1], S++;
          break;
        case t:
          P++, A += k[S][1], S++;
          break;
        case n:
          var J = S - T - P - 1;
          if (I) {
            if (J >= 0 && N(k[J][1])) {
              var H = k[J][1].slice(-1);
              if (k[J][1] = k[J][1].slice(
                0,
                -1
              ), A = H + A, B = H + B, !k[J][1]) {
                k.splice(J, 1), S--;
                var K = J - 1;
                k[K] && k[K][0] === e && (T++, B = k[K][1] + B, K--), k[K] && k[K][0] === t && (P++, A = k[K][1] + A, K--), J = K;
              }
            }
            if (R(k[S][1])) {
              var H = k[S][1].charAt(0);
              k[S][1] = k[S][1].slice(1), A += H, B += H;
            }
          }
          if (S < k.length - 1 && !k[S][1]) {
            k.splice(S, 1);
            break;
          }
          if (A.length > 0 || B.length > 0) {
            A.length > 0 && B.length > 0 && (V = a(B, A), V !== 0 && (J >= 0 ? k[J][1] += B.substring(
              0,
              V
            ) : (k.splice(0, 0, [
              n,
              B.substring(0, V)
            ]), S++), B = B.substring(V), A = A.substring(V)), V = c(B, A), V !== 0 && (k[S][1] = B.substring(B.length - V) + k[S][1], B = B.substring(
              0,
              B.length - V
            ), A = A.substring(
              0,
              A.length - V
            )));
            var ne = T + P;
            A.length === 0 && B.length === 0 ? (k.splice(S - ne, ne), S = S - ne) : A.length === 0 ? (k.splice(S - ne, ne, [e, B]), S = S - ne + 1) : B.length === 0 ? (k.splice(S - ne, ne, [t, A]), S = S - ne + 1) : (k.splice(
              S - ne,
              ne,
              [t, A],
              [e, B]
            ), S = S - ne + 2);
          }
          S !== 0 && k[S - 1][0] === n ? (k[S - 1][1] += k[S][1], k.splice(S, 1)) : S++, T = 0, P = 0, A = "", B = "";
          break;
      }
    }
    k[k.length - 1][1] === "" && k.pop();
    var re = !1;
    for (S = 1; S < k.length - 1; )
      k[S - 1][0] === n && k[S + 1][0] === n && (k[S][1].substring(
        k[S][1].length - k[S - 1][1].length
      ) === k[S - 1][1] ? (k[S][1] = k[S - 1][1] + k[S][1].substring(
        0,
        k[S][1].length - k[S - 1][1].length
      ), k[S + 1][1] = k[S - 1][1] + k[S + 1][1], k.splice(S - 1, 1), re = !0) : k[S][1].substring(0, k[S + 1][1].length) == k[S + 1][1] && (k[S - 1][1] += k[S + 1][1], k[S][1] = k[S][1].substring(k[S + 1][1].length) + k[S + 1][1], k.splice(S + 1, 1), re = !0)), S++;
    re && y(k, I);
  }
  function C(k) {
    return k >= 55296 && k <= 56319;
  }
  function D(k) {
    return k >= 56320 && k <= 57343;
  }
  function R(k) {
    return D(k.charCodeAt(0));
  }
  function N(k) {
    return C(k.charCodeAt(k.length - 1));
  }
  function L(k) {
    for (var I = [], S = 0; S < k.length; S++)
      k[S][1].length > 0 && I.push(k[S]);
    return I;
  }
  function O(k, I, S, P) {
    return N(k) || R(P) ? null : L([
      [n, k],
      [t, I],
      [e, S],
      [n, P]
    ]);
  }
  function M(k, I, S) {
    var P = typeof S == "number" ? { index: S, length: 0 } : S.oldRange, T = typeof S == "number" ? null : S.newRange, A = k.length, B = I.length;
    if (P.length === 0 && (T === null || T.length === 0)) {
      var V = P.index, J = k.slice(0, V), H = k.slice(V), K = T ? T.index : null;
      e: {
        var ne = V + B - A;
        if (K !== null && K !== ne || ne < 0 || ne > B)
          break e;
        var re = I.slice(0, ne), te = I.slice(ne);
        if (te !== H)
          break e;
        var Q = Math.min(V, ne), ce = J.slice(0, Q), pe = re.slice(0, Q);
        if (ce !== pe)
          break e;
        var me = J.slice(Q), ye = re.slice(Q);
        return O(ce, me, ye, H);
      }
      e: {
        if (K !== null && K !== V)
          break e;
        var ve = V, re = I.slice(0, ve), te = I.slice(ve);
        if (re !== J)
          break e;
        var Ee = Math.min(A - ve, B - ve), de = H.slice(H.length - Ee), Re = te.slice(te.length - Ee);
        if (de !== Re)
          break e;
        var me = H.slice(0, H.length - Ee), ye = te.slice(0, te.length - Ee);
        return O(J, me, ye, de);
      }
    }
    if (P.length > 0 && T && T.length === 0)
      e: {
        var ce = k.slice(0, P.index), de = k.slice(P.index + P.length), Q = ce.length, Ee = de.length;
        if (B < Q + Ee)
          break e;
        var pe = I.slice(0, Q), Re = I.slice(B - Ee);
        if (ce !== pe || de !== Re)
          break e;
        var me = k.slice(Q, A - Ee), ye = I.slice(Q, B - Ee);
        return O(ce, me, ye, de);
      }
    return null;
  }
  function q(k, I, S, P) {
    return r(k, I, S, P, !0);
  }
  return q.INSERT = e, q.DELETE = t, q.EQUAL = n, Xd = q, Xd;
}
var Fa = { exports: {} };
Fa.exports;
var nw;
function hv() {
  return nw || (nw = 1, function(t, e) {
    var n = 200, r = "__lodash_hash_undefined__", i = 9007199254740991, o = "[object Arguments]", s = "[object Array]", a = "[object Boolean]", l = "[object Date]", c = "[object Error]", u = "[object Function]", f = "[object GeneratorFunction]", d = "[object Map]", h = "[object Number]", g = "[object Object]", m = "[object Promise]", b = "[object RegExp]", _ = "[object Set]", y = "[object String]", C = "[object Symbol]", D = "[object WeakMap]", R = "[object ArrayBuffer]", N = "[object DataView]", L = "[object Float32Array]", O = "[object Float64Array]", M = "[object Int8Array]", q = "[object Int16Array]", k = "[object Int32Array]", I = "[object Uint8Array]", S = "[object Uint8ClampedArray]", P = "[object Uint16Array]", T = "[object Uint32Array]", A = /[\\^$.*+?()[\]{}|]/g, B = /\w*$/, V = /^\[object .+?Constructor\]$/, J = /^(?:0|[1-9]\d*)$/, H = {};
    H[o] = H[s] = H[R] = H[N] = H[a] = H[l] = H[L] = H[O] = H[M] = H[q] = H[k] = H[d] = H[h] = H[g] = H[b] = H[_] = H[y] = H[C] = H[I] = H[S] = H[P] = H[T] = !0, H[c] = H[u] = H[D] = !1;
    var K = typeof Ii == "object" && Ii && Ii.Object === Object && Ii, ne = typeof self == "object" && self && self.Object === Object && self, re = K || ne || Function("return this")(), te = e && !e.nodeType && e, Q = te && !0 && t && !t.nodeType && t, ce = Q && Q.exports === te;
    function pe(w, E) {
      return w.set(E[0], E[1]), w;
    }
    function me(w, E) {
      return w.add(E), w;
    }
    function ye(w, E) {
      for (var F = -1, ee = w ? w.length : 0; ++F < ee && E(w[F], F, w) !== !1; )
        ;
      return w;
    }
    function ve(w, E) {
      for (var F = -1, ee = E.length, De = w.length; ++F < ee; )
        w[De + F] = E[F];
      return w;
    }
    function Ee(w, E, F, ee) {
      for (var De = -1, _e = w ? w.length : 0; ++De < _e; )
        F = E(F, w[De], De, w);
      return F;
    }
    function de(w, E) {
      for (var F = -1, ee = Array(w); ++F < w; )
        ee[F] = E(F);
      return ee;
    }
    function Re(w, E) {
      return w == null ? void 0 : w[E];
    }
    function He(w) {
      var E = !1;
      if (w != null && typeof w.toString != "function")
        try {
          E = !!(w + "");
        } catch {
        }
      return E;
    }
    function ae(w) {
      var E = -1, F = Array(w.size);
      return w.forEach(function(ee, De) {
        F[++E] = [De, ee];
      }), F;
    }
    function Te(w, E) {
      return function(F) {
        return w(E(F));
      };
    }
    function Be(w) {
      var E = -1, F = Array(w.size);
      return w.forEach(function(ee) {
        F[++E] = ee;
      }), F;
    }
    var Ge = Array.prototype, rt = Function.prototype, vt = Object.prototype, wt = re["__core-js_shared__"], Et = function() {
      var w = /[^.]+$/.exec(wt && wt.keys && wt.keys.IE_PROTO || "");
      return w ? "Symbol(src)_1." + w : "";
    }(), $e = rt.toString, Dt = vt.hasOwnProperty, ct = vt.toString, lr = RegExp(
      "^" + $e.call(Dt).replace(A, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), Pn = ce ? re.Buffer : void 0, kn = re.Symbol, Ln = re.Uint8Array, Ce = Te(Object.getPrototypeOf, Object), Qe = Object.create, Mt = vt.propertyIsEnumerable, Bt = Ge.splice, $n = Object.getOwnPropertySymbols, Fn = Pn ? Pn.isBuffer : void 0, cr = Te(Object.keys, Object), Bn = hr(re, "DataView"), qn = hr(re, "Map"), Xt = hr(re, "Promise"), jn = hr(re, "Set"), Un = hr(re, "WeakMap"), En = hr(Object, "create"), Dr = wn(Bn), Ze = wn(qn), bt = wn(Xt), gn = wn(jn), mn = wn(Un), ur = kn ? kn.prototype : void 0, Ti = ur ? ur.valueOf : void 0;
    function Qn(w) {
      var E = -1, F = w ? w.length : 0;
      for (this.clear(); ++E < F; ) {
        var ee = w[E];
        this.set(ee[0], ee[1]);
      }
    }
    function v() {
      this.__data__ = En ? En(null) : {};
    }
    function x(w) {
      return this.has(w) && delete this.__data__[w];
    }
    function $(w) {
      var E = this.__data__;
      if (En) {
        var F = E[w];
        return F === r ? void 0 : F;
      }
      return Dt.call(E, w) ? E[w] : void 0;
    }
    function W(w) {
      var E = this.__data__;
      return En ? E[w] !== void 0 : Dt.call(E, w);
    }
    function se(w, E) {
      var F = this.__data__;
      return F[w] = En && E === void 0 ? r : E, this;
    }
    Qn.prototype.clear = v, Qn.prototype.delete = x, Qn.prototype.get = $, Qn.prototype.has = W, Qn.prototype.set = se;
    function he(w) {
      var E = -1, F = w ? w.length : 0;
      for (this.clear(); ++E < F; ) {
        var ee = w[E];
        this.set(ee[0], ee[1]);
      }
    }
    function Fe() {
      this.__data__ = [];
    }
    function _t(w) {
      var E = this.__data__, F = as(E, w);
      if (F < 0)
        return !1;
      var ee = E.length - 1;
      return F == ee ? E.pop() : Bt.call(E, F, 1), !0;
    }
    function Nt(w) {
      var E = this.__data__, F = as(E, w);
      return F < 0 ? void 0 : E[F][1];
    }
    function Yt(w) {
      return as(this.__data__, w) > -1;
    }
    function Ot(w, E) {
      var F = this.__data__, ee = as(F, w);
      return ee < 0 ? F.push([w, E]) : F[ee][1] = E, this;
    }
    he.prototype.clear = Fe, he.prototype.delete = _t, he.prototype.get = Nt, he.prototype.has = Yt, he.prototype.set = Ot;
    function gt(w) {
      var E = -1, F = w ? w.length : 0;
      for (this.clear(); ++E < F; ) {
        var ee = w[E];
        this.set(ee[0], ee[1]);
      }
    }
    function zn() {
      this.__data__ = {
        hash: new Qn(),
        map: new (qn || he)(),
        string: new Qn()
      };
    }
    function an(w) {
      return lo(this, w).delete(w);
    }
    function dr(w) {
      return lo(this, w).get(w);
    }
    function Nn(w) {
      return lo(this, w).has(w);
    }
    function fr(w, E) {
      return lo(this, w).set(w, E), this;
    }
    gt.prototype.clear = zn, gt.prototype.delete = an, gt.prototype.get = dr, gt.prototype.has = Nn, gt.prototype.set = fr;
    function St(w) {
      this.__data__ = new he(w);
    }
    function so() {
      this.__data__ = new he();
    }
    function Tt(w) {
      return this.__data__.delete(w);
    }
    function os(w) {
      return this.__data__.get(w);
    }
    function Mr(w) {
      return this.__data__.has(w);
    }
    function ud(w, E) {
      var F = this.__data__;
      if (F instanceof he) {
        var ee = F.__data__;
        if (!qn || ee.length < n - 1)
          return ee.push([w, E]), this;
        F = this.__data__ = new gt(ee);
      }
      return F.set(w, E), this;
    }
    St.prototype.clear = so, St.prototype.delete = Tt, St.prototype.get = os, St.prototype.has = Mr, St.prototype.set = ud;
    function ss(w, E) {
      var F = xa(w) || cs(w) ? de(w.length, String) : [], ee = F.length, De = !!ee;
      for (var _e in w)
        Dt.call(w, _e) && !(De && (_e == "length" || kd(_e, ee))) && F.push(_e);
      return F;
    }
    function Hl(w, E, F) {
      var ee = w[E];
      (!(Dt.call(w, E) && Xl(ee, F)) || F === void 0 && !(E in w)) && (w[E] = F);
    }
    function as(w, E) {
      for (var F = w.length; F--; )
        if (Xl(w[F][0], E))
          return F;
      return -1;
    }
    function Or(w, E) {
      return w && _a(E, ka(E), w);
    }
    function ya(w, E, F, ee, De, _e, Je) {
      var We;
      if (ee && (We = _e ? ee(w, De, _e, Je) : ee(w)), We !== void 0)
        return We;
      if (!Rr(w))
        return w;
      var At = xa(w);
      if (At) {
        if (We = xd(w), !E)
          return yd(w, We);
      } else {
        var Ye = ni(w), ln = Ye == u || Ye == f;
        if (Yl(w))
          return ls(w, E);
        if (Ye == g || Ye == o || ln && !_e) {
          if (He(w))
            return _e ? w : {};
          if (We = Ir(ln ? {} : w), !E)
            return vd(w, Or(We, w));
        } else {
          if (!H[Ye])
            return _e ? w : {};
          We = Cd(w, Ye, ya, E);
        }
      }
      Je || (Je = new St());
      var Sn = Je.get(w);
      if (Sn)
        return Sn;
      if (Je.set(w, We), !At)
        var It = F ? _d(w) : ka(w);
      return ye(It || w, function(cn, Qt) {
        It && (Qt = cn, cn = w[Qt]), Hl(We, Qt, ya(cn, E, F, ee, Qt, w, Je));
      }), We;
    }
    function dd(w) {
      return Rr(w) ? Qe(w) : {};
    }
    function fd(w, E, F) {
      var ee = E(w);
      return xa(w) ? ee : ve(ee, F(w));
    }
    function hd(w) {
      return ct.call(w);
    }
    function pd(w) {
      if (!Rr(w) || Nd(w))
        return !1;
      var E = Ca(w) || He(w) ? lr : V;
      return E.test(wn(w));
    }
    function gd(w) {
      if (!Gl(w))
        return cr(w);
      var E = [];
      for (var F in Object(w))
        Dt.call(w, F) && F != "constructor" && E.push(F);
      return E;
    }
    function ls(w, E) {
      if (E)
        return w.slice();
      var F = new w.constructor(w.length);
      return w.copy(F), F;
    }
    function va(w) {
      var E = new w.constructor(w.byteLength);
      return new Ln(E).set(new Ln(w)), E;
    }
    function ao(w, E) {
      var F = E ? va(w.buffer) : w.buffer;
      return new w.constructor(F, w.byteOffset, w.byteLength);
    }
    function Wl(w, E, F) {
      var ee = E ? F(ae(w), !0) : ae(w);
      return Ee(ee, pe, new w.constructor());
    }
    function Kl(w) {
      var E = new w.constructor(w.source, B.exec(w));
      return E.lastIndex = w.lastIndex, E;
    }
    function md(w, E, F) {
      var ee = E ? F(Be(w), !0) : Be(w);
      return Ee(ee, me, new w.constructor());
    }
    function wd(w) {
      return Ti ? Object(Ti.call(w)) : {};
    }
    function bd(w, E) {
      var F = E ? va(w.buffer) : w.buffer;
      return new w.constructor(F, w.byteOffset, w.length);
    }
    function yd(w, E) {
      var F = -1, ee = w.length;
      for (E || (E = Array(ee)); ++F < ee; )
        E[F] = w[F];
      return E;
    }
    function _a(w, E, F, ee) {
      F || (F = {});
      for (var De = -1, _e = E.length; ++De < _e; ) {
        var Je = E[De], We = void 0;
        Hl(F, Je, We === void 0 ? w[Je] : We);
      }
      return F;
    }
    function vd(w, E) {
      return _a(w, ti(w), E);
    }
    function _d(w) {
      return fd(w, ka, ti);
    }
    function lo(w, E) {
      var F = w.__data__;
      return Ed(E) ? F[typeof E == "string" ? "string" : "hash"] : F.map;
    }
    function hr(w, E) {
      var F = Re(w, E);
      return pd(F) ? F : void 0;
    }
    var ti = $n ? Te($n, Object) : Td, ni = hd;
    (Bn && ni(new Bn(new ArrayBuffer(1))) != N || qn && ni(new qn()) != d || Xt && ni(Xt.resolve()) != m || jn && ni(new jn()) != _ || Un && ni(new Un()) != D) && (ni = function(w) {
      var E = ct.call(w), F = E == g ? w.constructor : void 0, ee = F ? wn(F) : void 0;
      if (ee)
        switch (ee) {
          case Dr:
            return N;
          case Ze:
            return d;
          case bt:
            return m;
          case gn:
            return _;
          case mn:
            return D;
        }
      return E;
    });
    function xd(w) {
      var E = w.length, F = w.constructor(E);
      return E && typeof w[0] == "string" && Dt.call(w, "index") && (F.index = w.index, F.input = w.input), F;
    }
    function Ir(w) {
      return typeof w.constructor == "function" && !Gl(w) ? dd(Ce(w)) : {};
    }
    function Cd(w, E, F, ee) {
      var De = w.constructor;
      switch (E) {
        case R:
          return va(w);
        case a:
        case l:
          return new De(+w);
        case N:
          return ao(w, ee);
        case L:
        case O:
        case M:
        case q:
        case k:
        case I:
        case S:
        case P:
        case T:
          return bd(w, ee);
        case d:
          return Wl(w, ee, F);
        case h:
        case y:
          return new De(w);
        case b:
          return Kl(w);
        case _:
          return md(w, ee, F);
        case C:
          return wd(w);
      }
    }
    function kd(w, E) {
      return E = E ?? i, !!E && (typeof w == "number" || J.test(w)) && w > -1 && w % 1 == 0 && w < E;
    }
    function Ed(w) {
      var E = typeof w;
      return E == "string" || E == "number" || E == "symbol" || E == "boolean" ? w !== "__proto__" : w === null;
    }
    function Nd(w) {
      return !!Et && Et in w;
    }
    function Gl(w) {
      var E = w && w.constructor, F = typeof E == "function" && E.prototype || vt;
      return w === F;
    }
    function wn(w) {
      if (w != null) {
        try {
          return $e.call(w);
        } catch {
        }
        try {
          return w + "";
        } catch {
        }
      }
      return "";
    }
    function Jl(w) {
      return ya(w, !0, !0);
    }
    function Xl(w, E) {
      return w === E || w !== w && E !== E;
    }
    function cs(w) {
      return Sd(w) && Dt.call(w, "callee") && (!Mt.call(w, "callee") || ct.call(w) == o);
    }
    var xa = Array.isArray;
    function us(w) {
      return w != null && Ql(w.length) && !Ca(w);
    }
    function Sd(w) {
      return Zl(w) && us(w);
    }
    var Yl = Fn || Ad;
    function Ca(w) {
      var E = Rr(w) ? ct.call(w) : "";
      return E == u || E == f;
    }
    function Ql(w) {
      return typeof w == "number" && w > -1 && w % 1 == 0 && w <= i;
    }
    function Rr(w) {
      var E = typeof w;
      return !!w && (E == "object" || E == "function");
    }
    function Zl(w) {
      return !!w && typeof w == "object";
    }
    function ka(w) {
      return us(w) ? ss(w) : gd(w);
    }
    function Td() {
      return [];
    }
    function Ad() {
      return !1;
    }
    t.exports = Jl;
  }(Fa, Fa.exports)), Fa.exports;
}
var Ba = { exports: {} };
Ba.exports;
var rw;
function pv() {
  return rw || (rw = 1, function(t, e) {
    var n = 200, r = "__lodash_hash_undefined__", i = 1, o = 2, s = 9007199254740991, a = "[object Arguments]", l = "[object Array]", c = "[object AsyncFunction]", u = "[object Boolean]", f = "[object Date]", d = "[object Error]", h = "[object Function]", g = "[object GeneratorFunction]", m = "[object Map]", b = "[object Number]", _ = "[object Null]", y = "[object Object]", C = "[object Promise]", D = "[object Proxy]", R = "[object RegExp]", N = "[object Set]", L = "[object String]", O = "[object Symbol]", M = "[object Undefined]", q = "[object WeakMap]", k = "[object ArrayBuffer]", I = "[object DataView]", S = "[object Float32Array]", P = "[object Float64Array]", T = "[object Int8Array]", A = "[object Int16Array]", B = "[object Int32Array]", V = "[object Uint8Array]", J = "[object Uint8ClampedArray]", H = "[object Uint16Array]", K = "[object Uint32Array]", ne = /[\\^$.*+?()[\]{}|]/g, re = /^\[object .+?Constructor\]$/, te = /^(?:0|[1-9]\d*)$/, Q = {};
    Q[S] = Q[P] = Q[T] = Q[A] = Q[B] = Q[V] = Q[J] = Q[H] = Q[K] = !0, Q[a] = Q[l] = Q[k] = Q[u] = Q[I] = Q[f] = Q[d] = Q[h] = Q[m] = Q[b] = Q[y] = Q[R] = Q[N] = Q[L] = Q[q] = !1;
    var ce = typeof Ii == "object" && Ii && Ii.Object === Object && Ii, pe = typeof self == "object" && self && self.Object === Object && self, me = ce || pe || Function("return this")(), ye = e && !e.nodeType && e, ve = ye && !0 && t && !t.nodeType && t, Ee = ve && ve.exports === ye, de = Ee && ce.process, Re = function() {
      try {
        return de && de.binding && de.binding("util");
      } catch {
      }
    }(), He = Re && Re.isTypedArray;
    function ae(w, E) {
      for (var F = -1, ee = w == null ? 0 : w.length, De = 0, _e = []; ++F < ee; ) {
        var Je = w[F];
        E(Je, F, w) && (_e[De++] = Je);
      }
      return _e;
    }
    function Te(w, E) {
      for (var F = -1, ee = E.length, De = w.length; ++F < ee; )
        w[De + F] = E[F];
      return w;
    }
    function Be(w, E) {
      for (var F = -1, ee = w == null ? 0 : w.length; ++F < ee; )
        if (E(w[F], F, w))
          return !0;
      return !1;
    }
    function Ge(w, E) {
      for (var F = -1, ee = Array(w); ++F < w; )
        ee[F] = E(F);
      return ee;
    }
    function rt(w) {
      return function(E) {
        return w(E);
      };
    }
    function vt(w, E) {
      return w.has(E);
    }
    function wt(w, E) {
      return w == null ? void 0 : w[E];
    }
    function Et(w) {
      var E = -1, F = Array(w.size);
      return w.forEach(function(ee, De) {
        F[++E] = [De, ee];
      }), F;
    }
    function $e(w, E) {
      return function(F) {
        return w(E(F));
      };
    }
    function Dt(w) {
      var E = -1, F = Array(w.size);
      return w.forEach(function(ee) {
        F[++E] = ee;
      }), F;
    }
    var ct = Array.prototype, lr = Function.prototype, Pn = Object.prototype, kn = me["__core-js_shared__"], Ln = lr.toString, Ce = Pn.hasOwnProperty, Qe = function() {
      var w = /[^.]+$/.exec(kn && kn.keys && kn.keys.IE_PROTO || "");
      return w ? "Symbol(src)_1." + w : "";
    }(), Mt = Pn.toString, Bt = RegExp(
      "^" + Ln.call(Ce).replace(ne, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), $n = Ee ? me.Buffer : void 0, Fn = me.Symbol, cr = me.Uint8Array, Bn = Pn.propertyIsEnumerable, qn = ct.splice, Xt = Fn ? Fn.toStringTag : void 0, jn = Object.getOwnPropertySymbols, Un = $n ? $n.isBuffer : void 0, En = $e(Object.keys, Object), Dr = ti(me, "DataView"), Ze = ti(me, "Map"), bt = ti(me, "Promise"), gn = ti(me, "Set"), mn = ti(me, "WeakMap"), ur = ti(Object, "create"), Ti = wn(Dr), Qn = wn(Ze), v = wn(bt), x = wn(gn), $ = wn(mn), W = Fn ? Fn.prototype : void 0, se = W ? W.valueOf : void 0;
    function he(w) {
      var E = -1, F = w == null ? 0 : w.length;
      for (this.clear(); ++E < F; ) {
        var ee = w[E];
        this.set(ee[0], ee[1]);
      }
    }
    function Fe() {
      this.__data__ = ur ? ur(null) : {}, this.size = 0;
    }
    function _t(w) {
      var E = this.has(w) && delete this.__data__[w];
      return this.size -= E ? 1 : 0, E;
    }
    function Nt(w) {
      var E = this.__data__;
      if (ur) {
        var F = E[w];
        return F === r ? void 0 : F;
      }
      return Ce.call(E, w) ? E[w] : void 0;
    }
    function Yt(w) {
      var E = this.__data__;
      return ur ? E[w] !== void 0 : Ce.call(E, w);
    }
    function Ot(w, E) {
      var F = this.__data__;
      return this.size += this.has(w) ? 0 : 1, F[w] = ur && E === void 0 ? r : E, this;
    }
    he.prototype.clear = Fe, he.prototype.delete = _t, he.prototype.get = Nt, he.prototype.has = Yt, he.prototype.set = Ot;
    function gt(w) {
      var E = -1, F = w == null ? 0 : w.length;
      for (this.clear(); ++E < F; ) {
        var ee = w[E];
        this.set(ee[0], ee[1]);
      }
    }
    function zn() {
      this.__data__ = [], this.size = 0;
    }
    function an(w) {
      var E = this.__data__, F = ls(E, w);
      if (F < 0)
        return !1;
      var ee = E.length - 1;
      return F == ee ? E.pop() : qn.call(E, F, 1), --this.size, !0;
    }
    function dr(w) {
      var E = this.__data__, F = ls(E, w);
      return F < 0 ? void 0 : E[F][1];
    }
    function Nn(w) {
      return ls(this.__data__, w) > -1;
    }
    function fr(w, E) {
      var F = this.__data__, ee = ls(F, w);
      return ee < 0 ? (++this.size, F.push([w, E])) : F[ee][1] = E, this;
    }
    gt.prototype.clear = zn, gt.prototype.delete = an, gt.prototype.get = dr, gt.prototype.has = Nn, gt.prototype.set = fr;
    function St(w) {
      var E = -1, F = w == null ? 0 : w.length;
      for (this.clear(); ++E < F; ) {
        var ee = w[E];
        this.set(ee[0], ee[1]);
      }
    }
    function so() {
      this.size = 0, this.__data__ = {
        hash: new he(),
        map: new (Ze || gt)(),
        string: new he()
      };
    }
    function Tt(w) {
      var E = hr(this, w).delete(w);
      return this.size -= E ? 1 : 0, E;
    }
    function os(w) {
      return hr(this, w).get(w);
    }
    function Mr(w) {
      return hr(this, w).has(w);
    }
    function ud(w, E) {
      var F = hr(this, w), ee = F.size;
      return F.set(w, E), this.size += F.size == ee ? 0 : 1, this;
    }
    St.prototype.clear = so, St.prototype.delete = Tt, St.prototype.get = os, St.prototype.has = Mr, St.prototype.set = ud;
    function ss(w) {
      var E = -1, F = w == null ? 0 : w.length;
      for (this.__data__ = new St(); ++E < F; )
        this.add(w[E]);
    }
    function Hl(w) {
      return this.__data__.set(w, r), this;
    }
    function as(w) {
      return this.__data__.has(w);
    }
    ss.prototype.add = ss.prototype.push = Hl, ss.prototype.has = as;
    function Or(w) {
      var E = this.__data__ = new gt(w);
      this.size = E.size;
    }
    function ya() {
      this.__data__ = new gt(), this.size = 0;
    }
    function dd(w) {
      var E = this.__data__, F = E.delete(w);
      return this.size = E.size, F;
    }
    function fd(w) {
      return this.__data__.get(w);
    }
    function hd(w) {
      return this.__data__.has(w);
    }
    function pd(w, E) {
      var F = this.__data__;
      if (F instanceof gt) {
        var ee = F.__data__;
        if (!Ze || ee.length < n - 1)
          return ee.push([w, E]), this.size = ++F.size, this;
        F = this.__data__ = new St(ee);
      }
      return F.set(w, E), this.size = F.size, this;
    }
    Or.prototype.clear = ya, Or.prototype.delete = dd, Or.prototype.get = fd, Or.prototype.has = hd, Or.prototype.set = pd;
    function gd(w, E) {
      var F = cs(w), ee = !F && Xl(w), De = !F && !ee && us(w), _e = !F && !ee && !De && Zl(w), Je = F || ee || De || _e, We = Je ? Ge(w.length, String) : [], At = We.length;
      for (var Ye in w)
        Ce.call(w, Ye) && !(Je && // Safari 9 has enumerable `arguments.length` in strict mode.
        (Ye == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        De && (Ye == "offset" || Ye == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        _e && (Ye == "buffer" || Ye == "byteLength" || Ye == "byteOffset") || // Skip index properties.
        Cd(Ye, At))) && We.push(Ye);
      return We;
    }
    function ls(w, E) {
      for (var F = w.length; F--; )
        if (Jl(w[F][0], E))
          return F;
      return -1;
    }
    function va(w, E, F) {
      var ee = E(w);
      return cs(w) ? ee : Te(ee, F(w));
    }
    function ao(w) {
      return w == null ? w === void 0 ? M : _ : Xt && Xt in Object(w) ? ni(w) : Gl(w);
    }
    function Wl(w) {
      return Rr(w) && ao(w) == a;
    }
    function Kl(w, E, F, ee, De) {
      return w === E ? !0 : w == null || E == null || !Rr(w) && !Rr(E) ? w !== w && E !== E : md(w, E, F, ee, Kl, De);
    }
    function md(w, E, F, ee, De, _e) {
      var Je = cs(w), We = cs(E), At = Je ? l : Ir(w), Ye = We ? l : Ir(E);
      At = At == a ? y : At, Ye = Ye == a ? y : Ye;
      var ln = At == y, Sn = Ye == y, It = At == Ye;
      if (It && us(w)) {
        if (!us(E))
          return !1;
        Je = !0, ln = !1;
      }
      if (It && !ln)
        return _e || (_e = new Or()), Je || Zl(w) ? _a(w, E, F, ee, De, _e) : vd(w, E, At, F, ee, De, _e);
      if (!(F & i)) {
        var cn = ln && Ce.call(w, "__wrapped__"), Qt = Sn && Ce.call(E, "__wrapped__");
        if (cn || Qt) {
          var Ai = cn ? w.value() : w, ri = Qt ? E.value() : E;
          return _e || (_e = new Or()), De(Ai, ri, F, ee, _e);
        }
      }
      return It ? (_e || (_e = new Or()), _d(w, E, F, ee, De, _e)) : !1;
    }
    function wd(w) {
      if (!Ql(w) || Ed(w))
        return !1;
      var E = Yl(w) ? Bt : re;
      return E.test(wn(w));
    }
    function bd(w) {
      return Rr(w) && Ca(w.length) && !!Q[ao(w)];
    }
    function yd(w) {
      if (!Nd(w))
        return En(w);
      var E = [];
      for (var F in Object(w))
        Ce.call(w, F) && F != "constructor" && E.push(F);
      return E;
    }
    function _a(w, E, F, ee, De, _e) {
      var Je = F & i, We = w.length, At = E.length;
      if (We != At && !(Je && At > We))
        return !1;
      var Ye = _e.get(w);
      if (Ye && _e.get(E))
        return Ye == E;
      var ln = -1, Sn = !0, It = F & o ? new ss() : void 0;
      for (_e.set(w, E), _e.set(E, w); ++ln < We; ) {
        var cn = w[ln], Qt = E[ln];
        if (ee)
          var Ai = Je ? ee(Qt, cn, ln, E, w, _e) : ee(cn, Qt, ln, w, E, _e);
        if (Ai !== void 0) {
          if (Ai)
            continue;
          Sn = !1;
          break;
        }
        if (It) {
          if (!Be(E, function(ri, co) {
            if (!vt(It, co) && (cn === ri || De(cn, ri, F, ee, _e)))
              return It.push(co);
          })) {
            Sn = !1;
            break;
          }
        } else if (!(cn === Qt || De(cn, Qt, F, ee, _e))) {
          Sn = !1;
          break;
        }
      }
      return _e.delete(w), _e.delete(E), Sn;
    }
    function vd(w, E, F, ee, De, _e, Je) {
      switch (F) {
        case I:
          if (w.byteLength != E.byteLength || w.byteOffset != E.byteOffset)
            return !1;
          w = w.buffer, E = E.buffer;
        case k:
          return !(w.byteLength != E.byteLength || !_e(new cr(w), new cr(E)));
        case u:
        case f:
        case b:
          return Jl(+w, +E);
        case d:
          return w.name == E.name && w.message == E.message;
        case R:
        case L:
          return w == E + "";
        case m:
          var We = Et;
        case N:
          var At = ee & i;
          if (We || (We = Dt), w.size != E.size && !At)
            return !1;
          var Ye = Je.get(w);
          if (Ye)
            return Ye == E;
          ee |= o, Je.set(w, E);
          var ln = _a(We(w), We(E), ee, De, _e, Je);
          return Je.delete(w), ln;
        case O:
          if (se)
            return se.call(w) == se.call(E);
      }
      return !1;
    }
    function _d(w, E, F, ee, De, _e) {
      var Je = F & i, We = lo(w), At = We.length, Ye = lo(E), ln = Ye.length;
      if (At != ln && !Je)
        return !1;
      for (var Sn = At; Sn--; ) {
        var It = We[Sn];
        if (!(Je ? It in E : Ce.call(E, It)))
          return !1;
      }
      var cn = _e.get(w);
      if (cn && _e.get(E))
        return cn == E;
      var Qt = !0;
      _e.set(w, E), _e.set(E, w);
      for (var Ai = Je; ++Sn < At; ) {
        It = We[Sn];
        var ri = w[It], co = E[It];
        if (ee)
          var Fg = Je ? ee(co, ri, It, E, w, _e) : ee(ri, co, It, w, E, _e);
        if (!(Fg === void 0 ? ri === co || De(ri, co, F, ee, _e) : Fg)) {
          Qt = !1;
          break;
        }
        Ai || (Ai = It == "constructor");
      }
      if (Qt && !Ai) {
        var ec = w.constructor, tc = E.constructor;
        ec != tc && "constructor" in w && "constructor" in E && !(typeof ec == "function" && ec instanceof ec && typeof tc == "function" && tc instanceof tc) && (Qt = !1);
      }
      return _e.delete(w), _e.delete(E), Qt;
    }
    function lo(w) {
      return va(w, ka, xd);
    }
    function hr(w, E) {
      var F = w.__data__;
      return kd(E) ? F[typeof E == "string" ? "string" : "hash"] : F.map;
    }
    function ti(w, E) {
      var F = wt(w, E);
      return wd(F) ? F : void 0;
    }
    function ni(w) {
      var E = Ce.call(w, Xt), F = w[Xt];
      try {
        w[Xt] = void 0;
        var ee = !0;
      } catch {
      }
      var De = Mt.call(w);
      return ee && (E ? w[Xt] = F : delete w[Xt]), De;
    }
    var xd = jn ? function(w) {
      return w == null ? [] : (w = Object(w), ae(jn(w), function(E) {
        return Bn.call(w, E);
      }));
    } : Td, Ir = ao;
    (Dr && Ir(new Dr(new ArrayBuffer(1))) != I || Ze && Ir(new Ze()) != m || bt && Ir(bt.resolve()) != C || gn && Ir(new gn()) != N || mn && Ir(new mn()) != q) && (Ir = function(w) {
      var E = ao(w), F = E == y ? w.constructor : void 0, ee = F ? wn(F) : "";
      if (ee)
        switch (ee) {
          case Ti:
            return I;
          case Qn:
            return m;
          case v:
            return C;
          case x:
            return N;
          case $:
            return q;
        }
      return E;
    });
    function Cd(w, E) {
      return E = E ?? s, !!E && (typeof w == "number" || te.test(w)) && w > -1 && w % 1 == 0 && w < E;
    }
    function kd(w) {
      var E = typeof w;
      return E == "string" || E == "number" || E == "symbol" || E == "boolean" ? w !== "__proto__" : w === null;
    }
    function Ed(w) {
      return !!Qe && Qe in w;
    }
    function Nd(w) {
      var E = w && w.constructor, F = typeof E == "function" && E.prototype || Pn;
      return w === F;
    }
    function Gl(w) {
      return Mt.call(w);
    }
    function wn(w) {
      if (w != null) {
        try {
          return Ln.call(w);
        } catch {
        }
        try {
          return w + "";
        } catch {
        }
      }
      return "";
    }
    function Jl(w, E) {
      return w === E || w !== w && E !== E;
    }
    var Xl = Wl(/* @__PURE__ */ function() {
      return arguments;
    }()) ? Wl : function(w) {
      return Rr(w) && Ce.call(w, "callee") && !Bn.call(w, "callee");
    }, cs = Array.isArray;
    function xa(w) {
      return w != null && Ca(w.length) && !Yl(w);
    }
    var us = Un || Ad;
    function Sd(w, E) {
      return Kl(w, E);
    }
    function Yl(w) {
      if (!Ql(w))
        return !1;
      var E = ao(w);
      return E == h || E == g || E == c || E == D;
    }
    function Ca(w) {
      return typeof w == "number" && w > -1 && w % 1 == 0 && w <= s;
    }
    function Ql(w) {
      var E = typeof w;
      return w != null && (E == "object" || E == "function");
    }
    function Rr(w) {
      return w != null && typeof w == "object";
    }
    var Zl = He ? rt(He) : bd;
    function ka(w) {
      return xa(w) ? gd(w) : yd(w);
    }
    function Td() {
      return [];
    }
    function Ad() {
      return !1;
    }
    t.exports = Sd;
  }(Ba, Ba.exports)), Ba.exports;
}
var cc = {}, iw;
function UE() {
  if (iw) return cc;
  iw = 1, Object.defineProperty(cc, "__esModule", { value: !0 });
  const t = hv(), e = pv();
  var n;
  return function(r) {
    function i(l = {}, c = {}, u = !1) {
      typeof l != "object" && (l = {}), typeof c != "object" && (c = {});
      let f = t(c);
      u || (f = Object.keys(f).reduce((d, h) => (f[h] != null && (d[h] = f[h]), d), {}));
      for (const d in l)
        l[d] !== void 0 && c[d] === void 0 && (f[d] = l[d]);
      return Object.keys(f).length > 0 ? f : void 0;
    }
    r.compose = i;
    function o(l = {}, c = {}) {
      typeof l != "object" && (l = {}), typeof c != "object" && (c = {});
      const u = Object.keys(l).concat(Object.keys(c)).reduce((f, d) => (e(l[d], c[d]) || (f[d] = c[d] === void 0 ? null : c[d]), f), {});
      return Object.keys(u).length > 0 ? u : void 0;
    }
    r.diff = o;
    function s(l = {}, c = {}) {
      l = l || {};
      const u = Object.keys(c).reduce((f, d) => (c[d] !== l[d] && l[d] !== void 0 && (f[d] = c[d]), f), {});
      return Object.keys(l).reduce((f, d) => (l[d] !== c[d] && c[d] === void 0 && (f[d] = null), f), u);
    }
    r.invert = s;
    function a(l, c, u = !1) {
      if (typeof l != "object")
        return c;
      if (typeof c != "object")
        return;
      if (!u)
        return c;
      const f = Object.keys(c).reduce((d, h) => (l[h] === void 0 && (d[h] = c[h]), d), {});
      return Object.keys(f).length > 0 ? f : void 0;
    }
    r.transform = a;
  }(n || (n = {})), cc.default = n, cc;
}
var uc = {}, ow;
function gv() {
  if (ow) return uc;
  ow = 1, Object.defineProperty(uc, "__esModule", { value: !0 });
  var t;
  return function(e) {
    function n(r) {
      return typeof r.delete == "number" ? r.delete : typeof r.retain == "number" ? r.retain : typeof r.retain == "object" && r.retain !== null ? 1 : typeof r.insert == "string" ? r.insert.length : 1;
    }
    e.length = n;
  }(t || (t = {})), uc.default = t, uc;
}
var dc = {}, sw;
function zE() {
  if (sw) return dc;
  sw = 1, Object.defineProperty(dc, "__esModule", { value: !0 });
  const t = gv();
  class e {
    constructor(r) {
      this.ops = r, this.index = 0, this.offset = 0;
    }
    hasNext() {
      return this.peekLength() < 1 / 0;
    }
    next(r) {
      r || (r = 1 / 0);
      const i = this.ops[this.index];
      if (i) {
        const o = this.offset, s = t.default.length(i);
        if (r >= s - o ? (r = s - o, this.index += 1, this.offset = 0) : this.offset += r, typeof i.delete == "number")
          return { delete: r };
        {
          const a = {};
          return i.attributes && (a.attributes = i.attributes), typeof i.retain == "number" ? a.retain = r : typeof i.retain == "object" && i.retain !== null ? a.retain = i.retain : typeof i.insert == "string" ? a.insert = i.insert.substr(o, r) : a.insert = i.insert, a;
        }
      } else
        return { retain: 1 / 0 };
    }
    peek() {
      return this.ops[this.index];
    }
    peekLength() {
      return this.ops[this.index] ? t.default.length(this.ops[this.index]) - this.offset : 1 / 0;
    }
    peekType() {
      const r = this.ops[this.index];
      return r ? typeof r.delete == "number" ? "delete" : typeof r.retain == "number" || typeof r.retain == "object" && r.retain !== null ? "retain" : "insert" : "retain";
    }
    rest() {
      if (this.hasNext()) {
        if (this.offset === 0)
          return this.ops.slice(this.index);
        {
          const r = this.offset, i = this.index, o = this.next(), s = this.ops.slice(this.index);
          return this.offset = r, this.index = i, [o].concat(s);
        }
      } else return [];
    }
  }
  return dc.default = e, dc;
}
var aw;
function VE() {
  return aw || (aw = 1, function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }), e.AttributeMap = e.OpIterator = e.Op = void 0;
    const n = jE(), r = hv(), i = pv(), o = UE();
    e.AttributeMap = o.default;
    const s = gv();
    e.Op = s.default;
    const a = zE();
    e.OpIterator = a.default;
    const l = "\0", c = (f, d) => {
      if (typeof f != "object" || f === null)
        throw new Error(`cannot retain a ${typeof f}`);
      if (typeof d != "object" || d === null)
        throw new Error(`cannot retain a ${typeof d}`);
      const h = Object.keys(f)[0];
      if (!h || h !== Object.keys(d)[0])
        throw new Error(`embed types not matched: ${h} != ${Object.keys(d)[0]}`);
      return [h, f[h], d[h]];
    };
    class u {
      constructor(d) {
        Array.isArray(d) ? this.ops = d : d != null && Array.isArray(d.ops) ? this.ops = d.ops : this.ops = [];
      }
      static registerEmbed(d, h) {
        this.handlers[d] = h;
      }
      static unregisterEmbed(d) {
        delete this.handlers[d];
      }
      static getHandler(d) {
        const h = this.handlers[d];
        if (!h)
          throw new Error(`no handlers for embed type "${d}"`);
        return h;
      }
      insert(d, h) {
        const g = {};
        return typeof d == "string" && d.length === 0 ? this : (g.insert = d, h != null && typeof h == "object" && Object.keys(h).length > 0 && (g.attributes = h), this.push(g));
      }
      delete(d) {
        return d <= 0 ? this : this.push({ delete: d });
      }
      retain(d, h) {
        if (typeof d == "number" && d <= 0)
          return this;
        const g = { retain: d };
        return h != null && typeof h == "object" && Object.keys(h).length > 0 && (g.attributes = h), this.push(g);
      }
      push(d) {
        let h = this.ops.length, g = this.ops[h - 1];
        if (d = r(d), typeof g == "object") {
          if (typeof d.delete == "number" && typeof g.delete == "number")
            return this.ops[h - 1] = { delete: g.delete + d.delete }, this;
          if (typeof g.delete == "number" && d.insert != null && (h -= 1, g = this.ops[h - 1], typeof g != "object"))
            return this.ops.unshift(d), this;
          if (i(d.attributes, g.attributes)) {
            if (typeof d.insert == "string" && typeof g.insert == "string")
              return this.ops[h - 1] = { insert: g.insert + d.insert }, typeof d.attributes == "object" && (this.ops[h - 1].attributes = d.attributes), this;
            if (typeof d.retain == "number" && typeof g.retain == "number")
              return this.ops[h - 1] = { retain: g.retain + d.retain }, typeof d.attributes == "object" && (this.ops[h - 1].attributes = d.attributes), this;
          }
        }
        return h === this.ops.length ? this.ops.push(d) : this.ops.splice(h, 0, d), this;
      }
      chop() {
        const d = this.ops[this.ops.length - 1];
        return d && typeof d.retain == "number" && !d.attributes && this.ops.pop(), this;
      }
      filter(d) {
        return this.ops.filter(d);
      }
      forEach(d) {
        this.ops.forEach(d);
      }
      map(d) {
        return this.ops.map(d);
      }
      partition(d) {
        const h = [], g = [];
        return this.forEach((m) => {
          (d(m) ? h : g).push(m);
        }), [h, g];
      }
      reduce(d, h) {
        return this.ops.reduce(d, h);
      }
      changeLength() {
        return this.reduce((d, h) => h.insert ? d + s.default.length(h) : h.delete ? d - h.delete : d, 0);
      }
      length() {
        return this.reduce((d, h) => d + s.default.length(h), 0);
      }
      slice(d = 0, h = 1 / 0) {
        const g = [], m = new a.default(this.ops);
        let b = 0;
        for (; b < h && m.hasNext(); ) {
          let _;
          b < d ? _ = m.next(d - b) : (_ = m.next(h - b), g.push(_)), b += s.default.length(_);
        }
        return new u(g);
      }
      compose(d) {
        const h = new a.default(this.ops), g = new a.default(d.ops), m = [], b = g.peek();
        if (b != null && typeof b.retain == "number" && b.attributes == null) {
          let y = b.retain;
          for (; h.peekType() === "insert" && h.peekLength() <= y; )
            y -= h.peekLength(), m.push(h.next());
          b.retain - y > 0 && g.next(b.retain - y);
        }
        const _ = new u(m);
        for (; h.hasNext() || g.hasNext(); )
          if (g.peekType() === "insert")
            _.push(g.next());
          else if (h.peekType() === "delete")
            _.push(h.next());
          else {
            const y = Math.min(h.peekLength(), g.peekLength()), C = h.next(y), D = g.next(y);
            if (D.retain) {
              const R = {};
              if (typeof C.retain == "number")
                R.retain = typeof D.retain == "number" ? y : D.retain;
              else if (typeof D.retain == "number")
                C.retain == null ? R.insert = C.insert : R.retain = C.retain;
              else {
                const L = C.retain == null ? "insert" : "retain", [O, M, q] = c(C[L], D.retain), k = u.getHandler(O);
                R[L] = {
                  [O]: k.compose(M, q, L === "retain")
                };
              }
              const N = o.default.compose(C.attributes, D.attributes, typeof C.retain == "number");
              if (N && (R.attributes = N), _.push(R), !g.hasNext() && i(_.ops[_.ops.length - 1], R)) {
                const L = new u(h.rest());
                return _.concat(L).chop();
              }
            } else typeof D.delete == "number" && (typeof C.retain == "number" || typeof C.retain == "object" && C.retain !== null) && _.push(D);
          }
        return _.chop();
      }
      concat(d) {
        const h = new u(this.ops.slice());
        return d.ops.length > 0 && (h.push(d.ops[0]), h.ops = h.ops.concat(d.ops.slice(1))), h;
      }
      diff(d, h) {
        if (this.ops === d.ops)
          return new u();
        const g = [this, d].map((C) => C.map((D) => {
          if (D.insert != null)
            return typeof D.insert == "string" ? D.insert : l;
          const R = C === d ? "on" : "with";
          throw new Error("diff() called " + R + " non-document");
        }).join("")), m = new u(), b = n(g[0], g[1], h, !0), _ = new a.default(this.ops), y = new a.default(d.ops);
        return b.forEach((C) => {
          let D = C[1].length;
          for (; D > 0; ) {
            let R = 0;
            switch (C[0]) {
              case n.INSERT:
                R = Math.min(y.peekLength(), D), m.push(y.next(R));
                break;
              case n.DELETE:
                R = Math.min(D, _.peekLength()), _.next(R), m.delete(R);
                break;
              case n.EQUAL:
                R = Math.min(_.peekLength(), y.peekLength(), D);
                const N = _.next(R), L = y.next(R);
                i(N.insert, L.insert) ? m.retain(R, o.default.diff(N.attributes, L.attributes)) : m.push(L).delete(R);
                break;
            }
            D -= R;
          }
        }), m.chop();
      }
      eachLine(d, h = `
`) {
        const g = new a.default(this.ops);
        let m = new u(), b = 0;
        for (; g.hasNext(); ) {
          if (g.peekType() !== "insert")
            return;
          const _ = g.peek(), y = s.default.length(_) - g.peekLength(), C = typeof _.insert == "string" ? _.insert.indexOf(h, y) - y : -1;
          if (C < 0)
            m.push(g.next());
          else if (C > 0)
            m.push(g.next(C));
          else {
            if (d(m, g.next(1).attributes || {}, b) === !1)
              return;
            b += 1, m = new u();
          }
        }
        m.length() > 0 && d(m, {}, b);
      }
      invert(d) {
        const h = new u();
        return this.reduce((g, m) => {
          if (m.insert)
            h.delete(s.default.length(m));
          else {
            if (typeof m.retain == "number" && m.attributes == null)
              return h.retain(m.retain), g + m.retain;
            if (m.delete || typeof m.retain == "number") {
              const b = m.delete || m.retain;
              return d.slice(g, g + b).forEach((y) => {
                m.delete ? h.push(y) : m.retain && m.attributes && h.retain(s.default.length(y), o.default.invert(m.attributes, y.attributes));
              }), g + b;
            } else if (typeof m.retain == "object" && m.retain !== null) {
              const b = d.slice(g, g + 1), _ = new a.default(b.ops).next(), [y, C, D] = c(m.retain, _.insert), R = u.getHandler(y);
              return h.retain({ [y]: R.invert(C, D) }, o.default.invert(m.attributes, _.attributes)), g + 1;
            }
          }
          return g;
        }, 0), h.chop();
      }
      transform(d, h = !1) {
        if (h = !!h, typeof d == "number")
          return this.transformPosition(d, h);
        const g = d, m = new a.default(this.ops), b = new a.default(g.ops), _ = new u();
        for (; m.hasNext() || b.hasNext(); )
          if (m.peekType() === "insert" && (h || b.peekType() !== "insert"))
            _.retain(s.default.length(m.next()));
          else if (b.peekType() === "insert")
            _.push(b.next());
          else {
            const y = Math.min(m.peekLength(), b.peekLength()), C = m.next(y), D = b.next(y);
            if (C.delete)
              continue;
            if (D.delete)
              _.push(D);
            else {
              const R = C.retain, N = D.retain;
              let L = typeof N == "object" && N !== null ? N : y;
              if (typeof R == "object" && R !== null && typeof N == "object" && N !== null) {
                const O = Object.keys(R)[0];
                if (O === Object.keys(N)[0]) {
                  const M = u.getHandler(O);
                  M && (L = {
                    [O]: M.transform(R[O], N[O], h)
                  });
                }
              }
              _.retain(L, o.default.transform(C.attributes, D.attributes, h));
            }
          }
        return _.chop();
      }
      transformPosition(d, h = !1) {
        h = !!h;
        const g = new a.default(this.ops);
        let m = 0;
        for (; g.hasNext() && m <= d; ) {
          const b = g.peekLength(), _ = g.peekType();
          if (g.next(), _ === "delete") {
            d -= Math.min(b, d - m);
            continue;
          } else _ === "insert" && (m < d || !h) && (d += b);
          m += b;
        }
        return d;
      }
    }
    u.Op = s.default, u.OpIterator = a.default, u.AttributeMap = o.default, u.handlers = {}, e.default = u, t.exports = u, t.exports.default = u;
  }(lc, lc.exports)), lc.exports;
}
var HE = VE();
const qa = /* @__PURE__ */ OC(HE);
var WE = Object.getOwnPropertyNames, KE = Object.getOwnPropertySymbols, GE = Object.prototype.hasOwnProperty;
function lw(t, e) {
  return function(r, i, o) {
    return t(r, i, o) && e(r, i, o);
  };
}
function fc(t) {
  return function(n, r, i) {
    if (!n || !r || typeof n != "object" || typeof r != "object")
      return t(n, r, i);
    var o = i.cache, s = o.get(n), a = o.get(r);
    if (s && a)
      return s === r && a === n;
    o.set(n, r), o.set(r, n);
    var l = t(n, r, i);
    return o.delete(n), o.delete(r), l;
  };
}
function cw(t) {
  return WE(t).concat(KE(t));
}
var JE = Object.hasOwn || function(t, e) {
  return GE.call(t, e);
};
function ns(t, e) {
  return t === e || !t && !e && t !== t && e !== e;
}
var XE = "__v", YE = "__o", QE = "_owner", uw = Object.getOwnPropertyDescriptor, dw = Object.keys;
function ZE(t, e, n) {
  var r = t.length;
  if (e.length !== r)
    return !1;
  for (; r-- > 0; )
    if (!n.equals(t[r], e[r], r, r, t, e, n))
      return !1;
  return !0;
}
function eN(t, e) {
  return ns(t.getTime(), e.getTime());
}
function tN(t, e) {
  return t.name === e.name && t.message === e.message && t.cause === e.cause && t.stack === e.stack;
}
function nN(t, e) {
  return t === e;
}
function fw(t, e, n) {
  var r = t.size;
  if (r !== e.size)
    return !1;
  if (!r)
    return !0;
  for (var i = new Array(r), o = t.entries(), s, a, l = 0; (s = o.next()) && !s.done; ) {
    for (var c = e.entries(), u = !1, f = 0; (a = c.next()) && !a.done; ) {
      if (i[f]) {
        f++;
        continue;
      }
      var d = s.value, h = a.value;
      if (n.equals(d[0], h[0], l, f, t, e, n) && n.equals(d[1], h[1], d[0], h[0], t, e, n)) {
        u = i[f] = !0;
        break;
      }
      f++;
    }
    if (!u)
      return !1;
    l++;
  }
  return !0;
}
var rN = ns;
function iN(t, e, n) {
  var r = dw(t), i = r.length;
  if (dw(e).length !== i)
    return !1;
  for (; i-- > 0; )
    if (!mv(t, e, n, r[i]))
      return !1;
  return !0;
}
function Aa(t, e, n) {
  var r = cw(t), i = r.length;
  if (cw(e).length !== i)
    return !1;
  for (var o, s, a; i-- > 0; )
    if (o = r[i], !mv(t, e, n, o) || (s = uw(t, o), a = uw(e, o), (s || a) && (!s || !a || s.configurable !== a.configurable || s.enumerable !== a.enumerable || s.writable !== a.writable)))
      return !1;
  return !0;
}
function oN(t, e) {
  return ns(t.valueOf(), e.valueOf());
}
function sN(t, e) {
  return t.source === e.source && t.flags === e.flags;
}
function hw(t, e, n) {
  var r = t.size;
  if (r !== e.size)
    return !1;
  if (!r)
    return !0;
  for (var i = new Array(r), o = t.values(), s, a; (s = o.next()) && !s.done; ) {
    for (var l = e.values(), c = !1, u = 0; (a = l.next()) && !a.done; ) {
      if (!i[u] && n.equals(s.value, a.value, s.value, a.value, t, e, n)) {
        c = i[u] = !0;
        break;
      }
      u++;
    }
    if (!c)
      return !1;
  }
  return !0;
}
function aN(t, e) {
  var n = t.length;
  if (e.length !== n)
    return !1;
  for (; n-- > 0; )
    if (t[n] !== e[n])
      return !1;
  return !0;
}
function lN(t, e) {
  return t.hostname === e.hostname && t.pathname === e.pathname && t.protocol === e.protocol && t.port === e.port && t.hash === e.hash && t.username === e.username && t.password === e.password;
}
function mv(t, e, n, r) {
  return (r === QE || r === YE || r === XE) && (t.$$typeof || e.$$typeof) ? !0 : JE(e, r) && n.equals(t[r], e[r], r, r, t, e, n);
}
var cN = "[object Arguments]", uN = "[object Boolean]", dN = "[object Date]", fN = "[object Error]", hN = "[object Map]", pN = "[object Number]", gN = "[object Object]", mN = "[object RegExp]", wN = "[object Set]", bN = "[object String]", yN = "[object URL]", vN = Array.isArray, pw = typeof ArrayBuffer == "function" && ArrayBuffer.isView ? ArrayBuffer.isView : null, gw = Object.assign, _N = Object.prototype.toString.call.bind(Object.prototype.toString);
function xN(t) {
  var e = t.areArraysEqual, n = t.areDatesEqual, r = t.areErrorsEqual, i = t.areFunctionsEqual, o = t.areMapsEqual, s = t.areNumbersEqual, a = t.areObjectsEqual, l = t.arePrimitiveWrappersEqual, c = t.areRegExpsEqual, u = t.areSetsEqual, f = t.areTypedArraysEqual, d = t.areUrlsEqual;
  return function(g, m, b) {
    if (g === m)
      return !0;
    if (g == null || m == null)
      return !1;
    var _ = typeof g;
    if (_ !== typeof m)
      return !1;
    if (_ !== "object")
      return _ === "number" ? s(g, m, b) : _ === "function" ? i(g, m, b) : !1;
    var y = g.constructor;
    if (y !== m.constructor)
      return !1;
    if (y === Object)
      return a(g, m, b);
    if (vN(g))
      return e(g, m, b);
    if (pw != null && pw(g))
      return f(g, m, b);
    if (y === Date)
      return n(g, m, b);
    if (y === RegExp)
      return c(g, m, b);
    if (y === Map)
      return o(g, m, b);
    if (y === Set)
      return u(g, m, b);
    var C = _N(g);
    return C === dN ? n(g, m, b) : C === mN ? c(g, m, b) : C === hN ? o(g, m, b) : C === wN ? u(g, m, b) : C === gN ? typeof g.then != "function" && typeof m.then != "function" && a(g, m, b) : C === yN ? d(g, m, b) : C === fN ? r(g, m, b) : C === cN ? a(g, m, b) : C === uN || C === pN || C === bN ? l(g, m, b) : !1;
  };
}
function CN(t) {
  var e = t.circular, n = t.createCustomConfig, r = t.strict, i = {
    areArraysEqual: r ? Aa : ZE,
    areDatesEqual: eN,
    areErrorsEqual: tN,
    areFunctionsEqual: nN,
    areMapsEqual: r ? lw(fw, Aa) : fw,
    areNumbersEqual: rN,
    areObjectsEqual: r ? Aa : iN,
    arePrimitiveWrappersEqual: oN,
    areRegExpsEqual: sN,
    areSetsEqual: r ? lw(hw, Aa) : hw,
    areTypedArraysEqual: r ? Aa : aN,
    areUrlsEqual: lN
  };
  if (n && (i = gw({}, i, n(i))), e) {
    var o = fc(i.areArraysEqual), s = fc(i.areMapsEqual), a = fc(i.areObjectsEqual), l = fc(i.areSetsEqual);
    i = gw({}, i, {
      areArraysEqual: o,
      areMapsEqual: s,
      areObjectsEqual: a,
      areSetsEqual: l
    });
  }
  return i;
}
function kN(t) {
  return function(e, n, r, i, o, s, a) {
    return t(e, n, a);
  };
}
function EN(t) {
  var e = t.circular, n = t.comparator, r = t.createState, i = t.equals, o = t.strict;
  if (r)
    return function(l, c) {
      var u = r(), f = u.cache, d = f === void 0 ? e ? /* @__PURE__ */ new WeakMap() : void 0 : f, h = u.meta;
      return n(l, c, {
        cache: d,
        equals: i,
        meta: h,
        strict: o
      });
    };
  if (e)
    return function(l, c) {
      return n(l, c, {
        cache: /* @__PURE__ */ new WeakMap(),
        equals: i,
        meta: void 0,
        strict: o
      });
    };
  var s = {
    cache: void 0,
    equals: i,
    meta: void 0,
    strict: o
  };
  return function(l, c) {
    return n(l, c, s);
  };
}
var ui = to();
to({ strict: !0 });
to({ circular: !0 });
to({
  circular: !0,
  strict: !0
});
to({
  createInternalComparator: function() {
    return ns;
  }
});
to({
  strict: !0,
  createInternalComparator: function() {
    return ns;
  }
});
to({
  circular: !0,
  createInternalComparator: function() {
    return ns;
  }
});
to({
  circular: !0,
  createInternalComparator: function() {
    return ns;
  },
  strict: !0
});
function to(t) {
  t === void 0 && (t = {});
  var e = t.circular, n = e === void 0 ? !1 : e, r = t.createInternalComparator, i = t.createState, o = t.strict, s = o === void 0 ? !1 : o, a = CN(t), l = xN(a), c = r ? r(l) : kN(l);
  return EN({ circular: n, comparator: l, createState: i, equals: c, strict: s });
}
const wv = yl(null);
function NN(t, e) {
  return { getTheme: function() {
    return e ?? null;
  } };
}
function Le() {
  const t = vl(wv);
  return t == null && function(e, ...n) {
    const r = new URL("https://lexical.dev/docs/error"), i = new URLSearchParams();
    i.append("code", e);
    for (const o of n) i.append("v", o);
    throw r.search = i.toString(), Error(`Minified Lexical error #${e}; visit ${r.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
  }(8), t;
}
function SN(t, e) {
  const n = e.body ? e.body.childNodes : [];
  let r = [];
  const i = [];
  for (let o = 0; o < n.length; o++) {
    const s = n[o];
    if (!vv.has(s.nodeName)) {
      const a = _v(s, t, i, !1);
      a !== null && (r = r.concat(a));
    }
  }
  return function(o) {
    for (const s of o) s.getNextSibling() instanceof _p && s.insertAfter(Lo());
    for (const s of o) {
      const a = s.getChildren();
      for (const l of a) s.insertBefore(l);
      s.remove();
    }
  }(i), r;
}
function bv(t, e) {
  if (typeof document > "u" || typeof window > "u" && global.window === void 0) throw new Error("To use $generateHtmlFromNodes in headless mode please initialize a headless browser implementation such as JSDom before calling this function.");
  const n = document.createElement("div"), r = Ve().getChildren();
  for (let i = 0; i < r.length; i++)
    yv(t, r[i], n, e);
  return n.innerHTML;
}
function yv(t, e, n, r = null) {
  let i = r === null || e.isSelected(r);
  const o = X(e) && e.excludeFromCopy("html");
  let s = e;
  if (r !== null) {
    let h = Op(e);
    h = ie(h) && r !== null ? av(r, h) : h, s = h;
  }
  const a = X(s) ? s.getChildren() : [], l = kp(t, s.getType());
  let c;
  c = l && l.exportDOM !== void 0 ? l.exportDOM(t, s) : s.exportDOM(t);
  const { element: u, after: f } = c;
  if (!u) return !1;
  const d = document.createDocumentFragment();
  for (let h = 0; h < a.length; h++) {
    const g = a[h], m = yv(t, g, d, r);
    !i && X(e) && m && e.extractWithChild(g, r, "html") && (i = !0);
  }
  if (i && !o) {
    if ((it(u) || Jf(u)) && u.append(d), n.append(u), f) {
      const h = f.call(s, u);
      h && (Jf(u) ? u.replaceChildren(h) : u.replaceWith(h));
    }
  } else n.append(d);
  return i;
}
const vv = /* @__PURE__ */ new Set(["STYLE", "SCRIPT"]);
function _v(t, e, n, r, i = /* @__PURE__ */ new Map(), o) {
  let s = [];
  if (vv.has(t.nodeName)) return s;
  let a = null;
  const l = function(g, m) {
    const { nodeName: b } = g, _ = m._htmlConversions.get(b.toLowerCase());
    let y = null;
    if (_ !== void 0) for (const C of _) {
      const D = C(g);
      D !== null && (y === null || (y.priority || 0) <= (D.priority || 0)) && (y = D);
    }
    return y !== null ? y.conversion : null;
  }(t, e), c = l ? l(t) : null;
  let u = null;
  if (c !== null) {
    u = c.after;
    const g = c.node;
    if (a = Array.isArray(g) ? g[g.length - 1] : g, a !== null) {
      for (const [, m] of i) if (a = m(a, o), !a) break;
      a && s.push(...Array.isArray(g) ? g : [a]);
    }
    c.forChild != null && i.set(t.nodeName, c.forChild);
  }
  const f = t.childNodes;
  let d = [];
  const h = (a == null || !Zr(a)) && (a != null && zf(a) || r);
  for (let g = 0; g < f.length; g++) d.push(..._v(f[g], e, n, h, new Map(i), a));
  return u != null && (d = u(d)), eu(t) && (d = TN(t, d, h ? () => {
    const g = new _p();
    return n.push(g), g;
  } : Jn)), a == null ? d.length > 0 ? s = s.concat(d) : eu(t) && function(g) {
    return g.nextSibling == null || g.previousSibling == null ? !1 : Xf(g.nextSibling) && Xf(g.previousSibling);
  }(t) && (s = s.concat(Lo())) : X(a) && a.append(...d), s;
}
function TN(t, e, n) {
  const r = t.style.textAlign, i = [];
  let o = [];
  for (let s = 0; s < e.length; s++) {
    const a = e[s];
    if (zf(a)) r && !a.getFormat() && a.setFormat(r), i.push(a);
    else if (o.push(a), s === e.length - 1 || s < e.length - 1 && zf(e[s + 1])) {
      const l = n();
      l.setFormat(r), l.append(...o), i.push(l), o = [];
    }
  }
  return i;
}
const AN = /* @__PURE__ */ new Set(["http:", "https:", "mailto:", "sms:", "tel:"]);
let xv = class Cv extends pn {
  static getType() {
    return "link";
  }
  static clone(e) {
    return new Cv(e.__url, { rel: e.__rel, target: e.__target, title: e.__title }, e.__key);
  }
  constructor(e = "", n = {}, r) {
    super(r);
    const { target: i = null, rel: o = null, title: s = null } = n;
    this.__url = e, this.__target = i, this.__rel = o, this.__title = s;
  }
  createDOM(e) {
    const n = document.createElement("a");
    return this.updateLinkDOM(null, n, e), un(n, e.theme.link), n;
  }
  updateLinkDOM(e, n, r) {
    if (ev(n)) {
      e && e.__url === this.__url || (n.href = this.sanitizeUrl(this.__url));
      for (const i of ["target", "rel", "title"]) {
        const o = `__${i}`, s = this[o];
        e && e[o] === s || (s ? n[i] = s : n.removeAttribute(i));
      }
    }
  }
  updateDOM(e, n, r) {
    return this.updateLinkDOM(e, n, r), !1;
  }
  static importDOM() {
    return { a: (e) => ({ conversion: DN, priority: 1 }) };
  }
  static importJSON(e) {
    return th().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setURL(e.url).setRel(e.rel || null).setTarget(e.target || null).setTitle(e.title || null);
  }
  sanitizeUrl(e) {
    e = mw(e);
    try {
      const n = new URL(mw(e));
      if (!AN.has(n.protocol)) return "about:blank";
    } catch {
      return e;
    }
    return e;
  }
  exportJSON() {
    return { ...super.exportJSON(), rel: this.getRel(), target: this.getTarget(), title: this.getTitle(), url: this.getURL() };
  }
  getURL() {
    return this.getLatest().__url;
  }
  setURL(e) {
    const n = this.getWritable();
    return n.__url = e, n;
  }
  getTarget() {
    return this.getLatest().__target;
  }
  setTarget(e) {
    const n = this.getWritable();
    return n.__target = e, n;
  }
  getRel() {
    return this.getLatest().__rel;
  }
  setRel(e) {
    const n = this.getWritable();
    return n.__rel = e, n;
  }
  getTitle() {
    return this.getLatest().__title;
  }
  setTitle(e) {
    const n = this.getWritable();
    return n.__title = e, n;
  }
  insertNewAfter(e, n = !0) {
    const r = th(this.__url, { rel: this.__rel, target: this.__target, title: this.__title });
    return this.insertAfter(r, n), r;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
  extractWithChild(e, n, r) {
    if (!Z(n)) return !1;
    const i = n.anchor.getNode(), o = n.focus.getNode();
    return this.isParentOf(i) && this.isParentOf(o) && n.getTextContent().length > 0;
  }
  isEmailURI() {
    return this.__url.startsWith("mailto:");
  }
  isWebSiteURI() {
    return this.__url.startsWith("https://") || this.__url.startsWith("http://");
  }
};
function DN(t) {
  let e = null;
  if (ev(t)) {
    const n = t.textContent;
    (n !== null && n !== "" || t.children.length > 0) && (e = th(t.getAttribute("href") || "", { rel: t.getAttribute("rel"), target: t.getAttribute("target"), title: t.getAttribute("title") }));
  }
  return { node: e };
}
function th(t = "", e) {
  return lt(new xv(t, e));
}
function MN(t) {
  return t instanceof xv;
}
const ON = /^\+?[0-9\s()-]{5,}$/;
function mw(t) {
  return t.match(/^[a-z][a-z0-9+.-]*:/i) || t.match(/^[/#.]/) ? t : t.includes("@") ? `mailto:${t}` : ON.test(t) ? `tel:${t}` : `https://${t}`;
}
const kv = [];
let Ev = class Nv extends pn {
  static getType() {
    return "mark";
  }
  static clone(e) {
    return new Nv(e.__ids, e.__key);
  }
  static importDOM() {
    return null;
  }
  static importJSON(e) {
    return ww().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setIDs(e.ids);
  }
  exportJSON() {
    return { ...super.exportJSON(), ids: this.getIDs() };
  }
  constructor(e = kv, n) {
    super(n), this.__ids = e;
  }
  createDOM(e) {
    const n = document.createElement("mark");
    return un(n, e.theme.mark), this.__ids.length > 1 && un(n, e.theme.markOverlap), n;
  }
  updateDOM(e, n, r) {
    const i = e.__ids, o = this.__ids, s = i.length, a = o.length, l = r.theme.markOverlap;
    return s !== a && (s === 1 ? a === 2 && un(n, l) : a === 1 && No(n, l)), !1;
  }
  hasID(e) {
    return this.getIDs().includes(e);
  }
  getIDs() {
    return Array.from(this.getLatest().__ids);
  }
  setIDs(e) {
    const n = this.getWritable();
    return n.__ids = e, n;
  }
  addID(e) {
    const n = this.getWritable();
    return n.__ids.includes(e) ? n : n.setIDs([...n.__ids, e]);
  }
  deleteID(e) {
    const n = this.getWritable(), r = n.__ids.indexOf(e);
    if (r === -1) return n;
    const i = Array.from(n.__ids);
    return i.splice(r, 1), n.setIDs(i);
  }
  insertNewAfter(e, n = !0) {
    const r = ww(this.__ids);
    return this.insertAfter(r, n), r;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
  extractWithChild(e, n, r) {
    if (!Z(n) || r === "html") return !1;
    const i = n.anchor, o = n.focus, s = i.getNode(), a = o.getNode(), l = n.isBackward() ? i.offset - o.offset : o.offset - i.offset;
    return this.isParentOf(s) && this.isParentOf(a) && this.getTextContent().length === l;
  }
  excludeFromCopy(e) {
    return e !== "clone";
  }
};
function ww(t = kv) {
  return lt(new Ev(t));
}
function IN(t) {
  return t instanceof Ev;
}
function ou(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
function Sv(t, e = oe()) {
  return e == null && ou(166), Z(e) && e.isCollapsed() || e.getNodes().length === 0 ? "" : bv(t, e);
}
function RN(t, e = oe()) {
  return e == null && ou(166), Z(e) && e.isCollapsed() || e.getNodes().length === 0 ? null : JSON.stringify(PN(t, e));
}
function bw(t, e) {
  const n = t.getData("text/plain") || t.getData("text/uri-list");
  n != null && e.insertRawText(n);
}
function yw(t, e, n) {
  const r = t.getData("application/x-lexical-editor");
  if (r) try {
    const a = JSON.parse(r);
    if (a.namespace === n._config.namespace && Array.isArray(a.nodes))
      return vw(n, LN(a.nodes), e);
  } catch {
  }
  const i = t.getData("text/html"), o = t.getData("text/plain");
  if (i && o !== i) try {
    const a = new DOMParser().parseFromString(function(l) {
      return window.trustedTypes && window.trustedTypes.createPolicy ? window.trustedTypes.createPolicy("lexical", { createHTML: (c) => c }).createHTML(l) : l;
    }(i), "text/html");
    return vw(n, SN(n, a), e);
  } catch {
  }
  const s = o || t.getData("text/uri-list");
  if (s != null) if (Z(e)) {
    const a = s.split(/(\r?\n|\t)/);
    a[a.length - 1] === "" && a.pop();
    for (let l = 0; l < a.length; l++) {
      const c = oe();
      if (Z(c)) {
        const u = a[l];
        u === `
` || u === `\r
` ? c.insertParagraph() : u === "	" ? c.insertNodes([Tl()]) : c.insertText(u);
      }
    }
  } else e.insertRawText(s);
}
function vw(t, e, n) {
  t.dispatchCommand(wk, { nodes: e, selection: n }) || (n.insertNodes(e), function(r) {
    if (Z(r) && r.isCollapsed()) {
      const i = r.anchor;
      let o = null;
      const s = bi(i, "previous");
      if (s) if (Bi(s)) o = s.origin;
      else {
        const a = Vi(s, _r(Ve(), "next").getFlipped());
        for (const l of a) {
          if (ie(l.origin)) {
            o = l.origin;
            break;
          }
          if (X(l.origin) && !l.origin.isInline()) break;
        }
      }
      if (o && ie(o)) {
        const a = o.getFormat(), l = o.getStyle();
        r.format === a && r.style === l || (r.format = a, r.style = l, r.dirty = !0);
      }
    }
  }(n));
}
function Tv(t, e, n, r = []) {
  let i = e === null || n.isSelected(e);
  const o = X(n) && n.excludeFromCopy("html");
  let s = n;
  if (e !== null) {
    let c = Op(n);
    c = ie(c) && e !== null ? av(e, c) : c, s = c;
  }
  const a = X(s) ? s.getChildren() : [], l = function(c) {
    const u = c.exportJSON(), f = c.constructor;
    if (u.type !== f.getType() && ou(58, f.name), X(c)) {
      const d = u.children;
      Array.isArray(d) || ou(59, f.name);
    }
    return u;
  }(s);
  if (ie(s)) {
    const c = s.__text;
    c.length > 0 ? l.text = c : i = !1;
  }
  for (let c = 0; c < a.length; c++) {
    const u = a[c], f = Tv(t, e, u, l.children);
    !i && X(n) && f && n.extractWithChild(u, e, "clone") && (i = !0);
  }
  if (i && !o) r.push(l);
  else if (Array.isArray(l.children)) for (let c = 0; c < l.children.length; c++) {
    const u = l.children[c];
    r.push(u);
  }
  return i;
}
function PN(t, e) {
  const n = [], r = Ve().getChildren();
  for (let i = 0; i < r.length; i++)
    Tv(t, e, r[i], n);
  return { namespace: t._config.namespace, nodes: n };
}
function LN(t) {
  const e = [];
  for (let n = 0; n < t.length; n++) {
    const r = t[n], i = L0(r);
    ie(i) && kE(i), e.push(i);
  }
  return e;
}
let fs = null;
async function _w(t, e, n) {
  if (fs !== null) return !1;
  if (e !== null) return new Promise((c, u) => {
    t.update(() => {
      c(xw(t, e, n));
    });
  });
  const r = t.getRootElement(), i = t._window || window, o = window.document, s = vr(i);
  if (r === null || s === null) return !1;
  const a = o.createElement("span");
  a.style.cssText = "position: fixed; top: -1000px;", a.append(o.createTextNode("#")), r.append(a);
  const l = new Range();
  return l.setStart(a, 0), l.setEnd(a, 1), s.removeAllRanges(), s.addRange(l), new Promise((c, u) => {
    const f = t.registerCommand(Yi, (d) => (gi(d, ClipboardEvent) && (f(), fs !== null && (window.clearTimeout(fs), fs = null), c(xw(t, d, n))), !0), _s);
    fs = window.setTimeout(() => {
      f(), fs = null, c(!1);
    }, 50), o.execCommand("copy"), a.remove();
  });
}
function xw(t, e, n) {
  if (n === void 0) {
    const i = vr(t._window);
    if (!i) return !1;
    const o = i.anchorNode, s = i.focusNode;
    if (o !== null && s !== null && !Ml(t, o, s)) return !1;
    const a = oe();
    if (a === null) return !1;
    n = FN(a);
  }
  e.preventDefault();
  const r = e.clipboardData;
  return r !== null && (BN(r, n), !0);
}
const $N = [["text/html", Sv], ["application/x-lexical-editor", RN]];
function FN(t = oe()) {
  const e = { "text/plain": t ? t.getTextContent() : "" };
  if (t) {
    const n = Wu();
    for (const [r, i] of $N) {
      const o = i(n, t);
      o !== null && (e[r] = o);
    }
  }
  return e;
}
function BN(t, e) {
  for (const n in e) {
    const r = e[n];
    r !== void 0 && t.setData(n, r);
  }
}
const $p = /^(\d+(?:\.\d+)?)px$/, Cs = { BOTH: 3, NO_STATUS: 0, ROW: 1 };
let Fp = class Av extends pn {
  static getType() {
    return "tablecell";
  }
  static clone(e) {
    return new Av(e.__headerState, e.__colSpan, e.__width, e.__key);
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__rowSpan = e.__rowSpan, this.__backgroundColor = e.__backgroundColor, this.__verticalAlign = e.__verticalAlign;
  }
  static importDOM() {
    return { td: (e) => ({ conversion: Cw, priority: 0 }), th: (e) => ({ conversion: Cw, priority: 0 }) };
  }
  static importJSON(e) {
    return Dv().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setHeaderStyles(e.headerState).setColSpan(e.colSpan || 1).setRowSpan(e.rowSpan || 1).setWidth(e.width || void 0).setBackgroundColor(e.backgroundColor || null).setVerticalAlign(e.verticalAlign || void 0);
  }
  constructor(e = Cs.NO_STATUS, n = 1, r, i) {
    super(i), this.__colSpan = n, this.__rowSpan = 1, this.__headerState = e, this.__width = r, this.__backgroundColor = null, this.__verticalAlign = void 0;
  }
  createDOM(e) {
    const n = document.createElement(this.getTag());
    return this.__width && (n.style.width = `${this.__width}px`), this.__colSpan > 1 && (n.colSpan = this.__colSpan), this.__rowSpan > 1 && (n.rowSpan = this.__rowSpan), this.__backgroundColor !== null && (n.style.backgroundColor = this.__backgroundColor), nh(this.__verticalAlign) && (n.style.verticalAlign = this.__verticalAlign), un(n, e.theme.tableCell, this.hasHeader() && e.theme.tableCellHeader), n;
  }
  exportDOM(e) {
    const n = super.exportDOM(e);
    if (it(n.element)) {
      const r = n.element;
      r.setAttribute("data-temporary-table-cell-lexical-key", this.getKey()), r.style.border = "1px solid black", this.__colSpan > 1 && (r.colSpan = this.__colSpan), this.__rowSpan > 1 && (r.rowSpan = this.__rowSpan), r.style.width = `${this.getWidth() || 75}px`, r.style.verticalAlign = this.getVerticalAlign() || "top", r.style.textAlign = "start", this.__backgroundColor === null && this.hasHeader() && (r.style.backgroundColor = "#f2f3f5");
    }
    return n;
  }
  exportJSON() {
    return { ...super.exportJSON(), ...nh(this.__verticalAlign) && { verticalAlign: this.__verticalAlign }, backgroundColor: this.getBackgroundColor(), colSpan: this.__colSpan, headerState: this.__headerState, rowSpan: this.__rowSpan, width: this.getWidth() };
  }
  getColSpan() {
    return this.getLatest().__colSpan;
  }
  setColSpan(e) {
    const n = this.getWritable();
    return n.__colSpan = e, n;
  }
  getRowSpan() {
    return this.getLatest().__rowSpan;
  }
  setRowSpan(e) {
    const n = this.getWritable();
    return n.__rowSpan = e, n;
  }
  getTag() {
    return this.hasHeader() ? "th" : "td";
  }
  setHeaderStyles(e, n = Cs.BOTH) {
    const r = this.getWritable();
    return r.__headerState = e & n | r.__headerState & ~n, r;
  }
  getHeaderStyles() {
    return this.getLatest().__headerState;
  }
  setWidth(e) {
    const n = this.getWritable();
    return n.__width = e, n;
  }
  getWidth() {
    return this.getLatest().__width;
  }
  getBackgroundColor() {
    return this.getLatest().__backgroundColor;
  }
  setBackgroundColor(e) {
    const n = this.getWritable();
    return n.__backgroundColor = e, n;
  }
  getVerticalAlign() {
    return this.getLatest().__verticalAlign;
  }
  setVerticalAlign(e) {
    const n = this.getWritable();
    return n.__verticalAlign = e || void 0, n;
  }
  toggleHeaderStyle(e) {
    const n = this.getWritable();
    return (n.__headerState & e) === e ? n.__headerState -= e : n.__headerState += e, n;
  }
  hasHeaderState(e) {
    return (this.getHeaderStyles() & e) === e;
  }
  hasHeader() {
    return this.getLatest().__headerState !== Cs.NO_STATUS;
  }
  updateDOM(e) {
    return e.__headerState !== this.__headerState || e.__width !== this.__width || e.__colSpan !== this.__colSpan || e.__rowSpan !== this.__rowSpan || e.__backgroundColor !== this.__backgroundColor || e.__verticalAlign !== this.__verticalAlign;
  }
  isShadowRoot() {
    return !0;
  }
  collapseAtStart() {
    return !0;
  }
  canBeEmpty() {
    return !1;
  }
  canIndent() {
    return !1;
  }
};
function nh(t) {
  return t === "middle" || t === "bottom";
}
function Cw(t) {
  const e = t, n = t.nodeName.toLowerCase();
  let r;
  $p.test(e.style.width) && (r = parseFloat(e.style.width));
  const i = Dv(n === "th" ? Cs.ROW : Cs.NO_STATUS, e.colSpan, r);
  i.__rowSpan = e.rowSpan;
  const o = e.style.backgroundColor;
  o !== "" && (i.__backgroundColor = o);
  const s = e.style.verticalAlign;
  nh(s) && (i.__verticalAlign = s);
  const a = e.style, l = (a && a.textDecoration || "").split(" "), c = a.fontWeight === "700" || a.fontWeight === "bold", u = l.includes("line-through"), f = a.fontStyle === "italic", d = l.includes("underline");
  return { after: (h) => {
    const g = [];
    let m = null;
    const b = () => {
      if (m) {
        const _ = m.getFirstChild();
        xo(_) && m.getChildrenSize() === 1 && _.remove();
      }
    };
    for (const _ of h) eE(_) || ie(_) || xo(_) ? (ie(_) && (c && _.toggleFormat("bold"), u && _.toggleFormat("strikethrough"), f && _.toggleFormat("italic"), d && _.toggleFormat("underline")), m ? m.append(_) : (m = Jn().append(_), g.push(m))) : (g.push(_), b(), m = null);
    return b(), g.length === 0 && g.push(Jn()), g;
  }, node: i };
}
function Dv(t = Cs.NO_STATUS, e = 1, n) {
  return lt(new Fp(t, e, n));
}
function Kn(t) {
  return t instanceof Fp;
}
function Pt(t, ...e) {
  const n = new URL("https://lexical.dev/docs/error"), r = new URLSearchParams();
  r.append("code", t);
  for (const i of e) r.append("v", i);
  throw n.search = r.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);
}
class Ju extends pn {
  static getType() {
    return "tablerow";
  }
  static clone(e) {
    return new Ju(e.__height, e.__key);
  }
  static importDOM() {
    return { tr: (e) => ({ conversion: qN, priority: 0 }) };
  }
  static importJSON(e) {
    return Mv().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setHeight(e.height);
  }
  constructor(e, n) {
    super(n), this.__height = e;
  }
  exportJSON() {
    const e = this.getHeight();
    return { ...super.exportJSON(), ...e === void 0 ? void 0 : { height: e } };
  }
  createDOM(e) {
    const n = document.createElement("tr");
    return this.__height && (n.style.height = `${this.__height}px`), un(n, e.theme.tableRow), n;
  }
  extractWithChild(e, n, r) {
    return r === "html";
  }
  isShadowRoot() {
    return !0;
  }
  setHeight(e) {
    const n = this.getWritable();
    return n.__height = e, n;
  }
  getHeight() {
    return this.getLatest().__height;
  }
  updateDOM(e) {
    return e.__height !== this.__height;
  }
  canBeEmpty() {
    return !1;
  }
  canIndent() {
    return !1;
  }
}
function qN(t) {
  const e = t;
  let n;
  return $p.test(e.style.height) && (n = parseFloat(e.style.height)), { after: (r) => fv(r, Kn), node: Mv(n) };
}
function Mv(t) {
  return lt(new Ju(t));
}
function Pl(t) {
  return t instanceof Ju;
}
const Ov = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, jN = Ov && "documentMode" in document ? document.documentMode : null;
Ov && "InputEvent" in window && !jN && new window.InputEvent("input");
function UN(t, e, n) {
  const [r, i, o] = Iv(t, e, n);
  return i === null && Pt(207), o === null && Pt(208), [r, i, o];
}
function Iv(t, e, n) {
  const r = [];
  let i = null, o = null;
  function s(l) {
    let c = r[l];
    return c === void 0 && (r[l] = c = []), c;
  }
  const a = t.getChildren();
  for (let l = 0; l < a.length; l++) {
    const c = a[l];
    Pl(c) || Pt(209);
    const u = s(l);
    for (let f = c.getFirstChild(), d = 0; f != null; f = f.getNextSibling()) {
      for (Kn(f) || Pt(147); u[d] !== void 0; ) d++;
      const h = { cell: f, startColumn: d, startRow: l }, { __rowSpan: g, __colSpan: m } = f;
      for (let b = 0; b < g && !(l + b >= a.length); b++) {
        const _ = s(l + b);
        for (let y = 0; y < m; y++) _[d + y] = h;
      }
      e !== null && i === null && e.is(f) && (i = h), n !== null && o === null && n.is(f) && (o = h);
    }
  }
  return [r, i, o];
}
function zN(t) {
  let e;
  if (t instanceof Fp) e = t;
  else if ("__type" in t) {
    const i = xr(t, Kn);
    Kn(i) || Pt(148), e = i;
  } else {
    const i = xr(t.getNode(), Kn);
    Kn(i) || Pt(148), e = i;
  }
  const n = e.getParent();
  Pl(n) || Pt(149);
  const r = n.getParent();
  return Bv(r) || Pt(210), [e, n, r];
}
function VN(t, e, n) {
  let r, i = Math.min(e.startColumn, n.startColumn), o = Math.min(e.startRow, n.startRow), s = Math.max(e.startColumn + e.cell.__colSpan - 1, n.startColumn + n.cell.__colSpan - 1), a = Math.max(e.startRow + e.cell.__rowSpan - 1, n.startRow + n.cell.__rowSpan - 1);
  do {
    r = !1;
    for (let l = 0; l < t.length; l++) for (let c = 0; c < t[0].length; c++) {
      const u = t[l][c];
      if (!u) continue;
      const f = u.startColumn + u.cell.__colSpan - 1, d = u.startRow + u.cell.__rowSpan - 1, h = u.startColumn <= s && f >= i, g = u.startRow <= a && d >= o;
      if (h && g) {
        const m = Math.min(i, u.startColumn), b = Math.max(s, f), _ = Math.min(o, u.startRow), y = Math.max(a, d);
        m === i && b === s && _ === o && y === a || (i = m, s = b, o = _, a = y, r = !0);
      }
    }
  } while (r);
  return { maxColumn: s, maxRow: a, minColumn: i, minRow: o };
}
function kw(t) {
  const [e, , n] = zN(t), r = n.getChildren(), i = r.length, o = r[0].getChildren().length, s = new Array(i);
  for (let a = 0; a < i; a++) s[a] = new Array(o);
  for (let a = 0; a < i; a++) {
    const l = r[a].getChildren();
    let c = 0;
    for (let u = 0; u < l.length; u++) {
      for (; s[a][c]; ) c++;
      const f = l[u], d = f.__rowSpan || 1, h = f.__colSpan || 1;
      for (let g = 0; g < d; g++) for (let m = 0; m < h; m++) s[a + g][c + m] = f;
      if (e === f) return { colSpan: h, columnIndex: c, rowIndex: a, rowSpan: d };
      c += h;
    }
  }
  return null;
}
function Ew(t) {
  const [[e, n, r, i], [o, s, a, l]] = ["anchor", "focus"].map((c) => {
    const u = t[c].getNode(), f = xr(u, Kn);
    Kn(f) || Pt(238, c, u.getKey(), u.getType());
    const d = f.getParent();
    Pl(d) || Pt(239, c);
    const h = d.getParent();
    return Bv(h) || Pt(240, c), [u, f, d, h];
  });
  return i.is(l) || Pt(241), { anchorCell: n, anchorNode: e, anchorRow: r, anchorTable: i, focusCell: s, focusNode: o, focusRow: a, focusTable: l };
}
let HN = class Rv {
  constructor(e, n, r) {
    this.anchor = n, this.focus = r, n._selection = this, r._selection = this, this._cachedNodes = null, this.dirty = !1, this.tableKey = e;
  }
  getStartEndPoints() {
    return [this.anchor, this.focus];
  }
  isValid() {
    return this.tableKey !== "root" && this.anchor.key !== "root" && this.anchor.type === "element" && this.focus.key !== "root" && this.focus.type === "element";
  }
  isBackward() {
    return this.focus.isBefore(this.anchor);
  }
  getCachedNodes() {
    return this._cachedNodes;
  }
  setCachedNodes(e) {
    this._cachedNodes = e;
  }
  is(e) {
    return Pv(e) && this.tableKey === e.tableKey && this.anchor.is(e.anchor) && this.focus.is(e.focus);
  }
  set(e, n, r) {
    this.dirty = this.dirty || e !== this.tableKey || n !== this.anchor.key || r !== this.focus.key, this.tableKey = e, this.anchor.key = n, this.focus.key = r, this._cachedNodes = null;
  }
  clone() {
    return new Rv(this.tableKey, Mn(this.anchor.key, this.anchor.offset, this.anchor.type), Mn(this.focus.key, this.focus.offset, this.focus.type));
  }
  isCollapsed() {
    return !1;
  }
  extract() {
    return this.getNodes();
  }
  insertRawText(e) {
  }
  insertText() {
  }
  hasFormat(e) {
    let n = 0;
    this.getNodes().filter(Kn).forEach((i) => {
      const o = i.getFirstChild();
      xp(o) && (n |= o.getTextFormat());
    });
    const r = ji[e];
    return !!(n & r);
  }
  insertNodes(e) {
    const n = this.focus.getNode();
    X(n) || Pt(151), tl(n.select(0, n.getChildrenSize())).insertNodes(e);
  }
  getShape() {
    const { anchorCell: e, focusCell: n } = Ew(this), r = kw(e);
    r === null && Pt(153);
    const i = kw(n);
    i === null && Pt(155);
    const o = Math.min(r.columnIndex, i.columnIndex), s = Math.max(r.columnIndex + r.colSpan - 1, i.columnIndex + i.colSpan - 1), a = Math.min(r.rowIndex, i.rowIndex), l = Math.max(r.rowIndex + r.rowSpan - 1, i.rowIndex + i.rowSpan - 1);
    return { fromX: Math.min(o, s), fromY: Math.min(a, l), toX: Math.max(o, s), toY: Math.max(a, l) };
  }
  getNodes() {
    if (!this.isValid()) return [];
    const e = this._cachedNodes;
    if (e !== null) return e;
    const { anchorTable: n, anchorCell: r, focusCell: i } = Ew(this), o = i.getParents()[1];
    if (o !== n) {
      if (n.isParentOf(i)) {
        const b = o.getParent();
        b == null && Pt(159), this.set(this.tableKey, i.getKey(), b.getKey());
      } else {
        const b = n.getParent();
        b == null && Pt(158), this.set(this.tableKey, b.getKey(), i.getKey());
      }
      return this.getNodes();
    }
    const [s, a, l] = UN(n, r, i), { minColumn: c, maxColumn: u, minRow: f, maxRow: d } = VN(s, a, l), h = /* @__PURE__ */ new Map([[n.getKey(), n]]);
    let g = null;
    for (let b = f; b <= d; b++) for (let _ = c; _ <= u; _++) {
      const { cell: y } = s[b][_], C = y.getParent();
      Pl(C) || Pt(160), C !== g && (h.set(C.getKey(), C), g = C), h.has(y.getKey()) || WN(y, (D) => {
        h.set(D.getKey(), D);
      });
    }
    const m = Array.from(h.values());
    return ca() || (this._cachedNodes = m), m;
  }
  getTextContent() {
    const e = this.getNodes().filter((r) => Kn(r));
    let n = "";
    for (let r = 0; r < e.length; r++) {
      const i = e[r], o = i.__parent, s = (e[r + 1] || {}).__parent;
      n += i.getTextContent() + (s !== o ? `
` : "	");
    }
    return n;
  }
};
function Pv(t) {
  return t instanceof HN;
}
function WN(t, e) {
  const n = [[t]];
  for (let r = n.at(-1); r !== void 0 && n.length > 0; r = n.at(-1)) {
    const i = r.pop();
    i === void 0 ? n.pop() : e(i) !== !1 && X(i) && n.push(i.getChildren());
  }
}
function Da(t) {
  return it(t) && t.nodeName === "TABLE";
}
function KN(t, e) {
  for (let n = e, r = null; n !== null; n = n.getParent()) {
    if (t.is(n)) return r;
    Kn(n) && (r = n);
  }
  return null;
}
function GN(t, e, n) {
  return KN(t, zi(e, n));
}
function Nw(t, e, n) {
  if (!e.theme.tableAlignment) return;
  const r = [], i = [];
  for (const o of ["center", "right"]) {
    const s = e.theme.tableAlignment[o];
    s && (o === n ? i : r).push(s);
  }
  No(t, ...r), un(t, ...i);
}
const JN = /* @__PURE__ */ new WeakSet();
function Sw(t = Wu()) {
  return JN.has(t);
}
let Lv = class $v extends pn {
  static getType() {
    return "table";
  }
  getColWidths() {
    return this.getLatest().__colWidths;
  }
  setColWidths(e) {
    const n = this.getWritable();
    return n.__colWidths = e, n;
  }
  static clone(e) {
    return new $v(e.__key);
  }
  afterCloneFrom(e) {
    super.afterCloneFrom(e), this.__colWidths = e.__colWidths, this.__rowStriping = e.__rowStriping, this.__frozenColumnCount = e.__frozenColumnCount, this.__frozenRowCount = e.__frozenRowCount;
  }
  static importDOM() {
    return { table: (e) => ({ conversion: XN, priority: 1 }) };
  }
  static importJSON(e) {
    return Fv().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setRowStriping(e.rowStriping || !1).setFrozenColumns(e.frozenColumnCount || 0).setFrozenRows(e.frozenRowCount || 0).setColWidths(e.colWidths);
  }
  constructor(e) {
    super(e), this.__rowStriping = !1, this.__frozenColumnCount = 0, this.__frozenRowCount = 0;
  }
  exportJSON() {
    return { ...super.exportJSON(), colWidths: this.getColWidths(), frozenColumnCount: this.__frozenColumnCount ? this.__frozenColumnCount : void 0, frozenRowCount: this.__frozenRowCount ? this.__frozenRowCount : void 0, rowStriping: this.__rowStriping ? this.__rowStriping : void 0 };
  }
  extractWithChild(e, n, r) {
    return r === "html";
  }
  getDOMSlot(e) {
    const n = Da(e) ? e : e.querySelector("table");
    return Da(n) || Pt(229), super.getDOMSlot(e).withElement(n).withAfter(n.querySelector("colgroup"));
  }
  createDOM(e, n) {
    const r = document.createElement("table");
    this.__style && (r.style.cssText = this.__style);
    const i = document.createElement("colgroup");
    if (r.appendChild(i), sE(i), un(r, e.theme.table), this.updateTableElement(null, r, e), Sw(n)) {
      const o = document.createElement("div"), s = e.theme.tableScrollableWrapper;
      return s ? un(o, s) : o.style.cssText = "overflow-x: auto;", o.appendChild(r), this.updateTableWrapper(null, o, r, e), o;
    }
    return r;
  }
  updateTableWrapper(e, n, r, i) {
    this.__frozenColumnCount !== (e ? e.__frozenColumnCount : 0) && function(o, s, a, l) {
      l > 0 ? (un(o, a.theme.tableFrozenColumn), s.setAttribute("data-lexical-frozen-column", "true")) : (No(o, a.theme.tableFrozenColumn), s.removeAttribute("data-lexical-frozen-column"));
    }(n, r, i, this.__frozenColumnCount), this.__frozenRowCount !== (e ? e.__frozenRowCount : 0) && function(o, s, a, l) {
      l > 0 ? (un(o, a.theme.tableFrozenRow), s.setAttribute("data-lexical-frozen-row", "true")) : (No(o, a.theme.tableFrozenRow), s.removeAttribute("data-lexical-frozen-row"));
    }(n, r, i, this.__frozenRowCount);
  }
  updateTableElement(e, n, r) {
    this.__style !== (e ? e.__style : "") && (n.style.cssText = this.__style), this.__rowStriping !== (!!e && e.__rowStriping) && function(i, o, s) {
      s ? (un(i, o.theme.tableRowStriping), i.setAttribute("data-lexical-row-striping", "true")) : (No(i, o.theme.tableRowStriping), i.removeAttribute("data-lexical-row-striping"));
    }(n, r, this.__rowStriping), function(i, o, s, a) {
      const l = i.querySelector("colgroup");
      if (!l) return;
      const c = [];
      for (let u = 0; u < s; u++) {
        const f = document.createElement("col"), d = a && a[u];
        d && (f.style.width = `${d}px`), c.push(f);
      }
      l.replaceChildren(...c);
    }(n, 0, this.getColumnCount(), this.getColWidths()), Nw(n, r, this.getFormatType());
  }
  updateDOM(e, n, r) {
    const i = this.getDOMSlot(n).element;
    return n === i === Sw() || (it(o = n) && o.nodeName === "DIV" && this.updateTableWrapper(e, n, i, r), this.updateTableElement(e, i, r), !1);
    var o;
  }
  exportDOM(e) {
    const n = super.exportDOM(e), { element: r } = n;
    return { after: (i) => {
      if (n.after && (i = n.after(i)), !Da(i) && it(i) && (i = i.querySelector("table")), !Da(i)) return null;
      Nw(i, e._config, this.getFormatType());
      const [o] = Iv(this, null, null), s = /* @__PURE__ */ new Map();
      for (const u of o) for (const f of u) {
        const d = f.cell.getKey();
        s.has(d) || s.set(d, { colSpan: f.cell.getColSpan(), startColumn: f.startColumn });
      }
      const a = /* @__PURE__ */ new Set();
      for (const u of i.querySelectorAll(":scope > tr > [data-temporary-table-cell-lexical-key]")) {
        const f = u.getAttribute("data-temporary-table-cell-lexical-key");
        if (f) {
          const d = s.get(f);
          if (u.removeAttribute("data-temporary-table-cell-lexical-key"), d) {
            s.delete(f);
            for (let h = 0; h < d.colSpan; h++) a.add(h + d.startColumn);
          }
        }
      }
      const l = i.querySelector(":scope > colgroup");
      if (l) {
        const u = Array.from(i.querySelectorAll(":scope > colgroup > col")).filter((f, d) => a.has(d));
        l.replaceChildren(...u);
      }
      const c = i.querySelectorAll(":scope > tr");
      if (c.length > 0) {
        const u = document.createElement("tbody");
        for (const f of c) u.appendChild(f);
        i.append(u);
      }
      return i;
    }, element: !Da(r) && it(r) ? r.querySelector("table") : r };
  }
  canBeEmpty() {
    return !1;
  }
  isShadowRoot() {
    return !0;
  }
  getCordsFromCellNode(e, n) {
    const { rows: r, domRows: i } = n;
    for (let o = 0; o < r; o++) {
      const s = i[o];
      if (s != null) for (let a = 0; a < s.length; a++) {
        const l = s[a];
        if (l == null) continue;
        const { elem: c } = l, u = GN(this, c);
        if (u !== null && e.is(u)) return { x: a, y: o };
      }
    }
    throw new Error("Cell not found in table.");
  }
  getDOMCellFromCords(e, n, r) {
    const { domRows: i } = r, o = i[n];
    if (o == null) return null;
    const s = o[e < o.length ? e : o.length - 1];
    return s ?? null;
  }
  getDOMCellFromCordsOrThrow(e, n, r) {
    const i = this.getDOMCellFromCords(e, n, r);
    if (!i) throw new Error("Cell not found at cords.");
    return i;
  }
  getCellNodeFromCords(e, n, r) {
    const i = this.getDOMCellFromCords(e, n, r);
    if (i == null) return null;
    const o = zi(i.elem);
    return Kn(o) ? o : null;
  }
  getCellNodeFromCordsOrThrow(e, n, r) {
    const i = this.getCellNodeFromCords(e, n, r);
    if (!i) throw new Error("Node at cords not TableCellNode.");
    return i;
  }
  getRowStriping() {
    return !!this.getLatest().__rowStriping;
  }
  setRowStriping(e) {
    const n = this.getWritable();
    return n.__rowStriping = e, n;
  }
  setFrozenColumns(e) {
    const n = this.getWritable();
    return n.__frozenColumnCount = e, n;
  }
  getFrozenColumns() {
    return this.getLatest().__frozenColumnCount;
  }
  setFrozenRows(e) {
    const n = this.getWritable();
    return n.__frozenRowCount = e, n;
  }
  getFrozenRows() {
    return this.getLatest().__frozenRowCount;
  }
  canSelectBefore() {
    return !0;
  }
  canIndent() {
    return !1;
  }
  getColumnCount() {
    const e = this.getFirstChild();
    if (!e) return 0;
    let n = 0;
    return e.getChildren().forEach((r) => {
      Kn(r) && (n += r.getColSpan());
    }), n;
  }
};
function XN(t) {
  const e = Fv();
  t.hasAttribute("data-lexical-row-striping") && e.setRowStriping(!0), t.hasAttribute("data-lexical-frozen-column") && e.setFrozenColumns(1), t.hasAttribute("data-lexical-frozen-row") && e.setFrozenRows(1);
  const n = t.querySelector(":scope > colgroup");
  if (n) {
    let r = [];
    for (const i of n.querySelectorAll(":scope > col")) {
      let o = i.style.width || "";
      if (!$p.test(o) && (o = i.getAttribute("width") || "", !/^\d+$/.test(o))) {
        r = void 0;
        break;
      }
      r.push(parseFloat(o));
    }
    r && e.setColWidths(r);
  }
  return { after: (r) => fv(r, Pl), node: e };
}
function Fv() {
  return lt(new Lv());
}
function Bv(t) {
  return t instanceof Lv;
}
const qv = Object.freeze({ "	": "\\t", "\n": "\\n" }), Tw = new RegExp(Object.keys(qv).join("|"), "g"), jr = Object.freeze({ ancestorHasNextSibling: "|", ancestorIsLastChild: " ", hasNextSibling: "├", isLastChild: "└", selectedChar: "^", selectedLine: ">" }), YN = [(t) => t.hasFormat("bold") && "Bold", (t) => t.hasFormat("code") && "Code", (t) => t.hasFormat("italic") && "Italic", (t) => t.hasFormat("strikethrough") && "Strikethrough", (t) => t.hasFormat("subscript") && "Subscript", (t) => t.hasFormat("superscript") && "Superscript", (t) => t.hasFormat("underline") && "Underline", (t) => t.hasFormat("highlight") && "Highlight"], QN = [(t) => t.hasTextFormat("bold") && "Bold", (t) => t.hasTextFormat("code") && "Code", (t) => t.hasTextFormat("italic") && "Italic", (t) => t.hasTextFormat("strikethrough") && "Strikethrough", (t) => t.hasTextFormat("subscript") && "Subscript", (t) => t.hasTextFormat("superscript") && "Superscript", (t) => t.hasTextFormat("underline") && "Underline", (t) => t.hasTextFormat("highlight") && "Highlight"], ZN = [(t) => t.isDirectionless() && "Directionless", (t) => t.isUnmergeable() && "Unmergeable"], eS = [(t) => t.isToken() && "Token", (t) => t.isSegmented() && "Segmented"];
function tS(t, e, n, r, i = !1) {
  const o = t.getEditorState(), s = t._config, a = t._compositionKey, l = t._editable;
  if (n) {
    let d = "";
    return o.read(() => {
      d = function(h) {
        const g = document.createElement("div");
        return g.innerHTML = h.trim(), Uv(g, 0).innerHTML;
      }(bv(t));
    }), d;
  }
  let c = ` root
`;
  const u = o.read(() => {
    const d = oe();
    return jv(Ve(), (h, g) => {
      const m = `(${h.getKey()})`, b = h.getType() || "", _ = h.isSelected();
      c += `${_ ? jr.selectedLine : " "} ${g.join(" ")} ${m} ${b} ${function(y, C, D = !1) {
        const R = C ? C(y, D) : void 0;
        if (R !== void 0 && R.length > 0) return R;
        if (ie(y)) {
          const N = y.getTextContent(), L = N.length === 0 ? "(empty)" : `"${Aw(N, D)}"`, O = function(M) {
            return [Dw(M), nS(M), rS(M), Mw(M)].filter(Boolean).join(", ");
          }(y);
          return [L, O.length !== 0 ? `{ ${O} }` : null].filter(Boolean).join(" ").trim();
        }
        if (MN(y)) {
          const N = y.getURL(), L = N.length === 0 ? "(empty)" : `"${Aw(N, D)}"`, O = function(M) {
            return [iS(M), oS(M), sS(M), Mw(M)].filter(Boolean).join(", ");
          }(y);
          return [L, O.length !== 0 ? `{ ${O} }` : null].filter(Boolean).join(" ").trim();
        }
        if (IN(y)) return `ids: [ ${y.getIDs().join(", ")} ]`;
        if (xp(y)) {
          const N = function(O) {
            let M = QN.map((q) => q(O)).filter(Boolean).join(", ").toLocaleLowerCase();
            return M !== "" && (M = "format: " + M), M;
          }(y);
          let L = N !== "" ? `{ ${N} }` : "";
          return L += y.__style ? `(${y.__style})` : "", L;
        }
        return "";
      }(h, r, i)}
`, c += function({ indent: y, isSelected: C, node: D, nodeKeyDisplay: R, selection: N, typeDisplay: L }) {
        if (!ie(D) || !Z(N) || !C || X(D)) return "";
        const O = N.anchor, M = N.focus;
        if (D.getTextContent() === "" || O.getNode() === N.focus.getNode() && O.offset === M.offset) return "";
        const [q, k] = function(V, J) {
          const H = J.getStartEndPoints();
          if (bn(J) || H === null) return [-1, -1];
          const [K, ne] = H, re = V.getTextContent(), te = re.length;
          let Q = -1, ce = -1;
          if (K.type === "text" && ne.type === "text") {
            const ye = K.getNode(), ve = ne.getNode();
            ye === ve && V === ye && K.offset !== ne.offset ? [Q, ce] = K.offset < ne.offset ? [K.offset, ne.offset] : [ne.offset, K.offset] : [Q, ce] = V === ye ? ye.isBefore(ve) ? [K.offset, te] : [0, K.offset] : V === ve ? ve.isBefore(ye) ? [ne.offset, te] : [0, ne.offset] : [0, te];
          }
          const pe = (re.slice(0, Q).match(Tw) || []).length, me = (re.slice(Q, ce).match(Tw) || []).length;
          return [Q + pe, ce + pe + me];
        }(D, N);
        if (q === k) return "";
        const I = y[y.length - 1] === jr.hasNextSibling ? jr.ancestorHasNextSibling : jr.ancestorIsLastChild, S = [...y.slice(0, y.length - 1), I], P = Array(q + 1).fill(" "), T = Array(k - q).fill(jr.selectedChar), A = L.length + 2, B = Array(R.length + A).fill(" ");
        return [jr.selectedLine, S.join(" "), [...B, ...P, ...T].join("")].join(" ") + `
`;
      }({ indent: g, isSelected: _, node: h, nodeKeyDisplay: m, selection: d, typeDisplay: b });
    }), d === null ? ": null" : Z(d) ? function(h) {
      let g = "";
      const m = Dw(h);
      g += `: range ${m !== "" ? `{ ${m} }` : ""} ${h.style !== "" ? `{ style: ${h.style} } ` : ""}`;
      const b = h.anchor, _ = h.focus, y = b.offset, C = _.offset;
      return g += `
  ├ anchor { key: ${b.key}, offset: ${y === null ? "null" : y}, type: ${b.type} }`, g += `
  └ focus { key: ${_.key}, offset: ${C === null ? "null" : C}, type: ${_.type} }`, g;
    }(d) : Pv(d) ? function(h) {
      return `: table
  └ { table: ${h.tableKey}, anchorCell: ${h.anchor.key}, focusCell: ${h.focus.key} }`;
    }(d) : function(h) {
      return bn(h) ? `: node
  └ [${Array.from(h._nodes).join(", ")}]` : "";
    }(d);
  });
  if (c += `
 selection` + u, c += `

 commands:`, e.length) for (const { index: d, type: h, payload: g } of e) c += `
  └ ${d}. { type: ${h}, payload: ${g instanceof Event ? g.constructor.name : g} }`;
  else c += `
  └ None dispatched.`;
  const { version: f } = t.constructor;
  return c += `

 editor${f ? ` (v${f})` : ""}:`, c += `
  └ namespace ${s.namespace}`, a !== null && (c += `
  └ compositionKey ${a}`), c += `
  └ editable ${String(l)}`, c;
}
function jv(t, e, n = []) {
  const r = t.getChildren(), i = r.length;
  r.forEach((o, s) => {
    e(o, n.concat(s === i - 1 ? jr.isLastChild : jr.hasNextSibling)), X(o) && jv(o, e, n.concat(s === i - 1 ? jr.ancestorIsLastChild : jr.ancestorHasNextSibling));
  });
}
function Aw(t, e = !1) {
  const n = Object.entries(qv).reduce((r, [i, o]) => r.replace(new RegExp(i, "g"), String(o)), t);
  return e ? n.replace(/[^\s]/g, "*") : n;
}
function nS(t) {
  let e = ZN.map((n) => n(t)).filter(Boolean).join(", ").toLocaleLowerCase();
  return e !== "" && (e = "detail: " + e), e;
}
function rS(t) {
  let e = eS.map((n) => n(t)).filter(Boolean).join(", ").toLocaleLowerCase();
  return e !== "" && (e = "mode: " + e), e;
}
function Dw(t) {
  let e = YN.map((n) => n(t)).filter(Boolean).join(", ").toLocaleLowerCase();
  return e !== "" && (e = "format: " + e), e;
}
function iS(t) {
  let e = t.getTarget();
  return e != null && (e = "target: " + e), e;
}
function oS(t) {
  let e = t.getRel();
  return e != null && (e = "rel: " + e), e;
}
function sS(t) {
  let e = t.getTitle();
  return e != null && (e = "title: " + e), e;
}
function Mw(t) {
  if (!t.__state) return !1;
  const e = [];
  for (const [r, i] of t.__state.knownState.entries()) {
    if (r.isEqual(i, r.defaultValue)) continue;
    const o = JSON.stringify(r.unparse(i));
    e.push(`[${r.key}: ${o}]`);
  }
  let n = e.join(",");
  return n !== "" && (n = "state: " + n), n;
}
function Uv(t, e) {
  const n = new Array(1 + e++).join("  "), r = new Array(e - 1).join("  ");
  let i;
  for (let o = 0; o < t.children.length; o++) i = document.createTextNode(`
` + n), t.insertBefore(i, t.children[o]), Uv(t.children[o], e), t.lastElementChild === t.children[o] && (i = document.createTextNode(`
` + r), t.appendChild(i));
  return t;
}
const aS = Yn(function({ treeTypeButtonClassName: t, timeTravelButtonClassName: e, timeTravelPanelSliderClassName: n, timeTravelPanelButtonClassName: r, viewClassName: i, timeTravelPanelClassName: o, editorState: s, setEditorState: a, setEditorReadOnly: l, generateContent: c, commandsLog: u = [] }, f) {
  const [d, h] = fe([]), [g, m] = fe(""), [b, _] = fe(!1), [y, C] = fe(!1), D = xe(0), R = xe(null), [N, L] = fe(!1), [O, M] = fe(!1), [q, k] = fe(!1), I = xe(), S = xe([]), P = xe(0), T = be((B) => {
    const V = ++P.current;
    c(B).then((J) => {
      V === P.current && m(J);
    }).catch((J) => {
      V === P.current && m(`Error rendering tree: ${J.message}

Stack:
${J.stack}`);
    });
  }, [c]);
  ue(() => {
    if (!(!q && s._nodeMap.size > 1e3 && (M(!0), !q)) && (I.current !== s || S.current !== u)) {
      const B = I.current !== s;
      I.current = s, S.current = u, T(y), !b && B && h((V) => [...V, [Date.now(), s]]);
    }
  }, [s, T, y, q, b, u]);
  const A = d.length;
  return ue(() => {
    if (N) {
      let B;
      const V = () => {
        const J = D.current;
        if (J === A - 1) return void L(!1);
        const H = d[J][0], K = d[J + 1][0];
        B = setTimeout(() => {
          D.current++;
          const ne = D.current, re = R.current;
          re !== null && (re.value = String(ne)), a(d[ne][1]), V();
        }, K - H);
      };
      return V(), () => {
        clearTimeout(B);
      };
    }
  }, [d, N, A, a]), j("div", { className: i, children: [!q && O ? j("div", { style: { padding: 20 }, children: [p("span", { style: { marginRight: 20 }, children: "Detected large EditorState, this can impact debugging performance." }), p("button", { onClick: () => {
    k(!0);
  }, style: { background: "transparent", border: "1px solid white", color: "white", cursor: "pointer", padding: 5 }, children: "Show full tree" })] }) : null, q ? null : p("button", { onClick: () => (T(!y), void C(!y)), className: t, type: "button", children: y ? "Tree" : "Export DOM" }), !b && (q || !O) && A > 2 && p("button", { onClick: () => {
    l(!0), D.current = A - 1, _(!0);
  }, className: e, type: "button", children: "Time Travel" }), (q || !O) && p("pre", { ref: f, children: g }), b && (q || !O) && j("div", { className: o, children: [p("button", { className: r, onClick: () => {
    D.current === A - 1 && (D.current = 1), L(!N);
  }, type: "button", children: N ? "Pause" : "Play" }), p("input", { className: n, ref: R, onChange: (B) => {
    const V = Number(B.target.value), J = d[V];
    J && (D.current = V, a(J[1]));
  }, type: "range", min: "1", max: A - 1 }), p("button", { className: r, onClick: () => {
    l(!1);
    const B = d.length - 1, V = d[B];
    a(V[1]);
    const J = R.current;
    J !== null && (J.value = String(B)), _(!1), L(!1);
  }, type: "button", children: "Exit" })] })] });
});
function lS(t, e) {
  const n = /* @__PURE__ */ new Set();
  let r = 0;
  for (const [i] of t._commands) n.add(t.registerCommand(i, (o) => (e((s) => {
    r += 1;
    const a = [...s];
    return a.push({ index: r, payload: o, type: i.type ? i.type : "UNKNOWN" }), a.length > 10 && a.shift(), a;
  }), !1), _s));
  return () => n.forEach((i) => i());
}
function cS(t) {
  const [e, n] = fe([]);
  return ue(() => lS(t, n), [t]), Ne(() => e, [e]);
}
function uS({ treeTypeButtonClassName: t, timeTravelButtonClassName: e, timeTravelPanelSliderClassName: n, timeTravelPanelButtonClassName: r, timeTravelPanelClassName: i, viewClassName: o, editor: s, customPrintNode: a }) {
  const l = ws.createRef(), [c, u] = fe(s.getEditorState()), f = cS(s);
  return ue(() => Ht(s.registerUpdateListener(({ editorState: d }) => {
    u(d);
  }), s.registerEditableListener(() => {
    u(s.getEditorState());
  })), [s]), ue(() => {
    const d = l.current;
    if (d !== null) return d.__lexicalEditor = s, () => {
      d.__lexicalEditor = null;
    };
  }, [s, l]), p(aS, { treeTypeButtonClassName: t, timeTravelButtonClassName: e, timeTravelPanelSliderClassName: n, timeTravelPanelButtonClassName: r, viewClassName: o, timeTravelPanelClassName: i, setEditorReadOnly: (d) => {
    const h = s.getRootElement();
    h != null && (h.contentEditable = d ? "false" : "true");
  }, editorState: c, setEditorState: (d) => s.setEditorState(d), generateContent: async function(d) {
    return tS(s, f, d, a);
  }, ref: l, commandsLog: f });
}
const zv = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, dS = zv ? Cn : ue, hc = { tag: Co };
function Vv({ initialConfig: t, children: e }) {
  const n = Ne(() => {
    const { theme: r, namespace: i, nodes: o, onError: s, editorState: a, html: l } = t, c = NN(null, r), u = Wk({ editable: t.editable, html: l, namespace: i, nodes: o, onError: (f) => s(f, u), theme: r });
    return function(f, d) {
      if (d !== null) {
        if (d === void 0) f.update(() => {
          const h = Ve();
          if (h.isEmpty()) {
            const g = Jn();
            h.append(g);
            const m = zv ? document.activeElement : null;
            (oe() !== null || m !== null && m === f.getRootElement()) && g.select();
          }
        }, hc);
        else if (d !== null) switch (typeof d) {
          case "string": {
            const h = f.parseEditorState(d);
            f.setEditorState(h, hc);
            break;
          }
          case "object":
            f.setEditorState(d, hc);
            break;
          case "function":
            f.update(() => {
              Ve().isEmpty() && d(f);
            }, hc);
        }
      }
    }(u, a), [u, c];
  }, []);
  return dS(() => {
    const r = t.editable, [i] = n;
    i.setEditable(r === void 0 || r);
  }, []), p(wv.Provider, { value: n, children: e });
}
function Hv() {
  return Ve().getTextContent();
}
function Wv(t, e = !0) {
  if (t) return !1;
  let n = Hv();
  return e && (n = n.trim()), n === "";
}
function fS(t) {
  if (!Wv(t, !1)) return !1;
  const e = Ve().getChildren(), n = e.length;
  if (n > 1) return !1;
  for (let r = 0; r < n; r++) {
    const i = e[r];
    if (Xe(i)) return !1;
    if (X(i)) {
      if (!xp(i) || i.__indent !== 0) return !1;
      const o = i.getChildren(), s = o.length;
      for (let a = 0; a < s; a++) {
        const l = o[r];
        if (!ie(l)) return !1;
      }
    }
  }
  return !0;
}
function Bp(t) {
  return () => fS(t);
}
const Kv = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function hS({ editor: t, ariaActiveDescendant: e, ariaAutoComplete: n, ariaControls: r, ariaDescribedBy: i, ariaErrorMessage: o, ariaExpanded: s, ariaInvalid: a, ariaLabel: l, ariaLabelledBy: c, ariaMultiline: u, ariaOwns: f, ariaRequired: d, autoCapitalize: h, className: g, id: m, role: b = "textbox", spellCheck: _ = !0, style: y, tabIndex: C, "data-testid": D, ...R }, N) {
  const [L, O] = fe(t.isEditable()), M = be((k) => {
    k && k.ownerDocument && k.ownerDocument.defaultView ? t.setRootElement(k) : t.setRootElement(null);
  }, [t]), q = Ne(() => /* @__PURE__ */ function(...k) {
    return (I) => {
      k.forEach((S) => {
        typeof S == "function" ? S(I) : S != null && (S.current = I);
      });
    };
  }(N, M), [M, N]);
  return Kv(() => (O(t.isEditable()), t.registerEditableListener((k) => {
    O(k);
  })), [t]), p("div", { "aria-activedescendant": L ? e : void 0, "aria-autocomplete": L ? n : "none", "aria-controls": L ? r : void 0, "aria-describedby": i, ...o != null ? { "aria-errormessage": o } : {}, "aria-expanded": L && b === "combobox" ? !!s : void 0, ...a != null ? { "aria-invalid": a } : {}, "aria-label": l, "aria-labelledby": c, "aria-multiline": u, "aria-owns": L ? f : void 0, "aria-readonly": !L || void 0, "aria-required": d, autoCapitalize: h, className: g, contentEditable: L, "data-testid": D, id: m, ref: q, role: b, spellCheck: _, style: y, tabIndex: C, ...R });
}
const pS = Yn(hS);
function Ow(t) {
  return t.getEditorState().read(Bp(t.isComposing()));
}
const Gv = Yn(gS);
function gS(t, e) {
  const { placeholder: n, ...r } = t, [i] = Le();
  return j(Lt, { children: [p(pS, { editor: i, ...r, ref: e }), n != null && p(mS, { editor: i, content: n })] });
}
function mS({ content: t, editor: e }) {
  const n = function(s) {
    const [a, l] = fe(() => Ow(s));
    return Kv(() => {
      function c() {
        const u = Ow(s);
        l(u);
      }
      return c(), Ht(s.registerUpdateListener(() => {
        c();
      }), s.registerEditableListener(() => {
        c();
      }));
    }, [s]), a;
  }(e), [r, i] = fe(e.isEditable());
  if (Cn(() => (i(e.isEditable()), e.registerEditableListener((s) => {
    i(s);
  })), [e]), !n) return null;
  let o = null;
  return typeof t == "function" ? o = t(r) : t !== null && (o = t), o === null ? null : p("div", { "aria-hidden": !0, children: o });
}
function Jv({ editorRef: t }) {
  const [e] = Le();
  return ws.useEffect(() => {
    typeof t == "function" ? t(e) : typeof t == "object" && (t.current = e);
  }, [e]), null;
}
function rh(t, e) {
  return rh = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, rh(t, e);
}
var Iw = { error: null }, wS = function(t) {
  var e, n;
  function r() {
    for (var o, s = arguments.length, a = new Array(s), l = 0; l < s; l++) a[l] = arguments[l];
    return (o = t.call.apply(t, [this].concat(a)) || this).state = Iw, o.resetErrorBoundary = function() {
      for (var c, u = arguments.length, f = new Array(u), d = 0; d < u; d++) f[d] = arguments[d];
      o.props.onReset == null || (c = o.props).onReset.apply(c, f), o.reset();
    }, o;
  }
  n = t, (e = r).prototype = Object.create(n.prototype), e.prototype.constructor = e, rh(e, n), r.getDerivedStateFromError = function(o) {
    return { error: o };
  };
  var i = r.prototype;
  return i.reset = function() {
    this.setState(Iw);
  }, i.componentDidCatch = function(o, s) {
    var a, l;
    (a = (l = this.props).onError) == null || a.call(l, o, s);
  }, i.componentDidUpdate = function(o, s) {
    var a, l, c, u, f = this.state.error, d = this.props.resetKeys;
    f !== null && s.error !== null && ((c = o.resetKeys) === void 0 && (c = []), (u = d) === void 0 && (u = []), c.length !== u.length || c.some(function(h, g) {
      return !Object.is(h, u[g]);
    })) && ((a = (l = this.props).onResetKeysChange) == null || a.call(l, o.resetKeys, d), this.reset());
  }, i.render = function() {
    var o = this.state.error, s = this.props, a = s.fallbackRender, l = s.FallbackComponent, c = s.fallback;
    if (o !== null) {
      var u = { error: o, resetErrorBoundary: this.resetErrorBoundary };
      if (ws.isValidElement(c)) return c;
      if (typeof a == "function") return a(u);
      if (l) return ws.createElement(l, u);
      throw new Error("react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop");
    }
    return this.props.children;
  }, r;
}(ws.Component);
function Xv({ children: t, onError: e }) {
  return p(wS, { fallback: p("div", { style: { border: "1px solid #f00", color: "#f00", padding: "8px" }, children: "An error was thrown." }), onError: e, children: t });
}
const pc = 0, ih = 1, oh = 2, pr = 0, bS = 1, Rw = 2, yS = 3, vS = 4;
function _S(t, e, n, r, i) {
  if (t === null || n.size === 0 && r.size === 0 && !i) return pr;
  const o = e._selection, s = t._selection;
  if (i) return bS;
  if (!(Z(o) && Z(s) && s.isCollapsed() && o.isCollapsed())) return pr;
  const a = function(_, y, C) {
    const D = _._nodeMap, R = [];
    for (const N of y) {
      const L = D.get(N);
      L !== void 0 && R.push(L);
    }
    for (const [N, L] of C) {
      if (!L) continue;
      const O = D.get(N);
      O === void 0 || tn(O) || R.push(O);
    }
    return R;
  }(e, n, r);
  if (a.length === 0) return pr;
  if (a.length > 1) {
    const _ = e._nodeMap, y = _.get(o.anchor.key), C = _.get(s.anchor.key);
    return y && C && !t._nodeMap.has(y.__key) && ie(y) && y.__text.length === 1 && o.anchor.offset === 1 ? Rw : pr;
  }
  const l = a[0], c = t._nodeMap.get(l.__key);
  if (!ie(c) || !ie(l) || c.__mode !== l.__mode) return pr;
  const u = c.__text, f = l.__text;
  if (u === f) return pr;
  const d = o.anchor, h = s.anchor;
  if (d.key !== h.key || d.type !== "text") return pr;
  const g = d.offset, m = h.offset, b = f.length - u.length;
  return b === 1 && m === g - 1 ? Rw : b === -1 && m === g + 1 ? yS : b === -1 && m === g ? vS : pr;
}
function xS(t, e) {
  let n = Date.now(), r = pr;
  return (i, o, s, a, l, c) => {
    const u = Date.now();
    if (c.has(Vf)) return r = pr, n = u, oh;
    const f = _S(i, o, a, l, t.isComposing()), d = (() => {
      const h = s === null || s.editor === t, g = c.has(jk);
      if (!g && h && c.has(Co)) return pc;
      if (i === null) return ih;
      const m = o._selection;
      return a.size > 0 || l.size > 0 ? g === !1 && f !== pr && f === r && u < n + e && h || a.size === 1 && function(b, _, y) {
        const C = _._nodeMap.get(b), D = y._nodeMap.get(b), R = _._selection, N = y._selection;
        return !(Z(R) && Z(N) && R.anchor.type === "element" && R.focus.type === "element" && N.anchor.type === "text" && N.focus.type === "text" || !ie(C) || !ie(D) || C.__parent !== D.__parent) && JSON.stringify(_.read(() => C.exportJSON())) === JSON.stringify(y.read(() => D.exportJSON()));
      }(Array.from(a)[0], i, o) ? pc : ih : m !== null ? pc : oh;
    })();
    return n = u, r = f, d;
  };
}
function Pw(t) {
  t.undoStack = [], t.redoStack = [], t.current = null;
}
function CS(t, e, n) {
  const r = xS(t, n);
  return Ht(t.registerCommand(kl, () => (function(o, s) {
    const a = s.redoStack, l = s.undoStack;
    if (l.length !== 0) {
      const c = s.current, u = l.pop();
      c !== null && (a.push(c), o.dispatchCommand(La, !0)), l.length === 0 && o.dispatchCommand($a, !1), s.current = u || null, u && u.editor.setEditorState(u.editorState, { tag: Vf });
    }
  }(t, e), !0), ke), t.registerCommand(El, () => (function(o, s) {
    const a = s.redoStack, l = s.undoStack;
    if (a.length !== 0) {
      const c = s.current;
      c !== null && (l.push(c), o.dispatchCommand($a, !0));
      const u = a.pop();
      a.length === 0 && o.dispatchCommand(La, !1), s.current = u || null, u && u.editor.setEditorState(u.editorState, { tag: Vf });
    }
  }(t, e), !0), ke), t.registerCommand(gp, () => (Pw(e), !1), ke), t.registerCommand(d0, () => (Pw(e), t.dispatchCommand(La, !1), t.dispatchCommand($a, !1), !0), ke), t.registerUpdateListener(({ editorState: o, prevEditorState: s, dirtyLeaves: a, dirtyElements: l, tags: c }) => {
    const u = e.current, f = e.redoStack, d = e.undoStack, h = u === null ? null : u.editorState;
    if (u !== null && o === h) return;
    const g = r(s, o, u, a, l, c);
    if (g === ih) f.length !== 0 && (e.redoStack = [], t.dispatchCommand(La, !1)), u !== null && (d.push({ ...u }), t.dispatchCommand($a, !0));
    else if (g === oh) return;
    e.current = { editor: t, editorState: o };
  }));
}
function kS() {
  return { current: null, redoStack: [], undoStack: [] };
}
function Yv({ delay: t, externalHistoryState: e }) {
  const [n] = Le();
  return function(r, i, o = 1e3) {
    const s = Ne(() => i || kS(), [i]);
    ue(() => CS(r, s, o), [o, r, s]);
  }(n, e, t), null;
}
const ES = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function NS(t) {
  return { initialValueFn: () => t.isEditable(), subscribe: (e) => t.registerEditableListener(e) };
}
function Qv() {
  return function(t) {
    const [e] = Le(), n = Ne(() => t(e), [e, t]), [r, i] = fe(() => n.initialValueFn()), o = xe(r);
    return ES(() => {
      const { initialValueFn: s, subscribe: a } = n, l = s();
      return o.current !== l && (o.current = l, i(l)), a((c) => {
        o.current = c, i(c);
      });
    }, [n, t]), r;
  }(NS);
}
function Zv(t) {
  const e = window.location.origin, n = (r) => {
    if (r.origin !== e) return;
    const i = t.getRootElement();
    if (document.activeElement !== i) return;
    const o = r.data;
    if (typeof o == "string") {
      let s;
      try {
        s = JSON.parse(o);
      } catch {
        return;
      }
      if (s && s.protocol === "nuanria_messaging" && s.type === "request") {
        const a = s.payload;
        if (a && a.functionId === "makeChanges") {
          const l = a.args;
          if (l) {
            const [c, u, f, d, h, g] = l;
            t.update(() => {
              const m = oe();
              if (Z(m)) {
                const b = m.anchor;
                let _ = b.getNode(), y = 0, C = 0;
                if (ie(_) && c >= 0 && u >= 0 && (y = c, C = c + u, m.setTextNodeRange(_, y, _, C)), y === C && f === "" || (m.insertRawText(f), _ = b.getNode()), ie(_)) {
                  y = d, C = d + h;
                  const D = _.getTextContentSize();
                  y = y > D ? D : y, C = C > D ? D : C, m.setTextNodeRange(_, y, _, C);
                }
                r.stopImmediatePropagation();
              }
            });
          }
        }
      }
    }
  };
  return window.addEventListener("message", n, !0), () => {
    window.removeEventListener("message", n, !0);
  };
}
function Lw(t, e) {
  if (document.caretRangeFromPoint !== void 0) {
    const n = document.caretRangeFromPoint(t, e);
    return n === null ? null : { node: n.startContainer, offset: n.startOffset };
  }
  if (document.caretPositionFromPoint !== "undefined") {
    const n = document.caretPositionFromPoint(t, e);
    return n === null ? null : { node: n.offsetNode, offset: n.offset };
  }
  return null;
}
const da = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, SS = da && "documentMode" in document ? document.documentMode : null, TS = !(!da || !("InputEvent" in window) || SS) && "getTargetRanges" in new window.InputEvent("input"), AS = da && /Version\/[\d.]+.*Safari/.test(navigator.userAgent), $w = da && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream, DS = da && /^(?=.*Chrome).*/i.test(navigator.userAgent), MS = da && /AppleWebKit\/[\d.]+/.test(navigator.userAgent) && !DS, Fw = Se("DRAG_DROP_PASTE_FILE");
function gc(t) {
  let e = null;
  if (gi(t, DragEvent) ? e = t.dataTransfer : gi(t, ClipboardEvent) && (e = t.clipboardData), e === null) return [!1, [], !1];
  const n = e.types, r = n.includes("Files"), i = n.includes("text/html") || n.includes("text/plain");
  return [r, Array.from(e.files), i];
}
function Bw(t) {
  const e = oe();
  if (!Z(e)) return !1;
  const n = /* @__PURE__ */ new Set(), r = e.getNodes();
  for (let i = 0; i < r.length; i++) {
    const o = r[i], s = o.getKey();
    if (n.has(s)) continue;
    const a = xr(o, (c) => X(c) && !c.isInline());
    if (a === null) continue;
    const l = a.getKey();
    a.canIndent() && !n.has(l) && (n.add(l), t(a));
  }
  return n.size > 0;
}
function qw(t) {
  const e = zi(t);
  return Xe(e);
}
function Yd(t) {
  for (const e of ["lowercase", "uppercase", "capitalize"]) t.hasFormat(e) && t.toggleFormat(e);
}
function OS(t) {
  return Ht(t.registerCommand(l0, (e) => {
    const n = oe();
    return !!bn(n) && (n.clear(), !0);
  }, ke), t.registerCommand(Hr, (e) => {
    const n = oe();
    return Z(n) ? (n.deleteCharacter(e), !0) : !!bn(n) && (n.deleteNodes(), !0);
  }, ke), t.registerCommand(Rs, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteWord(e), !0);
  }, ke), t.registerCommand(Ps, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteLine(e), !0);
  }, ke), t.registerCommand(_o, (e) => {
    const n = oe();
    if (typeof e == "string") n !== null && n.insertText(e);
    else {
      if (n === null) return !1;
      const r = e.dataTransfer;
      if (r != null) yw(r, n, t);
      else if (Z(n)) {
        const i = e.data;
        return i && n.insertText(i), !0;
      }
    }
    return !0;
  }, ke), t.registerCommand(Kc, () => {
    const e = oe();
    return !!Z(e) && (e.removeText(), !0);
  }, ke), t.registerCommand(Ri, (e) => {
    const n = oe();
    return !!Z(n) && (n.formatText(e), !0);
  }, ke), t.registerCommand(xk, (e) => {
    const n = oe();
    if (!Z(n) && !bn(n)) return !1;
    const r = n.getNodes();
    for (const i of r) {
      const o = xr(i, (s) => X(s) && !s.isInline());
      o !== null && o.setFormat(e);
    }
    return !0;
  }, ke), t.registerCommand(Fi, (e) => {
    const n = oe();
    return !!Z(n) && (n.insertLineBreak(e), !0);
  }, ke), t.registerCommand(ol, () => {
    const e = oe();
    return !!Z(e) && (e.insertParagraph(), !0);
  }, ke), t.registerCommand(vk, () => ($k([Tl()]), !0), ke), t.registerCommand(_k, () => Bw((e) => {
    const n = e.getIndent();
    e.setIndent(n + 1);
  }), ke), t.registerCommand(pm, () => Bw((e) => {
    const n = e.getIndent();
    n > 0 && e.setIndent(Math.max(0, n - 1));
  }), ke), t.registerCommand(cp, (e) => {
    const n = oe();
    if (bn(n)) {
      const r = n.getNodes();
      if (r.length > 0) return r[0].selectPrevious(), !0;
    } else if (Z(n)) {
      const r = Wf(n.focus, !0);
      if (!e.shiftKey && Xe(r) && !r.isIsolated() && !r.isInline()) return r.selectPrevious(), e.preventDefault(), !0;
    }
    return !1;
  }, ke), t.registerCommand(up, (e) => {
    const n = oe();
    if (bn(n)) {
      const r = n.getNodes();
      if (r.length > 0) return r[0].selectNext(0, 0), !0;
    } else if (Z(n)) {
      if (function(i) {
        const o = i.focus;
        return o.key === "root" && o.offset === Ve().getChildrenSize();
      }(n)) return e.preventDefault(), !0;
      const r = Wf(n.focus, !1);
      if (!e.shiftKey && Xe(r) && !r.isIsolated() && !r.isInline()) return r.selectNext(), e.preventDefault(), !0;
    }
    return !1;
  }, ke), t.registerCommand(lp, (e) => {
    const n = oe();
    if (bn(n)) {
      const r = n.getNodes();
      if (r.length > 0) return e.preventDefault(), r[0].selectPrevious(), !0;
    }
    if (!Z(n)) return !1;
    if (ru(n, !0)) {
      const r = e.shiftKey;
      return e.preventDefault(), iu(n, r, !0), !0;
    }
    return !1;
  }, ke), t.registerCommand(ap, (e) => {
    const n = oe();
    if (bn(n)) {
      const i = n.getNodes();
      if (i.length > 0) return e.preventDefault(), i[0].selectNext(0, 0), !0;
    }
    if (!Z(n)) return !1;
    const r = e.shiftKey;
    return !!ru(n, !1) && (e.preventDefault(), iu(n, r, !1), !0);
  }, ke), t.registerCommand(dp, (e) => {
    if (qw(e.target)) return !1;
    const n = oe();
    if (Z(n)) {
      if (function(r) {
        if (!r.isCollapsed()) return !1;
        const { anchor: i } = r;
        if (i.offset !== 0) return !1;
        const o = i.getNode();
        if (tn(o)) return !1;
        const s = $E(o);
        return s.getIndent() > 0 && (s.is(o) || o.is(s.getFirstDescendant()));
      }(n)) return e.preventDefault(), t.dispatchCommand(pm, void 0);
      if ($w && navigator.language === "ko-KR") return !1;
    } else if (!bn(n)) return !1;
    return e.preventDefault(), t.dispatchCommand(Hr, !0);
  }, ke), t.registerCommand(fp, (e) => {
    if (qw(e.target)) return !1;
    const n = oe();
    return !(!Z(n) && !bn(n)) && (e.preventDefault(), t.dispatchCommand(Hr, !1));
  }, ke), t.registerCommand(Ls, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    if (Yd(n), e !== null) {
      if (($w || AS || MS) && TS) return !1;
      if (e.preventDefault(), e.shiftKey) return t.dispatchCommand(Fi, !1);
    }
    return t.dispatchCommand(ol, void 0);
  }, ke), t.registerCommand($u, () => {
    const e = oe();
    return !!Z(e) && (t.blur(), !0);
  }, ke), t.registerCommand(Fu, (e) => {
    const [, n] = gc(e);
    if (n.length > 0) {
      const i = Lw(e.clientX, e.clientY);
      if (i !== null) {
        const { offset: o, node: s } = i, a = zi(s);
        if (a !== null) {
          const l = Dl();
          if (ie(a)) l.anchor.set(a.getKey(), o, "text"), l.focus.set(a.getKey(), o, "text");
          else {
            const u = a.getParentOrThrow().getKey(), f = a.getIndexWithinParent() + 1;
            l.anchor.set(u, f, "element"), l.focus.set(u, f, "element");
          }
          const c = tl(l);
          sn(c);
        }
        t.dispatchCommand(Fw, n);
      }
      return e.preventDefault(), !0;
    }
    const r = oe();
    return !!Z(r);
  }, ke), t.registerCommand(pp, (e) => {
    const [n] = gc(e), r = oe();
    return !(n && !Z(r));
  }, ke), t.registerCommand(u0, (e) => {
    const [n] = gc(e), r = oe();
    if (n && !Z(r)) return !1;
    const i = Lw(e.clientX, e.clientY);
    if (i !== null) {
      const o = zi(i.node);
      Xe(o) && e.preventDefault();
    }
    return !0;
  }, ke), t.registerCommand(Gc, () => (X0(), !0), ke), t.registerCommand(Yi, (e) => (_w(t, gi(e, ClipboardEvent) ? e : null), !0), ke), t.registerCommand(Zo, (e) => (async function(n, r) {
    await _w(r, gi(n, ClipboardEvent) ? n : null), r.update(() => {
      const i = oe();
      Z(i) ? i.removeText() : bn(i) && i.getNodes().forEach((o) => o.remove());
    });
  }(e, t), !0), ke), t.registerCommand(Qo, (e) => {
    const [, n, r] = gc(e);
    return n.length > 0 && !r ? (t.dispatchCommand(Fw, n), !0) : ts(e.target) && Ep(e.target) ? !1 : oe() !== null && (function(i, o) {
      i.preventDefault(), o.update(() => {
        const s = oe(), a = gi(i, InputEvent) || gi(i, KeyboardEvent) ? null : i.clipboardData;
        a != null && s !== null && yw(a, s, o);
      }, { tag: q0 });
    }(e, t), !0);
  }, ke), t.registerCommand(c0, (e) => {
    const n = oe();
    return Z(n) && Yd(n), !1;
  }, ke), t.registerCommand(hp, (e) => {
    const n = oe();
    return Z(n) && Yd(n), !1;
  }, ke));
}
const sh = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function jw(t) {
  return t.getEditorState().read(Bp(t.isComposing()));
}
function IS({ contentEditable: t, placeholder: e = null, ErrorBoundary: n }) {
  const [r] = Le(), i = function(o, s) {
    const [a, l] = fe(() => o.getDecorators());
    return sh(() => o.registerDecoratorListener((c) => {
      vy(() => {
        l(c);
      });
    }), [o]), ue(() => {
      l(o.getDecorators());
    }, [o]), Ne(() => {
      const c = [], u = Object.keys(a);
      for (let f = 0; f < u.length; f++) {
        const d = u[f], h = p(s, { onError: (m) => o._onError(m), children: p(fy, { fallback: null, children: a[d] }) }), g = o.getElementByKey(d);
        g !== null && c.push(fi(h, g, d));
      }
      return c;
    }, [s, a, o]);
  }(r, n);
  return function(o) {
    sh(() => Ht(OS(o), Zv(o)), [o]);
  }(r), j(Lt, { children: [t, p(RS, { content: e }), i] });
}
function RS({ content: t }) {
  const [e] = Le(), n = function(i) {
    const [o, s] = fe(() => jw(i));
    return sh(() => {
      function a() {
        const l = jw(i);
        s(l);
      }
      return a(), Ht(i.registerUpdateListener(() => {
        a();
      }), i.registerEditableListener(() => {
        a();
      }));
    }, [i]), o;
  }(e), r = Qv();
  return n ? typeof t == "function" ? t(r) : t : null;
}
const su = Math.min, So = Math.max, au = Math.round, mc = Math.floor, Wr = (t) => ({
  x: t,
  y: t
}), PS = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, LS = {
  start: "end",
  end: "start"
};
function Uw(t, e, n) {
  return So(t, su(e, n));
}
function qp(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function qs(t) {
  return t.split("-")[0];
}
function jp(t) {
  return t.split("-")[1];
}
function e_(t) {
  return t === "x" ? "y" : "x";
}
function t_(t) {
  return t === "y" ? "height" : "width";
}
const $S = /* @__PURE__ */ new Set(["top", "bottom"]);
function bo(t) {
  return $S.has(qs(t)) ? "y" : "x";
}
function n_(t) {
  return e_(bo(t));
}
function FS(t, e, n) {
  n === void 0 && (n = !1);
  const r = jp(t), i = n_(t), o = t_(i);
  let s = i === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return e.reference[o] > e.floating[o] && (s = lu(s)), [s, lu(s)];
}
function BS(t) {
  const e = lu(t);
  return [ah(t), e, ah(e)];
}
function ah(t) {
  return t.replace(/start|end/g, (e) => LS[e]);
}
const zw = ["left", "right"], Vw = ["right", "left"], qS = ["top", "bottom"], jS = ["bottom", "top"];
function US(t, e, n) {
  switch (t) {
    case "top":
    case "bottom":
      return n ? e ? Vw : zw : e ? zw : Vw;
    case "left":
    case "right":
      return e ? qS : jS;
    default:
      return [];
  }
}
function zS(t, e, n, r) {
  const i = jp(t);
  let o = US(qs(t), n === "start", r);
  return i && (o = o.map((s) => s + "-" + i), e && (o = o.concat(o.map(ah)))), o;
}
function lu(t) {
  return t.replace(/left|right|bottom|top/g, (e) => PS[e]);
}
function VS(t) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...t
  };
}
function HS(t) {
  return typeof t != "number" ? VS(t) : {
    top: t,
    right: t,
    bottom: t,
    left: t
  };
}
function cu(t) {
  const {
    x: e,
    y: n,
    width: r,
    height: i
  } = t;
  return {
    width: r,
    height: i,
    top: n,
    left: e,
    right: e + r,
    bottom: n + i,
    x: e,
    y: n
  };
}
function Hw(t, e, n) {
  let {
    reference: r,
    floating: i
  } = t;
  const o = bo(e), s = n_(e), a = t_(s), l = qs(e), c = o === "y", u = r.x + r.width / 2 - i.width / 2, f = r.y + r.height / 2 - i.height / 2, d = r[a] / 2 - i[a] / 2;
  let h;
  switch (l) {
    case "top":
      h = {
        x: u,
        y: r.y - i.height
      };
      break;
    case "bottom":
      h = {
        x: u,
        y: r.y + r.height
      };
      break;
    case "right":
      h = {
        x: r.x + r.width,
        y: f
      };
      break;
    case "left":
      h = {
        x: r.x - i.width,
        y: f
      };
      break;
    default:
      h = {
        x: r.x,
        y: r.y
      };
  }
  switch (jp(e)) {
    case "start":
      h[s] -= d * (n && c ? -1 : 1);
      break;
    case "end":
      h[s] += d * (n && c ? -1 : 1);
      break;
  }
  return h;
}
const WS = async (t, e, n) => {
  const {
    placement: r = "bottom",
    strategy: i = "absolute",
    middleware: o = [],
    platform: s
  } = n, a = o.filter(Boolean), l = await (s.isRTL == null ? void 0 : s.isRTL(e));
  let c = await s.getElementRects({
    reference: t,
    floating: e,
    strategy: i
  }), {
    x: u,
    y: f
  } = Hw(c, r, l), d = r, h = {}, g = 0;
  for (let m = 0; m < a.length; m++) {
    const {
      name: b,
      fn: _
    } = a[m], {
      x: y,
      y: C,
      data: D,
      reset: R
    } = await _({
      x: u,
      y: f,
      initialPlacement: r,
      placement: d,
      strategy: i,
      middlewareData: h,
      rects: c,
      platform: s,
      elements: {
        reference: t,
        floating: e
      }
    });
    u = y ?? u, f = C ?? f, h = {
      ...h,
      [b]: {
        ...h[b],
        ...D
      }
    }, R && g <= 50 && (g++, typeof R == "object" && (R.placement && (d = R.placement), R.rects && (c = R.rects === !0 ? await s.getElementRects({
      reference: t,
      floating: e,
      strategy: i
    }) : R.rects), {
      x: u,
      y: f
    } = Hw(c, d, l)), m = -1);
  }
  return {
    x: u,
    y: f,
    placement: d,
    strategy: i,
    middlewareData: h
  };
};
async function r_(t, e) {
  var n;
  e === void 0 && (e = {});
  const {
    x: r,
    y: i,
    platform: o,
    rects: s,
    elements: a,
    strategy: l
  } = t, {
    boundary: c = "clippingAncestors",
    rootBoundary: u = "viewport",
    elementContext: f = "floating",
    altBoundary: d = !1,
    padding: h = 0
  } = qp(e, t), g = HS(h), b = a[d ? f === "floating" ? "reference" : "floating" : f], _ = cu(await o.getClippingRect({
    element: (n = await (o.isElement == null ? void 0 : o.isElement(b))) == null || n ? b : b.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(a.floating)),
    boundary: c,
    rootBoundary: u,
    strategy: l
  })), y = f === "floating" ? {
    x: r,
    y: i,
    width: s.floating.width,
    height: s.floating.height
  } : s.reference, C = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(a.floating)), D = await (o.isElement == null ? void 0 : o.isElement(C)) ? await (o.getScale == null ? void 0 : o.getScale(C)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, R = cu(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: a,
    rect: y,
    offsetParent: C,
    strategy: l
  }) : y);
  return {
    top: (_.top - R.top + g.top) / D.y,
    bottom: (R.bottom - _.bottom + g.bottom) / D.y,
    left: (_.left - R.left + g.left) / D.x,
    right: (R.right - _.right + g.right) / D.x
  };
}
const KS = function(t) {
  return t === void 0 && (t = {}), {
    name: "flip",
    options: t,
    async fn(e) {
      var n, r;
      const {
        placement: i,
        middlewareData: o,
        rects: s,
        initialPlacement: a,
        platform: l,
        elements: c
      } = e, {
        mainAxis: u = !0,
        crossAxis: f = !0,
        fallbackPlacements: d,
        fallbackStrategy: h = "bestFit",
        fallbackAxisSideDirection: g = "none",
        flipAlignment: m = !0,
        ...b
      } = qp(t, e);
      if ((n = o.arrow) != null && n.alignmentOffset)
        return {};
      const _ = qs(i), y = bo(a), C = qs(a) === a, D = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)), R = d || (C || !m ? [lu(a)] : BS(a)), N = g !== "none";
      !d && N && R.push(...zS(a, m, g, D));
      const L = [a, ...R], O = await r_(e, b), M = [];
      let q = ((r = o.flip) == null ? void 0 : r.overflows) || [];
      if (u && M.push(O[_]), f) {
        const P = FS(i, s, D);
        M.push(O[P[0]], O[P[1]]);
      }
      if (q = [...q, {
        placement: i,
        overflows: M
      }], !M.every((P) => P <= 0)) {
        var k, I;
        const P = (((k = o.flip) == null ? void 0 : k.index) || 0) + 1, T = L[P];
        if (T && (!(f === "alignment" ? y !== bo(T) : !1) || // We leave the current main axis only if every placement on that axis
        // overflows the main axis.
        q.every((V) => bo(V.placement) === y ? V.overflows[0] > 0 : !0)))
          return {
            data: {
              index: P,
              overflows: q
            },
            reset: {
              placement: T
            }
          };
        let A = (I = q.filter((B) => B.overflows[0] <= 0).sort((B, V) => B.overflows[1] - V.overflows[1])[0]) == null ? void 0 : I.placement;
        if (!A)
          switch (h) {
            case "bestFit": {
              var S;
              const B = (S = q.filter((V) => {
                if (N) {
                  const J = bo(V.placement);
                  return J === y || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  J === "y";
                }
                return !0;
              }).map((V) => [V.placement, V.overflows.filter((J) => J > 0).reduce((J, H) => J + H, 0)]).sort((V, J) => V[1] - J[1])[0]) == null ? void 0 : S[0];
              B && (A = B);
              break;
            }
            case "initialPlacement":
              A = a;
              break;
          }
        if (i !== A)
          return {
            reset: {
              placement: A
            }
          };
      }
      return {};
    }
  };
}, GS = function(t) {
  return t === void 0 && (t = {}), {
    name: "shift",
    options: t,
    async fn(e) {
      const {
        x: n,
        y: r,
        placement: i
      } = e, {
        mainAxis: o = !0,
        crossAxis: s = !1,
        limiter: a = {
          fn: (b) => {
            let {
              x: _,
              y
            } = b;
            return {
              x: _,
              y
            };
          }
        },
        ...l
      } = qp(t, e), c = {
        x: n,
        y: r
      }, u = await r_(e, l), f = bo(qs(i)), d = e_(f);
      let h = c[d], g = c[f];
      if (o) {
        const b = d === "y" ? "top" : "left", _ = d === "y" ? "bottom" : "right", y = h + u[b], C = h - u[_];
        h = Uw(y, h, C);
      }
      if (s) {
        const b = f === "y" ? "top" : "left", _ = f === "y" ? "bottom" : "right", y = g + u[b], C = g - u[_];
        g = Uw(y, g, C);
      }
      const m = a.fn({
        ...e,
        [d]: h,
        [f]: g
      });
      return {
        ...m,
        data: {
          x: m.x - n,
          y: m.y - r,
          enabled: {
            [d]: o,
            [f]: s
          }
        }
      };
    }
  };
};
function Xu() {
  return typeof window < "u";
}
function fa(t) {
  return i_(t) ? (t.nodeName || "").toLowerCase() : "#document";
}
function Xn(t) {
  var e;
  return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
}
function ei(t) {
  var e;
  return (e = (i_(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
}
function i_(t) {
  return Xu() ? t instanceof Node || t instanceof Xn(t).Node : !1;
}
function Cr(t) {
  return Xu() ? t instanceof Element || t instanceof Xn(t).Element : !1;
}
function Yr(t) {
  return Xu() ? t instanceof HTMLElement || t instanceof Xn(t).HTMLElement : !1;
}
function Ww(t) {
  return !Xu() || typeof ShadowRoot > "u" ? !1 : t instanceof ShadowRoot || t instanceof Xn(t).ShadowRoot;
}
const JS = /* @__PURE__ */ new Set(["inline", "contents"]);
function Ll(t) {
  const {
    overflow: e,
    overflowX: n,
    overflowY: r,
    display: i
  } = kr(t);
  return /auto|scroll|overlay|hidden|clip/.test(e + r + n) && !JS.has(i);
}
const XS = /* @__PURE__ */ new Set(["table", "td", "th"]);
function YS(t) {
  return XS.has(fa(t));
}
const QS = [":popover-open", ":modal"];
function Yu(t) {
  return QS.some((e) => {
    try {
      return t.matches(e);
    } catch {
      return !1;
    }
  });
}
const ZS = ["transform", "translate", "scale", "rotate", "perspective"], eT = ["transform", "translate", "scale", "rotate", "perspective", "filter"], tT = ["paint", "layout", "strict", "content"];
function Up(t) {
  const e = zp(), n = Cr(t) ? kr(t) : t;
  return ZS.some((r) => n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !e && (n.filter ? n.filter !== "none" : !1) || eT.some((r) => (n.willChange || "").includes(r)) || tT.some((r) => (n.contain || "").includes(r));
}
function nT(t) {
  let e = Hi(t);
  for (; Yr(e) && !js(e); ) {
    if (Up(e))
      return e;
    if (Yu(e))
      return null;
    e = Hi(e);
  }
  return null;
}
function zp() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
const rT = /* @__PURE__ */ new Set(["html", "body", "#document"]);
function js(t) {
  return rT.has(fa(t));
}
function kr(t) {
  return Xn(t).getComputedStyle(t);
}
function Qu(t) {
  return Cr(t) ? {
    scrollLeft: t.scrollLeft,
    scrollTop: t.scrollTop
  } : {
    scrollLeft: t.scrollX,
    scrollTop: t.scrollY
  };
}
function Hi(t) {
  if (fa(t) === "html")
    return t;
  const e = (
    // Step into the shadow DOM of the parent of a slotted node.
    t.assignedSlot || // DOM Element detected.
    t.parentNode || // ShadowRoot detected.
    Ww(t) && t.host || // Fallback.
    ei(t)
  );
  return Ww(e) ? e.host : e;
}
function o_(t) {
  const e = Hi(t);
  return js(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : Yr(e) && Ll(e) ? e : o_(e);
}
function ll(t, e, n) {
  var r;
  e === void 0 && (e = []), n === void 0 && (n = !0);
  const i = o_(t), o = i === ((r = t.ownerDocument) == null ? void 0 : r.body), s = Xn(i);
  if (o) {
    const a = lh(s);
    return e.concat(s, s.visualViewport || [], Ll(i) ? i : [], a && n ? ll(a) : []);
  }
  return e.concat(i, ll(i, [], n));
}
function lh(t) {
  return t.parent && Object.getPrototypeOf(t.parent) ? t.frameElement : null;
}
function s_(t) {
  const e = kr(t);
  let n = parseFloat(e.width) || 0, r = parseFloat(e.height) || 0;
  const i = Yr(t), o = i ? t.offsetWidth : n, s = i ? t.offsetHeight : r, a = au(n) !== o || au(r) !== s;
  return a && (n = o, r = s), {
    width: n,
    height: r,
    $: a
  };
}
function Vp(t) {
  return Cr(t) ? t : t.contextElement;
}
function ks(t) {
  const e = Vp(t);
  if (!Yr(e))
    return Wr(1);
  const n = e.getBoundingClientRect(), {
    width: r,
    height: i,
    $: o
  } = s_(e);
  let s = (o ? au(n.width) : n.width) / r, a = (o ? au(n.height) : n.height) / i;
  return (!s || !Number.isFinite(s)) && (s = 1), (!a || !Number.isFinite(a)) && (a = 1), {
    x: s,
    y: a
  };
}
const iT = /* @__PURE__ */ Wr(0);
function a_(t) {
  const e = Xn(t);
  return !zp() || !e.visualViewport ? iT : {
    x: e.visualViewport.offsetLeft,
    y: e.visualViewport.offsetTop
  };
}
function oT(t, e, n) {
  return e === void 0 && (e = !1), !n || e && n !== Xn(t) ? !1 : e;
}
function Bo(t, e, n, r) {
  e === void 0 && (e = !1), n === void 0 && (n = !1);
  const i = t.getBoundingClientRect(), o = Vp(t);
  let s = Wr(1);
  e && (r ? Cr(r) && (s = ks(r)) : s = ks(t));
  const a = oT(o, n, r) ? a_(o) : Wr(0);
  let l = (i.left + a.x) / s.x, c = (i.top + a.y) / s.y, u = i.width / s.x, f = i.height / s.y;
  if (o) {
    const d = Xn(o), h = r && Cr(r) ? Xn(r) : r;
    let g = d, m = lh(g);
    for (; m && r && h !== g; ) {
      const b = ks(m), _ = m.getBoundingClientRect(), y = kr(m), C = _.left + (m.clientLeft + parseFloat(y.paddingLeft)) * b.x, D = _.top + (m.clientTop + parseFloat(y.paddingTop)) * b.y;
      l *= b.x, c *= b.y, u *= b.x, f *= b.y, l += C, c += D, g = Xn(m), m = lh(g);
    }
  }
  return cu({
    width: u,
    height: f,
    x: l,
    y: c
  });
}
function Zu(t, e) {
  const n = Qu(t).scrollLeft;
  return e ? e.left + n : Bo(ei(t)).left + n;
}
function l_(t, e) {
  const n = t.getBoundingClientRect(), r = n.left + e.scrollLeft - Zu(t, n), i = n.top + e.scrollTop;
  return {
    x: r,
    y: i
  };
}
function sT(t) {
  let {
    elements: e,
    rect: n,
    offsetParent: r,
    strategy: i
  } = t;
  const o = i === "fixed", s = ei(r), a = e ? Yu(e.floating) : !1;
  if (r === s || a && o)
    return n;
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = Wr(1);
  const u = Wr(0), f = Yr(r);
  if ((f || !f && !o) && ((fa(r) !== "body" || Ll(s)) && (l = Qu(r)), Yr(r))) {
    const h = Bo(r);
    c = ks(r), u.x = h.x + r.clientLeft, u.y = h.y + r.clientTop;
  }
  const d = s && !f && !o ? l_(s, l) : Wr(0);
  return {
    width: n.width * c.x,
    height: n.height * c.y,
    x: n.x * c.x - l.scrollLeft * c.x + u.x + d.x,
    y: n.y * c.y - l.scrollTop * c.y + u.y + d.y
  };
}
function aT(t) {
  return Array.from(t.getClientRects());
}
function lT(t) {
  const e = ei(t), n = Qu(t), r = t.ownerDocument.body, i = So(e.scrollWidth, e.clientWidth, r.scrollWidth, r.clientWidth), o = So(e.scrollHeight, e.clientHeight, r.scrollHeight, r.clientHeight);
  let s = -n.scrollLeft + Zu(t);
  const a = -n.scrollTop;
  return kr(r).direction === "rtl" && (s += So(e.clientWidth, r.clientWidth) - i), {
    width: i,
    height: o,
    x: s,
    y: a
  };
}
const Kw = 25;
function cT(t, e) {
  const n = Xn(t), r = ei(t), i = n.visualViewport;
  let o = r.clientWidth, s = r.clientHeight, a = 0, l = 0;
  if (i) {
    o = i.width, s = i.height;
    const u = zp();
    (!u || u && e === "fixed") && (a = i.offsetLeft, l = i.offsetTop);
  }
  const c = Zu(r);
  if (c <= 0) {
    const u = r.ownerDocument, f = u.body, d = getComputedStyle(f), h = u.compatMode === "CSS1Compat" && parseFloat(d.marginLeft) + parseFloat(d.marginRight) || 0, g = Math.abs(r.clientWidth - f.clientWidth - h);
    g <= Kw && (o -= g);
  } else c <= Kw && (o += c);
  return {
    width: o,
    height: s,
    x: a,
    y: l
  };
}
const uT = /* @__PURE__ */ new Set(["absolute", "fixed"]);
function dT(t, e) {
  const n = Bo(t, !0, e === "fixed"), r = n.top + t.clientTop, i = n.left + t.clientLeft, o = Yr(t) ? ks(t) : Wr(1), s = t.clientWidth * o.x, a = t.clientHeight * o.y, l = i * o.x, c = r * o.y;
  return {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function Gw(t, e, n) {
  let r;
  if (e === "viewport")
    r = cT(t, n);
  else if (e === "document")
    r = lT(ei(t));
  else if (Cr(e))
    r = dT(e, n);
  else {
    const i = a_(t);
    r = {
      x: e.x - i.x,
      y: e.y - i.y,
      width: e.width,
      height: e.height
    };
  }
  return cu(r);
}
function c_(t, e) {
  const n = Hi(t);
  return n === e || !Cr(n) || js(n) ? !1 : kr(n).position === "fixed" || c_(n, e);
}
function fT(t, e) {
  const n = e.get(t);
  if (n)
    return n;
  let r = ll(t, [], !1).filter((a) => Cr(a) && fa(a) !== "body"), i = null;
  const o = kr(t).position === "fixed";
  let s = o ? Hi(t) : t;
  for (; Cr(s) && !js(s); ) {
    const a = kr(s), l = Up(s);
    !l && a.position === "fixed" && (i = null), (o ? !l && !i : !l && a.position === "static" && !!i && uT.has(i.position) || Ll(s) && !l && c_(t, s)) ? r = r.filter((u) => u !== s) : i = a, s = Hi(s);
  }
  return e.set(t, r), r;
}
function hT(t) {
  let {
    element: e,
    boundary: n,
    rootBoundary: r,
    strategy: i
  } = t;
  const s = [...n === "clippingAncestors" ? Yu(e) ? [] : fT(e, this._c) : [].concat(n), r], a = s[0], l = s.reduce((c, u) => {
    const f = Gw(e, u, i);
    return c.top = So(f.top, c.top), c.right = su(f.right, c.right), c.bottom = su(f.bottom, c.bottom), c.left = So(f.left, c.left), c;
  }, Gw(e, a, i));
  return {
    width: l.right - l.left,
    height: l.bottom - l.top,
    x: l.left,
    y: l.top
  };
}
function pT(t) {
  const {
    width: e,
    height: n
  } = s_(t);
  return {
    width: e,
    height: n
  };
}
function gT(t, e, n) {
  const r = Yr(e), i = ei(e), o = n === "fixed", s = Bo(t, !0, o, e);
  let a = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const l = Wr(0);
  function c() {
    l.x = Zu(i);
  }
  if (r || !r && !o)
    if ((fa(e) !== "body" || Ll(i)) && (a = Qu(e)), r) {
      const h = Bo(e, !0, o, e);
      l.x = h.x + e.clientLeft, l.y = h.y + e.clientTop;
    } else i && c();
  o && !r && i && c();
  const u = i && !r && !o ? l_(i, a) : Wr(0), f = s.left + a.scrollLeft - l.x - u.x, d = s.top + a.scrollTop - l.y - u.y;
  return {
    x: f,
    y: d,
    width: s.width,
    height: s.height
  };
}
function Qd(t) {
  return kr(t).position === "static";
}
function Jw(t, e) {
  if (!Yr(t) || kr(t).position === "fixed")
    return null;
  if (e)
    return e(t);
  let n = t.offsetParent;
  return ei(t) === n && (n = n.ownerDocument.body), n;
}
function u_(t, e) {
  const n = Xn(t);
  if (Yu(t))
    return n;
  if (!Yr(t)) {
    let i = Hi(t);
    for (; i && !js(i); ) {
      if (Cr(i) && !Qd(i))
        return i;
      i = Hi(i);
    }
    return n;
  }
  let r = Jw(t, e);
  for (; r && YS(r) && Qd(r); )
    r = Jw(r, e);
  return r && js(r) && Qd(r) && !Up(r) ? n : r || nT(t) || n;
}
const mT = async function(t) {
  const e = this.getOffsetParent || u_, n = this.getDimensions, r = await n(t.floating);
  return {
    reference: gT(t.reference, await e(t.floating), t.strategy),
    floating: {
      x: 0,
      y: 0,
      width: r.width,
      height: r.height
    }
  };
};
function wT(t) {
  return kr(t).direction === "rtl";
}
const bT = {
  convertOffsetParentRelativeRectToViewportRelativeRect: sT,
  getDocumentElement: ei,
  getClippingRect: hT,
  getOffsetParent: u_,
  getElementRects: mT,
  getClientRects: aT,
  getDimensions: pT,
  getScale: ks,
  isElement: Cr,
  isRTL: wT
};
function d_(t, e) {
  return t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height;
}
function yT(t, e) {
  let n = null, r;
  const i = ei(t);
  function o() {
    var a;
    clearTimeout(r), (a = n) == null || a.disconnect(), n = null;
  }
  function s(a, l) {
    a === void 0 && (a = !1), l === void 0 && (l = 1), o();
    const c = t.getBoundingClientRect(), {
      left: u,
      top: f,
      width: d,
      height: h
    } = c;
    if (a || e(), !d || !h)
      return;
    const g = mc(f), m = mc(i.clientWidth - (u + d)), b = mc(i.clientHeight - (f + h)), _ = mc(u), C = {
      rootMargin: -g + "px " + -m + "px " + -b + "px " + -_ + "px",
      threshold: So(0, su(1, l)) || 1
    };
    let D = !0;
    function R(N) {
      const L = N[0].intersectionRatio;
      if (L !== l) {
        if (!D)
          return s();
        L ? s(!1, L) : r = setTimeout(() => {
          s(!1, 1e-7);
        }, 1e3);
      }
      L === 1 && !d_(c, t.getBoundingClientRect()) && s(), D = !1;
    }
    try {
      n = new IntersectionObserver(R, {
        ...C,
        // Handle <iframe>s
        root: i.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(R, C);
    }
    n.observe(t);
  }
  return s(!0), o;
}
function vT(t, e, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: i = !0,
    ancestorResize: o = !0,
    elementResize: s = typeof ResizeObserver == "function",
    layoutShift: a = typeof IntersectionObserver == "function",
    animationFrame: l = !1
  } = r, c = Vp(t), u = i || o ? [...c ? ll(c) : [], ...ll(e)] : [];
  u.forEach((_) => {
    i && _.addEventListener("scroll", n, {
      passive: !0
    }), o && _.addEventListener("resize", n);
  });
  const f = c && a ? yT(c, n) : null;
  let d = -1, h = null;
  s && (h = new ResizeObserver((_) => {
    let [y] = _;
    y && y.target === c && h && (h.unobserve(e), cancelAnimationFrame(d), d = requestAnimationFrame(() => {
      var C;
      (C = h) == null || C.observe(e);
    })), n();
  }), c && !l && h.observe(c), h.observe(e));
  let g, m = l ? Bo(t) : null;
  l && b();
  function b() {
    const _ = Bo(t);
    m && !d_(m, _) && n(), m = _, g = requestAnimationFrame(b);
  }
  return n(), () => {
    var _;
    u.forEach((y) => {
      i && y.removeEventListener("scroll", n), o && y.removeEventListener("resize", n);
    }), f == null || f(), (_ = h) == null || _.disconnect(), h = null, l && cancelAnimationFrame(g);
  };
}
const _T = GS, xT = KS, CT = (t, e, n) => {
  const r = /* @__PURE__ */ new Map(), i = {
    platform: bT,
    ...n
  }, o = {
    ...i.platform,
    _c: r
  };
  return WS(t, e, {
    ...i,
    platform: o
  });
}, ch = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, kT = ch ? Cn : ue;
let ET = class {
  constructor(e) {
    this.key = e, this.ref = { current: null }, this.setRefElement = this.setRefElement.bind(this);
  }
  setRefElement(e) {
    this.ref = { current: e };
  }
};
const Xw = (t) => {
  const e = document.getElementById("typeahead-menu");
  if (!e) return;
  const n = e.getBoundingClientRect();
  n.top + n.height > window.innerHeight && e.scrollIntoView({ block: "center" }), n.top < 0 && e.scrollIntoView({ block: "center" }), t.scrollIntoView({ block: "nearest" });
};
function Yw(t, e) {
  const n = t.getBoundingClientRect(), r = e.getBoundingClientRect();
  return n.top > r.top && n.top < r.bottom;
}
function NT(t, e, n, r) {
  const [i] = Le();
  ue(() => {
    if (e != null && t != null) {
      const o = i.getRootElement(), s = o != null ? function(f, d) {
        let h = getComputedStyle(f);
        const g = h.position === "absolute", m = /(auto|scroll)/;
        if (h.position === "fixed") return document.body;
        for (let b = f; b = b.parentElement; ) if (h = getComputedStyle(b), (!g || h.position !== "static") && m.test(h.overflow + h.overflowY + h.overflowX)) return b;
        return document.body;
      }(o) : document.body;
      let a = !1, l = Yw(e, s);
      const c = function() {
        a || (window.requestAnimationFrame(function() {
          n(), a = !1;
        }), a = !0);
        const f = Yw(e, s);
        f !== l && (l = f, r != null && r(f));
      }, u = new ResizeObserver(n);
      return window.addEventListener("resize", n), document.addEventListener("scroll", c, { capture: !0, passive: !0 }), u.observe(e), () => {
        u.unobserve(e), window.removeEventListener("resize", n), document.removeEventListener("scroll", c, !0);
      };
    }
  }, [e, i, r, n, t]);
}
const Qw = Se("SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND");
function ST({ close: t, editor: e, anchorElementRef: n, resolution: r, options: i, menuRenderFn: o, onSelectOption: s, shouldSplitNodeWithQuery: a = !1, commandPriority: l = es, preselectFirstItem: c = !0 }) {
  const [u, f] = fe(null), d = r.match && r.match.matchingString;
  ue(() => {
    c && f(0);
  }, [d, c]);
  const h = be((m) => {
    e.update(() => {
      const b = r.match != null && a ? function(_) {
        const y = oe();
        if (!Z(y) || !y.isCollapsed()) return null;
        const C = y.anchor;
        if (C.type !== "text") return null;
        const D = C.getNode();
        if (!D.isSimpleText()) return null;
        const R = C.offset, N = D.getTextContent().slice(0, R), L = _.replaceableString.length, O = R - function(q, k, I) {
          let S = I;
          for (let P = S; P <= k.length; P++) q.slice(-P) === k.substring(0, P) && (S = P);
          return S;
        }(N, _.matchingString, L);
        if (O < 0) return null;
        let M;
        return O === 0 ? [M] = D.splitText(R) : [, M] = D.splitText(O, R), M;
      }(r.match) : null;
      s(m, b, t, r.match ? r.match.matchingString : "");
    });
  }, [e, a, r.match, s, t]), g = be((m) => {
    const b = e.getRootElement();
    b !== null && (b.setAttribute("aria-activedescendant", "typeahead-item-" + m), f(m));
  }, [e]);
  return ue(() => () => {
    const m = e.getRootElement();
    m !== null && m.removeAttribute("aria-activedescendant");
  }, [e]), kT(() => {
    i === null ? f(null) : u === null && c && g(0);
  }, [i, u, g, c]), ue(() => Ht(e.registerCommand(Qw, ({ option: m }) => !(!m.ref || m.ref.current == null) && (Xw(m.ref.current), !0), l)), [e, g, l]), ue(() => Ht(e.registerCommand(up, (m) => {
    const b = m;
    if (i !== null && i.length) {
      const _ = u === null ? 0 : u !== i.length - 1 ? u + 1 : 0;
      g(_);
      const y = i[_];
      y.ref != null && y.ref.current && e.dispatchCommand(Qw, { index: _, option: y }), b.preventDefault(), b.stopImmediatePropagation();
    }
    return !0;
  }, l), e.registerCommand(cp, (m) => {
    const b = m;
    if (i !== null && i.length) {
      const _ = u === null ? i.length - 1 : u !== 0 ? u - 1 : i.length - 1;
      g(_);
      const y = i[_];
      y.ref != null && y.ref.current && Xw(y.ref.current), b.preventDefault(), b.stopImmediatePropagation();
    }
    return !0;
  }, l), e.registerCommand($u, (m) => {
    const b = m;
    return b.preventDefault(), b.stopImmediatePropagation(), t(), !0;
  }, l), e.registerCommand(hp, (m) => {
    const b = m;
    return i !== null && u !== null && i[u] != null && (b.preventDefault(), b.stopImmediatePropagation(), h(i[u]), !0);
  }, l), e.registerCommand(Ls, (m) => i !== null && u !== null && i[u] != null && (m !== null && (m.preventDefault(), m.stopImmediatePropagation()), h(i[u]), !0), l)), [h, t, e, i, u, g, l]), o(n, Ne(() => ({ options: i, selectOptionAndCleanUp: h, selectedIndex: u, setHighlightedIndex: f }), [h, u, i]), r.match ? r.match.matchingString : "");
}
function Zw(t, e) {
  e != null && (t.className = e), t.setAttribute("aria-label", "Typeahead menu"), t.setAttribute("role", "listbox"), t.style.display = "block", t.style.position = "absolute";
}
function TT({ options: t, onWillOpen: e, onClose: n, onOpen: r, onSelectOption: i, menuRenderFn: o, anchorClassName: s, commandPriority: a = es, parent: l }) {
  const [c] = Le(), [u, f] = fe(null), d = ws.useRef(null), h = function(y, C, D, R = ch ? document.body : void 0, N = !0) {
    const [L] = Le(), O = ch ? document.createElement("div") : null, M = xe(O), q = be(() => {
      if (M.current === null || R === void 0) return;
      M.current.style.top = M.current.style.bottom;
      const I = L.getRootElement(), S = M.current, P = S.firstChild;
      if (I !== null && y !== null) {
        const { left: T, top: A, width: B, height: V } = y.getRect(), J = M.current.offsetHeight;
        if (S.style.top = `${A + J + 3 + (N ? window.pageYOffset : 0)}px`, S.style.left = `${T + window.pageXOffset}px`, S.style.height = `${V}px`, S.style.width = `${B}px`, P !== null) {
          P.style.top = `${A}`;
          const H = P.getBoundingClientRect(), K = H.height, ne = H.width, re = I.getBoundingClientRect();
          T + ne > re.right && (S.style.left = `${re.right - ne + window.pageXOffset}px`), (A + K > window.innerHeight || A + K > re.bottom) && A - re.top > K + V && (S.style.top = `${A - K - V + (N ? window.pageYOffset : 0)}px`);
        }
        S.isConnected || (Zw(S, D), R.append(S)), S.setAttribute("id", "typeahead-menu"), I.setAttribute("aria-controls", "typeahead-menu");
      }
    }, [L, y, N, D, R]);
    ue(() => {
      const I = L.getRootElement();
      return y !== null && q(), () => {
        I !== null && I.removeAttribute("aria-controls");
        const S = M.current;
        S !== null && S.isConnected && (S.remove(), S.removeAttribute("id"));
      };
    }, [L, q, y]);
    const k = be((I) => {
      y !== null && (I || C(null));
    }, [y, C]);
    return NT(y, M.current, q, k), O != null && O === M.current && (Zw(O, D), R != null && R.append(O)), M;
  }(u, f, s, l), g = be(() => {
    f(null), n != null && u !== null && n();
  }, [n, u]), m = be((y) => {
    f(y), r != null && u === null && r(y);
  }, [r, u]), b = be((y) => {
    y.preventDefault(), e != null && e(y);
    const C = FE(y.target);
    m({ getRect: () => new DOMRect(y.clientX / C, y.clientY / C, 1, 1) });
  }, [m, e]), _ = be((y) => {
    u !== null && d.current != null && y.target != null && ts(y.target) && !d.current.contains(y.target) && g();
  }, [g, u]);
  return ue(() => {
    const y = c.getRootElement();
    if (y) return y.addEventListener("contextmenu", b), () => y.removeEventListener("contextmenu", b);
  }, [c, b]), ue(() => (document.addEventListener("click", _), () => document.removeEventListener("click", _)), [c, _]), h.current === null || u === null || c === null ? null : p(ST, { close: g, resolution: u, editor: c, anchorElementRef: h, options: t, menuRenderFn: (y, C) => o(y, C, { setMenuRef: (D) => {
    d.current = D;
  } }), onSelectOption: i, commandPriority: a });
}
function AT({ defaultSelection: t }) {
  const [e] = Le();
  return ue(() => {
    e.focus(() => {
      const n = document.activeElement, r = e.getRootElement();
      r === null || n !== null && r.contains(n) || r.focus({ preventScroll: !0 });
    }, { defaultSelection: t });
  }, [t, e]), null;
}
const DT = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function MT({ onClear: t }) {
  const [e] = Le();
  return DT(() => e.registerCommand(gp, (n) => (e.update(() => {
    if (t == null) {
      const r = Ve(), i = oe(), o = Jn();
      r.clear(), r.append(o), i !== null && o.select(), Z(i) && (i.format = 0);
    } else t();
  }), !0), ke), [e, t]), null;
}
const eb = [["Cat", "rgb(125, 50, 0)"], ["Dog", "rgb(100, 0, 0)"], ["Rabbit", "rgb(150, 0, 0)"], ["Frog", "rgb(200, 0, 0)"], ["Fox", "rgb(200, 75, 0)"], ["Hedgehog", "rgb(0, 75, 0)"], ["Pigeon", "rgb(0, 125, 0)"], ["Squirrel", "rgb(75, 100, 0)"], ["Bear", "rgb(125, 100, 0)"], ["Tiger", "rgb(0, 0, 150)"], ["Leopard", "rgb(0, 0, 200)"], ["Zebra", "rgb(0, 0, 250)"], ["Wolf", "rgb(0, 100, 150)"], ["Owl", "rgb(0, 100, 100)"], ["Gull", "rgb(100, 0, 100)"], ["Squid", "rgb(150, 0, 150)"]], tb = eb[Math.floor(Math.random() * eb.length)], OT = yl({ clientID: 0, color: tb[1], isCollabActive: !1, name: tb[0], yjsDocMap: /* @__PURE__ */ new Map() });
function f_(t, e) {
  return vl(OT);
}
const IT = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function RT({ ignoreHistoryMergeTagChange: t = !0, ignoreSelectionChange: e = !1, onChange: n }) {
  const [r] = Le();
  return IT(() => {
    if (n) return r.registerUpdateListener(({ editorState: i, dirtyElements: o, dirtyLeaves: s, prevEditorState: a, tags: l }) => {
      e && o.size === 0 && s.size === 0 || t && l.has(Co) || a.isEmpty() || n(i, r, l);
    });
  }, [r, t, e, n]), null;
}
const ha = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, PT = ha && "documentMode" in document ? document.documentMode : null, LT = !(!ha || !("InputEvent" in window) || PT) && "getTargetRanges" in new window.InputEvent("input"), $T = ha && /Version\/[\d.]+.*Safari/.test(navigator.userAgent), nb = ha && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream, FT = ha && /^(?=.*Chrome).*/i.test(navigator.userAgent), BT = ha && /AppleWebKit\/[\d.]+/.test(navigator.userAgent) && !FT;
function rb(t, e) {
  e.update(() => {
    if (t !== null) {
      const n = gi(t, KeyboardEvent) ? null : t.clipboardData, r = oe();
      if (r !== null && n != null) {
        t.preventDefault();
        const i = Sv(e);
        i !== null && n.setData("text/html", i), n.setData("text/plain", r.getTextContent());
      }
    }
  });
}
function qT(t) {
  return Ht(t.registerCommand(Hr, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteCharacter(e), !0);
  }, ke), t.registerCommand(Rs, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteWord(e), !0);
  }, ke), t.registerCommand(Ps, (e) => {
    const n = oe();
    return !!Z(n) && (n.deleteLine(e), !0);
  }, ke), t.registerCommand(_o, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    if (typeof e == "string") n.insertText(e);
    else {
      const r = e.dataTransfer;
      if (r != null) bw(r, n);
      else {
        const i = e.data;
        i && n.insertText(i);
      }
    }
    return !0;
  }, ke), t.registerCommand(Kc, () => {
    const e = oe();
    return !!Z(e) && (e.removeText(), !0);
  }, ke), t.registerCommand(Fi, (e) => {
    const n = oe();
    return !!Z(n) && (n.insertLineBreak(e), !0);
  }, ke), t.registerCommand(ol, () => {
    const e = oe();
    return !!Z(e) && (e.insertLineBreak(), !0);
  }, ke), t.registerCommand(lp, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    const r = e, i = r.shiftKey;
    return !!ru(n, !0) && (r.preventDefault(), iu(n, i, !0), !0);
  }, ke), t.registerCommand(ap, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    const r = e, i = r.shiftKey;
    return !!ru(n, !1) && (r.preventDefault(), iu(n, i, !1), !0);
  }, ke), t.registerCommand(dp, (e) => {
    const n = oe();
    return !!Z(n) && (!nb || navigator.language !== "ko-KR") && (e.preventDefault(), t.dispatchCommand(Hr, !0));
  }, ke), t.registerCommand(fp, (e) => {
    const n = oe();
    return !!Z(n) && (e.preventDefault(), t.dispatchCommand(Hr, !1));
  }, ke), t.registerCommand(Ls, (e) => {
    const n = oe();
    if (!Z(n)) return !1;
    if (e !== null) {
      if ((nb || $T || BT) && LT) return !1;
      e.preventDefault();
    }
    return t.dispatchCommand(Fi, !1);
  }, ke), t.registerCommand(Gc, () => (X0(), !0), ke), t.registerCommand(Yi, (e) => {
    const n = oe();
    return !!Z(n) && (rb(e, t), !0);
  }, ke), t.registerCommand(Zo, (e) => {
    const n = oe();
    return !!Z(n) && (function(r, i) {
      rb(r, i), i.update(() => {
        const o = oe();
        Z(o) && o.removeText();
      });
    }(e, t), !0);
  }, ke), t.registerCommand(Qo, (e) => {
    const n = oe();
    return !!Z(n) && (function(r, i) {
      r.preventDefault(), i.update(() => {
        const o = oe(), s = gi(r, ClipboardEvent) ? r.clipboardData : null;
        s != null && Z(o) && bw(s, o);
      }, { tag: q0 });
    }(e, t), !0);
  }, ke), t.registerCommand(Fu, (e) => {
    const n = oe();
    return !!Z(n) && (e.preventDefault(), !0);
  }, ke), t.registerCommand(pp, (e) => {
    const n = oe();
    return !!Z(n) && (e.preventDefault(), !0);
  }, ke));
}
const uh = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0 ? Cn : ue;
function ib(t) {
  return t.getEditorState().read(Bp(t.isComposing()));
}
function jT({ contentEditable: t, placeholder: e = null, ErrorBoundary: n }) {
  const [r] = Le(), i = function(o, s) {
    const [a, l] = fe(() => o.getDecorators());
    return uh(() => o.registerDecoratorListener((c) => {
      vy(() => {
        l(c);
      });
    }), [o]), ue(() => {
      l(o.getDecorators());
    }, [o]), Ne(() => {
      const c = [], u = Object.keys(a);
      for (let f = 0; f < u.length; f++) {
        const d = u[f], h = p(s, { onError: (m) => o._onError(m), children: p(fy, { fallback: null, children: a[d] }) }), g = o.getElementByKey(d);
        g !== null && c.push(fi(h, g, d));
      }
      return c;
    }, [s, a, o]);
  }(r, n);
  return function(o) {
    uh(() => Ht(qT(o), Zv(o)), [o]);
  }(r), j(Lt, { children: [t, p(UT, { content: e }), i] });
}
function UT({ content: t }) {
  const [e] = Le(), n = function(i) {
    const [o, s] = fe(() => ib(i));
    return uh(() => {
      function a() {
        const l = ib(i);
        s(l);
      }
      return a(), Ht(i.registerUpdateListener(() => {
        a();
      }), i.registerEditableListener(() => {
        a();
      }));
    }, [i]), o;
  }(e), r = Qv();
  return n ? typeof t == "function" ? t(r) : t : null;
}
const Kr = () => /* @__PURE__ */ new Map(), dh = (t) => {
  const e = Kr();
  return t.forEach((n, r) => {
    e.set(r, n);
  }), e;
}, pa = (t, e, n) => {
  let r = t.get(e);
  return r === void 0 && t.set(e, r = n()), r;
}, zT = (t, e) => {
  const n = [];
  for (const [r, i] of t)
    n.push(e(i, r));
  return n;
}, VT = (t, e) => {
  for (const [n, r] of t)
    if (e(r, n))
      return !0;
  return !1;
}, Us = () => /* @__PURE__ */ new Set(), Zd = (t) => t[t.length - 1], zs = Array.from, HT = Array.isArray;
class WT {
  constructor() {
    this._observers = Kr();
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  on(e, n) {
    return pa(
      this._observers,
      /** @type {string} */
      e,
      Us
    ).add(n), n;
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  once(e, n) {
    const r = (...i) => {
      this.off(
        e,
        /** @type {any} */
        r
      ), n(...i);
    };
    this.on(
      e,
      /** @type {any} */
      r
    );
  }
  /**
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name
   * @param {EVENTS[NAME]} f
   */
  off(e, n) {
    const r = this._observers.get(e);
    r !== void 0 && (r.delete(n), r.size === 0 && this._observers.delete(e));
  }
  /**
   * Emit a named event. All registered event listeners that listen to the
   * specified name will receive the event.
   *
   * @todo This should catch exceptions
   *
   * @template {keyof EVENTS & string} NAME
   * @param {NAME} name The event name.
   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.
   */
  emit(e, n) {
    return zs((this._observers.get(e) || Kr()).values()).forEach((r) => r(...n));
  }
  destroy() {
    this._observers = Kr();
  }
}
const qo = Math.floor, Ac = Math.abs, h_ = (t, e) => t < e ? t : e, ga = (t, e) => t > e ? t : e, KT = (t) => t !== 0 ? t < 0 : 1 / t < 0, ob = 1, sb = 2, ef = 4, tf = 8, GT = 32, p_ = 64, uu = 128, JT = 31, ab = 63, Ga = 127, XT = 2147483647, YT = Number.isInteger || ((t) => typeof t == "number" && isFinite(t) && qo(t) === t), QT = (t) => t.toLowerCase(), ZT = /^\s*/g, eA = (t) => t.replace(ZT, ""), tA = /([A-Z])/g, lb = (t, e) => eA(t.replace(tA, (n) => `${e}${QT(n)}`)), nA = (t) => {
  const e = unescape(encodeURIComponent(t)), n = e.length, r = new Uint8Array(n);
  for (let i = 0; i < n; i++)
    r[i] = /** @type {number} */
    e.codePointAt(i);
  return r;
}, cl = (
  /** @type {TextEncoder} */
  typeof TextEncoder < "u" ? new TextEncoder() : null
), rA = (t) => cl.encode(t), iA = cl ? rA : nA;
let nf = typeof TextDecoder > "u" ? null : new TextDecoder("utf-8", { fatal: !0, ignoreBOM: !0 });
nf && nf.decode(new Uint8Array()).length === 1 && (nf = null);
class $l {
  constructor() {
    this.cpos = 0, this.cbuf = new Uint8Array(100), this.bufs = [];
  }
}
const Hp = () => new $l(), oA = (t) => {
  let e = t.cpos;
  for (let n = 0; n < t.bufs.length; n++)
    e += t.bufs[n].length;
  return e;
}, mi = (t) => {
  const e = new Uint8Array(oA(t));
  let n = 0;
  for (let r = 0; r < t.bufs.length; r++) {
    const i = t.bufs[r];
    e.set(i, n), n += i.length;
  }
  return e.set(new Uint8Array(t.cbuf.buffer, 0, t.cpos), n), e;
}, sA = (t, e) => {
  const n = t.cbuf.length;
  n - t.cpos < e && (t.bufs.push(new Uint8Array(t.cbuf.buffer, 0, t.cpos)), t.cbuf = new Uint8Array(ga(n, e) * 2), t.cpos = 0);
}, jt = (t, e) => {
  const n = t.cbuf.length;
  t.cpos === n && (t.bufs.push(t.cbuf), t.cbuf = new Uint8Array(n * 2), t.cpos = 0), t.cbuf[t.cpos++] = e;
}, fh = jt, ot = (t, e) => {
  for (; e > Ga; )
    jt(t, uu | Ga & e), e = qo(e / 128);
  jt(t, Ga & e);
}, Wp = (t, e) => {
  const n = KT(e);
  for (n && (e = -e), jt(t, (e > ab ? uu : 0) | (n ? p_ : 0) | ab & e), e = qo(e / 64); e > 0; )
    jt(t, (e > Ga ? uu : 0) | Ga & e), e = qo(e / 128);
}, hh = new Uint8Array(3e4), aA = hh.length / 3, lA = (t, e) => {
  if (e.length < aA) {
    const n = cl.encodeInto(e, hh).written || 0;
    ot(t, n);
    for (let r = 0; r < n; r++)
      jt(t, hh[r]);
  } else
    Hn(t, iA(e));
}, cA = (t, e) => {
  const n = unescape(encodeURIComponent(e)), r = n.length;
  ot(t, r);
  for (let i = 0; i < r; i++)
    jt(
      t,
      /** @type {number} */
      n.codePointAt(i)
    );
}, Es = cl && /** @type {any} */
cl.encodeInto ? lA : cA, Kp = (t, e) => {
  const n = t.cbuf.length, r = t.cpos, i = h_(n - r, e.length), o = e.length - i;
  t.cbuf.set(e.subarray(0, i), r), t.cpos += i, o > 0 && (t.bufs.push(t.cbuf), t.cbuf = new Uint8Array(ga(n * 2, o)), t.cbuf.set(e.subarray(i)), t.cpos = o);
}, Hn = (t, e) => {
  ot(t, e.byteLength), Kp(t, e);
}, Gp = (t, e) => {
  sA(t, e);
  const n = new DataView(t.cbuf.buffer, t.cpos, e);
  return t.cpos += e, n;
}, uA = (t, e) => Gp(t, 4).setFloat32(0, e, !1), dA = (t, e) => Gp(t, 8).setFloat64(0, e, !1), fA = (t, e) => (
  /** @type {any} */
  Gp(t, 8).setBigInt64(0, e, !1)
), cb = new DataView(new ArrayBuffer(4)), hA = (t) => (cb.setFloat32(0, t), cb.getFloat32(0) === t), ul = (t, e) => {
  switch (typeof e) {
    case "string":
      jt(t, 119), Es(t, e);
      break;
    case "number":
      YT(e) && Ac(e) <= XT ? (jt(t, 125), Wp(t, e)) : hA(e) ? (jt(t, 124), uA(t, e)) : (jt(t, 123), dA(t, e));
      break;
    case "bigint":
      jt(t, 122), fA(t, e);
      break;
    case "object":
      if (e === null)
        jt(t, 126);
      else if (HT(e)) {
        jt(t, 117), ot(t, e.length);
        for (let n = 0; n < e.length; n++)
          ul(t, e[n]);
      } else if (e instanceof Uint8Array)
        jt(t, 116), Hn(t, e);
      else {
        jt(t, 118);
        const n = Object.keys(e);
        ot(t, n.length);
        for (let r = 0; r < n.length; r++) {
          const i = n[r];
          Es(t, i), ul(t, e[i]);
        }
      }
      break;
    case "boolean":
      jt(t, e ? 120 : 121);
      break;
    default:
      jt(t, 127);
  }
};
class ub extends $l {
  /**
   * @param {function(Encoder, T):void} writer
   */
  constructor(e) {
    super(), this.w = e, this.s = null, this.count = 0;
  }
  /**
   * @param {T} v
   */
  write(e) {
    this.s === e ? this.count++ : (this.count > 0 && ot(this, this.count - 1), this.count = 1, this.w(this, e), this.s = e);
  }
}
const db = (t) => {
  t.count > 0 && (Wp(t.encoder, t.count === 1 ? t.s : -t.s), t.count > 1 && ot(t.encoder, t.count - 2));
};
class Dc {
  constructor() {
    this.encoder = new $l(), this.s = 0, this.count = 0;
  }
  /**
   * @param {number} v
   */
  write(e) {
    this.s === e ? this.count++ : (db(this), this.count = 1, this.s = e);
  }
  /**
   * Flush the encoded state and transform this to a Uint8Array.
   *
   * Note that this should only be called once.
   */
  toUint8Array() {
    return db(this), mi(this.encoder);
  }
}
const fb = (t) => {
  if (t.count > 0) {
    const e = t.diff * 2 + (t.count === 1 ? 0 : 1);
    Wp(t.encoder, e), t.count > 1 && ot(t.encoder, t.count - 2);
  }
};
class rf {
  constructor() {
    this.encoder = new $l(), this.s = 0, this.count = 0, this.diff = 0;
  }
  /**
   * @param {number} v
   */
  write(e) {
    this.diff === e - this.s ? (this.s = e, this.count++) : (fb(this), this.count = 1, this.diff = e - this.s, this.s = e);
  }
  /**
   * Flush the encoded state and transform this to a Uint8Array.
   *
   * Note that this should only be called once.
   */
  toUint8Array() {
    return fb(this), mi(this.encoder);
  }
}
class pA {
  constructor() {
    this.sarr = [], this.s = "", this.lensE = new Dc();
  }
  /**
   * @param {string} string
   */
  write(e) {
    this.s += e, this.s.length > 19 && (this.sarr.push(this.s), this.s = ""), this.lensE.write(e.length);
  }
  toUint8Array() {
    const e = new $l();
    return this.sarr.push(this.s), this.s = "", Es(e, this.sarr.join("")), Kp(e, this.lensE.toUint8Array()), mi(e);
  }
}
const Vs = (t) => new Error(t), Gr = () => {
  throw Vs("Method unimplemented");
}, jo = () => {
  throw Vs("Unexpected case");
}, gA = crypto.getRandomValues.bind(crypto), g_ = () => gA(new Uint32Array(1))[0], mA = "10000000-1000-4000-8000" + -1e11, wA = () => mA.replace(
  /[018]/g,
  /** @param {number} c */
  (t) => (t ^ g_() & 15 >> t / 4).toString(16)
), hb = (t) => (
  /** @type {Promise<T>} */
  new Promise(t)
);
Promise.all.bind(Promise);
const pb = (t) => t === void 0 ? null : t;
class bA {
  constructor() {
    this.map = /* @__PURE__ */ new Map();
  }
  /**
   * @param {string} key
   * @param {any} newValue
   */
  setItem(e, n) {
    this.map.set(e, n);
  }
  /**
   * @param {string} key
   */
  getItem(e) {
    return this.map.get(e);
  }
}
let m_ = new bA(), yA = !0;
try {
  typeof localStorage < "u" && localStorage && (m_ = localStorage, yA = !1);
} catch {
}
const vA = m_, _A = Object.assign, xA = Object.keys, CA = (t, e) => {
  for (const n in t)
    e(t[n], n);
}, gb = (t) => xA(t).length, kA = (t) => {
  for (const e in t)
    return !1;
  return !0;
}, EA = (t, e) => {
  for (const n in t)
    if (!e(t[n], n))
      return !1;
  return !0;
}, NA = (t, e) => Object.prototype.hasOwnProperty.call(t, e), SA = (t, e) => t === e || gb(t) === gb(e) && EA(t, (n, r) => (n !== void 0 || NA(e, r)) && e[r] === n), TA = Object.freeze, w_ = (t) => {
  for (const e in t) {
    const n = t[e];
    (typeof n == "object" || typeof n == "function") && w_(t[e]);
  }
  return TA(t);
}, Jp = (t, e, n = 0) => {
  try {
    for (; n < t.length; n++)
      t[n](...e);
  } finally {
    n < t.length && Jp(t, e, n + 1);
  }
}, AA = (t, e) => e.includes(t), dl = typeof process < "u" && process.release && /node|io\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process < "u" ? process : 0) === "[object process]";
let Pr;
const DA = () => {
  if (Pr === void 0)
    if (dl) {
      Pr = Kr();
      const t = process.argv;
      let e = null;
      for (let n = 0; n < t.length; n++) {
        const r = t[n];
        r[0] === "-" ? (e !== null && Pr.set(e, ""), e = r) : e !== null && (Pr.set(e, r), e = null);
      }
      e !== null && Pr.set(e, "");
    } else typeof location == "object" ? (Pr = Kr(), (location.search || "?").slice(1).split("&").forEach((t) => {
      if (t.length !== 0) {
        const [e, n] = t.split("=");
        Pr.set(`--${lb(e, "-")}`, n), Pr.set(`-${lb(e, "-")}`, n);
      }
    })) : Pr = Kr();
  return Pr;
}, ph = (t) => DA().has(t), du = (t) => pb(dl ? process.env[t.toUpperCase().replaceAll("-", "_")] : vA.getItem(t)), b_ = (t) => ph("--" + t) || du(t) !== null;
b_("production");
const MA = dl && AA(process.env.FORCE_COLOR, ["true", "1", "2"]), OA = MA || !ph("--no-colors") && // @todo deprecate --no-colors
!b_("no-color") && (!dl || process.stdout.isTTY) && (!dl || ph("--color") || du("COLORTERM") !== null || (du("TERM") || "").includes("color"));
class IA {
  /**
   * @param {L} left
   * @param {R} right
   */
  constructor(e, n) {
    this.left = e, this.right = n;
  }
}
const si = (t, e) => new IA(t, e);
typeof DOMParser < "u" && new DOMParser();
const RA = (t) => zT(t, (e, n) => `${n}:${e};`).join(""), Ei = Symbol, y_ = Ei(), v_ = Ei(), PA = Ei(), LA = Ei(), $A = Ei(), __ = Ei(), FA = Ei(), Xp = Ei(), BA = Ei(), qA = (t) => {
  var i;
  t.length === 1 && ((i = t[0]) == null ? void 0 : i.constructor) === Function && (t = /** @type {Array<string|Symbol|Object|number>} */
  /** @type {[function]} */
  t[0]());
  const e = [], n = [];
  let r = 0;
  for (; r < t.length; r++) {
    const o = t[r];
    if (o === void 0)
      break;
    if (o.constructor === String || o.constructor === Number)
      e.push(o);
    else if (o.constructor === Object)
      break;
  }
  for (r > 0 && n.push(e.join("")); r < t.length; r++) {
    const o = t[r];
    o instanceof Symbol || n.push(o);
  }
  return n;
}, jA = {
  [y_]: si("font-weight", "bold"),
  [v_]: si("font-weight", "normal"),
  [PA]: si("color", "blue"),
  [$A]: si("color", "green"),
  [LA]: si("color", "grey"),
  [__]: si("color", "red"),
  [FA]: si("color", "purple"),
  [Xp]: si("color", "orange"),
  // not well supported in chrome when debugging node with inspector - TODO: deprecate
  [BA]: si("color", "black")
}, UA = (t) => {
  var s;
  t.length === 1 && ((s = t[0]) == null ? void 0 : s.constructor) === Function && (t = /** @type {Array<string|Symbol|Object|number>} */
  /** @type {[function]} */
  t[0]());
  const e = [], n = [], r = Kr();
  let i = [], o = 0;
  for (; o < t.length; o++) {
    const a = t[o], l = jA[a];
    if (l !== void 0)
      r.set(l.left, l.right);
    else {
      if (a === void 0)
        break;
      if (a.constructor === String || a.constructor === Number) {
        const c = RA(r);
        o > 0 || c.length > 0 ? (e.push("%c" + a), n.push(c)) : e.push(a);
      } else
        break;
    }
  }
  for (o > 0 && (i = n, i.unshift(e.join(""))); o < t.length; o++) {
    const a = t[o];
    a instanceof Symbol || i.push(a);
  }
  return i;
}, x_ = OA ? UA : qA, zA = (...t) => {
  console.log(...x_(t)), C_.forEach((e) => e.print(t));
}, VA = (...t) => {
  console.warn(...x_(t)), t.unshift(Xp), C_.forEach((e) => e.print(t));
}, C_ = Us(), k_ = (t) => ({
  /**
   * @return {IterableIterator<T>}
   */
  [Symbol.iterator]() {
    return this;
  },
  // @ts-ignore
  next: t
}), HA = (t, e) => k_(() => {
  let n;
  do
    n = t.next();
  while (!n.done && !e(n.value));
  return n;
}), of = (t, e) => k_(() => {
  const { done: n, value: r } = t.next();
  return { done: n, value: n ? void 0 : e(r) };
});
class WA {
  /**
   * @param {number} clock
   * @param {number} len
   */
  constructor(e, n) {
    this.clock = e, this.len = n;
  }
}
class KA {
  constructor() {
    this.clients = /* @__PURE__ */ new Map();
  }
}
const E_ = (t, e, n) => e.clients.forEach((r, i) => {
  const o = (
    /** @type {Array<GC|Item>} */
    t.doc.store.clients.get(i)
  );
  if (o != null) {
    const s = o[o.length - 1], a = s.id.clock + s.length;
    for (let l = 0, c = r[l]; l < r.length && c.clock < a; c = r[++l])
      O_(t, o, c.clock, c.len, n);
  }
}), GA = (t, e) => {
  let n = 0, r = t.length - 1;
  for (; n <= r; ) {
    const i = qo((n + r) / 2), o = t[i], s = o.clock;
    if (s <= e) {
      if (e < s + o.len)
        return i;
      n = i + 1;
    } else
      r = i - 1;
  }
  return null;
}, N_ = (t, e) => {
  const n = t.clients.get(e.client);
  return n !== void 0 && GA(n, e.clock) !== null;
}, S_ = (t) => {
  t.clients.forEach((e) => {
    e.sort((i, o) => i.clock - o.clock);
    let n, r;
    for (n = 1, r = 1; n < e.length; n++) {
      const i = e[r - 1], o = e[n];
      i.clock + i.len >= o.clock ? i.len = ga(i.len, o.clock + o.len - i.clock) : (r < n && (e[r] = o), r++);
    }
    e.length = r;
  });
}, T_ = (t, e, n, r) => {
  pa(t.clients, e, () => (
    /** @type {Array<DeleteItem>} */
    []
  )).push(new WA(n, r));
}, JA = (t, e) => {
  ot(t.restEncoder, e.clients.size), zs(e.clients.entries()).sort((n, r) => r[0] - n[0]).forEach(([n, r]) => {
    t.resetDsCurVal(), ot(t.restEncoder, n);
    const i = r.length;
    ot(t.restEncoder, i);
    for (let o = 0; o < i; o++) {
      const s = r[o];
      t.writeDsClock(s.clock), t.writeDsLen(s.len);
    }
  });
}, A_ = g_;
class Fl extends WT {
  /**
   * @param {DocOpts} opts configuration
   */
  constructor({ guid: e = wA(), collectionid: n = null, gc: r = !0, gcFilter: i = () => !0, meta: o = null, autoLoad: s = !1, shouldLoad: a = !0 } = {}) {
    super(), this.gc = r, this.gcFilter = i, this.clientID = A_(), this.guid = e, this.collectionid = n, this.share = /* @__PURE__ */ new Map(), this.store = new oD(), this._transaction = null, this._transactionCleanups = [], this.subdocs = /* @__PURE__ */ new Set(), this._item = null, this.shouldLoad = a, this.autoLoad = s, this.meta = o, this.isLoaded = !1, this.isSynced = !1, this.isDestroyed = !1, this.whenLoaded = hb((c) => {
      this.on("load", () => {
        this.isLoaded = !0, c(this);
      });
    });
    const l = () => hb((c) => {
      const u = (f) => {
        (f === void 0 || f === !0) && (this.off("sync", u), c());
      };
      this.on("sync", u);
    });
    this.on("sync", (c) => {
      c === !1 && this.isSynced && (this.whenSynced = l()), this.isSynced = c === void 0 || c === !0, this.isSynced && !this.isLoaded && this.emit("load", [this]);
    }), this.whenSynced = l();
  }
  /**
   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).
   *
   * `load()` might be used in the future to request any provider to load the most current data.
   *
   * It is safe to call `load()` multiple times.
   */
  load() {
    const e = this._item;
    e !== null && !this.shouldLoad && ut(
      /** @type {any} */
      e.parent.doc,
      (n) => {
        n.subdocsLoaded.add(this);
      },
      null,
      !0
    ), this.shouldLoad = !0;
  }
  getSubdocs() {
    return this.subdocs;
  }
  getSubdocGuids() {
    return new Set(zs(this.subdocs).map((e) => e.guid));
  }
  /**
   * Changes that happen inside of a transaction are bundled. This means that
   * the observer fires _after_ the transaction is finished and that all changes
   * that happened inside of the transaction are sent as one message to the
   * other peers.
   *
   * @template T
   * @param {function(Transaction):T} f The function that should be executed as a transaction
   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin
   * @return T
   *
   * @public
   */
  transact(e, n = null) {
    return ut(this, e, n);
  }
  /**
   * Define a shared data type.
   *
   * Multiple calls of `ydoc.get(name, TypeConstructor)` yield the same result
   * and do not overwrite each other. I.e.
   * `ydoc.get(name, Y.Array) === ydoc.get(name, Y.Array)`
   *
   * After this method is called, the type is also available on `ydoc.share.get(name)`.
   *
   * *Best Practices:*
   * Define all types right after the Y.Doc instance is created and store them in a separate object.
   * Also use the typed methods `getText(name)`, `getArray(name)`, ..
   *
   * @template {typeof AbstractType<any>} Type
   * @example
   *   const ydoc = new Y.Doc(..)
   *   const appState = {
   *     document: ydoc.getText('document')
   *     comments: ydoc.getArray('comments')
   *   }
   *
   * @param {string} name
   * @param {Type} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...
   * @return {InstanceType<Type>} The created type. Constructed with TypeConstructor
   *
   * @public
   */
  get(e, n = (
    /** @type {any} */
    rn
  )) {
    const r = pa(this.share, e, () => {
      const o = new n();
      return o._integrate(this, null), o;
    }), i = r.constructor;
    if (n !== rn && i !== n)
      if (i === rn) {
        const o = new n();
        o._map = r._map, r._map.forEach(
          /** @param {Item?} n */
          (s) => {
            for (; s !== null; s = s.left)
              s.parent = o;
          }
        ), o._start = r._start;
        for (let s = o._start; s !== null; s = s.right)
          s.parent = o;
        return o._length = r._length, this.share.set(e, o), o._integrate(this, null), /** @type {InstanceType<Type>} */
        o;
      } else
        throw new Error(`Type with the name ${e} has already been defined with a different constructor`);
    return (
      /** @type {InstanceType<Type>} */
      r
    );
  }
  /**
   * @template T
   * @param {string} [name]
   * @return {YArray<T>}
   *
   * @public
   */
  getArray(e = "") {
    return (
      /** @type {YArray<T>} */
      this.get(e, To)
    );
  }
  /**
   * @param {string} [name]
   * @return {YText}
   *
   * @public
   */
  getText(e = "") {
    return this.get(e, pu);
  }
  /**
   * @template T
   * @param {string} [name]
   * @return {YMap<T>}
   *
   * @public
   */
  getMap(e = "") {
    return (
      /** @type {YMap<T>} */
      this.get(e, Hs)
    );
  }
  /**
   * @param {string} [name]
   * @return {YXmlElement}
   *
   * @public
   */
  getXmlElement(e = "") {
    return (
      /** @type {YXmlElement<{[key:string]:string}>} */
      this.get(e, pl)
    );
  }
  /**
   * @param {string} [name]
   * @return {YXmlFragment}
   *
   * @public
   */
  getXmlFragment(e = "") {
    return this.get(e, Ws);
  }
  /**
   * Converts the entire document into a js object, recursively traversing each yjs type
   * Doesn't log types that have not been defined (using ydoc.getType(..)).
   *
   * @deprecated Do not use this method and rather call toJSON directly on the shared types.
   *
   * @return {Object<string, any>}
   */
  toJSON() {
    const e = {};
    return this.share.forEach((n, r) => {
      e[r] = n.toJSON();
    }), e;
  }
  /**
   * Emit `destroy` event and unregister all event handlers.
   */
  destroy() {
    this.isDestroyed = !0, zs(this.subdocs).forEach((n) => n.destroy());
    const e = this._item;
    if (e !== null) {
      this._item = null;
      const n = (
        /** @type {ContentDoc} */
        e.content
      );
      n.doc = new Fl({ guid: this.guid, ...n.opts, shouldLoad: !1 }), n.doc._item = e, ut(
        /** @type {any} */
        e.parent.doc,
        (r) => {
          const i = n.doc;
          e.deleted || r.subdocsAdded.add(i), r.subdocsRemoved.add(this);
        },
        null,
        !0
      );
    }
    this.emit("destroyed", [!0]), this.emit("destroy", [this]), super.destroy();
  }
}
class XA {
  constructor() {
    this.restEncoder = Hp();
  }
  toUint8Array() {
    return mi(this.restEncoder);
  }
  resetDsCurVal() {
  }
  /**
   * @param {number} clock
   */
  writeDsClock(e) {
    ot(this.restEncoder, e);
  }
  /**
   * @param {number} len
   */
  writeDsLen(e) {
    ot(this.restEncoder, e);
  }
}
class YA extends XA {
  /**
   * @param {ID} id
   */
  writeLeftID(e) {
    ot(this.restEncoder, e.client), ot(this.restEncoder, e.clock);
  }
  /**
   * @param {ID} id
   */
  writeRightID(e) {
    ot(this.restEncoder, e.client), ot(this.restEncoder, e.clock);
  }
  /**
   * Use writeClient and writeClock instead of writeID if possible.
   * @param {number} client
   */
  writeClient(e) {
    ot(this.restEncoder, e);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeInfo(e) {
    fh(this.restEncoder, e);
  }
  /**
   * @param {string} s
   */
  writeString(e) {
    Es(this.restEncoder, e);
  }
  /**
   * @param {boolean} isYKey
   */
  writeParentInfo(e) {
    ot(this.restEncoder, e ? 1 : 0);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeTypeRef(e) {
    ot(this.restEncoder, e);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @param {number} len
   */
  writeLen(e) {
    ot(this.restEncoder, e);
  }
  /**
   * @param {any} any
   */
  writeAny(e) {
    ul(this.restEncoder, e);
  }
  /**
   * @param {Uint8Array} buf
   */
  writeBuf(e) {
    Hn(this.restEncoder, e);
  }
  /**
   * @param {any} embed
   */
  writeJSON(e) {
    Es(this.restEncoder, JSON.stringify(e));
  }
  /**
   * @param {string} key
   */
  writeKey(e) {
    Es(this.restEncoder, e);
  }
}
class QA {
  constructor() {
    this.restEncoder = Hp(), this.dsCurrVal = 0;
  }
  toUint8Array() {
    return mi(this.restEncoder);
  }
  resetDsCurVal() {
    this.dsCurrVal = 0;
  }
  /**
   * @param {number} clock
   */
  writeDsClock(e) {
    const n = e - this.dsCurrVal;
    this.dsCurrVal = e, ot(this.restEncoder, n);
  }
  /**
   * @param {number} len
   */
  writeDsLen(e) {
    e === 0 && jo(), ot(this.restEncoder, e - 1), this.dsCurrVal += e;
  }
}
class ZA extends QA {
  constructor() {
    super(), this.keyMap = /* @__PURE__ */ new Map(), this.keyClock = 0, this.keyClockEncoder = new rf(), this.clientEncoder = new Dc(), this.leftClockEncoder = new rf(), this.rightClockEncoder = new rf(), this.infoEncoder = new ub(fh), this.stringEncoder = new pA(), this.parentInfoEncoder = new ub(fh), this.typeRefEncoder = new Dc(), this.lenEncoder = new Dc();
  }
  toUint8Array() {
    const e = Hp();
    return ot(e, 0), Hn(e, this.keyClockEncoder.toUint8Array()), Hn(e, this.clientEncoder.toUint8Array()), Hn(e, this.leftClockEncoder.toUint8Array()), Hn(e, this.rightClockEncoder.toUint8Array()), Hn(e, mi(this.infoEncoder)), Hn(e, this.stringEncoder.toUint8Array()), Hn(e, mi(this.parentInfoEncoder)), Hn(e, this.typeRefEncoder.toUint8Array()), Hn(e, this.lenEncoder.toUint8Array()), Kp(e, mi(this.restEncoder)), mi(e);
  }
  /**
   * @param {ID} id
   */
  writeLeftID(e) {
    this.clientEncoder.write(e.client), this.leftClockEncoder.write(e.clock);
  }
  /**
   * @param {ID} id
   */
  writeRightID(e) {
    this.clientEncoder.write(e.client), this.rightClockEncoder.write(e.clock);
  }
  /**
   * @param {number} client
   */
  writeClient(e) {
    this.clientEncoder.write(e);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeInfo(e) {
    this.infoEncoder.write(e);
  }
  /**
   * @param {string} s
   */
  writeString(e) {
    this.stringEncoder.write(e);
  }
  /**
   * @param {boolean} isYKey
   */
  writeParentInfo(e) {
    this.parentInfoEncoder.write(e ? 1 : 0);
  }
  /**
   * @param {number} info An unsigned 8-bit integer
   */
  writeTypeRef(e) {
    this.typeRefEncoder.write(e);
  }
  /**
   * Write len of a struct - well suited for Opt RLE encoder.
   *
   * @param {number} len
   */
  writeLen(e) {
    this.lenEncoder.write(e);
  }
  /**
   * @param {any} any
   */
  writeAny(e) {
    ul(this.restEncoder, e);
  }
  /**
   * @param {Uint8Array} buf
   */
  writeBuf(e) {
    Hn(this.restEncoder, e);
  }
  /**
   * This is mainly here for legacy purposes.
   *
   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.
   *
   * @param {any} embed
   */
  writeJSON(e) {
    ul(this.restEncoder, e);
  }
  /**
   * Property keys are often reused. For example, in y-prosemirror the key `bold` might
   * occur very often. For a 3d application, the key `position` might occur very often.
   *
   * We cache these keys in a Map and refer to them via a unique number.
   *
   * @param {string} key
   */
  writeKey(e) {
    const n = this.keyMap.get(e);
    n === void 0 ? (this.keyClockEncoder.write(this.keyClock++), this.stringEncoder.write(e)) : this.keyClockEncoder.write(n);
  }
}
const eD = (t, e, n, r) => {
  r = ga(r, e[0].id.clock);
  const i = yi(e, r);
  ot(t.restEncoder, e.length - i), t.writeClient(n), ot(t.restEncoder, r);
  const o = e[i];
  o.write(t, r - o.id.clock);
  for (let s = i + 1; s < e.length; s++)
    e[s].write(t, 0);
}, tD = (t, e, n) => {
  const r = /* @__PURE__ */ new Map();
  n.forEach((i, o) => {
    An(e, o) > i && r.set(o, i);
  }), Yp(e).forEach((i, o) => {
    n.has(o) || r.set(o, 0);
  }), ot(t.restEncoder, r.size), zs(r.entries()).sort((i, o) => o[0] - i[0]).forEach(([i, o]) => {
    eD(
      t,
      /** @type {Array<GC|Item>} */
      e.clients.get(i),
      i,
      o
    );
  });
}, nD = (t, e) => tD(t, e.doc.store, e.beforeState);
class rD {
  constructor() {
    this.l = [];
  }
}
const mb = () => new rD(), wb = (t, e) => t.l.push(e), bb = (t, e) => {
  const n = t.l, r = n.length;
  t.l = n.filter((i) => e !== i), r === t.l.length && console.error("[yjs] Tried to remove event handler that doesn't exist.");
}, D_ = (t, e, n) => Jp(t.l, [e, n]);
class Mc {
  /**
   * @param {number} client client id
   * @param {number} clock unique per client id, continuous number
   */
  constructor(e, n) {
    this.client = e, this.clock = n;
  }
}
const wc = (t, e) => t === e || t !== null && e !== null && t.client === e.client && t.clock === e.clock, Ct = (t, e) => new Mc(t, e), iD = (t) => {
  for (const [e, n] of t.doc.share.entries())
    if (n === t)
      return e;
  throw jo();
}, ps = (t, e) => e === void 0 ? !t.deleted : e.sv.has(t.id.client) && (e.sv.get(t.id.client) || 0) > t.id.clock && !N_(e.ds, t.id), gh = (t, e) => {
  const n = pa(t.meta, gh, Us), r = t.doc.store;
  n.has(e) || (e.sv.forEach((i, o) => {
    i < An(r, o) && Wi(t, Ct(o, i));
  }), E_(t, e.ds, (i) => {
  }), n.add(e));
};
class oD {
  constructor() {
    this.clients = /* @__PURE__ */ new Map(), this.pendingStructs = null, this.pendingDs = null;
  }
}
const Yp = (t) => {
  const e = /* @__PURE__ */ new Map();
  return t.clients.forEach((n, r) => {
    const i = n[n.length - 1];
    e.set(r, i.id.clock + i.length);
  }), e;
}, An = (t, e) => {
  const n = t.clients.get(e);
  if (n === void 0)
    return 0;
  const r = n[n.length - 1];
  return r.id.clock + r.length;
}, M_ = (t, e) => {
  let n = t.clients.get(e.id.client);
  if (n === void 0)
    n = [], t.clients.set(e.id.client, n);
  else {
    const r = n[n.length - 1];
    if (r.id.clock + r.length !== e.id.clock)
      throw jo();
  }
  n.push(e);
}, yi = (t, e) => {
  let n = 0, r = t.length - 1, i = t[r], o = i.id.clock;
  if (o === e)
    return r;
  let s = qo(e / (o + i.length - 1) * r);
  for (; n <= r; ) {
    if (i = t[s], o = i.id.clock, o <= e) {
      if (e < o + i.length)
        return s;
      n = s + 1;
    } else
      r = s - 1;
    s = qo((n + r) / 2);
  }
  throw jo();
}, sD = (t, e) => {
  const n = t.clients.get(e.client);
  return n[yi(n, e.clock)];
}, sf = (
  /** @type {function(StructStore,ID):Item} */
  sD
), mh = (t, e, n) => {
  const r = yi(e, n), i = e[r];
  return i.id.clock < n && i instanceof dn ? (e.splice(r + 1, 0, Y_(t, i, n - i.id.clock)), r + 1) : r;
}, Wi = (t, e) => {
  const n = (
    /** @type {Array<Item>} */
    t.doc.store.clients.get(e.client)
  );
  return n[mh(t, n, e.clock)];
}, yb = (t, e, n) => {
  const r = e.clients.get(n.client), i = yi(r, n.clock), o = r[i];
  return n.clock !== o.id.clock + o.length - 1 && o.constructor !== Oi && r.splice(i + 1, 0, Y_(t, o, n.clock - o.id.clock + 1)), o;
}, aD = (t, e, n) => {
  const r = (
    /** @type {Array<GC|Item>} */
    t.clients.get(e.id.client)
  );
  r[yi(r, e.id.clock)] = n;
}, O_ = (t, e, n, r, i) => {
  if (r === 0)
    return;
  const o = n + r;
  let s = mh(t, e, n), a;
  do
    a = e[s++], o < a.id.clock + a.length && mh(t, e, o), i(a);
  while (s < e.length && e[s].id.clock < o);
};
class lD {
  /**
   * @param {Doc} doc
   * @param {any} origin
   * @param {boolean} local
   */
  constructor(e, n, r) {
    this.doc = e, this.deleteSet = new KA(), this.beforeState = Yp(e.store), this.afterState = /* @__PURE__ */ new Map(), this.changed = /* @__PURE__ */ new Map(), this.changedParentTypes = /* @__PURE__ */ new Map(), this._mergeStructs = [], this.origin = n, this.meta = /* @__PURE__ */ new Map(), this.local = r, this.subdocsAdded = /* @__PURE__ */ new Set(), this.subdocsRemoved = /* @__PURE__ */ new Set(), this.subdocsLoaded = /* @__PURE__ */ new Set(), this._needFormattingCleanup = !1;
  }
}
const vb = (t, e) => e.deleteSet.clients.size === 0 && !VT(e.afterState, (n, r) => e.beforeState.get(r) !== n) ? !1 : (S_(e.deleteSet), nD(t, e), JA(t, e.deleteSet), !0), _b = (t, e, n) => {
  const r = e._item;
  (r === null || r.id.clock < (t.beforeState.get(r.id.client) || 0) && !r.deleted) && pa(t.changed, e, Us).add(n);
}, Oc = (t, e) => {
  let n = t[e], r = t[e - 1], i = e;
  for (; i > 0; n = r, r = t[--i - 1]) {
    if (r.deleted === n.deleted && r.constructor === n.constructor && r.mergeWith(n)) {
      n instanceof dn && n.parentSub !== null && /** @type {AbstractType<any>} */
      n.parent._map.get(n.parentSub) === n && n.parent._map.set(
        n.parentSub,
        /** @type {Item} */
        r
      );
      continue;
    }
    break;
  }
  const o = e - i;
  return o && t.splice(e + 1 - o, o), o;
}, cD = (t, e, n) => {
  for (const [r, i] of t.clients.entries()) {
    const o = (
      /** @type {Array<GC|Item>} */
      e.clients.get(r)
    );
    for (let s = i.length - 1; s >= 0; s--) {
      const a = i[s], l = a.clock + a.len;
      for (let c = yi(o, a.clock), u = o[c]; c < o.length && u.id.clock < l; u = o[++c]) {
        const f = o[c];
        if (a.clock + a.len <= f.id.clock)
          break;
        f instanceof dn && f.deleted && !f.keep && n(f) && f.gc(e, !1);
      }
    }
  }
}, uD = (t, e) => {
  t.clients.forEach((n, r) => {
    const i = (
      /** @type {Array<GC|Item>} */
      e.clients.get(r)
    );
    for (let o = n.length - 1; o >= 0; o--) {
      const s = n[o], a = h_(i.length - 1, 1 + yi(i, s.clock + s.len - 1));
      for (let l = a, c = i[l]; l > 0 && c.id.clock >= s.clock; c = i[l])
        l -= 1 + Oc(i, l);
    }
  });
}, I_ = (t, e) => {
  if (e < t.length) {
    const n = t[e], r = n.doc, i = r.store, o = n.deleteSet, s = n._mergeStructs;
    try {
      S_(o), n.afterState = Yp(n.doc.store), r.emit("beforeObserverCalls", [n, r]);
      const a = [];
      n.changed.forEach(
        (l, c) => a.push(() => {
          (c._item === null || !c._item.deleted) && c._callObserver(n, l);
        })
      ), a.push(() => {
        n.changedParentTypes.forEach((l, c) => {
          c._dEH.l.length > 0 && (c._item === null || !c._item.deleted) && (l = l.filter(
            (u) => u.target._item === null || !u.target._item.deleted
          ), l.forEach((u) => {
            u.currentTarget = c, u._path = null;
          }), l.sort((u, f) => u.path.length - f.path.length), D_(c._dEH, l, n));
        });
      }), a.push(() => r.emit("afterTransaction", [n, r])), Jp(a, []), n._needFormattingCleanup && _D(n);
    } finally {
      r.gc && cD(o, i, r.gcFilter), uD(o, i), n.afterState.forEach((u, f) => {
        const d = n.beforeState.get(f) || 0;
        if (d !== u) {
          const h = (
            /** @type {Array<GC|Item>} */
            i.clients.get(f)
          ), g = ga(yi(h, d), 1);
          for (let m = h.length - 1; m >= g; )
            m -= 1 + Oc(h, m);
        }
      });
      for (let u = s.length - 1; u >= 0; u--) {
        const { client: f, clock: d } = s[u].id, h = (
          /** @type {Array<GC|Item>} */
          i.clients.get(f)
        ), g = yi(h, d);
        g + 1 < h.length && Oc(h, g + 1) > 1 || g > 0 && Oc(h, g);
      }
      if (!n.local && n.afterState.get(r.clientID) !== n.beforeState.get(r.clientID) && (zA(Xp, y_, "[yjs] ", v_, __, "Changed the client-id because another client seems to be using it."), r.clientID = A_()), r.emit("afterTransactionCleanup", [n, r]), r._observers.has("update")) {
        const u = new YA();
        vb(u, n) && r.emit("update", [u.toUint8Array(), n.origin, r, n]);
      }
      if (r._observers.has("updateV2")) {
        const u = new ZA();
        vb(u, n) && r.emit("updateV2", [u.toUint8Array(), n.origin, r, n]);
      }
      const { subdocsAdded: a, subdocsLoaded: l, subdocsRemoved: c } = n;
      (a.size > 0 || c.size > 0 || l.size > 0) && (a.forEach((u) => {
        u.clientID = r.clientID, u.collectionid == null && (u.collectionid = r.collectionid), r.subdocs.add(u);
      }), c.forEach((u) => r.subdocs.delete(u)), r.emit("subdocs", [{ loaded: l, added: a, removed: c }, r, n]), c.forEach((u) => u.destroy())), t.length <= e + 1 ? (r._transactionCleanups = [], r.emit("afterAllTransactions", [r, t])) : I_(t, e + 1);
    }
  }
}, ut = (t, e, n = null, r = !0) => {
  const i = t._transactionCleanups;
  let o = !1, s = null;
  t._transaction === null && (o = !0, t._transaction = new lD(t, n, r), i.push(t._transaction), i.length === 1 && t.emit("beforeAllTransactions", [t]), t.emit("beforeTransaction", [t._transaction, t]));
  try {
    s = e(t._transaction);
  } finally {
    if (o) {
      const a = t._transaction === i[0];
      t._transaction = null, a && I_(i, 0);
    }
  }
  return s;
}, xb = "You must not compute changes after the event-handler fired.";
class ed {
  /**
   * @param {T} target The changed type.
   * @param {Transaction} transaction
   */
  constructor(e, n) {
    this.target = e, this.currentTarget = e, this.transaction = n, this._changes = null, this._keys = null, this._delta = null, this._path = null;
  }
  /**
   * Computes the path from `y` to the changed type.
   *
   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.
   *
   * The following property holds:
   * @example
   *   let type = y
   *   event.path.forEach(dir => {
   *     type = type.get(dir)
   *   })
   *   type === event.target // => true
   */
  get path() {
    return this._path || (this._path = dD(this.currentTarget, this.target));
  }
  /**
   * Check if a struct is deleted by this event.
   *
   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.
   *
   * @param {AbstractStruct} struct
   * @return {boolean}
   */
  deletes(e) {
    return N_(this.transaction.deleteSet, e.id);
  }
  /**
   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}
   */
  get keys() {
    if (this._keys === null) {
      if (this.transaction.doc._transactionCleanups.length === 0)
        throw Vs(xb);
      const e = /* @__PURE__ */ new Map(), n = this.target;
      /** @type Set<string|null> */
      this.transaction.changed.get(n).forEach((i) => {
        if (i !== null) {
          const o = (
            /** @type {Item} */
            n._map.get(i)
          );
          let s, a;
          if (this.adds(o)) {
            let l = o.left;
            for (; l !== null && this.adds(l); )
              l = l.left;
            if (this.deletes(o))
              if (l !== null && this.deletes(l))
                s = "delete", a = Zd(l.content.getContent());
              else
                return;
            else
              l !== null && this.deletes(l) ? (s = "update", a = Zd(l.content.getContent())) : (s = "add", a = void 0);
          } else if (this.deletes(o))
            s = "delete", a = Zd(
              /** @type {Item} */
              o.content.getContent()
            );
          else
            return;
          e.set(i, { action: s, oldValue: a });
        }
      }), this._keys = e;
    }
    return this._keys;
  }
  /**
   * This is a computed property. Note that this can only be safely computed during the
   * event call. Computing this property after other changes happened might result in
   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes
   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.
   *
   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}
   */
  get delta() {
    return this.changes.delta;
  }
  /**
   * Check if a struct is added by this event.
   *
   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.
   *
   * @param {AbstractStruct} struct
   * @return {boolean}
   */
  adds(e) {
    return e.id.clock >= (this.transaction.beforeState.get(e.id.client) || 0);
  }
  /**
   * This is a computed property. Note that this can only be safely computed during the
   * event call. Computing this property after other changes happened might result in
   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes
   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.
   *
   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}
   */
  get changes() {
    let e = this._changes;
    if (e === null) {
      if (this.transaction.doc._transactionCleanups.length === 0)
        throw Vs(xb);
      const n = this.target, r = Us(), i = Us(), o = [];
      if (e = {
        added: r,
        deleted: i,
        delta: o,
        keys: this.keys
      }, /** @type Set<string|null> */
      this.transaction.changed.get(n).has(null)) {
        let a = null;
        const l = () => {
          a && o.push(a);
        };
        for (let c = n._start; c !== null; c = c.right)
          c.deleted ? this.deletes(c) && !this.adds(c) && ((a === null || a.delete === void 0) && (l(), a = { delete: 0 }), a.delete += c.length, i.add(c)) : this.adds(c) ? ((a === null || a.insert === void 0) && (l(), a = { insert: [] }), a.insert = a.insert.concat(c.content.getContent()), r.add(c)) : ((a === null || a.retain === void 0) && (l(), a = { retain: 0 }), a.retain += c.length);
        a !== null && a.retain === void 0 && l();
      }
      this._changes = e;
    }
    return (
      /** @type {any} */
      e
    );
  }
}
const dD = (t, e) => {
  const n = [];
  for (; e._item !== null && e !== t; ) {
    if (e._item.parentSub !== null)
      n.unshift(e._item.parentSub);
    else {
      let r = 0, i = (
        /** @type {AbstractType<any>} */
        e._item.parent._start
      );
      for (; i !== e._item && i !== null; )
        !i.deleted && i.countable && (r += i.length), i = i.right;
      n.unshift(r);
    }
    e = /** @type {AbstractType<any>} */
    e._item.parent;
  }
  return n;
}, hn = () => {
  VA("Invalid access: Add Yjs type to a document before reading data.");
}, R_ = 80;
let Qp = 0;
class fD {
  /**
   * @param {Item} p
   * @param {number} index
   */
  constructor(e, n) {
    e.marker = !0, this.p = e, this.index = n, this.timestamp = Qp++;
  }
}
const hD = (t) => {
  t.timestamp = Qp++;
}, P_ = (t, e, n) => {
  t.p.marker = !1, t.p = e, e.marker = !0, t.index = n, t.timestamp = Qp++;
}, pD = (t, e, n) => {
  if (t.length >= R_) {
    const r = t.reduce((i, o) => i.timestamp < o.timestamp ? i : o);
    return P_(r, e, n), r;
  } else {
    const r = new fD(e, n);
    return t.push(r), r;
  }
}, td = (t, e) => {
  if (t._start === null || e === 0 || t._searchMarker === null)
    return null;
  const n = t._searchMarker.length === 0 ? null : t._searchMarker.reduce((o, s) => Ac(e - o.index) < Ac(e - s.index) ? o : s);
  let r = t._start, i = 0;
  for (n !== null && (r = n.p, i = n.index, hD(n)); r.right !== null && i < e; ) {
    if (!r.deleted && r.countable) {
      if (e < i + r.length)
        break;
      i += r.length;
    }
    r = r.right;
  }
  for (; r.left !== null && i > e; )
    r = r.left, !r.deleted && r.countable && (i -= r.length);
  for (; r.left !== null && r.left.id.client === r.id.client && r.left.id.clock + r.left.length === r.id.clock; )
    r = r.left, !r.deleted && r.countable && (i -= r.length);
  return n !== null && Ac(n.index - i) < /** @type {YText|YArray<any>} */
  r.parent.length / R_ ? (P_(n, r, i), n) : pD(t._searchMarker, r, i);
}, fl = (t, e, n) => {
  for (let r = t.length - 1; r >= 0; r--) {
    const i = t[r];
    if (n > 0) {
      let o = i.p;
      for (o.marker = !1; o && (o.deleted || !o.countable); )
        o = o.left, o && !o.deleted && o.countable && (i.index -= o.length);
      if (o === null || o.marker === !0) {
        t.splice(r, 1);
        continue;
      }
      i.p = o, o.marker = !0;
    }
    (e < i.index || n > 0 && e === i.index) && (i.index = ga(e, i.index + n));
  }
}, nd = (t, e, n) => {
  const r = t, i = e.changedParentTypes;
  for (; pa(i, t, () => []).push(n), t._item !== null; )
    t = /** @type {AbstractType<any>} */
    t._item.parent;
  D_(r._eH, n, e);
};
class rn {
  constructor() {
    this._item = null, this._map = /* @__PURE__ */ new Map(), this._start = null, this.doc = null, this._length = 0, this._eH = mb(), this._dEH = mb(), this._searchMarker = null;
  }
  /**
   * @return {AbstractType<any>|null}
   */
  get parent() {
    return this._item ? (
      /** @type {AbstractType<any>} */
      this._item.parent
    ) : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item|null} item
   */
  _integrate(e, n) {
    this.doc = e, this._item = n;
  }
  /**
   * @return {AbstractType<EventType>}
   */
  _copy() {
    throw Gr();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {AbstractType<EventType>}
   */
  clone() {
    throw Gr();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder
   */
  _write(e) {
  }
  /**
   * The first non-deleted item
   */
  get _first() {
    let e = this._start;
    for (; e !== null && e.deleted; )
      e = e.right;
    return e;
  }
  /**
   * Creates YEvent and calls all type observers.
   * Must be implemented by each type.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    !e.local && this._searchMarker && (this._searchMarker.length = 0);
  }
  /**
   * Observe all events that are created on this type.
   *
   * @param {function(EventType, Transaction):void} f Observer function
   */
  observe(e) {
    wb(this._eH, e);
  }
  /**
   * Observe all events that are created by this type and its children.
   *
   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function
   */
  observeDeep(e) {
    wb(this._dEH, e);
  }
  /**
   * Unregister an observer function.
   *
   * @param {function(EventType,Transaction):void} f Observer function
   */
  unobserve(e) {
    bb(this._eH, e);
  }
  /**
   * Unregister an observer function.
   *
   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function
   */
  unobserveDeep(e) {
    bb(this._dEH, e);
  }
  /**
   * @abstract
   * @return {any}
   */
  toJSON() {
  }
}
const L_ = (t, e, n) => {
  t.doc ?? hn(), e < 0 && (e = t._length + e), n < 0 && (n = t._length + n);
  let r = n - e;
  const i = [];
  let o = t._start;
  for (; o !== null && r > 0; ) {
    if (o.countable && !o.deleted) {
      const s = o.content.getContent();
      if (s.length <= e)
        e -= s.length;
      else {
        for (let a = e; a < s.length && r > 0; a++)
          i.push(s[a]), r--;
        e = 0;
      }
    }
    o = o.right;
  }
  return i;
}, $_ = (t) => {
  t.doc ?? hn();
  const e = [];
  let n = t._start;
  for (; n !== null; ) {
    if (n.countable && !n.deleted) {
      const r = n.content.getContent();
      for (let i = 0; i < r.length; i++)
        e.push(r[i]);
    }
    n = n.right;
  }
  return e;
}, hl = (t, e) => {
  let n = 0, r = t._start;
  for (t.doc ?? hn(); r !== null; ) {
    if (r.countable && !r.deleted) {
      const i = r.content.getContent();
      for (let o = 0; o < i.length; o++)
        e(i[o], n++, t);
    }
    r = r.right;
  }
}, F_ = (t, e) => {
  const n = [];
  return hl(t, (r, i) => {
    n.push(e(r, i, t));
  }), n;
}, gD = (t) => {
  let e = t._start, n = null, r = 0;
  return {
    [Symbol.iterator]() {
      return this;
    },
    next: () => {
      if (n === null) {
        for (; e !== null && e.deleted; )
          e = e.right;
        if (e === null)
          return {
            done: !0,
            value: void 0
          };
        n = e.content.getContent(), r = 0, e = e.right;
      }
      const i = n[r++];
      return n.length <= r && (n = null), {
        done: !1,
        value: i
      };
    }
  };
}, B_ = (t, e) => {
  t.doc ?? hn();
  const n = td(t, e);
  let r = t._start;
  for (n !== null && (r = n.p, e -= n.index); r !== null; r = r.right)
    if (!r.deleted && r.countable) {
      if (e < r.length)
        return r.content.getContent()[e];
      e -= r.length;
    }
}, fu = (t, e, n, r) => {
  let i = n;
  const o = t.doc, s = o.clientID, a = o.store, l = n === null ? e._start : n.right;
  let c = [];
  const u = () => {
    c.length > 0 && (i = new dn(Ct(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new Ks(c)), i.integrate(t, 0), c = []);
  };
  r.forEach((f) => {
    if (f === null)
      c.push(f);
    else
      switch (f.constructor) {
        case Number:
        case Object:
        case Boolean:
        case Array:
        case String:
          c.push(f);
          break;
        default:
          switch (u(), f.constructor) {
            case Uint8Array:
            case ArrayBuffer:
              i = new dn(Ct(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new rd(new Uint8Array(
                /** @type {Uint8Array} */
                f
              ))), i.integrate(t, 0);
              break;
            case Fl:
              i = new dn(Ct(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new id(
                /** @type {Doc} */
                f
              )), i.integrate(t, 0);
              break;
            default:
              if (f instanceof rn)
                i = new dn(Ct(s, An(a, s)), i, i && i.lastId, l, l && l.id, e, null, new no(f)), i.integrate(t, 0);
              else
                throw new Error("Unexpected content type in insert operation");
          }
      }
  }), u();
}, q_ = () => Vs("Length exceeded!"), j_ = (t, e, n, r) => {
  if (n > e._length)
    throw q_();
  if (n === 0)
    return e._searchMarker && fl(e._searchMarker, n, r.length), fu(t, e, null, r);
  const i = n, o = td(e, n);
  let s = e._start;
  for (o !== null && (s = o.p, n -= o.index, n === 0 && (s = s.prev, n += s && s.countable && !s.deleted ? s.length : 0)); s !== null; s = s.right)
    if (!s.deleted && s.countable) {
      if (n <= s.length) {
        n < s.length && Wi(t, Ct(s.id.client, s.id.clock + n));
        break;
      }
      n -= s.length;
    }
  return e._searchMarker && fl(e._searchMarker, i, r.length), fu(t, e, s, r);
}, mD = (t, e, n) => {
  let i = (e._searchMarker || []).reduce((o, s) => s.index > o.index ? s : o, { index: 0, p: e._start }).p;
  if (i)
    for (; i.right; )
      i = i.right;
  return fu(t, e, i, n);
}, U_ = (t, e, n, r) => {
  if (r === 0)
    return;
  const i = n, o = r, s = td(e, n);
  let a = e._start;
  for (s !== null && (a = s.p, n -= s.index); a !== null && n > 0; a = a.right)
    !a.deleted && a.countable && (n < a.length && Wi(t, Ct(a.id.client, a.id.clock + n)), n -= a.length);
  for (; r > 0 && a !== null; )
    a.deleted || (r < a.length && Wi(t, Ct(a.id.client, a.id.clock + r)), a.delete(t), r -= a.length), a = a.right;
  if (r > 0)
    throw q_();
  e._searchMarker && fl(
    e._searchMarker,
    i,
    -o + r
    /* in case we remove the above exception */
  );
}, hu = (t, e, n) => {
  const r = e._map.get(n);
  r !== void 0 && r.delete(t);
}, Zp = (t, e, n, r) => {
  const i = e._map.get(n) || null, o = t.doc, s = o.clientID;
  let a;
  if (r == null)
    a = new Ks([r]);
  else
    switch (r.constructor) {
      case Number:
      case Object:
      case Boolean:
      case Array:
      case String:
      case Date:
      case BigInt:
        a = new Ks([r]);
        break;
      case Uint8Array:
        a = new rd(
          /** @type {Uint8Array} */
          r
        );
        break;
      case Fl:
        a = new id(
          /** @type {Doc} */
          r
        );
        break;
      default:
        if (r instanceof rn)
          a = new no(r);
        else
          throw new Error("Unexpected content type");
    }
  new dn(Ct(s, An(o.store, s)), i, i && i.lastId, null, null, e, n, a).integrate(t, 0);
}, eg = (t, e) => {
  t.doc ?? hn();
  const n = t._map.get(e);
  return n !== void 0 && !n.deleted ? n.content.getContent()[n.length - 1] : void 0;
}, z_ = (t) => {
  const e = {};
  return t.doc ?? hn(), t._map.forEach((n, r) => {
    n.deleted || (e[r] = n.content.getContent()[n.length - 1]);
  }), e;
}, V_ = (t, e) => {
  t.doc ?? hn();
  const n = t._map.get(e);
  return n !== void 0 && !n.deleted;
}, wD = (t, e) => {
  const n = {};
  return t._map.forEach((r, i) => {
    let o = r;
    for (; o !== null && (!e.sv.has(o.id.client) || o.id.clock >= (e.sv.get(o.id.client) || 0)); )
      o = o.left;
    o !== null && ps(o, e) && (n[i] = o.content.getContent()[o.length - 1]);
  }), n;
}, bc = (t) => (t.doc ?? hn(), HA(
  t._map.entries(),
  /** @param {any} entry */
  (e) => !e[1].deleted
));
class H_ extends ed {
}
class To extends rn {
  constructor() {
    super(), this._prelimContent = [], this._searchMarker = [];
  }
  /**
   * Construct a new YArray containing the specified items.
   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T
   * @param {Array<T>} items
   * @return {YArray<T>}
   */
  static from(e) {
    const n = new To();
    return n.push(e), n;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this.insert(
      0,
      /** @type {Array<any>} */
      this._prelimContent
    ), this._prelimContent = null;
  }
  /**
   * @return {YArray<T>}
   */
  _copy() {
    return new To();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YArray<T>}
   */
  clone() {
    const e = new To();
    return e.insert(0, this.toArray().map(
      (n) => n instanceof rn ? (
        /** @type {typeof el} */
        n.clone()
      ) : n
    )), e;
  }
  get length() {
    return this.doc ?? hn(), this._length;
  }
  /**
   * Creates YArrayEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    super._callObserver(e, n), nd(this, e, new H_(this, e));
  }
  /**
   * Inserts new content at an index.
   *
   * Important: This function expects an array of content. Not just a content
   * object. The reason for this "weirdness" is that inserting several elements
   * is very efficient when it is done as a single operation.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  yarray.insert(0, ['a'])
   *  // Insert numbers 1, 2 at position 1
   *  yarray.insert(1, [1, 2])
   *
   * @param {number} index The index to insert content at.
   * @param {Array<T>} content The array of content
   */
  insert(e, n) {
    this.doc !== null ? ut(this.doc, (r) => {
      j_(
        r,
        this,
        e,
        /** @type {any} */
        n
      );
    }) : this._prelimContent.splice(e, 0, ...n);
  }
  /**
   * Appends content to this YArray.
   *
   * @param {Array<T>} content Array of content to append.
   *
   * @todo Use the following implementation in all types.
   */
  push(e) {
    this.doc !== null ? ut(this.doc, (n) => {
      mD(
        n,
        this,
        /** @type {any} */
        e
      );
    }) : this._prelimContent.push(...e);
  }
  /**
   * Prepends content to this YArray.
   *
   * @param {Array<T>} content Array of content to prepend.
   */
  unshift(e) {
    this.insert(0, e);
  }
  /**
   * Deletes elements starting from an index.
   *
   * @param {number} index Index at which to start deleting elements
   * @param {number} length The number of elements to remove. Defaults to 1.
   */
  delete(e, n = 1) {
    this.doc !== null ? ut(this.doc, (r) => {
      U_(r, this, e, n);
    }) : this._prelimContent.splice(e, n);
  }
  /**
   * Returns the i-th element from a YArray.
   *
   * @param {number} index The index of the element to return from the YArray
   * @return {T}
   */
  get(e) {
    return B_(this, e);
  }
  /**
   * Transforms this YArray to a JavaScript Array.
   *
   * @return {Array<T>}
   */
  toArray() {
    return $_(this);
  }
  /**
   * Returns a portion of this YArray into a JavaScript Array selected
   * from start to end (end not included).
   *
   * @param {number} [start]
   * @param {number} [end]
   * @return {Array<T>}
   */
  slice(e = 0, n = this.length) {
    return L_(this, e, n);
  }
  /**
   * Transforms this Shared Type to a JSON object.
   *
   * @return {Array<any>}
   */
  toJSON() {
    return this.map((e) => e instanceof rn ? e.toJSON() : e);
  }
  /**
   * Returns an Array with the result of calling a provided function on every
   * element of this YArray.
   *
   * @template M
   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array
   * @return {Array<M>} A new array with each element being the result of the
   *                 callback function
   */
  map(e) {
    return F_(
      this,
      /** @type {any} */
      e
    );
  }
  /**
   * Executes a provided function once on every element of this YArray.
   *
   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    hl(this, e);
  }
  /**
   * @return {IterableIterator<T>}
   */
  [Symbol.iterator]() {
    return gD(this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(SD);
  }
}
class bD extends ed {
  /**
   * @param {YMap<T>} ymap The YArray that changed.
   * @param {Transaction} transaction
   * @param {Set<any>} subs The keys that changed.
   */
  constructor(e, n, r) {
    super(e, n), this.keysChanged = r;
  }
}
class Hs extends rn {
  /**
   *
   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap
   */
  constructor(e) {
    super(), this._prelimContent = null, e === void 0 ? this._prelimContent = /* @__PURE__ */ new Map() : this._prelimContent = new Map(e);
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this._prelimContent.forEach((r, i) => {
      this.set(i, r);
    }), this._prelimContent = null;
  }
  /**
   * @return {YMap<MapType>}
   */
  _copy() {
    return new Hs();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YMap<MapType>}
   */
  clone() {
    const e = new Hs();
    return this.forEach((n, r) => {
      e.set(r, n instanceof rn ? (
        /** @type {typeof value} */
        n.clone()
      ) : n);
    }), e;
  }
  /**
   * Creates YMapEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    nd(this, e, new bD(this, e, n));
  }
  /**
   * Transforms this Shared Type to a JSON object.
   *
   * @return {Object<string,any>}
   */
  toJSON() {
    this.doc ?? hn();
    const e = {};
    return this._map.forEach((n, r) => {
      if (!n.deleted) {
        const i = n.content.getContent()[n.length - 1];
        e[r] = i instanceof rn ? i.toJSON() : i;
      }
    }), e;
  }
  /**
   * Returns the size of the YMap (count of key/value pairs)
   *
   * @return {number}
   */
  get size() {
    return [...bc(this)].length;
  }
  /**
   * Returns the keys for each element in the YMap Type.
   *
   * @return {IterableIterator<string>}
   */
  keys() {
    return of(
      bc(this),
      /** @param {any} v */
      (e) => e[0]
    );
  }
  /**
   * Returns the values for each element in the YMap Type.
   *
   * @return {IterableIterator<MapType>}
   */
  values() {
    return of(
      bc(this),
      /** @param {any} v */
      (e) => e[1].content.getContent()[e[1].length - 1]
    );
  }
  /**
   * Returns an Iterator of [key, value] pairs
   *
   * @return {IterableIterator<[string, MapType]>}
   */
  entries() {
    return of(
      bc(this),
      /** @param {any} v */
      (e) => (
        /** @type {any} */
        [e[0], e[1].content.getContent()[e[1].length - 1]]
      )
    );
  }
  /**
   * Executes a provided function on once on every key-value pair.
   *
   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    this.doc ?? hn(), this._map.forEach((n, r) => {
      n.deleted || e(n.content.getContent()[n.length - 1], r, this);
    });
  }
  /**
   * Returns an Iterator of [key, value] pairs
   *
   * @return {IterableIterator<[string, MapType]>}
   */
  [Symbol.iterator]() {
    return this.entries();
  }
  /**
   * Remove a specified element from this YMap.
   *
   * @param {string} key The key of the element to remove.
   */
  delete(e) {
    this.doc !== null ? ut(this.doc, (n) => {
      hu(n, this, e);
    }) : this._prelimContent.delete(e);
  }
  /**
   * Adds or updates an element with a specified key and value.
   * @template {MapType} VAL
   *
   * @param {string} key The key of the element to add to this YMap
   * @param {VAL} value The value of the element to add
   * @return {VAL}
   */
  set(e, n) {
    return this.doc !== null ? ut(this.doc, (r) => {
      Zp(
        r,
        this,
        e,
        /** @type {any} */
        n
      );
    }) : this._prelimContent.set(e, n), n;
  }
  /**
   * Returns a specified element from this YMap.
   *
   * @param {string} key
   * @return {MapType|undefined}
   */
  get(e) {
    return (
      /** @type {any} */
      eg(this, e)
    );
  }
  /**
   * Returns a boolean indicating whether the specified key exists or not.
   *
   * @param {string} key The key to test.
   * @return {boolean}
   */
  has(e) {
    return V_(this, e);
  }
  /**
   * Removes all elements from this YMap.
   */
  clear() {
    this.doc !== null ? ut(this.doc, (e) => {
      this.forEach(function(n, r, i) {
        hu(e, i, r);
      });
    }) : this._prelimContent.clear();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(TD);
  }
}
const Li = (t, e) => t === e || typeof t == "object" && typeof e == "object" && t && e && SA(t, e);
class wh {
  /**
   * @param {Item|null} left
   * @param {Item|null} right
   * @param {number} index
   * @param {Map<string,any>} currentAttributes
   */
  constructor(e, n, r, i) {
    this.left = e, this.right = n, this.index = r, this.currentAttributes = i;
  }
  /**
   * Only call this if you know that this.right is defined
   */
  forward() {
    switch (this.right === null && jo(), this.right.content.constructor) {
      case Wt:
        this.right.deleted || ma(
          this.currentAttributes,
          /** @type {ContentFormat} */
          this.right.content
        );
        break;
      default:
        this.right.deleted || (this.index += this.right.length);
        break;
    }
    this.left = this.right, this.right = this.right.right;
  }
}
const Cb = (t, e, n) => {
  for (; e.right !== null && n > 0; ) {
    switch (e.right.content.constructor) {
      case Wt:
        e.right.deleted || ma(
          e.currentAttributes,
          /** @type {ContentFormat} */
          e.right.content
        );
        break;
      default:
        e.right.deleted || (n < e.right.length && Wi(t, Ct(e.right.id.client, e.right.id.clock + n)), e.index += e.right.length, n -= e.right.length);
        break;
    }
    e.left = e.right, e.right = e.right.right;
  }
  return e;
}, yc = (t, e, n, r) => {
  const i = /* @__PURE__ */ new Map(), o = r ? td(e, n) : null;
  if (o) {
    const s = new wh(o.p.left, o.p, o.index, i);
    return Cb(t, s, n - o.index);
  } else {
    const s = new wh(null, e._start, 0, i);
    return Cb(t, s, n);
  }
}, W_ = (t, e, n, r) => {
  for (; n.right !== null && (n.right.deleted === !0 || n.right.content.constructor === Wt && Li(
    r.get(
      /** @type {ContentFormat} */
      n.right.content.key
    ),
    /** @type {ContentFormat} */
    n.right.content.value
  )); )
    n.right.deleted || r.delete(
      /** @type {ContentFormat} */
      n.right.content.key
    ), n.forward();
  const i = t.doc, o = i.clientID;
  r.forEach((s, a) => {
    const l = n.left, c = n.right, u = new dn(Ct(o, An(i.store, o)), l, l && l.lastId, c, c && c.id, e, null, new Wt(a, s));
    u.integrate(t, 0), n.right = u, n.forward();
  });
}, ma = (t, e) => {
  const { key: n, value: r } = e;
  r === null ? t.delete(n) : t.set(n, r);
}, K_ = (t, e) => {
  for (; t.right !== null; ) {
    if (!(t.right.deleted || t.right.content.constructor === Wt && Li(
      e[
        /** @type {ContentFormat} */
        t.right.content.key
      ] ?? null,
      /** @type {ContentFormat} */
      t.right.content.value
    ))) break;
    t.forward();
  }
}, G_ = (t, e, n, r) => {
  const i = t.doc, o = i.clientID, s = /* @__PURE__ */ new Map();
  for (const a in r) {
    const l = r[a], c = n.currentAttributes.get(a) ?? null;
    if (!Li(c, l)) {
      s.set(a, c);
      const { left: u, right: f } = n;
      n.right = new dn(Ct(o, An(i.store, o)), u, u && u.lastId, f, f && f.id, e, null, new Wt(a, l)), n.right.integrate(t, 0), n.forward();
    }
  }
  return s;
}, af = (t, e, n, r, i) => {
  n.currentAttributes.forEach((d, h) => {
    i[h] === void 0 && (i[h] = null);
  });
  const o = t.doc, s = o.clientID;
  K_(n, i);
  const a = G_(t, e, n, i), l = r.constructor === String ? new vi(
    /** @type {string} */
    r
  ) : r instanceof rn ? new no(r) : new wa(r);
  let { left: c, right: u, index: f } = n;
  e._searchMarker && fl(e._searchMarker, n.index, l.getLength()), u = new dn(Ct(s, An(o.store, s)), c, c && c.lastId, u, u && u.id, e, null, l), u.integrate(t, 0), n.right = u, n.index = f, n.forward(), W_(t, e, n, a);
}, kb = (t, e, n, r, i) => {
  const o = t.doc, s = o.clientID;
  K_(n, i);
  const a = G_(t, e, n, i);
  e: for (; n.right !== null && (r > 0 || a.size > 0 && (n.right.deleted || n.right.content.constructor === Wt)); ) {
    if (!n.right.deleted)
      switch (n.right.content.constructor) {
        case Wt: {
          const { key: l, value: c } = (
            /** @type {ContentFormat} */
            n.right.content
          ), u = i[l];
          if (u !== void 0) {
            if (Li(u, c))
              a.delete(l);
            else {
              if (r === 0)
                break e;
              a.set(l, c);
            }
            n.right.delete(t);
          } else
            n.currentAttributes.set(l, c);
          break;
        }
        default:
          r < n.right.length && Wi(t, Ct(n.right.id.client, n.right.id.clock + r)), r -= n.right.length;
          break;
      }
    n.forward();
  }
  if (r > 0) {
    let l = "";
    for (; r > 0; r--)
      l += `
`;
    n.right = new dn(Ct(s, An(o.store, s)), n.left, n.left && n.left.lastId, n.right, n.right && n.right.id, e, null, new vi(l)), n.right.integrate(t, 0), n.forward();
  }
  W_(t, e, n, a);
}, J_ = (t, e, n, r, i) => {
  let o = e;
  const s = Kr();
  for (; o && (!o.countable || o.deleted); ) {
    if (!o.deleted && o.content.constructor === Wt) {
      const c = (
        /** @type {ContentFormat} */
        o.content
      );
      s.set(c.key, c);
    }
    o = o.right;
  }
  let a = 0, l = !1;
  for (; e !== o; ) {
    if (n === e && (l = !0), !e.deleted) {
      const c = e.content;
      switch (c.constructor) {
        case Wt: {
          const { key: u, value: f } = (
            /** @type {ContentFormat} */
            c
          ), d = r.get(u) ?? null;
          (s.get(u) !== c || d === f) && (e.delete(t), a++, !l && (i.get(u) ?? null) === f && d !== f && (d === null ? i.delete(u) : i.set(u, d))), !l && !e.deleted && ma(
            i,
            /** @type {ContentFormat} */
            c
          );
          break;
        }
      }
    }
    e = /** @type {Item} */
    e.right;
  }
  return a;
}, yD = (t, e) => {
  for (; e && e.right && (e.right.deleted || !e.right.countable); )
    e = e.right;
  const n = /* @__PURE__ */ new Set();
  for (; e && (e.deleted || !e.countable); ) {
    if (!e.deleted && e.content.constructor === Wt) {
      const r = (
        /** @type {ContentFormat} */
        e.content.key
      );
      n.has(r) ? e.delete(t) : n.add(r);
    }
    e = e.left;
  }
}, vD = (t) => {
  let e = 0;
  return ut(
    /** @type {Doc} */
    t.doc,
    (n) => {
      let r = (
        /** @type {Item} */
        t._start
      ), i = t._start, o = Kr();
      const s = dh(o);
      for (; i; ) {
        if (i.deleted === !1)
          switch (i.content.constructor) {
            case Wt:
              ma(
                s,
                /** @type {ContentFormat} */
                i.content
              );
              break;
            default:
              e += J_(n, r, i, o, s), o = dh(s), r = i;
              break;
          }
        i = i.right;
      }
    }
  ), e;
}, _D = (t) => {
  const e = /* @__PURE__ */ new Set(), n = t.doc;
  for (const [r, i] of t.afterState.entries()) {
    const o = t.beforeState.get(r) || 0;
    i !== o && O_(
      t,
      /** @type {Array<Item|GC>} */
      n.store.clients.get(r),
      o,
      i,
      (s) => {
        !s.deleted && /** @type {Item} */
        s.content.constructor === Wt && s.constructor !== Oi && e.add(
          /** @type {any} */
          s.parent
        );
      }
    );
  }
  ut(n, (r) => {
    E_(t, t.deleteSet, (i) => {
      if (i instanceof Oi || !/** @type {YText} */
      i.parent._hasFormatting || e.has(
        /** @type {YText} */
        i.parent
      ))
        return;
      const o = (
        /** @type {YText} */
        i.parent
      );
      i.content.constructor === Wt ? e.add(o) : yD(r, i);
    });
    for (const i of e)
      vD(i);
  });
}, Eb = (t, e, n) => {
  const r = n, i = dh(e.currentAttributes), o = e.right;
  for (; n > 0 && e.right !== null; ) {
    if (e.right.deleted === !1)
      switch (e.right.content.constructor) {
        case no:
        case wa:
        case vi:
          n < e.right.length && Wi(t, Ct(e.right.id.client, e.right.id.clock + n)), n -= e.right.length, e.right.delete(t);
          break;
      }
    e.forward();
  }
  o && J_(t, o, e.right, i, e.currentAttributes);
  const s = (
    /** @type {AbstractType<any>} */
    /** @type {Item} */
    (e.left || e.right).parent
  );
  return s._searchMarker && fl(s._searchMarker, e.index, -r + n), e;
};
class xD extends ed {
  /**
   * @param {YText} ytext
   * @param {Transaction} transaction
   * @param {Set<any>} subs The keys that changed
   */
  constructor(e, n, r) {
    super(e, n), this.childListChanged = !1, this.keysChanged = /* @__PURE__ */ new Set(), r.forEach((i) => {
      i === null ? this.childListChanged = !0 : this.keysChanged.add(i);
    });
  }
  /**
   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}
   */
  get changes() {
    if (this._changes === null) {
      const e = {
        keys: this.keys,
        delta: this.delta,
        added: /* @__PURE__ */ new Set(),
        deleted: /* @__PURE__ */ new Set()
      };
      this._changes = e;
    }
    return (
      /** @type {any} */
      this._changes
    );
  }
  /**
   * Compute the changes in the delta format.
   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.
   *
   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}
   *
   * @public
   */
  get delta() {
    if (this._delta === null) {
      const e = (
        /** @type {Doc} */
        this.target.doc
      ), n = [];
      ut(e, (r) => {
        const i = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map();
        let s = this.target._start, a = null;
        const l = {};
        let c = "", u = 0, f = 0;
        const d = () => {
          if (a !== null) {
            let h = null;
            switch (a) {
              case "delete":
                f > 0 && (h = { delete: f }), f = 0;
                break;
              case "insert":
                (typeof c == "object" || c.length > 0) && (h = { insert: c }, i.size > 0 && (h.attributes = {}, i.forEach((g, m) => {
                  g !== null && (h.attributes[m] = g);
                }))), c = "";
                break;
              case "retain":
                u > 0 && (h = { retain: u }, kA(l) || (h.attributes = _A({}, l))), u = 0;
                break;
            }
            h && n.push(h), a = null;
          }
        };
        for (; s !== null; ) {
          switch (s.content.constructor) {
            case no:
            case wa:
              this.adds(s) ? this.deletes(s) || (d(), a = "insert", c = s.content.getContent()[0], d()) : this.deletes(s) ? (a !== "delete" && (d(), a = "delete"), f += 1) : s.deleted || (a !== "retain" && (d(), a = "retain"), u += 1);
              break;
            case vi:
              this.adds(s) ? this.deletes(s) || (a !== "insert" && (d(), a = "insert"), c += /** @type {ContentString} */
              s.content.str) : this.deletes(s) ? (a !== "delete" && (d(), a = "delete"), f += s.length) : s.deleted || (a !== "retain" && (d(), a = "retain"), u += s.length);
              break;
            case Wt: {
              const { key: h, value: g } = (
                /** @type {ContentFormat} */
                s.content
              );
              if (this.adds(s)) {
                if (!this.deletes(s)) {
                  const m = i.get(h) ?? null;
                  Li(m, g) ? g !== null && s.delete(r) : (a === "retain" && d(), Li(g, o.get(h) ?? null) ? delete l[h] : l[h] = g);
                }
              } else if (this.deletes(s)) {
                o.set(h, g);
                const m = i.get(h) ?? null;
                Li(m, g) || (a === "retain" && d(), l[h] = m);
              } else if (!s.deleted) {
                o.set(h, g);
                const m = l[h];
                m !== void 0 && (Li(m, g) ? m !== null && s.delete(r) : (a === "retain" && d(), g === null ? delete l[h] : l[h] = g));
              }
              s.deleted || (a === "insert" && d(), ma(
                i,
                /** @type {ContentFormat} */
                s.content
              ));
              break;
            }
          }
          s = s.right;
        }
        for (d(); n.length > 0; ) {
          const h = n[n.length - 1];
          if (h.retain !== void 0 && h.attributes === void 0)
            n.pop();
          else
            break;
        }
      }), this._delta = n;
    }
    return (
      /** @type {any} */
      this._delta
    );
  }
}
class pu extends rn {
  /**
   * @param {String} [string] The initial value of the YText.
   */
  constructor(e) {
    super(), this._pending = e !== void 0 ? [() => this.insert(0, e)] : [], this._searchMarker = [], this._hasFormatting = !1;
  }
  /**
   * Number of characters of this text type.
   *
   * @type {number}
   */
  get length() {
    return this.doc ?? hn(), this._length;
  }
  /**
   * @param {Doc} y
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n);
    try {
      this._pending.forEach((r) => r());
    } catch (r) {
      console.error(r);
    }
    this._pending = null;
  }
  _copy() {
    return new pu();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YText}
   */
  clone() {
    const e = new pu();
    return e.applyDelta(this.toDelta()), e;
  }
  /**
   * Creates YTextEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    super._callObserver(e, n);
    const r = new xD(this, e, n);
    nd(this, e, r), !e.local && this._hasFormatting && (e._needFormattingCleanup = !0);
  }
  /**
   * Returns the unformatted string representation of this YText type.
   *
   * @public
   */
  toString() {
    this.doc ?? hn();
    let e = "", n = this._start;
    for (; n !== null; )
      !n.deleted && n.countable && n.content.constructor === vi && (e += /** @type {ContentString} */
      n.content.str), n = n.right;
    return e;
  }
  /**
   * Returns the unformatted string representation of this YText type.
   *
   * @return {string}
   * @public
   */
  toJSON() {
    return this.toString();
  }
  /**
   * Apply a {@link Delta} on this shared YText type.
   *
   * @param {Array<any>} delta The changes to apply on this element.
   * @param {object}  opts
   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.
   *
   *
   * @public
   */
  applyDelta(e, { sanitize: n = !0 } = {}) {
    this.doc !== null ? ut(this.doc, (r) => {
      const i = new wh(null, this._start, 0, /* @__PURE__ */ new Map());
      for (let o = 0; o < e.length; o++) {
        const s = e[o];
        if (s.insert !== void 0) {
          const a = !n && typeof s.insert == "string" && o === e.length - 1 && i.right === null && s.insert.slice(-1) === `
` ? s.insert.slice(0, -1) : s.insert;
          (typeof a != "string" || a.length > 0) && af(r, this, i, a, s.attributes || {});
        } else s.retain !== void 0 ? kb(r, this, i, s.retain, s.attributes || {}) : s.delete !== void 0 && Eb(r, i, s.delete);
      }
    }) : this._pending.push(() => this.applyDelta(e));
  }
  /**
   * Returns the Delta representation of this YText type.
   *
   * @param {Snapshot} [snapshot]
   * @param {Snapshot} [prevSnapshot]
   * @param {function('removed' | 'added', ID):any} [computeYChange]
   * @return {any} The Delta representation of this type.
   *
   * @public
   */
  toDelta(e, n, r) {
    this.doc ?? hn();
    const i = [], o = /* @__PURE__ */ new Map(), s = (
      /** @type {Doc} */
      this.doc
    );
    let a = "", l = this._start;
    function c() {
      if (a.length > 0) {
        const f = {};
        let d = !1;
        o.forEach((g, m) => {
          d = !0, f[m] = g;
        });
        const h = { insert: a };
        d && (h.attributes = f), i.push(h), a = "";
      }
    }
    const u = () => {
      for (; l !== null; ) {
        if (ps(l, e) || n !== void 0 && ps(l, n))
          switch (l.content.constructor) {
            case vi: {
              const f = o.get("ychange");
              e !== void 0 && !ps(l, e) ? (f === void 0 || f.user !== l.id.client || f.type !== "removed") && (c(), o.set("ychange", r ? r("removed", l.id) : { type: "removed" })) : n !== void 0 && !ps(l, n) ? (f === void 0 || f.user !== l.id.client || f.type !== "added") && (c(), o.set("ychange", r ? r("added", l.id) : { type: "added" })) : f !== void 0 && (c(), o.delete("ychange")), a += /** @type {ContentString} */
              l.content.str;
              break;
            }
            case no:
            case wa: {
              c();
              const f = {
                insert: l.content.getContent()[0]
              };
              if (o.size > 0) {
                const d = (
                  /** @type {Object<string,any>} */
                  {}
                );
                f.attributes = d, o.forEach((h, g) => {
                  d[g] = h;
                });
              }
              i.push(f);
              break;
            }
            case Wt:
              ps(l, e) && (c(), ma(
                o,
                /** @type {ContentFormat} */
                l.content
              ));
              break;
          }
        l = l.right;
      }
      c();
    };
    return e || n ? ut(s, (f) => {
      e && gh(f, e), n && gh(f, n), u();
    }, "cleanup") : u(), i;
  }
  /**
   * Insert text at a given index.
   *
   * @param {number} index The index at which to start inserting.
   * @param {String} text The text to insert at the specified position.
   * @param {TextAttributes} [attributes] Optionally define some formatting
   *                                    information to apply on the inserted
   *                                    Text.
   * @public
   */
  insert(e, n, r) {
    if (n.length <= 0)
      return;
    const i = this.doc;
    i !== null ? ut(i, (o) => {
      const s = yc(o, this, e, !r);
      r || (r = {}, s.currentAttributes.forEach((a, l) => {
        r[l] = a;
      })), af(o, this, s, n, r);
    }) : this._pending.push(() => this.insert(e, n, r));
  }
  /**
   * Inserts an embed at a index.
   *
   * @param {number} index The index to insert the embed at.
   * @param {Object | AbstractType<any>} embed The Object that represents the embed.
   * @param {TextAttributes} [attributes] Attribute information to apply on the
   *                                    embed
   *
   * @public
   */
  insertEmbed(e, n, r) {
    const i = this.doc;
    i !== null ? ut(i, (o) => {
      const s = yc(o, this, e, !r);
      af(o, this, s, n, r || {});
    }) : this._pending.push(() => this.insertEmbed(e, n, r || {}));
  }
  /**
   * Deletes text starting from an index.
   *
   * @param {number} index Index at which to start deleting.
   * @param {number} length The number of characters to remove. Defaults to 1.
   *
   * @public
   */
  delete(e, n) {
    if (n === 0)
      return;
    const r = this.doc;
    r !== null ? ut(r, (i) => {
      Eb(i, yc(i, this, e, !0), n);
    }) : this._pending.push(() => this.delete(e, n));
  }
  /**
   * Assigns properties to a range of text.
   *
   * @param {number} index The position where to start formatting.
   * @param {number} length The amount of characters to assign properties to.
   * @param {TextAttributes} attributes Attribute information to apply on the
   *                                    text.
   *
   * @public
   */
  format(e, n, r) {
    if (n === 0)
      return;
    const i = this.doc;
    i !== null ? ut(i, (o) => {
      const s = yc(o, this, e, !1);
      s.right !== null && kb(o, this, s, n, r);
    }) : this._pending.push(() => this.format(e, n, r));
  }
  /**
   * Removes an attribute.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that is to be removed.
   *
   * @public
   */
  removeAttribute(e) {
    this.doc !== null ? ut(this.doc, (n) => {
      hu(n, this, e);
    }) : this._pending.push(() => this.removeAttribute(e));
  }
  /**
   * Sets or updates an attribute.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that is to be set.
   * @param {any} attributeValue The attribute value that is to be set.
   *
   * @public
   */
  setAttribute(e, n) {
    this.doc !== null ? ut(this.doc, (r) => {
      Zp(r, this, e, n);
    }) : this._pending.push(() => this.setAttribute(e, n));
  }
  /**
   * Returns an attribute value that belongs to the attribute name.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @param {String} attributeName The attribute name that identifies the
   *                               queried value.
   * @return {any} The queried attribute value.
   *
   * @public
   */
  getAttribute(e) {
    return (
      /** @type {any} */
      eg(this, e)
    );
  }
  /**
   * Returns all attribute name/value pairs in a JSON Object.
   *
   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.
   *
   * @return {Object<string, any>} A JSON Object that describes the attributes.
   *
   * @public
   */
  getAttributes() {
    return z_(this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   */
  _write(e) {
    e.writeTypeRef(AD);
  }
}
class lf {
  /**
   * @param {YXmlFragment | YXmlElement} root
   * @param {function(AbstractType<any>):boolean} [f]
   */
  constructor(e, n = () => !0) {
    this._filter = n, this._root = e, this._currentNode = /** @type {Item} */
    e._start, this._firstCall = !0, e.doc ?? hn();
  }
  [Symbol.iterator]() {
    return this;
  }
  /**
   * Get the next node.
   *
   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.
   *
   * @public
   */
  next() {
    let e = this._currentNode, n = e && e.content && /** @type {any} */
    e.content.type;
    if (e !== null && (!this._firstCall || e.deleted || !this._filter(n)))
      do
        if (n = /** @type {any} */
        e.content.type, !e.deleted && (n.constructor === pl || n.constructor === Ws) && n._start !== null)
          e = n._start;
        else
          for (; e !== null; ) {
            const r = e.next;
            if (r !== null) {
              e = r;
              break;
            } else e.parent === this._root ? e = null : e = /** @type {AbstractType<any>} */
            e.parent._item;
          }
      while (e !== null && (e.deleted || !this._filter(
        /** @type {ContentType} */
        e.content.type
      )));
    return this._firstCall = !1, e === null ? { value: void 0, done: !0 } : (this._currentNode = e, { value: (
      /** @type {any} */
      e.content.type
    ), done: !1 });
  }
}
class Ws extends rn {
  constructor() {
    super(), this._prelimContent = [];
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get firstChild() {
    const e = this._first;
    return e ? e.content.getContent()[0] : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), this.insert(
      0,
      /** @type {Array<any>} */
      this._prelimContent
    ), this._prelimContent = null;
  }
  _copy() {
    return new Ws();
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlFragment}
   */
  clone() {
    const e = new Ws();
    return e.insert(0, this.toArray().map((n) => n instanceof rn ? n.clone() : n)), e;
  }
  get length() {
    return this.doc ?? hn(), this._prelimContent === null ? this._length : this._prelimContent.length;
  }
  /**
   * Create a subtree of childNodes.
   *
   * @example
   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')
   * for (let node in walker) {
   *   // `node` is a div node
   *   nop(node)
   * }
   *
   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and
   *                          returns a Boolean indicating whether the child
   *                          is to be included in the subtree.
   * @return {YXmlTreeWalker} A subtree and a position within it.
   *
   * @public
   */
  createTreeWalker(e) {
    return new lf(this, e);
  }
  /**
   * Returns the first YXmlElement that matches the query.
   * Similar to DOM's {@link querySelector}.
   *
   * Query support:
   *   - tagname
   * TODO:
   *   - id
   *   - attribute
   *
   * @param {CSS_Selector} query The query on the children.
   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.
   *
   * @public
   */
  querySelector(e) {
    e = e.toUpperCase();
    const r = new lf(this, (i) => i.nodeName && i.nodeName.toUpperCase() === e).next();
    return r.done ? null : r.value;
  }
  /**
   * Returns all YXmlElements that match the query.
   * Similar to Dom's {@link querySelectorAll}.
   *
   * @todo Does not yet support all queries. Currently only query by tagName.
   *
   * @param {CSS_Selector} query The query on the children
   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.
   *
   * @public
   */
  querySelectorAll(e) {
    return e = e.toUpperCase(), zs(new lf(this, (n) => n.nodeName && n.nodeName.toUpperCase() === e));
  }
  /**
   * Creates YXmlEvent and calls observers.
   *
   * @param {Transaction} transaction
   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.
   */
  _callObserver(e, n) {
    nd(this, e, new CD(this, n, e));
  }
  /**
   * Get the string representation of all the children of this YXmlFragment.
   *
   * @return {string} The string representation of all children.
   */
  toString() {
    return F_(this, (e) => e.toString()).join("");
  }
  /**
   * @return {string}
   */
  toJSON() {
    return this.toString();
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, r) {
    const i = e.createDocumentFragment();
    return r !== void 0 && r._createAssociation(i, this), hl(this, (o) => {
      i.insertBefore(o.toDOM(e, n, r), null);
    }), i;
  }
  /**
   * Inserts new content at an index.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  xml.insert(0, [new Y.XmlText('text')])
   *
   * @param {number} index The index to insert content at
   * @param {Array<YXmlElement|YXmlText>} content The array of content
   */
  insert(e, n) {
    this.doc !== null ? ut(this.doc, (r) => {
      j_(r, this, e, n);
    }) : this._prelimContent.splice(e, 0, ...n);
  }
  /**
   * Inserts new content at an index.
   *
   * @example
   *  // Insert character 'a' at position 0
   *  xml.insert(0, [new Y.XmlText('text')])
   *
   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at
   * @param {Array<YXmlElement|YXmlText>} content The array of content
   */
  insertAfter(e, n) {
    if (this.doc !== null)
      ut(this.doc, (r) => {
        const i = e && e instanceof rn ? e._item : e;
        fu(r, this, i, n);
      });
    else {
      const r = (
        /** @type {Array<any>} */
        this._prelimContent
      ), i = e === null ? 0 : r.findIndex((o) => o === e) + 1;
      if (i === 0 && e !== null)
        throw Vs("Reference item not found");
      r.splice(i, 0, ...n);
    }
  }
  /**
   * Deletes elements starting from an index.
   *
   * @param {number} index Index at which to start deleting elements
   * @param {number} [length=1] The number of elements to remove. Defaults to 1.
   */
  delete(e, n = 1) {
    this.doc !== null ? ut(this.doc, (r) => {
      U_(r, this, e, n);
    }) : this._prelimContent.splice(e, n);
  }
  /**
   * Transforms this YArray to a JavaScript Array.
   *
   * @return {Array<YXmlElement|YXmlText|YXmlHook>}
   */
  toArray() {
    return $_(this);
  }
  /**
   * Appends content to this YArray.
   *
   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.
   */
  push(e) {
    this.insert(this.length, e);
  }
  /**
   * Prepends content to this YArray.
   *
   * @param {Array<YXmlElement|YXmlText>} content Array of content to prepend.
   */
  unshift(e) {
    this.insert(0, e);
  }
  /**
   * Returns the i-th element from a YArray.
   *
   * @param {number} index The index of the element to return from the YArray
   * @return {YXmlElement|YXmlText}
   */
  get(e) {
    return B_(this, e);
  }
  /**
   * Returns a portion of this YXmlFragment into a JavaScript Array selected
   * from start to end (end not included).
   *
   * @param {number} [start]
   * @param {number} [end]
   * @return {Array<YXmlElement|YXmlText>}
   */
  slice(e = 0, n = this.length) {
    return L_(this, e, n);
  }
  /**
   * Executes a provided function on once on every child element.
   *
   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.
   */
  forEach(e) {
    hl(this, e);
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(MD);
  }
}
class pl extends Ws {
  constructor(e = "UNDEFINED") {
    super(), this.nodeName = e, this._prelimAttrs = /* @__PURE__ */ new Map();
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get nextSibling() {
    const e = this._item ? this._item.next : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * @type {YXmlElement|YXmlText|null}
   */
  get prevSibling() {
    const e = this._item ? this._item.prev : null;
    return e ? (
      /** @type {YXmlElement|YXmlText} */
      /** @type {ContentType} */
      e.content.type
    ) : null;
  }
  /**
   * Integrate this type into the Yjs instance.
   *
   * * Save this struct in the os
   * * This type is sent to other client
   * * Observer functions are fired
   *
   * @param {Doc} y The Yjs instance
   * @param {Item} item
   */
  _integrate(e, n) {
    super._integrate(e, n), /** @type {Map<string, any>} */
    this._prelimAttrs.forEach((r, i) => {
      this.setAttribute(i, r);
    }), this._prelimAttrs = null;
  }
  /**
   * Creates an Item with the same effect as this Item (without position effect)
   *
   * @return {YXmlElement}
   */
  _copy() {
    return new pl(this.nodeName);
  }
  /**
   * Makes a copy of this data type that can be included somewhere else.
   *
   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.
   *
   * @return {YXmlElement<KV>}
   */
  clone() {
    const e = new pl(this.nodeName), n = this.getAttributes();
    return CA(n, (r, i) => {
      typeof r == "string" && e.setAttribute(i, r);
    }), e.insert(0, this.toArray().map((r) => r instanceof rn ? r.clone() : r)), e;
  }
  /**
   * Returns the XML serialization of this YXmlElement.
   * The attributes are ordered by attribute-name, so you can easily use this
   * method to compare YXmlElements
   *
   * @return {string} The string representation of this type.
   *
   * @public
   */
  toString() {
    const e = this.getAttributes(), n = [], r = [];
    for (const a in e)
      r.push(a);
    r.sort();
    const i = r.length;
    for (let a = 0; a < i; a++) {
      const l = r[a];
      n.push(l + '="' + e[l] + '"');
    }
    const o = this.nodeName.toLocaleLowerCase(), s = n.length > 0 ? " " + n.join(" ") : "";
    return `<${o}${s}>${super.toString()}</${o}>`;
  }
  /**
   * Removes an attribute from this YXmlElement.
   *
   * @param {string} attributeName The attribute name that is to be removed.
   *
   * @public
   */
  removeAttribute(e) {
    this.doc !== null ? ut(this.doc, (n) => {
      hu(n, this, e);
    }) : this._prelimAttrs.delete(e);
  }
  /**
   * Sets or updates an attribute.
   *
   * @template {keyof KV & string} KEY
   *
   * @param {KEY} attributeName The attribute name that is to be set.
   * @param {KV[KEY]} attributeValue The attribute value that is to be set.
   *
   * @public
   */
  setAttribute(e, n) {
    this.doc !== null ? ut(this.doc, (r) => {
      Zp(r, this, e, n);
    }) : this._prelimAttrs.set(e, n);
  }
  /**
   * Returns an attribute value that belongs to the attribute name.
   *
   * @template {keyof KV & string} KEY
   *
   * @param {KEY} attributeName The attribute name that identifies the
   *                               queried value.
   * @return {KV[KEY]|undefined} The queried attribute value.
   *
   * @public
   */
  getAttribute(e) {
    return (
      /** @type {any} */
      eg(this, e)
    );
  }
  /**
   * Returns whether an attribute exists
   *
   * @param {string} attributeName The attribute name to check for existence.
   * @return {boolean} whether the attribute exists.
   *
   * @public
   */
  hasAttribute(e) {
    return (
      /** @type {any} */
      V_(this, e)
    );
  }
  /**
   * Returns all attribute name/value pairs in a JSON Object.
   *
   * @param {Snapshot} [snapshot]
   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.
   *
   * @public
   */
  getAttributes(e) {
    return (
      /** @type {any} */
      e ? wD(this, e) : z_(this)
    );
  }
  /**
   * Creates a Dom Element that mirrors this YXmlElement.
   *
   * @param {Document} [_document=document] The document object (you must define
   *                                        this when calling this method in
   *                                        nodejs)
   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks
   *                                             are presented in the DOM
   * @param {any} [binding] You should not set this property. This is
   *                               used if DomBinding wants to create a
   *                               association to the created DOM type.
   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}
   *
   * @public
   */
  toDOM(e = document, n = {}, r) {
    const i = e.createElement(this.nodeName), o = this.getAttributes();
    for (const s in o) {
      const a = o[s];
      typeof a == "string" && i.setAttribute(s, a);
    }
    return hl(this, (s) => {
      i.appendChild(s.toDOM(e, n, r));
    }), r !== void 0 && r._createAssociation(i, this), i;
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   */
  _write(e) {
    e.writeTypeRef(DD), e.writeKey(this.nodeName);
  }
}
class CD extends ed {
  /**
   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.
   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the
   *                   child list changed.
   * @param {Transaction} transaction The transaction instance with which the
   *                                  change was created.
   */
  constructor(e, n, r) {
    super(e, r), this.childListChanged = !1, this.attributesChanged = /* @__PURE__ */ new Set(), n.forEach((i) => {
      i === null ? this.childListChanged = !0 : this.attributesChanged.add(i);
    });
  }
}
class X_ {
  /**
   * @param {ID} id
   * @param {number} length
   */
  constructor(e, n) {
    this.id = e, this.length = n;
  }
  /**
   * @type {boolean}
   */
  get deleted() {
    throw Gr();
  }
  /**
   * Merge this struct with the item to the right.
   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.
   * Also this method does *not* remove right from StructStore!
   * @param {AbstractStruct} right
   * @return {boolean} whether this merged with right
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   * @param {number} offset
   * @param {number} encodingRef
   */
  write(e, n, r) {
    throw Gr();
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    throw Gr();
  }
}
const kD = 0;
class Oi extends X_ {
  get deleted() {
    return !0;
  }
  delete() {
  }
  /**
   * @param {GC} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.constructor !== e.constructor ? !1 : (this.length += e.length, !0);
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    n > 0 && (this.id.clock += n, this.length -= n), M_(e.doc.store, this);
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeInfo(kD), e.writeLen(this.length - n);
  }
  /**
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    return null;
  }
}
class rd {
  /**
   * @param {Uint8Array} content
   */
  constructor(e) {
    this.content = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.content];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentBinary}
   */
  copy() {
    return new rd(this.content);
  }
  /**
   * @param {number} offset
   * @return {ContentBinary}
   */
  splice(e) {
    throw Gr();
  }
  /**
   * @param {ContentBinary} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeBuf(this.content);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 3;
  }
}
class gu {
  /**
   * @param {number} len
   */
  constructor(e) {
    this.len = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.len;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !1;
  }
  /**
   * @return {ContentDeleted}
   */
  copy() {
    return new gu(this.len);
  }
  /**
   * @param {number} offset
   * @return {ContentDeleted}
   */
  splice(e) {
    const n = new gu(this.len - e);
    return this.len = e, n;
  }
  /**
   * @param {ContentDeleted} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.len += e.len, !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    T_(e.deleteSet, n.id.client, n.id.clock, this.len), n.markDeleted();
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeLen(this.len - n);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 1;
  }
}
const ED = (t, e) => new Fl({ guid: t, ...e, shouldLoad: e.shouldLoad || e.autoLoad || !1 });
class id {
  /**
   * @param {Doc} doc
   */
  constructor(e) {
    e._item && console.error("This document was already integrated as a sub-document. You should create a second instance instead with the same guid."), this.doc = e;
    const n = {};
    this.opts = n, e.gc || (n.gc = !1), e.autoLoad && (n.autoLoad = !0), e.meta !== null && (n.meta = e.meta);
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.doc];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentDoc}
   */
  copy() {
    return new id(ED(this.doc.guid, this.opts));
  }
  /**
   * @param {number} offset
   * @return {ContentDoc}
   */
  splice(e) {
    throw Gr();
  }
  /**
   * @param {ContentDoc} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    this.doc._item = n, e.subdocsAdded.add(this.doc), this.doc.shouldLoad && e.subdocsLoaded.add(this.doc);
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
    e.subdocsAdded.has(this.doc) ? e.subdocsAdded.delete(this.doc) : e.subdocsRemoved.add(this.doc);
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeString(this.doc.guid), e.writeAny(this.opts);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 9;
  }
}
class wa {
  /**
   * @param {Object} embed
   */
  constructor(e) {
    this.embed = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.embed];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentEmbed}
   */
  copy() {
    return new wa(this.embed);
  }
  /**
   * @param {number} offset
   * @return {ContentEmbed}
   */
  splice(e) {
    throw Gr();
  }
  /**
   * @param {ContentEmbed} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeJSON(this.embed);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 5;
  }
}
class Wt {
  /**
   * @param {string} key
   * @param {Object} value
   */
  constructor(e, n) {
    this.key = e, this.value = n;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !1;
  }
  /**
   * @return {ContentFormat}
   */
  copy() {
    return new Wt(this.key, this.value);
  }
  /**
   * @param {number} _offset
   * @return {ContentFormat}
   */
  splice(e) {
    throw Gr();
  }
  /**
   * @param {ContentFormat} _right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} _transaction
   * @param {Item} item
   */
  integrate(e, n) {
    const r = (
      /** @type {YText} */
      n.parent
    );
    r._searchMarker = null, r._hasFormatting = !0;
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeKey(this.key), e.writeJSON(this.value);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 6;
  }
}
const ND = du("node_env") === "development";
class Ks {
  /**
   * @param {Array<any>} arr
   */
  constructor(e) {
    this.arr = e, ND && w_(e);
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.arr.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.arr;
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentAny}
   */
  copy() {
    return new Ks(this.arr);
  }
  /**
   * @param {number} offset
   * @return {ContentAny}
   */
  splice(e) {
    const n = new Ks(this.arr.slice(e));
    return this.arr = this.arr.slice(0, e), n;
  }
  /**
   * @param {ContentAny} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.arr = this.arr.concat(e.arr), !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    const r = this.arr.length;
    e.writeLen(r - n);
    for (let i = n; i < r; i++) {
      const o = this.arr[i];
      e.writeAny(o);
    }
  }
  /**
   * @return {number}
   */
  getRef() {
    return 8;
  }
}
class vi {
  /**
   * @param {string} str
   */
  constructor(e) {
    this.str = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return this.str.length;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return this.str.split("");
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentString}
   */
  copy() {
    return new vi(this.str);
  }
  /**
   * @param {number} offset
   * @return {ContentString}
   */
  splice(e) {
    const n = new vi(this.str.slice(e));
    this.str = this.str.slice(0, e);
    const r = this.str.charCodeAt(e - 1);
    return r >= 55296 && r <= 56319 && (this.str = this.str.slice(0, e - 1) + "�", n.str = "�" + n.str.slice(1)), n;
  }
  /**
   * @param {ContentString} right
   * @return {boolean}
   */
  mergeWith(e) {
    return this.str += e.str, !0;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    e.writeString(n === 0 ? this.str : this.str.slice(n));
  }
  /**
   * @return {number}
   */
  getRef() {
    return 4;
  }
}
const SD = 0, TD = 1, AD = 2, DD = 3, MD = 4;
class no {
  /**
   * @param {AbstractType<any>} type
   */
  constructor(e) {
    this.type = e;
  }
  /**
   * @return {number}
   */
  getLength() {
    return 1;
  }
  /**
   * @return {Array<any>}
   */
  getContent() {
    return [this.type];
  }
  /**
   * @return {boolean}
   */
  isCountable() {
    return !0;
  }
  /**
   * @return {ContentType}
   */
  copy() {
    return new no(this.type._copy());
  }
  /**
   * @param {number} offset
   * @return {ContentType}
   */
  splice(e) {
    throw Gr();
  }
  /**
   * @param {ContentType} right
   * @return {boolean}
   */
  mergeWith(e) {
    return !1;
  }
  /**
   * @param {Transaction} transaction
   * @param {Item} item
   */
  integrate(e, n) {
    this.type._integrate(e.doc, n);
  }
  /**
   * @param {Transaction} transaction
   */
  delete(e) {
    let n = this.type._start;
    for (; n !== null; )
      n.deleted ? n.id.clock < (e.beforeState.get(n.id.client) || 0) && e._mergeStructs.push(n) : n.delete(e), n = n.right;
    this.type._map.forEach((r) => {
      r.deleted ? r.id.clock < (e.beforeState.get(r.id.client) || 0) && e._mergeStructs.push(r) : r.delete(e);
    }), e.changed.delete(this.type);
  }
  /**
   * @param {StructStore} store
   */
  gc(e) {
    let n = this.type._start;
    for (; n !== null; )
      n.gc(e, !0), n = n.right;
    this.type._start = null, this.type._map.forEach(
      /** @param {Item | null} item */
      (r) => {
        for (; r !== null; )
          r.gc(e, !0), r = r.left;
      }
    ), this.type._map = /* @__PURE__ */ new Map();
  }
  /**
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder
   * @param {number} offset
   */
  write(e, n) {
    this.type._write(e);
  }
  /**
   * @return {number}
   */
  getRef() {
    return 7;
  }
}
const Y_ = (t, e, n) => {
  const { client: r, clock: i } = e.id, o = new dn(
    Ct(r, i + n),
    e,
    Ct(r, i + n - 1),
    e.right,
    e.rightOrigin,
    e.parent,
    e.parentSub,
    e.content.splice(n)
  );
  return e.deleted && o.markDeleted(), e.keep && (o.keep = !0), e.redone !== null && (o.redone = Ct(e.redone.client, e.redone.clock + n)), e.right = o, o.right !== null && (o.right.left = o), t._mergeStructs.push(o), o.parentSub !== null && o.right === null && o.parent._map.set(o.parentSub, o), e.length = n, o;
};
class dn extends X_ {
  /**
   * @param {ID} id
   * @param {Item | null} left
   * @param {ID | null} origin
   * @param {Item | null} right
   * @param {ID | null} rightOrigin
   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.
   * @param {string | null} parentSub
   * @param {AbstractContent} content
   */
  constructor(e, n, r, i, o, s, a, l) {
    super(e, l.getLength()), this.origin = r, this.left = n, this.right = i, this.rightOrigin = o, this.parent = s, this.parentSub = a, this.redone = null, this.content = l, this.info = this.content.isCountable() ? sb : 0;
  }
  /**
   * This is used to mark the item as an indexed fast-search marker
   *
   * @type {boolean}
   */
  set marker(e) {
    (this.info & tf) > 0 !== e && (this.info ^= tf);
  }
  get marker() {
    return (this.info & tf) > 0;
  }
  /**
   * If true, do not garbage collect this Item.
   */
  get keep() {
    return (this.info & ob) > 0;
  }
  set keep(e) {
    this.keep !== e && (this.info ^= ob);
  }
  get countable() {
    return (this.info & sb) > 0;
  }
  /**
   * Whether this item was deleted or not.
   * @type {Boolean}
   */
  get deleted() {
    return (this.info & ef) > 0;
  }
  set deleted(e) {
    this.deleted !== e && (this.info ^= ef);
  }
  markDeleted() {
    this.info |= ef;
  }
  /**
   * Return the creator clientID of the missing op or define missing items and return null.
   *
   * @param {Transaction} transaction
   * @param {StructStore} store
   * @return {null | number}
   */
  getMissing(e, n) {
    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= An(n, this.origin.client))
      return this.origin.client;
    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= An(n, this.rightOrigin.client))
      return this.rightOrigin.client;
    if (this.parent && this.parent.constructor === Mc && this.id.client !== this.parent.client && this.parent.clock >= An(n, this.parent.client))
      return this.parent.client;
    if (this.origin && (this.left = yb(e, n, this.origin), this.origin = this.left.lastId), this.rightOrigin && (this.right = Wi(e, this.rightOrigin), this.rightOrigin = this.right.id), this.left && this.left.constructor === Oi || this.right && this.right.constructor === Oi)
      this.parent = null;
    else if (!this.parent)
      this.left && this.left.constructor === dn ? (this.parent = this.left.parent, this.parentSub = this.left.parentSub) : this.right && this.right.constructor === dn && (this.parent = this.right.parent, this.parentSub = this.right.parentSub);
    else if (this.parent.constructor === Mc) {
      const r = sf(n, this.parent);
      r.constructor === Oi ? this.parent = null : this.parent = /** @type {ContentType} */
      r.content.type;
    }
    return null;
  }
  /**
   * @param {Transaction} transaction
   * @param {number} offset
   */
  integrate(e, n) {
    if (n > 0 && (this.id.clock += n, this.left = yb(e, e.doc.store, Ct(this.id.client, this.id.clock - 1)), this.origin = this.left.lastId, this.content = this.content.splice(n), this.length -= n), this.parent) {
      if (!this.left && (!this.right || this.right.left !== null) || this.left && this.left.right !== this.right) {
        let r = this.left, i;
        if (r !== null)
          i = r.right;
        else if (this.parentSub !== null)
          for (i = /** @type {AbstractType<any>} */
          this.parent._map.get(this.parentSub) || null; i !== null && i.left !== null; )
            i = i.left;
        else
          i = /** @type {AbstractType<any>} */
          this.parent._start;
        const o = /* @__PURE__ */ new Set(), s = /* @__PURE__ */ new Set();
        for (; i !== null && i !== this.right; ) {
          if (s.add(i), o.add(i), wc(this.origin, i.origin)) {
            if (i.id.client < this.id.client)
              r = i, o.clear();
            else if (wc(this.rightOrigin, i.rightOrigin))
              break;
          } else if (i.origin !== null && s.has(sf(e.doc.store, i.origin)))
            o.has(sf(e.doc.store, i.origin)) || (r = i, o.clear());
          else
            break;
          i = i.right;
        }
        this.left = r;
      }
      if (this.left !== null) {
        const r = this.left.right;
        this.right = r, this.left.right = this;
      } else {
        let r;
        if (this.parentSub !== null)
          for (r = /** @type {AbstractType<any>} */
          this.parent._map.get(this.parentSub) || null; r !== null && r.left !== null; )
            r = r.left;
        else
          r = /** @type {AbstractType<any>} */
          this.parent._start, this.parent._start = this;
        this.right = r;
      }
      this.right !== null ? this.right.left = this : this.parentSub !== null && (this.parent._map.set(this.parentSub, this), this.left !== null && this.left.delete(e)), this.parentSub === null && this.countable && !this.deleted && (this.parent._length += this.length), M_(e.doc.store, this), this.content.integrate(e, this), _b(
        e,
        /** @type {AbstractType<any>} */
        this.parent,
        this.parentSub
      ), /** @type {AbstractType<any>} */
      (this.parent._item !== null && /** @type {AbstractType<any>} */
      this.parent._item.deleted || this.parentSub !== null && this.right !== null) && this.delete(e);
    } else
      new Oi(this.id, this.length).integrate(e, 0);
  }
  /**
   * Returns the next non-deleted item
   */
  get next() {
    let e = this.right;
    for (; e !== null && e.deleted; )
      e = e.right;
    return e;
  }
  /**
   * Returns the previous non-deleted item
   */
  get prev() {
    let e = this.left;
    for (; e !== null && e.deleted; )
      e = e.left;
    return e;
  }
  /**
   * Computes the last content address of this Item.
   */
  get lastId() {
    return this.length === 1 ? this.id : Ct(this.id.client, this.id.clock + this.length - 1);
  }
  /**
   * Try to merge two items
   *
   * @param {Item} right
   * @return {boolean}
   */
  mergeWith(e) {
    if (this.constructor === e.constructor && wc(e.origin, this.lastId) && this.right === e && wc(this.rightOrigin, e.rightOrigin) && this.id.client === e.id.client && this.id.clock + this.length === e.id.clock && this.deleted === e.deleted && this.redone === null && e.redone === null && this.content.constructor === e.content.constructor && this.content.mergeWith(e.content)) {
      const n = (
        /** @type {AbstractType<any>} */
        this.parent._searchMarker
      );
      return n && n.forEach((r) => {
        r.p === e && (r.p = this, !this.deleted && this.countable && (r.index -= this.length));
      }), e.keep && (this.keep = !0), this.right = e.right, this.right !== null && (this.right.left = this), this.length += e.length, !0;
    }
    return !1;
  }
  /**
   * Mark this Item as deleted.
   *
   * @param {Transaction} transaction
   */
  delete(e) {
    if (!this.deleted) {
      const n = (
        /** @type {AbstractType<any>} */
        this.parent
      );
      this.countable && this.parentSub === null && (n._length -= this.length), this.markDeleted(), T_(e.deleteSet, this.id.client, this.id.clock, this.length), _b(e, n, this.parentSub), this.content.delete(e);
    }
  }
  /**
   * @param {StructStore} store
   * @param {boolean} parentGCd
   */
  gc(e, n) {
    if (!this.deleted)
      throw jo();
    this.content.gc(e), n ? aD(e, this, new Oi(this.id, this.length)) : this.content = new gu(this.length);
  }
  /**
   * Transform the properties of this type to binary and write it to an
   * BinaryEncoder.
   *
   * This is called when this Item is sent to a remote peer.
   *
   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.
   * @param {number} offset
   */
  write(e, n) {
    const r = n > 0 ? Ct(this.id.client, this.id.clock + n - 1) : this.origin, i = this.rightOrigin, o = this.parentSub, s = this.content.getRef() & JT | (r === null ? 0 : uu) | // origin is defined
    (i === null ? 0 : p_) | // right origin is defined
    (o === null ? 0 : GT);
    if (e.writeInfo(s), r !== null && e.writeLeftID(r), i !== null && e.writeRightID(i), r === null && i === null) {
      const a = (
        /** @type {AbstractType<any>} */
        this.parent
      );
      if (a._item !== void 0) {
        const l = a._item;
        if (l === null) {
          const c = iD(a);
          e.writeParentInfo(!0), e.writeString(c);
        } else
          e.writeParentInfo(!1), e.writeLeftID(l.id);
      } else a.constructor === String ? (e.writeParentInfo(!0), e.writeString(a)) : a.constructor === Mc ? (e.writeParentInfo(!1), e.writeLeftID(a)) : jo();
      o !== null && e.writeString(o);
    }
    this.content.write(e, n);
  }
}
const Q_ = (
  /** @type {any} */
  typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : {}
), Z_ = "__ $YJS$ __";
Q_[Z_] === !0 && console.error("Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438");
Q_[Z_] = !0;
const OD = Se("TOGGLE_CONNECT_COMMAND");
var ID = Object.defineProperty, RD = (t, e, n) => e in t ? ID(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, we = (t, e, n) => RD(t, typeof e != "symbol" ? e + "" : e, n);
const cf = (t) => lt(L0(t)), Uo = Qy("cid", {
  parse: (t) => typeof t == "string" ? t : void 0
}), zo = Qy("segment", {
  parse: (t) => typeof t == "string" ? t : void 0
}), bh = "unknown", ex = 1;
class rs extends pn {
  constructor(e = "", n = "", r, i) {
    super(i), we(this, "__tag"), we(this, "__marker"), we(this, "__unknownAttributes"), this.__tag = e, this.__marker = n, this.__unknownAttributes = r;
  }
  static getType() {
    return "unknown";
  }
  static clone(e) {
    const { __tag: n, __marker: r, __unknownAttributes: i, __key: o } = e;
    return new rs(n, r, i, o);
  }
  static importDOM() {
    return {
      [bh]: (e) => LD(e) ? {
        conversion: PD,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return tx().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTag(e.tag).setMarker(e.marker).setUnknownAttributes(e.unknownAttributes);
  }
  setTag(e) {
    if (this.__tag === e)
      return this;
    const n = this.getWritable();
    return n.__tag = e, n;
  }
  getTag() {
    return this.getLatest().__tag;
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement(bh);
    return e.style.display = "none", e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM() {
    return { element: null };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      tag: this.getTag(),
      marker: this.getMarker(),
      unknownAttributes: this.getUnknownAttributes(),
      version: ex
    };
  }
  // Mutation
  canBeEmpty() {
    return !0;
  }
  isInline() {
    return !0;
  }
  extractWithChild() {
    return !1;
  }
  excludeFromCopy(e) {
    return e !== "clone";
  }
}
function PD(t) {
  const e = t.getAttribute("data-tag") ?? "", n = t.getAttribute("data-marker") ?? "";
  return { node: tx(e, n) };
}
function tx(t, e, n) {
  return lt(new rs(t, e, n));
}
function LD(t) {
  return (t == null ? void 0 : t.tagName) === bh;
}
function Bl(t) {
  return t instanceof rs;
}
const od = "id", nx = 1;
class sr extends pn {
  constructor(e = "", n, r) {
    super(r), we(this, "__marker", od), we(this, "__code"), we(this, "__unknownAttributes"), this.__code = e, this.__unknownAttributes = n;
  }
  static getType() {
    return "book";
  }
  static clone(e) {
    const { __code: n, __unknownAttributes: r, __key: i } = e;
    return new sr(n, r, i);
  }
  static importJSON(e) {
    const { code: n } = e;
    return rx(n).updateFromJSON(e);
  }
  static isValidBookCode(e) {
    return FC(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setCode(e.code).setUnknownAttributes(e.unknownAttributes);
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setCode(e) {
    if (this.__code === e)
      return this;
    const n = this.getWritable();
    return n.__code = e, n;
  }
  /**
   * Get the book code (ID).
   * @returns the book code (ID).
   */
  getCode() {
    return this.getLatest().__code;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("p");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e.setAttribute("data-code", this.__code), e;
  }
  updateDOM() {
    return !1;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      code: this.getCode(),
      unknownAttributes: this.getUnknownAttributes(),
      version: nx
    };
  }
}
function rx(t, e) {
  return lt(new sr(t, e));
}
function Jr(t) {
  return t instanceof sr;
}
function $D(t) {
  return (t == null ? void 0 : t.type) === sr.getType();
}
const st = " ", yh = "​", tg = `${st}|`, ng = "p", Vo = "+", rg = "-", mu = "chapter", vh = "verse", Nb = "invalid", FD = "text-spacing", BD = "formatted-font", qD = "marker-", ig = "external-usj-mutation", ix = "selection-change", _h = "cursor-change", xh = "annotation-change", Ch = "delta-change", jD = [
  ig,
  ix,
  _h,
  xh,
  Ch
], og = "c", ox = 1;
class Ar extends pn {
  constructor(e = "", n, r, i, o, s) {
    super(s), we(this, "__marker"), we(this, "__number"), we(this, "__sid"), we(this, "__altnumber"), we(this, "__pubnumber"), we(this, "__unknownAttributes"), this.__marker = og, this.__number = e, this.__sid = n, this.__altnumber = r, this.__pubnumber = i, this.__unknownAttributes = o;
  }
  static getType() {
    return "chapter";
  }
  static clone(e) {
    const { __number: n, __sid: r, __altnumber: i, __pubnumber: o, __unknownAttributes: s, __key: a } = e;
    return new Ar(n, r, i, o, s, a);
  }
  static importJSON(e) {
    return sx().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("p");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(mu, `usfm_${this.__marker}`), e.setAttribute("data-number", this.__number), e;
  }
  updateDOM() {
    return !1;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: ox
    };
  }
}
function sx(t, e, n, r, i) {
  return lt(new Ar(t, e, n, r, i));
}
function sg(t) {
  return t instanceof Ar;
}
function UD(t) {
  return (t == null ? void 0 : t.type) === Ar.getType();
}
const ax = [
  "fr",
  "fq",
  "fqa",
  "fk",
  "ft",
  "fl",
  "fw",
  "fp",
  "fv",
  "fdc",
  "fm"
], lx = [
  "xo",
  "xop",
  "xk",
  "xq",
  "xt",
  "xta",
  "xot",
  "xnt",
  "xdc"
], zD = [
  // Chapter & Verse
  "ca",
  "cp",
  "va",
  "vp",
  // Text Features
  "add",
  "bk",
  "dc",
  "em",
  "jmp",
  "k",
  "nd",
  "ord",
  "pn",
  "png",
  "qt",
  "rb",
  "rq",
  // "ref", // This has its own tag and is not a Char
  "sig",
  "sls",
  "tl",
  "w",
  "wa",
  "wg",
  "wh",
  "wj",
  // Note there are 2 deprecated markers intentionally not listed here: "addpn", "pro"
  // Text Formatting
  "bd",
  "it",
  "bdit",
  "no",
  "sc",
  "sup",
  // Introductions
  "ior",
  "iqt",
  // Poetry
  "qac",
  "qs",
  // Lists
  "litl",
  "lik",
  "liv",
  "liv1",
  "liv2",
  "liv3",
  "liv4",
  "liv5",
  ...ax,
  ...lx
], cx = 1;
class yt extends pn {
  constructor(e = "", n, r) {
    super(r), we(this, "__marker"), we(this, "__unknownAttributes"), this.__marker = e, this.__unknownAttributes = n;
  }
  static getType() {
    return "char";
  }
  static clone(e) {
    const { __marker: n, __unknownAttributes: r, __key: i } = e;
    return new yt(n, r, i);
  }
  static isValidMarker(e) {
    return e !== void 0 && zD.includes(e);
  }
  static isValidFootnoteMarker(e) {
    return e !== void 0 && ax.includes(e);
  }
  static isValidCrossReferenceMarker(e) {
    return e !== void 0 && lx.includes(e);
  }
  static importDOM() {
    return {
      span: (e) => HD(e) ? {
        conversion: VD,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return Ur().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.setAttribute("title", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(this.getType(), `usfm_${this.getMarker()}`)), { element: n };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      unknownAttributes: this.getUnknownAttributes(),
      version: cx
    };
  }
  // Mutation
  insertNewAfter(e, n) {
    const r = Ur(this.getMarker());
    return r.setTextFormat(e.format), r.setTextStyle(e.style), r.setDirection(this.getDirection()), r.setFormat(this.getFormatType()), r.setStyle(this.getTextStyle()), this.insertAfter(r, n), r;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
}
function VD(t) {
  const e = t.getAttribute("data-marker") ?? "f";
  return { node: Ur(e) };
}
function Ur(t, e) {
  return lt(new yt(t, e));
}
function HD(t) {
  if (!t)
    return !1;
  const e = t.getAttribute("data-marker") ?? "";
  return yt.isValidMarker(e) && t.classList.contains(yt.getType());
}
function at(t) {
  return t instanceof yt;
}
function WD(t) {
  return (t == null ? void 0 : t.type) === yt.getType();
}
const ux = 1, KD = "c", dx = "span";
class Ni extends Zi {
  constructor(e = "", n = !1, r, i, o, s, a) {
    super(a), we(this, "__marker"), we(this, "__number"), we(this, "__showMarker"), we(this, "__sid"), we(this, "__altnumber"), we(this, "__pubnumber"), we(this, "__unknownAttributes"), this.__marker = KD, this.__number = e, this.__showMarker = n, this.__sid = r, this.__altnumber = i, this.__pubnumber = o, this.__unknownAttributes = s;
  }
  static getType() {
    return "immutable-chapter";
  }
  static clone(e) {
    const { __number: n, __showMarker: r, __sid: i, __altnumber: o, __pubnumber: s, __unknownAttributes: a, __key: l } = e;
    return new Ni(n, r, i, o, s, a, l);
  }
  static importDOM() {
    return {
      span: (e) => fx(e) ? {
        conversion: GD,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return ag().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setShowMarker(e.showMarker).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setShowMarker(e = !1) {
    if (this.__showMarker === e)
      return this;
    const n = this.getWritable();
    return n.__showMarker = e, n;
  }
  getShowMarker() {
    return this.getLatest().__showMarker;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement(dx);
    return e.setAttribute("data-marker", this.__marker), e.classList.add(mu, `usfm_${this.__marker}`), this.__showMarker && e.classList.add("marker"), e.setAttribute("data-number", this.__number), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(mu, `usfm_${this.getMarker()}`), n.setAttribute("data-number", this.getNumber())), { element: n };
  }
  decorate() {
    return this.getShowMarker() ? jl(this.getMarker(), this.getNumber()) : this.getNumber();
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      showMarker: this.getShowMarker(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: ux
    };
  }
  // Mutation
  isInline() {
    return !1;
  }
  isKeyboardSelectable() {
    return !1;
  }
}
function GD(t) {
  const e = t.getAttribute("data-number") ?? "0";
  return { node: ag(e) };
}
function ag(t, e, n, r, i, o) {
  return lt(new Ni(t, e, n, r, i, o));
}
function fx(t) {
  return t ? t.classList.contains(mu) && t.tagName.toLowerCase() === dx : !1;
}
function ql(t) {
  return t instanceof Ni;
}
function JD(t) {
  return (t == null ? void 0 : t.type) === Ni.getType();
}
const hx = 1;
class Ki extends eo {
  static getType() {
    return "implied-para";
  }
  static clone(e) {
    return new Ki(e.__key);
  }
  static importJSON(e) {
    return br().updateFromJSON(e);
  }
  getMarker() {
    return ng;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      version: hx
    };
  }
  // Mutation
  insertNewAfter(e, n) {
    const r = br();
    return r.setTextFormat(e.format), r.setTextStyle(e.style), r.setDirection(this.getDirection()), r.setFormat(this.getFormatType()), r.setStyle(this.getTextStyle()), this.insertAfter(r, n), r;
  }
}
function br() {
  return lt(new Ki());
}
function _i(t) {
  return t instanceof Ki;
}
function lg(t) {
  return (t == null ? void 0 : t.type) === Ki.getType();
}
const Ho = "zmsc-s", Ns = "zmsc-e", XD = [Ho, Ns], YD = [
  "ts-s",
  "ts-e",
  "t-s",
  "t-e",
  "ts",
  "qt1-s",
  "qt1-e",
  "qt2-s",
  "qt2-e",
  "qt3-s",
  "qt3-e",
  "qt4-s",
  "qt4-e",
  "qt5-s",
  "qt5-e",
  "qt-s",
  "qt-e",
  // custom markers used for annotations
  Ho,
  Ns
], px = 1;
class Qr extends Zi {
  constructor(e = "", n, r, i, o) {
    super(o), we(this, "__marker"), we(this, "__sid"), we(this, "__eid"), we(this, "__unknownAttributes"), this.__marker = e, this.__sid = n, this.__eid = r, this.__unknownAttributes = i;
  }
  static getType() {
    return "ms";
  }
  static clone(e) {
    const { __marker: n, __sid: r, __eid: i, __unknownAttributes: o, __key: s } = e;
    return new Qr(n, r, i, o, s);
  }
  static importJSON(e) {
    return gx().updateFromJSON(e);
  }
  static isValidMarker(e) {
    return e !== void 0 && (YD.includes(e) || e.startsWith("z"));
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setSid(e.sid).setEid(e.eid).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setEid(e) {
    if (this.__eid === e)
      return this;
    const n = this.getWritable();
    return n.__eid = e, n;
  }
  getEid() {
    return this.getLatest().__eid;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e;
  }
  updateDOM() {
    return !1;
  }
  decorate() {
    return "";
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      sid: this.getSid(),
      eid: this.getEid(),
      unknownAttributes: this.getUnknownAttributes(),
      version: px
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function QD(t) {
  return XD.includes(t);
}
function gx(t, e, n, r) {
  return lt(new Qr(t, e, n, r));
}
function sd(t) {
  return t instanceof Qr;
}
const mx = "f", ZD = [
  // Footnote
  mx,
  "fe",
  "ef",
  "efe",
  // Cross Reference
  "x",
  "ex"
], wx = 1;
class Kt extends pn {
  constructor(e = mx, n, r = !0, i, o, s) {
    super(s), we(this, "__marker"), we(this, "__caller"), we(this, "__isCollapsed"), we(this, "__category"), we(this, "__unknownAttributes"), this.__marker = e, this.__caller = n ?? (e === "x" || e === "ex" ? rg : Vo), this.__isCollapsed = r, this.__category = i, this.__unknownAttributes = o;
  }
  static getType() {
    return "note";
  }
  static clone(e) {
    const { __marker: n, __caller: r, __isCollapsed: i, __category: o, __unknownAttributes: s, __key: a } = e;
    return new Kt(n, r, i, o, s, a);
  }
  static importDOM() {
    return {
      span: (e) => tM(e) ? {
        conversion: eM,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return cg().updateFromJSON(e);
  }
  static isValidMarker(e) {
    return e !== void 0 && ZD.includes(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setCaller(e.caller).setIsCollapsed(e.isCollapsed).setCategory(e.category).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setCaller(e) {
    if (this.__caller === e)
      return this;
    const n = this.getWritable();
    return n.__caller = e, n;
  }
  getCaller() {
    return this.getLatest().__caller;
  }
  setIsCollapsed(e) {
    if (this.__isCollapsed === e)
      return this;
    const n = this.getWritable();
    return n.__isCollapsed = e, n;
  }
  toggleIsCollapsed() {
    const e = this.getWritable();
    return e.__isCollapsed = !e.__isCollapsed, e;
  }
  getIsCollapsed() {
    return this.getLatest().__isCollapsed;
  }
  setCategory(e) {
    if (this.__category === e)
      return this;
    const n = this.getWritable();
    return n.__category = e, n;
  }
  getCategory() {
    return this.getLatest().__category;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`, this.__isCollapsed ? "collapsed" : "expanded"), e.setAttribute("data-caller", this.__caller), e;
  }
  updateDOM(e) {
    return e.__isCollapsed !== this.__isCollapsed;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(this.getType(), `usfm_${this.getMarker()}`, this.getIsCollapsed() ? "collapsed" : "expanded"), n.setAttribute("data-caller", this.getCaller())), { element: n };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      caller: this.getCaller(),
      isCollapsed: this.getIsCollapsed(),
      category: this.getCategory(),
      unknownAttributes: this.getUnknownAttributes(),
      version: wx
    };
  }
  // Mutation
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
}
function eM(t) {
  const e = t.getAttribute("data-marker") ?? "f", n = t.getAttribute("data-caller") ?? "", r = t.classList.contains("collapsed");
  return { node: cg(e, n, r) };
}
function cg(t, e, n, r, i) {
  return lt(new Kt(t, e, n, r, i));
}
function tM(t) {
  if (!t)
    return !1;
  const e = t.getAttribute("data-marker") ?? "";
  return Kt.isValidMarker(e) && t.classList.contains(Kt.getType());
}
function je(t) {
  return t instanceof Kt;
}
const nM = [
  // Identification
  "ide",
  "sts",
  "rem",
  "h",
  "toc1",
  "toc2",
  "toc3",
  "toca1",
  "toca2",
  "toca3",
  // Introductions
  "imt",
  "imt1",
  "imt2",
  "imt3",
  "imt4",
  "is",
  "is1",
  "is2",
  "ip",
  "ipi",
  "im",
  "imi",
  "ipq",
  "imq",
  "ipr",
  "iq",
  "iq1",
  "iq2",
  "iq3",
  "ili",
  "ili1",
  "ili2",
  "ib",
  "iot",
  "io",
  "io1",
  "io2",
  "io3",
  "io4",
  "iex",
  "imte",
  "imte1",
  "imte2",
  "ie",
  // Titles and Headings
  "mt",
  "mt1",
  "mt2",
  "mt3",
  "mt4",
  "mte",
  "mte1",
  "mte2",
  "cl",
  "cd",
  "ms",
  "ms1",
  "ms2",
  "ms3",
  "mr",
  "s",
  "s1",
  "s2",
  "s3",
  "s4",
  "sr",
  "r",
  "d",
  "sp",
  "sd",
  "sd1",
  "sd2",
  "sd3",
  "sd4",
  // Body Paragraphs
  ng,
  "m",
  "po",
  "cls",
  "pr",
  "pc",
  "pm",
  "pmo",
  "pmc",
  "pmr",
  "pi",
  "pi1",
  "pi2",
  "pi3",
  "mi",
  "lit",
  "nb",
  // Note there is 1 deprecated marker not listed here: "ph#"
  // Poetry
  "q",
  "q1",
  "q2",
  "q3",
  "q4",
  "qr",
  "qc",
  "qa",
  "qm",
  "qm1",
  "qm2",
  "qm3",
  "qd",
  "b",
  // Lists
  "lh",
  "li",
  "li1",
  "li2",
  "li3",
  "li4",
  "lf",
  "lim",
  "lim1",
  "lim2",
  "lim3",
  "lim4",
  // Breaks - see https://docs.usfm.bible/usfm/3.1/char/breaks/pb.html
  "pb"
], bx = 1;
class On extends eo {
  constructor(e = ng, n, r) {
    super(r), we(this, "__marker"), we(this, "__unknownAttributes"), this.__marker = e, this.__unknownAttributes = n;
  }
  static getType() {
    return "para";
  }
  static clone(e) {
    const { __marker: n, __unknownAttributes: r, __key: i } = e;
    return new On(n, r, i);
  }
  static isValidMarker(e) {
    return e !== void 0 && nM.includes(e);
  }
  static importDOM() {
    return {
      p: () => ({
        conversion: rM,
        priority: 1
      })
    };
  }
  static importJSON(e) {
    return gl().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("p");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(this.__type, `usfm_${this.__marker}`), e;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(this.getType(), `usfm_${this.getMarker()}`)), { element: n };
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      unknownAttributes: this.getUnknownAttributes(),
      version: bx
    };
  }
  // Mutation
  insertNewAfter(e, n) {
    const r = gl(this.getMarker());
    return r.setTextFormat(e.format), r.setTextStyle(e.style), r.setDirection(this.getDirection()), r.setFormat(this.getFormatType()), r.setStyle(this.getTextStyle()), this.insertAfter(r, n), r;
  }
}
function rM(t) {
  const e = t.getAttribute("data-marker") ?? void 0, n = gl(e);
  if (t.style) {
    n.setFormat(t.style.textAlign);
    const r = parseInt(t.style.textIndent, 10) / 20;
    r > 0 && n.setIndent(r);
  }
  return { node: n };
}
function gl(t, e) {
  return lt(new On(t, e));
}
function fn(t) {
  return t instanceof On;
}
function iM(t) {
  return (t == null ? void 0 : t.type) === On.getType();
}
const ug = "v", yx = 1;
class _n extends Gn {
  constructor(e = "", n, r, i, o, s, a) {
    super(n ?? e, a), we(this, "__marker"), we(this, "__number"), we(this, "__sid"), we(this, "__altnumber"), we(this, "__pubnumber"), we(this, "__unknownAttributes"), this.__marker = ug, this.__number = e, this.__sid = r, this.__altnumber = i, this.__pubnumber = o, this.__unknownAttributes = s;
  }
  static getType() {
    return "verse";
  }
  static clone(e) {
    const { __number: n, __text: r, __sid: i, __altnumber: o, __pubnumber: s, __unknownAttributes: a, __key: l } = e;
    return new _n(n, r, i, o, s, a, l);
  }
  static importJSON(e) {
    return vx().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM(e) {
    const n = super.createDOM(e);
    return n.setAttribute("data-marker", this.__marker), n.classList.add(vh, `usfm_${this.__marker}`), n.setAttribute("data-number", this.__number), n;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: yx
    };
  }
}
function vx(t, e, n, r, i, o) {
  return lt(new _n(t, e, n, r, i, o));
}
function dg(t) {
  return t instanceof _n;
}
function oM(t) {
  return (t == null ? void 0 : t.type) === _n.getType();
}
function sM(t) {
  return UD(t) || JD(t);
}
function rr(t) {
  return sg(t) || ql(t);
}
function aM(t, e) {
  return t.find((n) => rr(n) && n.getNumber() === e.toString());
}
function lM(t, e = !1) {
  return t.find((n, r) => (!e || r > 0) && rr(n));
}
function fg(t) {
  var e;
  if (!t)
    return;
  if (rr(t))
    return t;
  let n = (e = t.getTopLevelElement()) == null ? void 0 : e.getPreviousSibling();
  for (; n && !rr(n); )
    n = n.getPreviousSibling();
  if (n && rr(n))
    return n;
}
function _x(t) {
  let e = t;
  for (; e !== null; ) {
    if (je(e))
      return e;
    e = e.getParent();
  }
}
function cM(t) {
  return Jr(t) || sg(t) || at(t) || ql(t) || _i(t) || sd(t) || fn(t) || je(t) || dg(t) || Bl(t);
}
function uM(t) {
  var e;
  if (t.anchor.type === "element") {
    const r = t.anchor.getNode(), i = t.anchor.offset;
    if (i < r.getChildrenSize())
      return r.getChildAtIndex(i);
  }
  const n = t.anchor.getNode();
  return n.getNextSibling() ?? ((e = n.getParent()) == null ? void 0 : e.getNextSibling()) ?? null;
}
function dM(t) {
  var e;
  const n = t.anchor.offset;
  if (t.anchor.type === "element" && n > 0)
    return t.anchor.getNode().getChildAtIndex(n - 1);
  const r = t.anchor.getNode();
  return r.getPreviousSibling() ?? ((e = r.getParent()) == null ? void 0 : e.getPreviousSibling()) ?? null;
}
function gr(t) {
  return fn(t) || _i(t);
}
function fM(t, e) {
  let n = t.getParent();
  for (; n; ) {
    if (n.getKey() === e)
      return !0;
    n = n.getParent();
  }
  return !1;
}
function Wo(t, e) {
  const n = Is(e, Uo), r = !!(t.cid && n), i = !t.cid && !n;
  return t.style === e.getMarker() && (i || r && t.cid === n);
}
function hM(t, e) {
  const n = X(t) ? t : t.getParent(), r = X(e) ? e : e.getParent(), i = n && r ? Ka(n, r) : void 0;
  return i ? i.commonAncestor : void 0;
}
function pM(t) {
  const e = t.getStartEndPoints();
  if (!e)
    return;
  const [n, r] = e, i = t.isBackward() ? n : r;
  t.focus.set(i.key, i.offset, i.type), t.anchor.set(i.key, i.offset, i.type);
}
function hg(t) {
  return (t == null ? void 0 : t.type) === Gn.getType();
}
function gM(t, e) {
  if (!e)
    return;
  const n = t.findIndex((r) => r === e);
  n && (t.length = n);
}
function mM(t, e) {
  if (!e)
    return t;
  const n = e.getIndexWithinParent();
  return t.splice(n + 1, t.length - n - 1);
}
function Si(t) {
  return `\\${t}`;
}
function Gs(t) {
  return `\\${t}*`;
}
function xx(t, e, n) {
  const r = Si(t);
  if (e != null && e.startsWith(r)) {
    const i = parseInt(e.slice(r.length), 10);
    isNaN(i) || (n = i.toString());
  }
  return n;
}
function jl(t, e) {
  let n = Si(t);
  return e && (n += `${st}${e}`), n += " ", n;
}
function Cx(t) {
  return hg(t) ? t.text : WD(t) ? t.children.map((e) => Cx(e)).join("") : "";
}
function wM(t) {
  return t.map((e) => Cx(e)).join(" ").trim();
}
function pg(t) {
  return st + t + " ";
}
function gg(t) {
  return t.reduce((e, n) => e + (at(n) ? ` ${n.getTextContent()}` : ""), "").trim();
}
function Gt(t, e = $C) {
  const n = { ...t };
  return e.forEach((r) => {
    Reflect.deleteProperty(n, r);
  }), Object.keys(n).length === 0 ? void 0 : n;
}
function bM(t, e) {
  const n = e.getElementByKey(t.getKey());
  return n ? n.tagName.toLowerCase() : void 0;
}
function Ft(t) {
  return Object.fromEntries(Object.entries(t).filter(([, e]) => e !== void 0));
}
function kx(t) {
  if (!t)
    return;
  const e = t.getNodes();
  if (e.length > 0)
    return t.isBackward() ? e[e.length - 1] : e[0];
}
function kh(t, e) {
  if (!e)
    return (t + 1).toString();
  const n = e.split("-");
  if (n.length === 2)
    return parseInt(n[1]) ? `${parseInt(n[1]) + 1}` : `${parseInt(n[0]) + 1}`;
  const r = RegExp(/^(\d+)([a-yA-Y]{1,3})$/).exec(e);
  if (!r)
    return (parseInt(e) + 1).toString();
  const i = String.fromCharCode(r[2].charCodeAt(0) + 1);
  return `${r[1]}${i}`;
}
function mg(t, e) {
  if (!e)
    return !1;
  const n = e.split("-").map((r) => parseInt(r));
  if (n.length < 1 || n.length > 2 || n[0] > n[1])
    throw new Error("isVerseInRange: invalid range");
  return n.length === 1 ? t === n[0] : n.length === 2 && isNaN(n[1]) ? t >= n[0] : (n.length === 2 && isNaN(n[0]) || t >= n[0]) && t <= n[1];
}
function yM(t) {
  return !!t && t.includes("-");
}
const vM = 1;
class is extends Gn {
  constructor(e = "", n = "opening", r) {
    super(uf(e, n), r), we(this, "__marker"), we(this, "__markerSyntax"), this.__marker = e, this.__markerSyntax = n;
  }
  static getType() {
    return "marker";
  }
  static clone(e) {
    return new is(e.__marker, e.__markerSyntax, e.__key);
  }
  static importJSON(e) {
    return Js().updateFromJSON(e);
  }
  updateFromJSON(e) {
    const { marker: n, markerSyntax: r = "opening" } = e;
    return super.updateFromJSON(e).setMarker(n).setMarkerSyntax(r);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n.__text = uf(e, n.__markerSyntax), n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setMarkerSyntax(e) {
    if (this.__markerSyntax === e)
      return this;
    const n = this.getWritable();
    return n.__markerSyntax = e, n.__text = uf(n.__marker, e), n;
  }
  getMarkerSyntax() {
    return this.getLatest().__markerSyntax;
  }
  createDOM(e) {
    const n = super.createDOM(e);
    return n.setAttribute("data-marker", this.__marker), n.classList.add(this.__markerSyntax), n;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      text: this.getTextContent(),
      marker: this.getMarker(),
      markerSyntax: this.getMarkerSyntax(),
      version: vM
    };
  }
}
function Js(t, e) {
  return lt(new is(t, e));
}
function Ul(t) {
  return t instanceof is;
}
function uf(t, e) {
  return e === "closing" ? Gs(t) : e === "selfClosing" ? Gs("") : Si(t);
}
const $i = "internal-comment", _M = [$i], xM = {}, CM = 1;
class nn extends pn {
  constructor(e = xM, n) {
    super(n), we(this, "__typedIDs"), this.__typedIDs = e;
  }
  static getType() {
    return "typed-mark";
  }
  static clone(e) {
    const n = JSON.parse(JSON.stringify(e.__typedIDs));
    return new nn(n, e.__key);
  }
  static isReservedType(e) {
    return _M.includes(e);
  }
  static importDOM() {
    return null;
  }
  static importJSON(e) {
    return ml().updateFromJSON(e);
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: this.getType(),
      typedIDs: this.getTypedIDs(),
      version: CM
    };
  }
  createDOM(e) {
    const n = document.createElement("mark");
    for (const [r, i] of Object.entries(this.__typedIDs))
      un(n, vc(e.theme.typedMark, r)), i.length > 1 && un(n, vc(e.theme.typedMarkOverlap, r));
    return n;
  }
  updateDOM(e, n, r) {
    for (const [i, o] of Object.entries(this.__typedIDs)) {
      const s = e.__typedIDs[i].length, a = o.length, l = vc(r.theme.typedMark, i), c = vc(r.theme.typedMarkOverlap, i);
      s !== a && (s === 0 ? a === 1 && un(n, l) : a === 0 && No(n, l), s === 1 ? a === 2 && un(n, c) : a === 1 && No(n, c));
    }
    return !1;
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTypedIDs(e.typedIDs);
  }
  hasID(e, n) {
    const r = this.getTypedIDs()[e];
    if (!r)
      return !1;
    for (const i of r)
      if (n === i)
        return !0;
    return !1;
  }
  getTypedIDs() {
    const e = this.getLatest();
    return on(e) ? e.__typedIDs : {};
  }
  setTypedIDs(e) {
    const n = this.getWritable();
    return n.__typedIDs = e, n;
  }
  addID(e, n) {
    const r = this.getWritable();
    if (!on(r))
      return;
    const i = r.__typedIDs[e] ?? [];
    r.__typedIDs[e] = i;
    for (const o of i)
      if (n === o)
        return;
    i.push(n);
  }
  deleteID(e, n) {
    const r = this.getWritable();
    if (!on(r))
      return;
    const i = r.__typedIDs[e];
    for (let o = 0; o < i.length; o++)
      if (n === i[o]) {
        i.splice(o, 1);
        return;
      }
  }
  hasNoIDsForEveryType() {
    return Object.values(this.getTypedIDs()).every((e) => e === void 0 || e.length === 0);
  }
  insertNewAfter(e, n = !0) {
    const r = ml(this.__typedIDs);
    return this.insertAfter(r, n), r;
  }
  canInsertTextBefore() {
    return !1;
  }
  canInsertTextAfter() {
    return !1;
  }
  canBeEmpty() {
    return !1;
  }
  isInline() {
    return !0;
  }
  extractWithChild(e, n, r) {
    if (!Z(n) || r === "html")
      return !1;
    const i = n.anchor, o = n.focus, s = i.getNode(), a = o.getNode(), l = n.isBackward() ? i.offset - o.offset : o.offset - i.offset;
    return this.isParentOf(s) && this.isParentOf(a) && this.getTextContent().length === l;
  }
  excludeFromCopy(e) {
    return e !== "clone";
  }
}
function vc(t, e) {
  return `${t}-${e}`;
}
function ml(t) {
  return lt(new nn(t));
}
function on(t) {
  return t instanceof nn;
}
function kM(t) {
  return (t == null ? void 0 : t.type) === nn.getType();
}
function Ex(t) {
  const e = t.getChildren();
  let n = null;
  for (const r of e)
    n === null ? t.insertBefore(r) : n.insertAfter(r), n = r;
  t.remove();
}
function Nx(t, e, n, r) {
  const i = t.getNodes(), o = t.anchor.offset, s = t.focus.offset, a = i.length, l = t.isBackward(), c = l ? s : o, u = l ? o : s;
  let f, d;
  for (let h = 0; h < a; h++) {
    const g = i[h];
    if (X(d) && d.isParentOf(g))
      continue;
    const m = h === 0, b = h === a - 1;
    let _ = null;
    if (ie(g)) {
      const y = g.getTextContentSize(), C = m ? c : 0, D = b ? u : y;
      if (C === 0 && D === 0)
        continue;
      const R = g.splitText(C, D);
      _ = R.length > 1 && (R.length === 3 || m && !b || D === y) ? R[1] : R[0];
    } else {
      if (on(g))
        continue;
      X(g) && g.isInline() && (_ = g);
    }
    if (_ !== null) {
      if (_ && _.is(f))
        continue;
      const y = _.getParent();
      (y == null || !y.is(f)) && (d = void 0), f = y, d === void 0 && (d = ml({ [e]: [n] }), _.insertBefore(d)), d.append(_);
    } else
      f = void 0, d = void 0;
  }
  e === $i && X(d) && (l ? d.selectStart() : d.selectEnd());
}
function EM(t, e, n) {
  let r = t;
  for (; r !== null; ) {
    if (on(r))
      return r.getTypedIDs()[e];
    if (ie(r) && n === r.getTextContentSize()) {
      const i = r.getNextSibling();
      if (on(i))
        return i.getTypedIDs()[e];
    }
    r = r.getParent();
  }
}
function Sb(t) {
  return `external-${t}`;
}
const Sx = 1;
class ro extends Zi {
  constructor(e = "", n = "", r) {
    super(r), we(this, "__textType"), we(this, "__text"), this.__textType = e, this.__text = n;
  }
  static getType() {
    return "immutable-typed-text";
  }
  static clone(e) {
    const { __textType: n, __text: r, __key: i } = e;
    return new ro(n, r, i);
  }
  static importDOM() {
    return {
      span: (e) => SM(e) ? {
        conversion: NM,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return Xs().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setTextType(e.textType).setTextContent(e.text);
  }
  setTextType(e) {
    if (this.__textType === e)
      return this;
    const n = this.getWritable();
    return n.__textType = e, n;
  }
  getTextType() {
    return this.getLatest().__textType;
  }
  setTextContent(e) {
    if (this.__text === e)
      return this;
    const n = this.getWritable();
    return n.__text = e, n;
  }
  getTextContent() {
    return this.getLatest().__text;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-text-type", this.__textType), e.classList.add(this.__textType), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && n.setAttribute("data-text-type", this.getTextType()), { element: n };
  }
  decorate() {
    return this.getTextContent();
  }
  exportJSON() {
    return {
      type: this.getType(),
      textType: this.getTextType(),
      text: this.getTextContent(),
      version: Sx
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function NM(t) {
  const e = t.getAttribute("data-text-type") ?? "", n = t.textContent ?? "";
  return { node: Xs(e, n) };
}
function Xs(t, e) {
  return lt(new ro(t, e));
}
function SM(t) {
  return (t == null ? void 0 : t.tagName) === "span";
}
function wu(t) {
  return t instanceof ro;
}
function TM(t) {
  return (t == null ? void 0 : t.type) === ro.getType();
}
const bu = "unmatched", Tx = 1;
class io extends Zi {
  constructor(e = "", n) {
    super(n), we(this, "__marker"), this.__marker = e;
  }
  static getType() {
    return "unmatched";
  }
  static clone(e) {
    const { __marker: n, __key: r } = e;
    return new io(n, r);
  }
  static importDOM() {
    return {
      [bu]: (e) => DM(e) ? {
        conversion: AM,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return wg().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  createDOM() {
    const e = document.createElement(bu);
    e.setAttribute("data-marker", this.__marker), e.classList.add(Nb);
    const n = this.__marker.endsWith("*");
    return e.title = n ? "This closing marker has no matching opening marker!" : "This opening marker has no matching closing marker!", e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(Nb)), { element: n };
  }
  decorate() {
    return `\\${this.getMarker()}${yh}`;
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      version: Tx
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function AM(t) {
  const e = t.getAttribute("data-marker") ?? "";
  return { node: wg(e) };
}
function wg(t) {
  return lt(new io(t));
}
function DM(t) {
  return (t == null ? void 0 : t.tagName) === bu;
}
function Ax(t) {
  return t instanceof io;
}
const MM = [
  sr,
  Ni,
  Ar,
  _n,
  yt,
  Kt,
  Qr,
  is,
  rs,
  ro,
  io,
  On,
  Ki,
  {
    replace: eo,
    with: () => br(),
    withKlass: Ki
  }
];
var z;
(function(t) {
  t.FileIdentification = "FileIdentification", t.Headers = "Headers", t.Remarks = "Remarks", t.Introduction = "Introduction", t.DivisionMarks = "DivisionMarks", t.Paragraphs = "Paragraphs", t.Poetry = "Poetry", t.TitlesHeadings = "TitlesHeadings", t.Tables = "Tables", t.CenterTables = "CenterTables", t.RightTables = "RightTables", t.Lists = "Lists", t.Footnotes = "Footnotes", t.CrossReferences = "CrossReferences", t.SpecialText = "SpecialText", t.CharacterStyling = "CharacterStyling", t.Breaks = "Breaks", t.SpecialFeatures = "SpecialFeatures", t.PeripheralReferences = "PeripheralReferences", t.PeripheralMaterials = "PeripheralMaterials", t.Uncategorized = "Uncategorized";
})(z || (z = {}));
var U;
(function(t) {
  t.Paragraph = "Paragraph", t.Character = "Character", t.Note = "Note", t.Unknown = "Unknown";
})(U || (U = {}));
const OM = {
  id: {
    category: z.FileIdentification,
    type: U.Paragraph,
    description: "File identification information (BOOKID, FILENAME, EDITOR, MODIFICATION DATE)",
    hasEndMarker: !1,
    children: {
      FileIdentification: ["usfm", "ide"],
      Headers: ["h", "h1", "h2", "h3", "toc1", "toc2", "toc3"],
      Remarks: ["rem", "sts", "restore"],
      Introduction: [
        "imt",
        "imt1",
        "imt2",
        "imt3",
        "imt4",
        "imte",
        "imte1",
        "imte2",
        "is",
        "is1",
        "is2",
        "iot",
        "io",
        "io1",
        "io2",
        "io3",
        "io4",
        "ior",
        "ip",
        "im",
        "ipi",
        "imi",
        "ili",
        "ili1",
        "ili2",
        "ipq",
        "imq",
        "ipr",
        "ib",
        "iq",
        "iq1",
        "iq2",
        "iq3",
        "iex",
        "ie"
      ],
      DivisionMarks: ["c", "cl"],
      TitlesHeadings: ["mt", "mt1", "mt2", "mt3", "mt4"]
    }
  },
  usfm: {
    category: z.FileIdentification,
    type: U.Paragraph,
    description: "File markup version information",
    hasEndMarker: !1,
    children: void 0
  },
  ide: {
    category: z.FileIdentification,
    type: U.Paragraph,
    description: "File encoding information",
    hasEndMarker: !1,
    children: {
      Remarks: ["rem", "sts"]
    }
  },
  h: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text for a book (basic)",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  h1: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  h2: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text, left side of page",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  h3: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Running header text, right side of page",
    hasEndMarker: !1,
    children: {
      Headers: ["toc1", "toc2", "toc3", "toca1", "toca2", "toca3"]
    }
  },
  toc1: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Long table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toc2: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Short table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toc3: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Book Abbreviation",
    hasEndMarker: !1,
    children: void 0
  },
  toca1: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Alternative language long table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toca2: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Alternative language short table of contents text",
    hasEndMarker: !1,
    children: void 0
  },
  toca3: {
    category: z.Headers,
    type: U.Paragraph,
    description: "Alternative language book Abbreviation",
    hasEndMarker: !1,
    children: void 0
  },
  rem: {
    category: z.Remarks,
    type: U.Paragraph,
    description: "Comments and remarks",
    hasEndMarker: !1,
    children: void 0
  },
  sts: {
    category: z.Remarks,
    type: U.Paragraph,
    description: "Status of this file",
    hasEndMarker: !1,
    children: void 0
  },
  restore: {
    category: z.Remarks,
    type: U.Paragraph,
    description: "Project restore information",
    hasEndMarker: !1,
    children: void 0
  },
  imt: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt3: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 3",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imt4: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title, level 4 (usually within parenthesis)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imte: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title at introduction end, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imte1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title at introduction end, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  imte2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction major title at introduction end, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  is: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction section heading, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"],
      CharacterStyling: ["no"]
    }
  },
  is1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction section heading, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  is2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction section heading, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      SpecialText: ["bk"]
    }
  },
  iot: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline title (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CharacterStyling: ["no"]
    }
  },
  io: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 1 (if multiple levels) (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io3: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 3",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  io4: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction outline text, level 4",
    hasEndMarker: !1,
    children: {
      Introduction: ["ior", "iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ior: {
    category: z.Introduction,
    type: U.Character,
    description: "Introduction references range for outline entry; for marking references separately",
    hasEndMarker: !0,
    children: void 0
  },
  ip: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph (basic)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  im: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, with no first line indent (may occur after poetry)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ipi: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, indented, with first line indent",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  imi: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph text, indented, with no first line indent",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ili: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "A list entry, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ili1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "A list entry, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ili2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "A list entry, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ipq: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, quote from the body text",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  imq: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, quote from the body text, with no first line indent",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ipr: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction prose paragraph, right aligned",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ib: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction blank line",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"]
    }
  },
  iq: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iq1: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iq2: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 2",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iq3: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction poetry text, level 3",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  iex: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction explanatory or bridge text (e.g. explanation of missing book in Short Old Testament)",
    hasEndMarker: !1,
    children: {
      Introduction: ["iqt"],
      CharacterStyling: ["no"]
    }
  },
  iqt: {
    category: z.Introduction,
    type: U.Character,
    description: "For quoted scripture text appearing in the introduction",
    hasEndMarker: !0,
    children: void 0
  },
  ie: {
    category: z.Introduction,
    type: U.Paragraph,
    description: "Introduction ending marker",
    hasEndMarker: !1,
    children: void 0
  },
  c: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Chapter number",
    hasEndMarker: !1,
    children: {
      DivisionMarks: ["ca", "cp", "cl", "cd"],
      Paragraphs: ["p", "m", "po", "pr", "cls", "pi", "pi1", "pi2", "pi3", "pc", "mi", "nb"],
      Poetry: ["q", "q1", "q2", "q3", "q4", "qc", "qr", "qa", "qd", "b"],
      TitlesHeadings: [
        "mte",
        "ms",
        "ms1",
        "ms2",
        "ms3",
        "s",
        "s1",
        "s2",
        "s3",
        "s4",
        "r",
        "sp",
        "d",
        "sd",
        "sd1",
        "sd2",
        "sd3",
        "sd4"
      ],
      Lists: ["lh", "li", "li1", "li2", "li3", "li4", "lf", "lim", "lim1", "lim2", "lim3", "lim4"],
      Footnotes: ["f", "fe"],
      SpecialText: ["lit"],
      Breaks: ["pb"]
    }
  },
  ca: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "Second (alternate) chapter number (for coding dual versification; useful for places where different traditions of chapter breaks need to be supported in the same translation)",
    hasEndMarker: !0,
    children: void 0
  },
  cp: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Published chapter number (chapter string that should appear in the published text)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"]
    }
  },
  cl: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Chapter label used for translations that add a word such as 'Chapter' before chapter numbers (e.g. Psalms). The subsequent text is the chapter label.",
    hasEndMarker: !1,
    children: void 0
  },
  cd: {
    category: z.DivisionMarks,
    type: U.Paragraph,
    description: "Chapter Description (Publishing option D, e.g. in Russian Bibles)",
    hasEndMarker: !1,
    children: {
      DivisionMarks: ["vp"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  v: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "A verse number",
    hasEndMarker: !1,
    children: void 0
  },
  va: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "Second (alternate) verse number (for coding dual numeration in Psalms; see also NRSV Exo 22.1-4)",
    hasEndMarker: !0,
    children: void 0
  },
  vp: {
    category: z.DivisionMarks,
    type: U.Character,
    description: "Published verse marker (verse string that should appear in the published text)",
    hasEndMarker: !0,
    children: void 0
  },
  p: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, with first line indent (basic)",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  m: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, with no first line indent (may occur after poetry) (basic)",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  po: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Letter opening",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pr: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Text refrain (paragraph text, right aligned)",
    hasEndMarker: !1,
    children: {
      Paragraphs: ["pmo", "pm", "pmc", "pmr"],
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  cls: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Letter Closing",
    hasEndMarker: !1,
    children: {
      SpecialText: ["tl", "sig", "pn", "png", "addpn", "add"]
    }
  },
  pmo: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text opening",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pm: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text paragraph",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pmc: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text closing",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pmr: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Embedded text refrain (e.g. Then all the people shall say, 'Amen!')",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 1 indent (if single level), with first line indent; often used for discourse (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi1: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 1 indent (if multiple levels), with first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi2: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 2 indent, with first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pi3: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, level 3 indent, with first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  pc: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, centered (for Inscription)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  mi: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, indented, with no first line indent; often used for discourse",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  nb: {
    category: z.Paragraphs,
    type: U.Paragraph,
    description: "Paragraph text, with no break from previous paragraph text (at chapter boundary) (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 1 indent (if single level)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q1: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 1 indent (if multiple levels) (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q2: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 2 indent (basic)",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q3: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 3 indent",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  q4: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, level 4 indent",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qc: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, centered",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qr: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, Right Aligned",
    hasEndMarker: !1,
    children: {
      Poetry: ["qs", "qac", "qm", "qm1", "qm2", "qm3"],
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qs: {
    category: z.Poetry,
    type: U.Character,
    description: "Poetry text, Selah",
    hasEndMarker: !0,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  qa: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, Acrostic marker/heading",
    hasEndMarker: !1,
    children: void 0
  },
  qac: {
    category: z.Poetry,
    type: U.Character,
    description: "Poetry text, Acrostic markup of the first character of a line of acrostic poetry",
    hasEndMarker: !0,
    children: void 0
  },
  qm: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 1 indent (if single level)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qm1: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 1 indent (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qm2: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 2 indent",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qm3: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text, embedded, level 3 indent",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  qd: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "A Hebrew musical performance annotation, similar in content to Hebrew descriptive title.",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte1"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  b: {
    category: z.Poetry,
    type: U.Paragraph,
    description: "Poetry text stanza break (e.g. stanza break) (basic)",
    hasEndMarker: !1,
    children: void 0
  },
  mt: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book (if single level)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book (if multiple levels) (basic)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A secondary title usually occurring before the main title (basic)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A secondary title occurring after the main title",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f"],
      CrossReferences: ["x"]
    }
  },
  mt4: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A small secondary title sometimes occurring within parentheses",
    hasEndMarker: !1,
    children: void 0
  },
  mte: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book repeated at the end of the book, level 1 (if single level)",
    hasEndMarker: !1,
    children: void 0
  },
  mte1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "The main title of the book repeated at the end of the book, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mte2"]
    }
  },
  mte2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A secondary title occurring before or after the 'ending' main title",
    hasEndMarker: !1,
    children: void 0
  },
  ms: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ms1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ms2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 2",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  ms3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division heading, level 3",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["mr"],
      Footnotes: ["f", "fe"]
    }
  },
  mr: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A major section division references range heading (basic)",
    hasEndMarker: !1,
    children: void 0
  },
  s: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 1 (if single level) (basic)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 2 (e.g. Proverbs 22-24)",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 3 (e.g. Genesis 'The First Day')",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["no", "it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  s4: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section heading, level 4",
    hasEndMarker: !1,
    children: {
      TitlesHeadings: ["sr", "r"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  sr: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A section division references range heading",
    hasEndMarker: !1,
    children: void 0
  },
  r: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Parallel reference(s) (basic)",
    hasEndMarker: !1,
    children: void 0
  },
  sp: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A heading, to identify the speaker (e.g. Job)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  d: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "A Hebrew text heading, to provide description (e.g. Psalms)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  sd: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 1 (if single level)",
    hasEndMarker: !1,
    children: void 0
  },
  sd1: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: void 0
  },
  sd2: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 2",
    hasEndMarker: !1,
    children: void 0
  },
  sd3: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 3",
    hasEndMarker: !1,
    children: void 0
  },
  sd4: {
    category: z.TitlesHeadings,
    type: U.Paragraph,
    description: "Vertical space used to divide the text into sections, level 4",
    hasEndMarker: !1,
    children: void 0
  },
  lh: {
    category: z.Lists,
    type: U.Paragraph,
    description: "List header (introductory remark)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li1: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li2: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 2",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li3: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 3",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  li4: {
    category: z.Lists,
    type: U.Paragraph,
    description: "A list entry, level 4",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lf: {
    category: z.Lists,
    type: U.Paragraph,
    description: "List footer (concluding remark)",
    hasEndMarker: !1,
    children: {
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 1 (if single level)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim1: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 1 (if multiple levels)",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim2: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 2",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim3: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list item, level 3",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  lim4: {
    category: z.Lists,
    type: U.Paragraph,
    description: "An embedded list entry, level 4",
    hasEndMarker: !1,
    children: {
      Lists: ["litl", "lik", "liv", "liv1", "liv2", "liv3", "liv4", "liv5"],
      Footnotes: ["f", "fe", "fm"],
      CrossReferences: ["x", "xt", "rq"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  litl: {
    category: z.Lists,
    type: U.Character,
    description: "List entry total text",
    hasEndMarker: !0,
    children: void 0
  },
  lik: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry key text",
    hasEndMarker: !0,
    children: void 0
  },
  liv: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 1 content (if single value)",
    hasEndMarker: !0,
    children: void 0
  },
  liv1: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 1 content (if multiple values)",
    hasEndMarker: !0,
    children: void 0
  },
  liv2: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 2 content",
    hasEndMarker: !0,
    children: void 0
  },
  liv3: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 3 content",
    hasEndMarker: !0,
    children: void 0
  },
  liv4: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 4 content",
    hasEndMarker: !0,
    children: void 0
  },
  liv5: {
    category: z.Lists,
    type: U.Character,
    description: "Structured list entry value 5 content",
    hasEndMarker: !0,
    children: void 0
  },
  f: {
    category: z.Footnotes,
    type: U.Note,
    description: "A Footnote text item (basic)",
    hasEndMarker: !0,
    children: {
      Footnotes: ["fr", "ft", "fk", "fq", "fqa", "fl", "fw", "fp", "fv", "fdc"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  fe: {
    category: z.Footnotes,
    type: U.Note,
    description: "An Endnote text item",
    hasEndMarker: !0,
    children: {
      Footnotes: ["fr", "ft", "fk", "fq", "fqa", "fl", "fw", "fp", "fv", "fdc"],
      CrossReferences: ["xt"],
      SpecialText: [
        "qt",
        "nd",
        "tl",
        "dc",
        "bk",
        "sig",
        "pn",
        "png",
        "addpn",
        "wj",
        "k",
        "sls",
        "ord",
        "add"
      ],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  fr: {
    category: z.Footnotes,
    type: U.Character,
    description: "The origin reference for the footnote (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  ft: {
    category: z.Footnotes,
    type: U.Character,
    description: "Footnote text, Protocanon (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  fk: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote keyword (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  fq: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote scripture quote or alternate rendering (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  fqa: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote alternate rendering for a portion of scripture text",
    hasEndMarker: !0,
    children: void 0
  },
  fl: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote label text item, for marking or 'labelling' the type or alternate translation being provided in the note.",
    hasEndMarker: !0,
    children: void 0
  },
  fw: {
    category: z.Footnotes,
    type: U.Character,
    description: "A footnote witness list, for distinguishing a list of sigla representing witnesses in critical editions.",
    hasEndMarker: !0,
    children: void 0
  },
  fp: {
    category: z.Footnotes,
    type: U.Character,
    description: "A Footnote additional paragraph marker",
    hasEndMarker: !0,
    children: void 0
  },
  fv: {
    category: z.Footnotes,
    type: U.Character,
    description: "A verse number within the footnote text",
    hasEndMarker: !0,
    children: void 0
  },
  fdc: {
    category: z.Footnotes,
    type: U.Character,
    description: "Footnote text, applies to Deuterocanon only",
    hasEndMarker: !0,
    children: void 0
  },
  fm: {
    category: z.Footnotes,
    type: U.Character,
    description: "An additional footnote marker location for a previous footnote",
    hasEndMarker: !0,
    children: void 0
  },
  x: {
    category: z.CrossReferences,
    type: U.Note,
    description: "A list of cross references (basic)",
    hasEndMarker: !0,
    children: {
      CrossReferences: ["xo", "xop", "xt", "xta", "xk", "xq", "xot", "xnt", "xdc"],
      CharacterStyling: ["it", "bd", "bdit", "em", "sc", "sup"]
    }
  },
  xo: {
    category: z.CrossReferences,
    type: U.Character,
    description: "The cross reference origin reference (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  xop: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Published cross reference origin reference (origin reference that should appear in the published text)",
    hasEndMarker: !0,
    children: void 0
  },
  xt: {
    category: z.CrossReferences,
    type: U.Character,
    description: "The cross reference target reference(s), protocanon only (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  xta: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross reference target references added text",
    hasEndMarker: !0,
    children: void 0
  },
  xk: {
    category: z.CrossReferences,
    type: U.Character,
    description: "A cross reference keyword",
    hasEndMarker: !0,
    children: void 0
  },
  xq: {
    category: z.CrossReferences,
    type: U.Character,
    description: "A cross-reference quotation from the scripture text",
    hasEndMarker: !0,
    children: void 0
  },
  xot: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross-reference target reference(s), Old Testament only",
    hasEndMarker: !0,
    children: void 0
  },
  xnt: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross-reference target reference(s), New Testament only",
    hasEndMarker: !0,
    children: void 0
  },
  xdc: {
    category: z.CrossReferences,
    type: U.Character,
    description: "Cross-reference target reference(s), Deuterocanon only",
    hasEndMarker: !0,
    children: void 0
  },
  rq: {
    category: z.CrossReferences,
    type: U.Character,
    description: "A cross-reference indicating the source text for the preceding quotation.",
    hasEndMarker: !0,
    children: void 0
  },
  qt: {
    category: z.SpecialText,
    type: U.Character,
    description: "For Old Testament quoted text appearing in the New Testament (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  nd: {
    category: z.SpecialText,
    type: U.Character,
    description: "For name of deity (basic)",
    hasEndMarker: !0,
    children: void 0
  },
  tl: {
    category: z.SpecialText,
    type: U.Character,
    description: "For transliterated words",
    hasEndMarker: !0,
    children: void 0
  },
  dc: {
    category: z.SpecialText,
    type: U.Character,
    description: "Deuterocanonical/LXX additions or insertions in the Protocanonical text",
    hasEndMarker: !0,
    children: void 0
  },
  bk: {
    category: z.SpecialText,
    type: U.Character,
    description: "For the quoted name of a book",
    hasEndMarker: !0,
    children: void 0
  },
  sig: {
    category: z.SpecialText,
    type: U.Character,
    description: "For the signature of the author of an Epistle",
    hasEndMarker: !0,
    children: void 0
  },
  pn: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a proper name",
    hasEndMarker: !0,
    children: void 0
  },
  png: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a geographic proper name",
    hasEndMarker: !0,
    children: void 0
  },
  addpn: {
    category: z.SpecialText,
    type: U.Character,
    description: "For chinese words to be dot underline & underline",
    hasEndMarker: !0,
    children: void 0
  },
  wj: {
    category: z.SpecialText,
    type: U.Character,
    description: "For marking the words of Jesus",
    hasEndMarker: !0,
    children: void 0
  },
  k: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a keyword",
    hasEndMarker: !0,
    children: void 0
  },
  sls: {
    category: z.SpecialText,
    type: U.Character,
    description: "To represent where the original text is in a secondary language or from an alternate text source",
    hasEndMarker: !0,
    children: void 0
  },
  ord: {
    category: z.SpecialText,
    type: U.Character,
    description: "For the text portion of an ordinal number",
    hasEndMarker: !0,
    children: void 0
  },
  add: {
    category: z.SpecialText,
    type: U.Character,
    description: "For a translational addition to the text",
    hasEndMarker: !0,
    children: void 0
  },
  lit: {
    category: z.SpecialText,
    type: U.Paragraph,
    description: "For a comment or note inserted for liturgical use",
    hasEndMarker: !1,
    children: void 0
  },
  no: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use normal text",
    hasEndMarker: !0,
    children: void 0
  },
  it: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use italic text",
    hasEndMarker: !0,
    children: void 0
  },
  bd: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use bold text",
    hasEndMarker: !0,
    children: void 0
  },
  bdit: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use bold + italic text",
    hasEndMarker: !0,
    children: void 0
  },
  em: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, use emphasized text style",
    hasEndMarker: !0,
    children: void 0
  },
  sc: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, for small capitalization text",
    hasEndMarker: !0,
    children: void 0
  },
  sup: {
    category: z.CharacterStyling,
    type: U.Character,
    description: "A character style, for superscript text. Typically for use in critical edition footnotes.",
    hasEndMarker: !0,
    children: void 0
  },
  pb: {
    category: z.Breaks,
    type: U.Paragraph,
    description: "Page Break used for new reader portions and children's bibles where content is controlled by the page",
    hasEndMarker: !1,
    children: void 0
  }
}, ho = {
  DivisionMarks: { add: ["v", "c"], remove: [] },
  Paragraphs: { add: ["p"], remove: [] },
  Poetry: { add: ["q", "q1", "q2", "q3", "q4", "b"], remove: [] },
  TitlesHeadings: {
    add: [
      "mte",
      "ms",
      "ms1",
      "ms2",
      "ms3",
      "s",
      "s1",
      "s2",
      "s3",
      "s4",
      "r",
      "sp",
      "d",
      "sd",
      "sd1",
      "sd2",
      "sd3",
      "sd4"
    ],
    remove: []
  }
}, IM = {
  p: { children: ho },
  q: { children: ho },
  q1: { children: ho },
  q2: { children: ho },
  q3: { children: ho },
  q4: { children: ho },
  b: { children: ho },
  qm: {
    children: {
      Paragraphs: { add: ["p"], remove: [] }
    }
  },
  c: {
    type: U.Paragraph,
    children: null
  },
  v: {
    children: null
  }
};
function Tb(t) {
  const e = OM[t], n = IM[t];
  if (!e)
    return;
  if (!n)
    return e;
  let r = e.children ? { ...e.children } : void 0;
  if (n.children === null && (r = void 0), n.children) {
    r = r || {};
    for (const [i, o] of Object.entries(n.children)) {
      const s = i;
      if (o === null)
        Reflect.deleteProperty(r, s);
      else {
        let a = r[s] || [];
        o.remove && (a = a.filter((l) => !o.remove.includes(l))), o.add && (a = [.../* @__PURE__ */ new Set([...a, ...o.add])]), a.length > 0 ? r[s] = a : Reflect.deleteProperty(r, s);
      }
    }
    Object.keys(r).length === 0 && (r = void 0);
  }
  return {
    ...e,
    ...n,
    children: r
  };
}
function Ab(t, e, n) {
  const r = {
    type: Qa,
    version: Za,
    content: t
  }, i = e.serializeEditorState(r, n);
  return lg(i.root.children[0]) ? i.root.children[0].children[0] : i.root.children[0];
}
function Eh(t, e) {
  if (!t || !ie(t))
    return [void 0, void 0];
  const n = t.getTextContent();
  if (e >= 0 && e < n.length)
    return [t, e];
  let r = t.getNextSibling();
  if (!r) {
    const o = t.getParent();
    on(o) && (r = o.getNextSibling());
  }
  if (!r || !on(r) && !ie(r))
    return [void 0, void 0];
  const i = e - n.length;
  return r && ie(r) ? Eh(r, i) : Eh(r.getFirstChild() ?? void 0, i);
}
function Db(t) {
  const e = qC(t.jsonPath);
  let n = Ve();
  for (const r of e) {
    if (!n || !X(n))
      return [void 0, void 0];
    n = n.getChildAtIndex(r) ?? void 0;
  }
  return Eh(n, t.offset);
}
function Mb(t) {
  return X(t) ? "element" : "text";
}
function bg(t) {
  const { start: e } = t;
  let { end: n } = t;
  n === void 0 && (n = e);
  const [r, i] = Db(e), [o, s] = Db(n);
  if (!r || !o || i === void 0 || s === void 0)
    return;
  const a = Dl();
  return a.anchor = Mn(r.getKey(), i, Mb(r)), a.focus = Mn(o.getKey(), s, Mb(o)), a;
}
function Ob(t, e) {
  const n = [];
  let r = t;
  for (; r != null && r.getParent(); ) {
    const i = r.getParent();
    if (i) {
      const o = i == null ? void 0 : i.getChildren().indexOf(r);
      o >= 0 && n.unshift(o);
    }
    r = i;
  }
  return { jsonPath: jC(n), offset: e };
}
function Dx() {
  const t = oe();
  if (!t || !Z(t))
    return;
  const e = t.isBackward() ? t.focus.getNode() : t.anchor.getNode(), n = t.isBackward() ? t.focus.offset : t.anchor.offset, r = Ob(e, n);
  if (t.isCollapsed())
    return { start: r };
  const i = t.isBackward() ? t.anchor.getNode() : t.focus.getNode(), o = t.isBackward() ? t.anchor.offset : t.focus.offset, s = Ob(i, o);
  return { start: r, end: s };
}
const Mx = "v", Ox = 1;
class xn extends Zi {
  constructor(e = "", n = !1, r, i, o, s, a) {
    super(a), we(this, "__marker"), we(this, "__number"), we(this, "__showMarker"), we(this, "__sid"), we(this, "__altnumber"), we(this, "__pubnumber"), we(this, "__unknownAttributes"), this.__marker = Mx, this.__number = e, this.__showMarker = n, this.__sid = r, this.__altnumber = i, this.__pubnumber = o, this.__unknownAttributes = s;
  }
  static getType() {
    return "immutable-verse";
  }
  static clone(e) {
    const { __number: n, __showMarker: r, __sid: i, __altnumber: o, __pubnumber: s, __unknownAttributes: a, __key: l } = e;
    return new xn(n, r, i, o, s, a, l);
  }
  static importDOM() {
    return {
      span: (e) => PM(e) ? {
        conversion: RM,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return yg().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setMarker(e.marker).setNumber(e.number).setShowMarker(e.showMarker).setSid(e.sid).setAltnumber(e.altnumber).setPubnumber(e.pubnumber).setUnknownAttributes(e.unknownAttributes);
  }
  setMarker(e) {
    if (this.__marker === e)
      return this;
    const n = this.getWritable();
    return n.__marker = e, n;
  }
  getMarker() {
    return this.getLatest().__marker;
  }
  setNumber(e) {
    if (this.__number === e)
      return this;
    const n = this.getWritable();
    return n.__number = e, n;
  }
  getNumber() {
    return this.getLatest().__number;
  }
  setShowMarker(e = !1) {
    if (this.__showMarker === e)
      return this;
    const n = this.getWritable();
    return n.__showMarker = e, n;
  }
  getShowMarker() {
    return this.getLatest().__showMarker;
  }
  setSid(e) {
    if (this.__sid === e)
      return this;
    const n = this.getWritable();
    return n.__sid = e, n;
  }
  getSid() {
    return this.getLatest().__sid;
  }
  setAltnumber(e) {
    if (this.__altnumber === e)
      return this;
    const n = this.getWritable();
    return n.__altnumber = e, n;
  }
  getAltnumber() {
    return this.getLatest().__altnumber;
  }
  setPubnumber(e) {
    if (this.__pubnumber === e)
      return this;
    const n = this.getWritable();
    return n.__pubnumber = e, n;
  }
  getPubnumber() {
    return this.getLatest().__pubnumber;
  }
  setUnknownAttributes(e) {
    const n = this.getWritable();
    return n.__unknownAttributes = e, n;
  }
  getUnknownAttributes() {
    return this.getLatest().__unknownAttributes;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.setAttribute("data-marker", this.__marker), e.classList.add(vh, `usfm_${this.__marker}`), this.__showMarker && e.classList.add("marker"), e.setAttribute("data-number", this.__number), e;
  }
  updateDOM() {
    return !1;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.setAttribute("data-marker", this.getMarker()), n.classList.add(vh, `usfm_${this.getMarker()}`), n.setAttribute("data-number", this.getNumber())), { element: n };
  }
  decorate() {
    return p("span", { children: this.getShowMarker() ? jl(this.getMarker(), this.getNumber()) : (
      // ZWSP added so double click word selection works without including this number.
      yh + this.getNumber() + yh
    ) });
  }
  exportJSON() {
    return {
      type: this.getType(),
      marker: this.getMarker(),
      number: this.getNumber(),
      showMarker: this.getShowMarker(),
      sid: this.getSid(),
      altnumber: this.getAltnumber(),
      pubnumber: this.getPubnumber(),
      unknownAttributes: this.getUnknownAttributes(),
      version: Ox
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function RM(t) {
  const e = t.getAttribute("data-number") ?? "0";
  return { node: yg(e) };
}
function yg(t, e, n, r, i, o) {
  return lt(new xn(t, e, n, r, i, o));
}
function PM(t) {
  return ((t == null ? void 0 : t.getAttribute("data-marker")) ?? void 0) === Mx;
}
function ba(t) {
  return t instanceof xn;
}
function LM(t) {
  return (t == null ? void 0 : t.type) === xn.getType();
}
function ir(t) {
  return dg(t) || ba(t);
}
function $M(t) {
  return oM(t) || LM(t);
}
function FM(t, e, n, r, i, o, s) {
  if (!Kt.isValidMarker(t))
    throw new Error(`$insertNote: Invalid note marker '${t}'`);
  const a = n ? bg(n) : oe();
  if (!Z(a))
    return;
  const l = BM(a, t, r, s);
  if (l === void 0)
    return;
  const c = Rx(t, e, l, i, o);
  return Ix(c, a, i), c;
}
function Ix(t, e, n) {
  const r = (n == null ? void 0 : n.noteMode) === "collapsed";
  if (t.setIsCollapsed(r), e.isCollapsed() || pM(e), e.insertNodes([t]), !r) {
    const i = t.getChildren().reverse().find(at);
    i == null || i.selectEnd();
  }
}
function BM(t, e, n, r) {
  const i = [], { chapterNum: o, verseNum: s } = n ?? {};
  switch (e) {
    case "f":
    case "fe":
    case "ef":
    case "efe":
      if (o !== void 0 && s !== void 0 && i.push(Ur("fr").append(Ie(`${o}:${s}`))), !t.isCollapsed()) {
        const a = t.getTextContent().trim();
        if (a.length > 0) {
          const l = Ur("fq");
          l.append(Ie(a)), i.push(l);
        }
      }
      i.push(Ur("ft").append(Ie("-")));
      break;
    case "x":
    case "ex":
      o !== void 0 && s !== void 0 && i.push(Ur("xo").append(Ie(`${o}:${s}`))), i.push(Ur("xt").append(Ie("-")));
      break;
    default:
      r == null || r.warn(`$createNoteChildren: Unsupported note marker '${e}'`);
      return;
  }
  return i;
}
function Rx(t, e, n, r, i, o) {
  const s = (r == null ? void 0 : r.noteMode) !== "expanded", a = cg(t, e, s);
  o && pi(a, zo, () => o);
  let l, c;
  (r == null ? void 0 : r.markerMode) === "editable" ? (l = Js(t), c = Js(t, "closing")) : (r == null ? void 0 : r.markerMode) === "visible" && (l = Xs("marker", Si(t) + st), c = Xs("marker", Gs(t) + st));
  let u;
  if (l && a.append(l), (r == null ? void 0 : r.markerMode) === "editable")
    e === "" ? a.append(...n) : (u = Ie(pg(a.__caller)), a.append(u, ...n));
  else {
    const f = () => Ie(st), d = n.flatMap(jM(f));
    if (e === "")
      a.append(...d);
    else {
      const h = gg(n);
      let g = () => {
      };
      i != null && i.noteCallerOnClick && (g = i.noteCallerOnClick), u = Cg(a.__caller, h, g), a.append(u, f(), ...d);
    }
  }
  return c && a.append(c), a;
}
function Ib(t) {
  var e;
  if (typeof t == "string") {
    const i = Me(t);
    return je(i) ? i : void 0;
  }
  const n = Rl();
  if (n.length <= 0)
    return;
  const r = (e = n.filter((i) => je(i.node))[t]) == null ? void 0 : e.node;
  if (je(r))
    return r;
}
function qM(t, e) {
  const n = (e == null ? void 0 : e.noteMode) === "collapsed";
  if (t.setIsCollapsed(n), n) {
    const r = t.getPreviousSibling();
    if (ba(r) || !r) {
      const i = t.getParent();
      if (i) {
        const o = t.getIndexWithinParent();
        i.select(o, o);
      }
    } else
      r.selectEnd();
  } else {
    const r = t.getChildren().reverse().find(at);
    r == null || r.selectEnd();
  }
}
function jM(t) {
  return (e) => wu(e) ? [e] : [e, t()];
}
function UM(t) {
  return t.find((e) => fn(e));
}
function zM(t, e) {
  return X(t) ? t.getChildren().find((n) => ir(n) && mg(e, n.getNumber())) : void 0;
}
function VM(t, e) {
  return e === 0 ? UM(t) : t.map((n) => zM(n, e)).filter((n) => n)[0];
}
function Rb(t) {
  return !t || !X(t) ? void 0 : t.getChildren().findLast((e) => ir(e));
}
function Px(t) {
  var e, n;
  if (!t || rr(t))
    return;
  if (ir(t))
    return t;
  let r = on(t.getParent()) ? (e = t.getParent()) == null ? void 0 : e.getPreviousSibling() : t.getPreviousSibling();
  for (; r && !ir(r) && !rr(r); )
    r = r.getPreviousSibling();
  if (r && ir(r))
    return r;
  let i = (n = t.getTopLevelElement()) == null ? void 0 : n.getPreviousSibling(), o = Rb(i), s = o;
  for (; i && !o && !rr(i); )
    o = s, i = i.getPreviousSibling(), s = Rb(i);
  if (!(!o && rr(i)))
    return o;
}
function HM(t) {
  return cM(t) || ba(t);
}
function vg(t) {
  if (ie(t)) {
    const e = t.getTextContent();
    !e.endsWith(" ") && !e.endsWith(st) && t.setTextContent(`${e} `);
  }
}
function Lx(t) {
  if (ie(t)) {
    const e = t.getTextContent();
    e.startsWith(" ") && t.setTextContent(e.trimStart());
  }
}
function _g(t, e) {
  return t.getEditorState().read(() => !Me(e));
}
const WM = ["style"], KM = ["style", "code"], yu = ["style", "cid"], GM = [
  "style",
  "number",
  "sid",
  "altnumber",
  "pubnumber"
], JM = [
  "style",
  "number",
  "sid",
  "altnumber",
  "pubnumber"
], XM = ["style", "sid", "eid"], YM = ["style", "caller", "category", "contents"], QM = [
  "chapter",
  "immutable-chapter",
  "verse",
  "immutable-verse",
  "ms",
  "note",
  "unmatched"
], wl = `
`;
function ZM(t, e) {
  const n = Me(t);
  if (!Er(n))
    return;
  const r = $x(n);
  return r === void 0 ? void 0 : [{ retain: r }, ...e, { delete: 1 }];
}
function $x(t) {
  if (!t)
    return;
  const e = Rl();
  let n = 0;
  const r = [];
  let i, o;
  const s = t.getKey();
  let a;
  for (const l of e) {
    const c = l.node;
    for (let u = r.length - 1; u >= 0; u--)
      if (bl(r[u], l)) {
        const f = r[u];
        if (r.splice(u, 1), n += 1, a && f.getKey() === a.getKey())
          return n - 1;
      }
    if (i && bl(i, l) && (i = void 0, o = void 0), i) {
      if (c.getKey() === s)
        return o;
      continue;
    }
    if (c.getKey() === s) {
      if (ie(c) || Er(c))
        return n;
      ar(c) && (a = c);
    }
    if (ar(c) && (r.includes(c) || r.push(c)), je(c)) {
      i = c, o = n, n += 1;
      continue;
    }
    n += Fx(c);
  }
  if (a)
    return n;
}
function Pb(t, e) {
  if (t.length < 2 || !nO(t[0]) || !tO(t[1]))
    return;
  const n = t[0].retain;
  return e.read(() => {
    const r = eO(n);
    return r == null ? void 0 : r.getKey();
  });
}
function eO(t) {
  const e = Rl();
  let n = 0;
  const r = [];
  let i, o;
  for (const s of e) {
    const a = s.node;
    for (let c = r.length - 1; c >= 0; c--)
      if (bl(r[c], s)) {
        const u = r[c];
        if (r.splice(c, 1), n === t)
          return u;
        n += 1;
      }
    if (i && bl(i, s) && (i = void 0, o = void 0), i) {
      if (o === t)
        return i;
      continue;
    }
    if (ar(a) && (r.includes(a) || r.push(a)), je(a)) {
      if (i = a, o = n, n === t)
        return a;
      n += 1;
      continue;
    }
    const l = Fx(a);
    if (ie(a) && l > 0 && t >= n && t < n + l || Er(a) && n === t)
      return a;
    n += l;
  }
  for (const s of r) {
    if (n === t)
      return s;
    n += 1;
  }
}
function bl(t, e) {
  return t ? e ? !fM(e.node, t.getKey()) : !0 : !1;
}
function Er(t) {
  return rr(t) || ir(t) || sd(t) || je(t) || Ax(t);
}
function ar(t) {
  return gr(t) || Jr(t);
}
function Ma(t, e) {
  return e.insert != null && typeof e.insert == "object" && t in e.insert;
}
function tO(t) {
  if (t.insert == null || typeof t.insert != "object")
    return !1;
  const e = Object.keys(t.insert)[0];
  return t.insert != null && typeof t.insert == "object" && e in t.insert && QM.includes(e);
}
function nO(t) {
  return t.retain != null && typeof t.retain == "number";
}
function Fx(t) {
  return ie(t) ? t.getTextContentSize() : Er(t) ? 1 : 0;
}
function Nh(t, e) {
  const n = { insert: t.__text }, r = Is(t, zo);
  if (r && (n.attributes = { segment: r }), e && e.length > 0) {
    let i = e.map((o) => {
      const s = { style: o.__marker }, a = Is(o, Uo);
      a && (s.cid = a);
      const l = o.getUnknownAttributes();
      return l && Object.keys(l).length > 0 && Object.assign(s, l), s;
    });
    i.length === 1 && (i = i[0]), n.attributes = {
      ...n.attributes,
      char: i
    };
  }
  return n;
}
function Lb(t) {
  const e = new qa();
  return t.isEmpty() || t.read(() => {
    const n = Ve();
    if (!n || n.isEmpty())
      return;
    const r = n.getChildren();
    if (r.length === 1 && _i(r[0]) && (!r[0].getChildren() || r[0].getChildrenSize() === 0))
      return;
    const i = rO();
    for (const o of i)
      e.push(o);
  }), e;
}
function xg(t, e) {
  const n = [], r = Rl(t), i = [], o = [], s = { children: [], contentsOps: [] };
  for (let a = 0; a < r.length; a++) {
    const l = r[a].node;
    n.push(...$b(l, a, r, i, o, s));
  }
  for (const a of i)
    n.push(...$b(a, r.length, r, i, o, s));
  return n;
}
function rO() {
  return xg();
}
function $b(t, e, n, r, i, o) {
  if (!t)
    return [];
  const s = [];
  return iO(t, s, r), oO(t, s, i, o), sO(t, e, n, i), rr(t) && s.push(cO(t)), ir(t) && s.push(dO(t)), sd(t) && s.push(fO(t)), Ax(t) && s.push(hO(t)), aO(t, s, o), s;
}
function iO(t, e, n) {
  if (!t.isInline()) {
    const r = n.pop();
    Jr(r) ? e.push(lO(r)) : fn(r) ? e.push(uO(r)) : _i(r) && e.push({ insert: wl });
  }
  ar(t) && (n.includes(t) || n.push(t));
}
function oO(t, e, n, r) {
  var i;
  if (!ie(t))
    return;
  const o = t.getParent();
  if (je(o) && o.getFirstChild() === t)
    return;
  const s = Nh(t, n);
  if (r.children.includes(t)) {
    const a = t.getTextContent();
    if (!a || a === st || a.startsWith(tg))
      return;
    (i = r.contentsOps) == null || i.push(s);
  } else
    e.push(s);
}
function sO(t, e, n, r) {
  at(t) && !r.includes(t) && r.push(t);
  const i = n[e + 1];
  for (const o of r.toReversed())
    bl(o, i) && r.pop();
}
function aO(t, e, n) {
  var r, i;
  if (!je(t))
    return;
  Rl(t).forEach((s) => n.children.push(s.node));
  const o = pO(t);
  n.contentsOps = (i = (r = o.insert.note) == null ? void 0 : r.contents) == null ? void 0 : i.ops, e.push(o);
}
function lO(t) {
  const e = { style: od, code: t.__code };
  return { insert: wl, attributes: { book: e } };
}
function cO(t) {
  const e = { style: og, number: t.__number };
  return t.__sid && (e.sid = t.__sid), t.__altnumber && (e.altnumber = t.__altnumber), t.__pubnumber && (e.pubnumber = t.__pubnumber), { insert: { chapter: e } };
}
function uO(t) {
  const e = { style: t.__marker };
  return { insert: wl, attributes: { para: e } };
}
function dO(t) {
  const e = { style: ug, number: t.__number };
  return t.__sid && (e.sid = t.__sid), t.__altnumber && (e.altnumber = t.__altnumber), t.__pubnumber && (e.pubnumber = t.__pubnumber), { insert: { verse: e } };
}
function fO(t) {
  const e = { style: t.__marker };
  return t.__sid && (e.sid = t.__sid), t.__eid && (e.eid = t.__eid), { insert: { milestone: e } };
}
function hO(t) {
  return { insert: { unmatched: { marker: t.__marker } } };
}
function pO(t) {
  const e = {
    style: t.__marker,
    caller: t.__caller
  };
  t.__category && (e.category = t.__category), t.getChildrenSize() > 1 && (e.contents = { ops: [] });
  const n = { insert: { note: e } }, r = Is(t, zo);
  return r && (n.attributes = { segment: r }), n;
}
const Bx = 1;
class yr extends Zi {
  constructor(e = Vo, n = "", r, i) {
    super(i), we(this, "__caller"), we(this, "__previewText"), we(this, "__onClick"), this.__caller = e, this.__previewText = n, this.__onClick = r ?? (() => {
    });
  }
  static getType() {
    return "immutable-note-caller";
  }
  static clone(e) {
    const { __caller: n, __previewText: r, __onClick: i, __key: o } = e;
    return new yr(n, r, i, o);
  }
  static importDOM() {
    return {
      span: (e) => mO(e) ? {
        conversion: gO,
        priority: 1
      } : null
    };
  }
  static importJSON(e) {
    return Cg().updateFromJSON(e);
  }
  updateFromJSON(e) {
    return super.updateFromJSON(e).setCaller(e.caller).setPreviewText(e.previewText).setOnClick(e.onClick);
  }
  setCaller(e) {
    if (this.__caller === e)
      return this;
    const n = this.getWritable();
    return n.__caller = e, n;
  }
  getCaller() {
    return this.getLatest().__caller;
  }
  setPreviewText(e) {
    if (this.__previewText === e)
      return this;
    const n = this.getWritable();
    return n.__previewText = e, n;
  }
  getPreviewText() {
    return this.getLatest().__previewText;
  }
  setOnClick(e) {
    if (this.__onClick === e)
      return this;
    const n = this.getWritable();
    return n.__onClick = e, n;
  }
  getOnClick() {
    return this.getLatest().__onClick;
  }
  createDOM() {
    const e = document.createElement("span");
    return e.classList.add(this.__type), e.setAttribute("data-caller", this.__caller), e.setAttribute("data-preview-text", this.__previewText), e;
  }
  updateDOM(e) {
    return e.__caller !== this.__caller;
  }
  exportDOM(e) {
    const { element: n } = super.exportDOM(e);
    return n && it(n) && (n.classList.add(this.getType()), n.setAttribute("data-caller", this.getCaller()), n.setAttribute("data-preview-text", this.getPreviewText())), { element: n };
  }
  decorate(e) {
    const n = this.getParent();
    if (!n)
      return null;
    const r = n.getKey(), i = n.getIsCollapsed(), o = this.__key, s = (l) => {
      var c;
      return (c = this.__onClick) == null ? void 0 : c.call(this, l, r, i, () => wO(e, r), (u) => bO(e, r, o, u), () => yO(e, r));
    }, a = `${this.__caller}_${this.__previewText}}`.replace(/\s+/g, "").substring(0, 25);
    return p("button", { onClick: s, title: this.__previewText, "data-caller-id": a, children: this.__caller === Vo && i ? (
      // Caller is generated by CSS
      ""
    ) : this.__caller });
  }
  exportJSON() {
    return {
      type: this.getType(),
      caller: this.getCaller(),
      previewText: this.getPreviewText(),
      onClick: this.getOnClick(),
      version: Bx
    };
  }
  // Mutation
  isKeyboardSelectable() {
    return !1;
  }
}
function gO(t) {
  const e = t.getAttribute("data-caller") ?? "", n = t.getAttribute("data-preview-text") ?? "";
  return { node: Cg(e, n) };
}
function Cg(t, e, n) {
  return lt(new yr(t, e, n));
}
function mO(t) {
  return t ? t.classList.contains(yr.getType()) : !1;
}
function oo(t) {
  return t instanceof yr;
}
function wO(t, e) {
  return t.read(() => {
    const n = Me(e);
    if (!je(n))
      throw new Error(`getNoteCaller: Note node not found: ${e}`);
    return n.getCaller();
  });
}
function bO(t, e, n, r) {
  t.update(() => {
    const i = Me(e);
    if (!je(i))
      throw new Error(`setNoteCaller: Note node not found: ${e}`);
    i.setCaller(r);
    const o = Me(n);
    if (!oo(o))
      throw new Error(`setNoteCaller: Caller node not found: ${n}`);
    o.setCaller(r);
  });
}
function yO(t, e) {
  return t.read(() => {
    const n = Me(e);
    if (!je(n))
      throw new Error(`getNoteOps: Note node not found: ${e}`);
    return xg(n);
  });
}
const vO = [
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z"
], _O = [
  yr,
  xn,
  ...MM
], xO = Yn((t, e) => {
  const { coords: n, children: r, style: i, ...o } = t, s = n !== void 0;
  return p("div", { ref: e, className: "floating-box", "aria-hidden": !s, style: {
    ...i,
    position: "absolute",
    zIndex: 1e3,
    top: n == null ? void 0 : n.y,
    left: n == null ? void 0 : n.x,
    visibility: s ? "visible" : "hidden",
    opacity: s ? 1 : 0
  }, ...o, children: r });
});
function CO() {
  const [t, e] = fe(void 0), [n, r] = fe(), i = xe(null), o = be((a, l) => {
    i.current && i.current();
    const c = a.commonAncestorContainer.nodeType === a.commonAncestorContainer.TEXT_NODE ? a : a.commonAncestorContainer;
    i.current = vT(c, l, () => {
      CT(c, l, {
        placement: "bottom-start",
        middleware: [_T(), xT()]
      }).then((u) => {
        r(u.placement), e((f) => (f == null ? void 0 : f.x) === u.x && (f == null ? void 0 : f.y) === u.y ? f : { x: u.x, y: u.y });
      }).catch(() => {
        e(void 0);
      });
    });
  }, []), s = be(() => {
    i.current && (e(void 0), i.current(), i.current = null);
  }, []);
  return ue(() => s, [s]), { coords: t, placement: n, updatePosition: o, cleanup: s };
}
function kO({ isOpen: t, floatingBoxRef: e }) {
  const { coords: n, updatePosition: r, cleanup: i, placement: o } = CO();
  return ue(() => {
    var s;
    if (!t || !e.current) {
      i();
      return;
    }
    const a = (s = window.getSelection()) == null ? void 0 : s.getRangeAt(0);
    if (!a) {
      i();
      return;
    }
    return r(a, e.current), i;
  }, [i, t, e, r]), { coords: n, placement: o };
}
const EO = document.body, NO = B2(xO);
function SO({ isOpen: t = !1, children: e }) {
  const n = xe(null), { coords: r, placement: i } = kO({ isOpen: t, floatingBoxRef: n }), o = Ne(() => r ? typeof e == "function" ? e : () => e : () => null, [e, r]);
  return fi(p(NO, { ref: n, coords: r, style: r ? void 0 : { display: "none" }, children: o({ isOpen: t, placement: i }) }), EO);
}
const qx = yl(void 0);
function kg() {
  const t = vl(qx);
  if (!t)
    throw new Error("useMenuContext must be used within a MenuProvider");
  return t;
}
function TO(t, e) {
  const [n, r] = fe(0), [i, o] = fe(-1), s = Ne(() => t ?? [], [t]), a = {
    menuItems: s,
    activeIndex: n,
    selectedIndex: i,
    onSelectOption: e ?? (() => {
    })
  }, l = be(() => {
    r((f) => {
      const d = s.length;
      return d ? (f - 1 + d) % d : 0;
    });
  }, [s.length]), c = be(() => {
    r((f) => {
      const d = s.length;
      return d ? (f + 1) % d : 0;
    });
  }, [s.length]), u = be(() => {
    const f = s.length;
    if (n >= 0 && n < f) {
      const d = s[n];
      e == null || e(d), o(n);
    }
  }, [n, s, e]);
  return {
    state: a,
    moveUp: l,
    moveDown: c,
    select: u,
    setActiveIndex: r,
    setSelectedIndex: o
  };
}
function AO({ children: t, menuItems: e, onSelectOption: n, ...r }) {
  const i = TO(e, n);
  return p(qx.Provider, { value: i, children: p("div", { ...r, children: t }) });
}
const jx = Yn(({ index: t, children: e, onMouseEnter: n, onClick: r, ...i }, o) => {
  const { state: { activeIndex: s }, setActiveIndex: a, setSelectedIndex: l, select: c } = kg(), u = be((d) => {
    c(), l(-1), r == null || r(d);
  }, [r, c, l]), f = be((d) => {
    a(t), n == null || n(d);
  }, [t, a, n]);
  return p("button", { ref: o, role: "menuitem", ...i, onClick: u, onMouseEnter: f, "aria-selected": t !== void 0 && s === t ? "true" : void 0, tabIndex: -1, children: e });
});
function DO({ children: t, autoIndex: e = !0, ...n }) {
  const r = xe(null), { state: { activeIndex: i, menuItems: o } } = kg(), s = Ne(() => o ? typeof t == "function" ? t : () => t : () => null, [t, o]), a = Ne(() => {
    const l = s(o);
    return e ? q2.map(l, (c, u) => U2(c) && c.type === jx && c.props.index === void 0 ? j2(c, { index: u }) : c) : l;
  }, [s, e, o]);
  return ue(() => {
    if (r.current) {
      const l = r.current, c = l.children[i];
      if (c) {
        const u = l.getBoundingClientRect(), f = c.getBoundingClientRect();
        f.bottom > u.bottom ? l.scrollTop += f.bottom - u.bottom : f.top < u.top && (l.scrollTop -= u.top - f.top);
      }
    }
  }, [i]), p("div", { ref: r, role: "menu", ...n, children: a });
}
const df = {
  Root: AO,
  Options: DO,
  Option: jx
}, MO = (t, e, n) => Ic(t, n).toLowerCase().includes(e.toLowerCase()), Fb = (t) => Object.keys(t).find((e) => typeof t[e] == "string") || "", Ic = (t, e) => {
  const n = t[e];
  return typeof n == "string" ? n : String(n);
};
function OO(t) {
  const { query: e, items: n, filterBy: r, filter: i, sortBy: o, sortingOptions: s } = t, { caseSensitive: a = !1, priorityOrder: l = ["exact", "startsWith", "contains"] } = s || {}, c = a ? e : e.toLowerCase();
  let u, f;
  i ? (f = i, u = n.length > 0 ? Fb(n[0]) : "") : (u = r || (n.length > 0 ? Fb(n[0]) : ""), f = (g, m) => MO(g, m, u));
  const d = o || u, h = /* @__PURE__ */ new Map();
  return n.filter((g) => {
    try {
      return f(g, e);
    } catch (m) {
      return console.warn("Error filtering item:", g, m), !1;
    }
  }).sort((g, m) => {
    const b = (C) => (h.has(C) || h.set(C, Ic(C, d).toLowerCase()), h.get(C) ?? ""), _ = a ? Ic(g, d) : b(g), y = a ? Ic(m, d) : b(m);
    for (const C of l)
      switch (C) {
        case "exact":
          if (_ === c && y !== c)
            return -1;
          if (y === c && _ !== c)
            return 1;
          break;
        case "startsWith":
          if (_.startsWith(c) && !y.startsWith(c))
            return -1;
          if (y.startsWith(c) && !_.startsWith(c))
            return 1;
          break;
        case "contains": {
          const D = _.indexOf(c), R = y.indexOf(c);
          if (D !== -1 && R === -1)
            return -1;
          if (R !== -1 && D === -1)
            return 1;
          if (D !== -1 && R !== -1)
            return D - R;
          break;
        }
      }
    return _.localeCompare(y);
  });
}
function IO(t) {
  const { query: e, items: n, filterBy: r, filter: i, sortBy: o, sortingOptions: s } = t;
  return Ne(() => OO({
    query: e,
    items: n,
    filterBy: r,
    filter: i,
    sortBy: o,
    sortingOptions: s
  }), [e, n, r, i, o, s]);
}
function RO() {
  const { moveUp: t, moveDown: e, select: n } = kg();
  return Ne(() => ({
    moveUp: t,
    moveDown: e,
    select: n
  }), [t, e, n]);
}
const PO = () => {
  const t = RO(), [e] = Le();
  ue(() => {
    const n = (r) => {
      const i = {
        ArrowDown: () => t == null ? void 0 : t.moveDown(),
        ArrowUp: () => t == null ? void 0 : t.moveUp(),
        Enter: () => t == null ? void 0 : t.select(),
        Tab: () => t == null ? void 0 : t.select()
      }[r.key];
      return i ? (i(), r.preventDefault(), r.stopPropagation(), !0) : !1;
    };
    return e.registerCommand(sa, n, ju);
  }, [e, t]);
};
function LO() {
  return PO(), null;
}
function $O(t) {
  const { options: e, onSelectOption: n, onClose: r, inverse: i, query: o, menuOpenKey: s } = t, [a] = Le(), l = o !== void 0, [c, u] = fe(""), f = l ? o ?? "" : c, d = IO({ query: f, items: e, filterBy: "name" }), h = (g) => {
    r == null || r(), n ? n(g) : g.action(a);
  };
  return ue(() => a.registerCommand(sa, (g) => {
    if (l)
      return !1;
    const m = {
      Escape: () => r == null ? void 0 : r(),
      Backspace: () => {
        f.length === 0 ? r == null || r() : u((b) => b.slice(0, -1));
      }
    }[g.key];
    return m ? (g.stopPropagation(), g.preventDefault(), m(), !0) : g.key.length === 1 ? (g.stopPropagation(), g.preventDefault(), g.key !== s && u((b) => b + g.key), !0) : !1;
  }, ju), [a, l, f, s, r]), j(df.Root, { className: `autocomplete-menu-container ${i ? "inverse" : ""}`, menuItems: d, onSelectOption: (g) => h(g), children: [!l && p("input", { value: f, type: "text", disabled: !0 }), p(LO, {}), p(df.Options, { className: "autocomplete-menu-options", autoIndex: !1, children: (g) => g.map((m, b) => j(df.Option, { index: b, children: [p("span", { className: "label", children: m.label ?? m.name }), p("span", { className: "description", children: m.description })] }, m.name)) })] });
}
function FO({ trigger: t, items: e }) {
  const [n] = Le(), [r, i] = fe(!1), o = be((s) => {
    s.key === "Escape" && r ? (i(!1), n.focus()) : s.key === t && !r && (s.preventDefault(), i(!0));
  }, [n, t, r]);
  return ue(() => n.registerRootListener((s) => {
    if (s)
      return s.addEventListener("keydown", o), () => {
        s.removeEventListener("keydown", o);
      };
  }), [n, o]), ue(() => n.registerUpdateListener(({ prevEditorState: s, editorState: a }) => {
    const l = s.read(() => {
      const c = oe();
      if (Z(c))
        return c;
    });
    a.read(() => {
      const c = oe();
      !Z(c) || l != null && l.is(c) || i(!1);
    });
  }), [n]), e && p(SO, { isOpen: r, children: ({ placement: s }) => p($O, { options: e, onClose: () => i(!1), inverse: s === "top-start", menuOpenKey: t }) });
}
function BO({ scriptureReference: t, contextMarker: e, getMarkerAction: n }) {
  return { markersMenuItems: Ne(() => {
    if (!e || !t)
      return;
    const r = Tb(e);
    if (r != null && r.children)
      return Object.values(r.children).flatMap((i) => i.map((o) => {
        const s = Tb(o), { action: a } = n(o, s);
        return {
          name: o,
          label: o,
          description: (s == null ? void 0 : s.description) ?? "",
          action: (l) => {
            a({ editor: l, reference: t });
          }
        };
      }));
  }, [e, n, t]) };
}
function Rc(t, e) {
  return `${t}:${e}`;
}
function qO(t, e) {
  ue(() => {
    if (!t.hasNodes([nn]))
      throw new Error("AnnotationPlugin: TypedMarkNode not registered on editor!");
    const n = /* @__PURE__ */ new Map();
    return Ht(dv(t, nn, (r) => ml(r.getTypedIDs()), (r, i) => {
      for (const [o, s] of Object.entries(r.getTypedIDs()))
        s.forEach((a) => {
          i.addID(o, a);
        });
    }), t.registerMutationListener(nn, (r) => {
      t.getEditorState().read(() => {
        for (const [i, o] of r) {
          const s = Me(i);
          let a = {};
          o === "destroyed" ? a = n.get(i) ?? {} : on(s) && (a = s.getTypedIDs());
          for (const [l, c] of Object.entries(a))
            if (!nn.isReservedType(l))
              for (const u of c) {
                let f = e.get(Rc(l, u));
                a[l] = c, n.set(i, a), o === "destroyed" ? f !== void 0 && (f.delete(i), f.size === 0 && e.delete(Rc(l, u))) : (f === void 0 && (f = /* @__PURE__ */ new Set(), e.set(Rc(l, u), f)), f.has(i) || f.add(i));
              }
        }
      });
    }, { skipInitialization: !0 }));
  }, [t, e]);
}
const jO = Yn(function({ logger: t }, e) {
  const [n] = Le(), r = Ne(() => /* @__PURE__ */ new Map(), []);
  return qO(n, r), Fh(e, () => ({
    addAnnotation(i, o, s) {
      if (nn.isReservedType(o))
        throw new Error(`addAnnotation: Can't directly add this reserved annotation type '${o}'. Use the appropriate plugin instead.`);
      n.update(() => {
        const a = bg(i);
        if (a === void 0) {
          t == null || t.error("Failed to find start or end node of the annotation.");
          return;
        }
        Nx(a, o, s);
      }, { tag: xh });
    },
    removeAnnotation(i, o) {
      if (nn.isReservedType(i))
        throw new Error(`removeAnnotation: Can't directly remove this reserved annotation type '${i}'. Use the appropriate plugin instead.`);
      const s = r.get(Rc(i, o));
      s !== void 0 && setTimeout(() => {
        n.update(() => {
          for (const a of s) {
            const l = Me(a);
            on(l) && (l.deleteID(i, o), l.hasNoIDsForEveryType() && Ex(l));
          }
        }, { tag: xh });
      });
    }
  })), null;
});
function UO({ ignoreHistoryMergeTagChange: t = !0, ignoreSelectionChange: e = !1, onChange: n }) {
  const [r] = Le();
  return Cn(() => {
    if (n)
      return r.registerUpdateListener((i) => {
        const { editorState: o, dirtyElements: s, dirtyLeaves: a, prevEditorState: l, tags: c } = i;
        if (e && s.size === 0 && a.size === 0 || t && c.has(Co) || l.isEmpty())
          return;
        const u = zO(r, i);
        u.length !== 0 && n(o, r, c, u);
      });
  }, [r, t, e, n]), null;
}
function zO(t, { dirtyLeaves: e, prevEditorState: n }) {
  let r = new qa();
  return t.getEditorState().read(() => {
    const i = e.values().next().value ?? "";
    if (e.size === 1 && ie(Me(i))) {
      const o = Me(i), s = $x(o);
      if (ie(o) && s !== void 0) {
        const a = n.read(() => {
          const u = Me(i);
          return new qa([ie(u) ? Nh(u) : { insert: "" }]);
        }), l = new qa([Nh(o)]), c = new qa(s > 0 ? [{ retain: s }] : []);
        r = r.concat(c).concat(a.diff(l));
      }
    } else {
      const o = Lb(n), s = Lb(t.getEditorState());
      r = o.diff(s);
    }
  }), r.ops;
}
function VO(t, e, n, r) {
  let i = 0;
  t.forEach((o) => {
    if ("retain" in o)
      i += HO(o, i, e, r);
    else if ("delete" in o) {
      if (typeof o.delete != "number" || o.delete <= 0) {
        r == null || r.error(`Invalid delete operation: ${JSON.stringify(o)}`);
        return;
      }
      r == null || r.debug(`Delete: ${o.delete}`), KO(i, o.delete, r);
    } else "insert" in o ? typeof o.insert == "string" ? (r == null || r.debug(`Insert: '${o.insert}'`), i += GO(i, o.insert, o.attributes, e, r)) : typeof o.insert == "object" && o.insert !== null ? (r == null || r.debug(`Insert embed: ${JSON.stringify(o.insert)}`), XO(i, o, e, n, r) ? i += 1 : r == null || r.error(`Failed to process insert embed operation: ${JSON.stringify(o.insert)} at index ${i}. Document may be inconsistent.`)) : r == null || r.error(`Insert of unknown type: ${JSON.stringify(o.insert)}`) : r == null || r.error(`Unknown operation: ${JSON.stringify(o)}`);
  });
}
function HO(t, e, n, r) {
  return typeof t.retain != "number" || t.retain < 0 ? (r == null || r.error(`Invalid retain operation: ${JSON.stringify(t)}`), 0) : (r == null || r.debug(`Retain: ${t.retain}`), t.attributes && (r == null || r.debug(`Retain attributes: ${JSON.stringify(t.attributes)}`), WO(e, t.retain, t.attributes, n, r)), t.retain);
}
function WO(t, e, n, r, i) {
  i == null || i.debug(`Applying attributes for range [${t}, ${t + e - 1}] with attributes: ${JSON.stringify(n)}`);
  let o = e, s = 0, a = -1;
  const l = Ve();
  function c(u) {
    if (o <= 0)
      return !0;
    if (ie(u)) {
      const f = u.getTextContentSize();
      if (t < s + f && s < t + e) {
        const d = Math.max(0, t - s), h = f - d, g = Math.min(o, h);
        if (g > 0) {
          let m = u;
          const b = d > 0, _ = g < f - d;
          if (b && _) {
            const [, y] = u.splitText(d);
            [m] = y.splitText(g);
          } else b ? [, m] = u.splitText(d) : _ && ([m] = u.splitText(g));
          if (Ko(n)) {
            const y = m.getParent();
            if (at(y)) {
              const C = n.char;
              let D;
              Array.isArray(C) ? a >= 0 && a <= C.length - 1 && (D = C[a]) : a === 0 && (D = C);
              const R = D ? Wo(D, y) : !1;
              if (R && Array.isArray(C) && C.length > 1) {
                const N = Ie("");
                m.replace(N);
                const L = typeof n.segment == "string" ? n.segment : void 0, O = zl(C.slice(1), r, m, L);
                let M = N;
                for (const q of O)
                  M.insertAfter(q), M = q;
                N.remove(), tr(n, m);
              } else if (R)
                tr(n, m);
              else {
                m.remove();
                const N = Bb(m, n, r, i);
                if (N && N.length > 0) {
                  let L = y;
                  for (const O of N)
                    L.insertAfter(O), L = O;
                }
              }
            } else {
              const C = Ie("");
              m.replace(C);
              const D = Bb(m, n, r, i);
              if (D && D.length > 0) {
                let R = C;
                for (const N of D)
                  R.insertAfter(N), R = N;
                C.remove();
              } else
                C.replace(m);
            }
          } else
            tr(n, m);
          o -= g;
        }
      }
      s += f;
    } else if (Er(u))
      t <= s && s < t + e && o > 0 && (qb(u, n), o -= 1), s += 1;
    else if (at(u)) {
      a += 1;
      let f = !1;
      if (t <= s && s < t + e && o > 0)
        if (Ko(n)) {
          const d = n.char;
          let h;
          if (Array.isArray(d) ? a >= 0 && a <= d.length - 1 && (h = d[a]) : a === 0 && (h = d), h) {
            u.setMarker(h.style), typeof h.cid == "string" && pi(u, Uo, () => h.cid);
            const g = Gt(h, yu);
            g && Object.keys(g).length > 0 ? u.setUnknownAttributes({
              ...u.getUnknownAttributes() ?? {},
              ...g
            }) : u.setUnknownAttributes(void 0);
          }
        } else (n.char === !1 || n.char === null || i5(n.char)) && (f = !0);
      if (o > 0) {
        const d = u.getChildren();
        for (const h of d) {
          if (o <= 0)
            break;
          if (c(h) && o <= 0)
            return f && Zm(u), !0;
        }
      }
      f && Zm(u), a -= 1;
    } else if (ar(u)) {
      const f = u.getChildren();
      for (const h of f) {
        if (o <= 0)
          break;
        if (c(h) && o <= 0)
          return !0;
      }
      const d = 1;
      if (t <= s && s < t + o && o > 0) {
        if (!_i(u))
          qb(u, n);
        else if (Eg(n)) {
          const h = zx(n.para);
          h && u.replace(h, !0);
        }
        o -= d;
      }
      s += d;
    } else if (X(u)) {
      const f = u.getChildren();
      for (const d of f) {
        if (o <= 0)
          break;
        if (c(d) && o <= 0)
          return !0;
      }
    }
    return o <= 0;
  }
  c(l), o > 0 && (i == null || i.warn(`$applyAttributes: Not all characters in the retain operation (length ${e}) could be processed. Remaining: ${o}. targetIndex: ${t}, final currentIndex: ${s}`));
}
function Bb(t, e, n, r) {
  var i;
  const o = typeof e.segment == "string" ? e.segment : void 0, s = zl(e.char, n, t, o), a = s.find(at);
  if (!a) {
    r == null || r.error(`Failed to create CharNode for text transformation. Style: ${Array.isArray(e.char) ? e.char[0].style : (i = e.char) == null ? void 0 : i.style}. Falling back to standard text attributes.`), tr(e, t);
    return;
  }
  const l = {};
  Vx.forEach((f) => {
    t.hasFormat(f) && (l[f] = "true");
  });
  const c = {};
  Object.entries(e).forEach(([f, d]) => {
    f === "segment" || f === "char" || (typeof d == "string" ? c[f] = d : d === !0 ? c[f] = "true" : d === !1 && (c[f] = "false"));
  });
  const u = {
    ...a.getUnknownAttributes() ?? {},
    ...l,
    ...c
  };
  return Object.keys(u).length > 0 && a.setUnknownAttributes(u), tr(e, t), s;
}
function qb(t, e) {
  for (const n of Object.keys(e)) {
    const r = e[n];
    if (n === "char" && at(t) && Ko(e)) {
      const i = r;
      if (t.setMarker(i.style), typeof i.cid == "string") {
        const s = i.cid;
        pi(t, Uo, () => s);
      }
      const o = Gt(i, yu);
      o && Object.keys(o).length > 0 && t.setUnknownAttributes({
        ...t.getUnknownAttributes() ?? {},
        ...o
      });
      continue;
    }
    typeof r == "string" && (rr(t) || ir(t) || sd(t) || je(t) || Bl(t) ? t.setUnknownAttributes({
      ...t.getUnknownAttributes() ?? {},
      [n]: r
    }) : (Jr(t) || fn(t) || at(t)) && (n === "style" && !Jr(t) ? t.setMarker(r) : n === "code" && Jr(t) ? t.setCode(r) : t.setUnknownAttributes({
      ...t.getUnknownAttributes() ?? {},
      [n]: r
    })), n === "segment" && pi(t, zo, () => r));
  }
}
function KO(t, e, n) {
  if (e <= 0)
    return;
  const r = Ve();
  let i = 0, o = e;
  function s(a) {
    if (o <= 0)
      return !0;
    if (ie(a)) {
      let l = a.getTextContentSize();
      if (t < i + l && i < t + o) {
        const c = Math.max(0, t - i), u = l - c, f = Math.min(o, u);
        f > 0 && (a.spliceText(c, f, ""), a.getTextContentSize() === 0 && a.remove(), n == null || n.debug(`Deleted ${f} length from TextNode (key: ${a.getKey()}) at nodeOffset ${c}. Original targetIndex: ${t}, current currentIndex: ${i}.`), o -= f, l -= f);
      }
      i += l;
    } else if (Er(a))
      t <= i && i < t + o ? (a.remove(), n == null || n.debug(`Deleted embed node (key: ${a.getKey()}) at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`), o -= 1) : i += 1;
    else if (ar(a)) {
      const l = a.getChildren().slice(), c = a.getChildren();
      for (const u of c) {
        if (o <= 0)
          break;
        if (s(u) && o <= 0)
          return !0;
      }
      if (t <= i && i < t + o && ar(a)) {
        o -= 1;
        const u = a.getChildren().length;
        if (l.length > 0 && u === 0) {
          const f = a.getParent();
          ((f == null ? void 0 : f.getChildren()) ?? []).length > 1 ? (a.remove(), n == null || n.debug(`Removed entire ParaNode that had all its content deleted at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`)) : (a.replace(br(), !0), n == null || n.debug(`Replaced last ParaNode with ImpliedParaNode at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`));
        } else if (o > 0) {
          const f = a.getNextSibling();
          if (f && gr(f)) {
            let d = i + 1;
            const h = f.getChildren();
            for (const m of h) {
              if (o <= 0)
                break;
              const b = i;
              if (i = d, s(m)) {
                i = b;
                break;
              }
              ie(m) ? d += m.getTextContentSize() : Er(m) && (d += 1), i = b;
            }
            const g = f.getChildren();
            for (const m of g)
              m.remove(), a.append(m);
            f.remove(), n == null || n.debug(`Merged next paragraph into current one after deleting symbolic close at currentIndex: ${i}. Original targetIndex: ${t}, remainingToDelete: ${o}.`);
          } else
            a.replace(br(), !0);
        } else fn(a) ? a.replace(br(), !0) : a.remove();
      }
      i += 1;
    } else if (X(a)) {
      const l = a.getChildren();
      for (const c of l) {
        if (o <= 0)
          break;
        if (s(c) && o <= 0)
          return !0;
      }
    }
    return o <= 0;
  }
  s(r), o > 0 && (n == null || n.warn(`Delete operation could not remove all requested characters. Remaining to delete: ${o}. Original targetIndex: ${t}, OT length: ${e}. Final currentIndex: ${i}`));
}
function GO(t, e, n, r, i) {
  if (e === wl)
    return jb(t, n, i);
  if (e.endsWith(wl) && !Eg(n)) {
    const o = e.slice(0, -1);
    let s = 0;
    if (o.length > 0) {
      if (Ko(n))
        throw new Error("Text + LF should not have char attributes");
      s += vu(t, o, n, i);
    }
    return s += jb(t + s, n, i), s;
  } else return Ko(n) ? JO(t, e, n, r, i) : vu(t, e, n, i);
}
function JO(t, e, n, r, i) {
  i == null || i.debug(`Attempting to insert CharNode with text "${e}" and attributes ${JSON.stringify(n.char)} at index ${t}`);
  const o = Ie(e);
  tr(n, o);
  let s;
  {
    let h = function(b) {
      if (ie(b)) {
        const _ = b.getTextContentSize();
        if (t >= m && t < m + _) {
          const y = b.getParent();
          return at(y) && (s = y), !0;
        }
        m += _;
      } else if (Er(b))
        m += 1;
      else if (at(b)) {
        const _ = b.getChildren();
        for (const y of _)
          if (h(y))
            return !0;
      } else if (X(b)) {
        const _ = b.getChildren();
        for (const y of _)
          if (h(y))
            return !0;
        ar(b) && (m += 1);
      }
      return !1;
    };
    const g = Ve();
    let m = 0;
    h(g);
  }
  let a = n.char;
  if (Array.isArray(a)) {
    if (s) {
      const h = a[0];
      h && Wo(h, s) ? (a = a.slice(1), a.length === 1 && (a = a[0])) : s = void 0;
    }
  } else s && (Wo(a, s) || (s = void 0));
  const l = typeof n.segment == "string" ? n.segment : void 0, c = zl(a, r, o, l, s ? [s] : void 0);
  if (c.length === 0)
    return e.length;
  const u = c.find(at);
  if (!u)
    return i == null || i.error(`CharNode style is missing for text "${e}". Attributes: ${JSON.stringify(n.char)}. Falling back to rich text insertion.`), vu(t, e, void 0, i);
  const f = {};
  for (const [h, g] of Object.entries(n))
    h !== "char" && h !== "segment" && typeof g == "string" && (f[h] = g);
  Object.keys(f).length > 0 && u.setUnknownAttributes(f);
  let d = !0;
  for (const h of c)
    if (!Ux(t, h, i)) {
      d = !1;
      break;
    }
  return d ? e.length : (i == null || i.error(`Failed to insert CharNode with text "${e}" at index ${t}. Falling back to rich text.`), vu(t, e, void 0, i));
}
function vu(t, e, n, r) {
  if (e.length <= 0)
    return r == null || r.debug("Attempted to insert empty string. No action taken."), 0;
  const i = Ve();
  let o = 0, s = !1;
  function a(l) {
    if (s)
      return !0;
    if (ie(l)) {
      const c = l.getTextContentSize();
      if (t >= o && t <= o + c) {
        const u = t - o, f = Ie(e);
        if (tr(n, f), u === 0)
          l.insertBefore(f);
        else if (u === c) {
          const d = l.getParent();
          at(d) && !Ko(n) ? d.insertAfter(f) : l.insertAfter(f);
        } else {
          const [, d] = l.splitText(u);
          d.insertBefore(f);
        }
        return r == null || r.debug(`Inserted text "${e}" in/around TextNode (key: ${l.getKey()}) at nodeOffset ${u}. Original targetIndex: ${t}, currentIndex at node start: ${o}.`), s = !0, !0;
      }
      o += c;
    } else if (Er(l))
      o += 1;
    else if (at(l)) {
      if (!s && t === o) {
        const u = Ie(e);
        tr(n, u);
        const f = l.getFirstChild();
        return f ? f.insertBefore(u) : l.append(u), r == null || r.debug(`Inserted text "${e}" at beginning of CharNode ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
      const c = l.getChildren();
      for (const u of c) {
        if (a(u))
          return !0;
        if (s)
          break;
      }
      if (!s && t === o) {
        const u = Ie(e);
        return tr(n, u), l.append(u), r == null || r.debug(`Appended text "${e}" to end of CharNode ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
    } else if (ar(l)) {
      if (!s && t === o) {
        const u = Ie(e);
        tr(n, u);
        const f = l.getFirstChild();
        return f ? f.insertBefore(u) : l.append(u), r == null || r.debug(`Inserted text "${e}" at beginning of container ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
      const c = l.getChildren();
      for (const u of c) {
        if (a(u))
          return !0;
        if (s)
          break;
      }
      if (!s && t === o) {
        const u = Ie(e);
        return tr(n, u), l.append(u), r == null || r.debug(`Appended text "${e}" to end of container ${l.getType()} (key: ${l.getKey()}).`), s = !0, !0;
      }
      o += 1;
    } else if (X(l)) {
      const c = l.getChildren();
      for (const u of c) {
        if (a(u))
          return !0;
        if (s)
          break;
      }
    }
    return s;
  }
  if (a(i), !s && t === o) {
    r == null || r.debug(`Insertion point matches end of document (targetIndex: ${t}, final currentIndex: ${o}). Appending text to new ParaNode.`);
    const l = Ie(e);
    tr(n, l);
    const c = br().append(l);
    i.append(c), s = !0;
  }
  return s ? e.length : (r == null || r.warn(`$insertRichText: Could not find insertion point for text "${e}" at targetIndex ${t}. Final currentIndex: ${o}. Text not inserted.`), 0);
}
function Ux(t, e, n) {
  const r = Ve();
  let i = 0, o = !1;
  function s(a) {
    if (o)
      return !0;
    if (a === r && t === 0 && !r.getFirstChild())
      return e.isInline() ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting inline node ${e.getType()} into empty root, wrapped in ImpliedParaNode. targetIndex: ${t}`), r.append(br().append(e))) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting block node ${e.getType()} directly into empty root. targetIndex: ${t}`), r.append(e)), o = !0, !0;
    if (!X(a))
      return !1;
    const l = a.getChildren();
    for (const c of l) {
      if (t === i && !o) {
        if (a === r && e.isInline())
          if (gr(c)) {
            n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting inline node ${e.getType()} into existing ${c.getType()} at beginning. targetIndex: ${t}`);
            const u = c.getFirstChild();
            u ? u.insertBefore(e) : c.append(e);
          } else
            n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting inline node ${e.getType()} into root before ${c.getType()}, wrapping in ImpliedParaNode. targetIndex: ${t}`), c.insertBefore(br().append(e));
        else
          c.insertBefore(e), n == null || n.debug(`$insertNodeAtCharacterOffset: Inserted node ${e.getType()} (key: ${e.getKey()}) before child ${c.getType()} (key: ${c.getKey()}) in ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, currentIndex: ${i}`);
        return o = !0, !0;
      }
      if (ie(c)) {
        const u = c.getTextContentSize();
        if (!o && t > i && t < i + u) {
          const f = t - i, [d] = c.splitText(f);
          return d.insertAfter(e), n == null || n.debug(`$insertNodeAtCharacterOffset: Inserted node ${e.getType()} (key: ${e.getKey()}) by splitting TextNode (key: ${c.getKey()}) at offset ${f}. targetIndex: ${t}, currentIndex at node start: ${i}`), o = !0, !0;
        }
        i += u;
      } else if (Er(c))
        i += 1;
      else if (at(c)) {
        if (s(c))
          return !0;
      } else if (ar(c)) {
        const u = c;
        if (s(u))
          return !0;
        const f = i;
        if (_i(u) && ar(e) && // Target is at the ImpliedPara's implicit newline
        t === f && !o)
          return n == null || n.debug(`$insertNodeAtCharacterOffset: Replacing ImpliedParaNode (key: ${u.getKey()}) with block node '${e.getType()}' (key: ${e.getKey()}) at OT index ${t}.`), c.replace(e, !0), i = f + 1, o = !0, !0;
        i += 1;
      } else if (X(c) && s(c))
        return !0;
      if (o)
        return !0;
    }
    return X(a) && !o && (t === i || a === r && t > i) ? a === r ? (e.isInline() ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending inline node ${e.getType()} to root. Wrapping in new ImpliedParaNode. targetIndex: ${t}, current document OT length: ${i}.`), r.append(br().append(e))) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending block node ${e.getType()} to root. targetIndex: ${t}, current document OT length: ${i}.`), r.append(e)), o = !0, !0) : (
      // Appending to an existing container (ParaNode, ImpliedParaNode)
      // currentNode here is the container itself. currentIndex is at the point of currentNode's
      // closing marker. targetIndex === currentIndex means we are inserting at the conceptual end
      // of this container.
      gr(a) ? _i(a) && fn(e) && t === i ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Replacing ImpliedParaNode container (key: ${a.getKey()}) with ParaNode ${e.getType()} (key: ${e.getKey()}) via append logic. targetIndex: ${t}`), a.replace(e, !0), o = !0, !0) : e.isInline() || !gr(e) ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending node ${e.getType()} to existing container ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, container end OT index: ${i}.`), a.append(e), o = !0, !0) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting block node ${e.getType()} after container ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, container end OT index: ${i}.`), a.insertAfter(e), o = !0, !0) : (at(a) ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting node ${e.getType()} after CharNode (key: ${a.getKey()}). targetIndex: ${t}, element end OT index: ${i}.`), a.insertAfter(e)) : e.isInline() || !gr(e) ? (n == null || n.debug(`$insertNodeAtCharacterOffset: Appending node ${e.getType()} to generic element ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, element end OT index: ${i}.`), a.append(e)) : (n == null || n.debug(`$insertNodeAtCharacterOffset: Inserting block node ${e.getType()} after generic element ${a.getType()} (key: ${a.getKey()}). targetIndex: ${t}, element end OT index: ${i}.`), a.insertAfter(e)), o = !0, !0)
    ) : o;
  }
  return s(r), o || n == null || n.warn(`$insertNodeAtCharacterOffset: Could not find insertion point for node ${e.getType()} (key: ${e.getKey()}) at targetIndex ${t}. Final currentIndex: ${i}. Node not inserted.`), o;
}
function XO(t, e, n, r, i) {
  let o;
  return Ma("chapter", e) ? o = YO(e.insert.chapter, n) : Ma("verse", e) ? o = QO(e.insert.verse, n) : Ma("ms", e) ? o = ZO(e.insert.ms) : Ma("unmatched", e) ? o = e5(e.insert.unmatched) : Ma("note", e) && (o = t5(e, n, r, i)), o ? Ux(t, o, i) : (i == null || i.error(`$insertEmbedAtCurrentIndex: Cannot create LexicalNode for embed object: ${JSON.stringify(e.insert)}`), !1);
}
function jb(t, e, n) {
  let r;
  Eg(e) ? r = zx(e.para) : r5(e) && (r = n5(e.book)), r ?? (r = br());
  const i = r, o = fn(i), s = _i(i);
  let a = 0, l = !1;
  function c(u) {
    if (l)
      return !0;
    if (ie(u)) {
      const f = u.getTextContentSize();
      if (t >= a && t <= a + f) {
        const d = u.getParent();
        if (fn(d) && (o || s)) {
          n == null || n.debug(`Splitting ParaNode (marker: ${d.getMarker()}) with LF attributes at targetIndex ${t}`);
          const h = t - a, [g] = h > 0 ? u.splitText(h) : [void 0];
          let m = g == null ? void 0 : g.getPreviousSibling();
          for (; m; ) {
            const b = m;
            m = m.getPreviousSibling();
            const _ = i.getFirstChild();
            _ ? _.insertBefore(b) : i.append(b);
          }
          return g && i.append(g), d.insertBefore(i), l = !0, !0;
        }
      }
      a += f;
    } else if (Er(u))
      a += 1;
    else if (ar(u)) {
      const f = u.getChildren();
      for (const d of f) {
        if (c(d))
          return !0;
        if (l)
          break;
      }
      if (t === a) {
        if (_i(u) && i)
          return n == null || n.debug(`Replacing ImpliedParaNode (key: ${u.getKey()}) with ParaNode at targetIndex ${t}`), u.replace(i, !0), l = !0, !0;
        if (fn(u) && i) {
          const d = u;
          return n == null || n.debug(`Creating new block node with LF attributes after existing ParaNode (marker: ${d.getMarker()}) at targetIndex ${t}`), d.insertAfter(i), l = !0, !0;
        }
      }
      if (a += 1, t === a && fn(u) && i)
        return n == null || n.debug(`Creating new block node after existing ParaNode (marker: ${u.getMarker()}) at targetIndex ${t}`), u.insertAfter(i), l = !0, !0;
    } else if (X(u)) {
      const f = u.getChildren();
      for (const d of f) {
        if (c(d))
          return !0;
        if (l)
          break;
      }
    }
    return l;
  }
  return c(Ve()), l || n == null || n.warn(`Could not find location to handle newline with para attributes at targetIndex ${t}. Final currentIndex: ${a}.`), 1;
}
function YO(t, e) {
  if (!t)
    return;
  const { number: n, sid: r, altnumber: i, pubnumber: o } = t;
  if (!n)
    return;
  const s = Gt(t, GM);
  let a;
  if (e.markerMode === "editable")
    a = sx(n, r, i, o, s);
  else {
    const l = e.markerMode === "visible";
    a = ag(n, l, r, i, o, s);
  }
  return a;
}
function QO(t, e) {
  if (!t)
    return;
  const { style: n, number: r, sid: i, altnumber: o, pubnumber: s } = t;
  if (!r)
    return;
  const a = Gt(t, JM);
  let l;
  if (e.markerMode === "editable") {
    if (!n)
      return;
    const c = jl(n, r);
    l = vx(r, c, i, o, s, a);
  } else {
    const c = e.markerMode === "visible";
    l = yg(r, c, i, o, s, a);
  }
  return l;
}
function ZO(t) {
  if (!t)
    return;
  const { style: e, sid: n, eid: r } = t;
  if (!e)
    return;
  const i = Gt(t, XM);
  return gx(e, n, r, i);
}
function e5(t) {
  if (!t)
    return;
  const { marker: e } = t;
  if (e)
    return wg(e);
}
function t5(t, e, n, r) {
  var i;
  const o = t.insert;
  if (!o.note)
    return;
  const { style: s, caller: a, category: l, contents: c } = o.note;
  if (!s || a == null)
    return;
  a === "" && (r == null || r.warn("Note has empty caller. Only use for note editing."));
  const u = Gt(o.note, YM), f = (i = t.attributes) == null ? void 0 : i.segment;
  let d;
  f && typeof f == "string" && (d = f);
  const h = [];
  for (const g of (c == null ? void 0 : c.ops) ?? [])
    if (typeof g.insert == "string")
      if (Ko(g.attributes)) {
        const m = zl(g.attributes.char, e, Ie(g.insert), void 0, h);
        h.push(...m);
      } else
        h.push(Ie(g.insert));
  return Rx(s, a, h, e, n, d).setCategory(l).setUnknownAttributes(u);
}
function n5(t) {
  const { style: e, code: n } = t;
  if (!e || e !== od || !n || !sr.isValidBookCode(n))
    return;
  const r = Gt(t, KM);
  return rx(n, r);
}
function zx(t) {
  const { style: e } = t;
  if (!e)
    return;
  const n = Gt(t, WM);
  return gl(e, n);
}
function zl(t, e, n, r, i) {
  if (Array.isArray(t)) {
    if (t.length === 0)
      throw new Error("Empty charAttr array");
    const o = t[0], s = i == null ? void 0 : i[i.length - 1];
    if (at(s) && Wo(o, s))
      return t.length > 1 ? zl(t.slice(1), e, n).forEach((u) => s.append(u)) : n && s.append(n), [];
    const a = t.reduceRight((u, f, d) => {
      const h = Ur(f.style, Gt(f, yu));
      if (typeof f.cid == "string" && pi(h, Uo, () => f.cid), r && d === t.length - 1 && pi(h, zo, () => r), u)
        if (at(u)) {
          const g = u.getMarker(), m = [];
          ff(g, m, e), m.forEach((_) => h.append(_)), h.append(u);
          const b = [];
          hf(g, b, e), b.forEach((_) => h.append(_));
        } else
          h.append(u);
      return h;
    }, n), l = [], c = t[0];
    return ff(c.style, l, e), l.push(a), hf(c.style, l, e), l;
  } else {
    const o = i == null ? void 0 : i[i.length - 1];
    if (at(o) && Wo(t, o))
      return n && o.append(n), [];
    const s = [];
    ff(t.style, s, e);
    const a = Ur(t.style, Gt(t, yu));
    return typeof t.cid == "string" && pi(a, Uo, () => t.cid), r && pi(a, zo, () => r), n && a.append(n), s.push(a), hf(t.style, s, e), s;
  }
}
function ff(t, e, n) {
  (n == null ? void 0 : n.markerMode) === "editable" ? e.push(Js(t)) : (n == null ? void 0 : n.markerMode) === "visible" && e.push(Xs("marker", Si(t)));
}
function hf(t, e, n, r = !1) {
  yt.isValidFootnoteMarker(t) || yt.isValidCrossReferenceMarker(t) || ((n == null ? void 0 : n.markerMode) === "editable" ? r ? e.push(Js("", "selfClosing")) : e.push(Js(t, "closing")) : (n == null ? void 0 : n.markerMode) === "visible" && e.push(Xs("marker", Gs(r ? "" : t))));
}
function r5(t) {
  return !!t && !!t.book && typeof t.book == "object" && t.book !== null && "style" in t.book && typeof t.book.style == "string" && "code" in t.book && typeof t.book.code == "string";
}
function Eg(t) {
  return !!t && !!t.para && typeof t.para == "object" && t.para !== null && "style" in t.para && typeof t.para.style == "string";
}
function Ko(t) {
  return !!t && !!t.char && typeof t.char == "object" && t.char !== null && (!Array.isArray(t.char) && "style" in t.char && typeof t.char.style == "string" || Array.isArray(t.char) && t.char.length > 0 && "style" in t.char[0] && typeof t.char[0].style == "string");
}
function i5(t) {
  return typeof t == "object" && t !== null && !Array.isArray(t) && Object.keys(t).length === 0;
}
function tr(t, e) {
  if (t)
    for (const n of Object.keys(t)) {
      if (n === "segment" && typeof t[n] == "string") {
        const r = t[n];
        pi(e, zo, () => r);
        continue;
      }
      if (o5(n)) {
        const r = !!t[n], i = n, o = e.hasFormat(i);
        (r && !o || !r && o) && e.toggleFormat(i);
      }
    }
}
const Vx = [
  "bold",
  "underline",
  "strikethrough",
  "italic",
  "highlight",
  "code",
  "subscript",
  "superscript",
  "lowercase",
  "uppercase",
  "capitalize"
];
function o5(t) {
  return Vx.includes(t);
}
function s5({ viewOptions: t }) {
  const [e] = Le();
  return a5(e, t), null;
}
function a5(t, e) {
  ue(() => {
    if (!t.hasNodes([Ni, xn, Kt]))
      throw new Error("ArrowNavigationPlugin: ImmutableChapterNode, ImmutableVerseNode or NoteNode not registered on editor!");
    const n = (r) => {
      if (r.key !== "ArrowLeft" && r.key !== "ArrowRight")
        return !1;
      const i = oe();
      if (!Z(i) || !i.isCollapsed())
        return !1;
      const o = t.getRootElement();
      if (!o)
        return !1;
      const s = o.dir || "ltr";
      let a = !1;
      return l5(s, r.key) ? a = u5(i) : c5(s, r.key) && (a = d5(i, e)), a && r.preventDefault(), a;
    };
    return t.registerCommand(sa, n, ju);
  }, [t, e]);
}
function l5(t, e) {
  return t === "ltr" && e === "ArrowRight" || t === "rtl" && e === "ArrowLeft";
}
function c5(t, e) {
  return t === "ltr" && e === "ArrowLeft" || t === "rtl" && e === "ArrowRight";
}
function u5(t) {
  var e, n, r;
  const i = t.anchor.getNode(), o = uM(t);
  if (je(o) && !Ul(o.getFirstChild())) {
    if (gr(i)) {
      if (t.anchor.offset === i.getChildrenSize())
        return !1;
    } else if (t.anchor.offset !== i.getTextContentSize())
      return !1;
    if (o.getIsCollapsed()) {
      if (o.is((e = o.getParent()) == null ? void 0 : e.getLastChild()))
        return (r = (n = o.getParent()) == null ? void 0 : n.getNextSibling()) == null || r.selectStart(), !0;
    } else return wu(o.getFirstChild()) ? o.select(2, 2) : o.select(1, 1), !0;
  }
  if (gr(i) && je(o) && o.getIsCollapsed()) {
    const a = o.getNextSibling();
    return a ? a.selectStart() : o.selectEnd(), !0;
  }
  const s = o == null ? void 0 : o.getParent();
  if (wu(o) && je(s) && o.is(s == null ? void 0 : s.getLastChild())) {
    const a = s.getNextSibling();
    return a ? a.selectStart() : s.selectEnd(), !0;
  }
  return !1;
}
function d5(t, e) {
  const n = dM(t);
  if (ql(n) && !n.getPreviousSibling())
    return !0;
  if (t.anchor.offset !== 0)
    return !1;
  const r = t.anchor.getNode();
  if (Jr(r.getParent()))
    return !0;
  if (je(n) && n.getIsCollapsed()) {
    const o = n.getPreviousSibling();
    if (!ba(o))
      return !1;
    const s = n.getParent();
    if (!s)
      return !1;
    const a = n.getIndexWithinParent();
    return s.select(a, a), !0;
  }
  if (gr(n) && (e == null ? void 0 : e.noteMode) === "collapsed") {
    const o = n.getLastChild();
    if (!o)
      return !1;
    const s = xr(o, (a) => je(a));
    if (je(s) && s.getIsCollapsed()) {
      const a = s.getParent();
      if (!a)
        return !1;
      const l = s.getIndexWithinParent();
      return a.select(l, l), !0;
    }
  }
  const i = _x(r);
  if (!i || i.getIsCollapsed())
    return !1;
  if (oo(n)) {
    const o = i.getParent();
    if (!o)
      return !1;
    const s = i.getIndexWithinParent();
    return o.select(s, s), !0;
  }
  return !1;
}
function f5() {
  const [t] = Le();
  return h5(t), null;
}
function h5(t) {
  ue(() => {
    if (!t.hasNodes([yt]))
      throw new Error("CharNodePlugin: CharNode not registered on editor!");
    return t.registerNodeTransform(yt, p5);
  }, [t]);
}
function p5(t) {
  if (!at(t))
    return;
  if (t.isEmpty()) {
    t.remove();
    return;
  }
  const e = t.getMarker(), n = Is(t, Uo), r = t.getUnknownAttributes(), i = t.getNextSibling();
  at(i) && Wo({ style: e, cid: n }, i) && ui(r, i.getUnknownAttributes()) && (t.append(...i.getChildren()), i.remove());
  const o = t.getPreviousSibling();
  at(o) && Wo({ style: e, cid: n }, o) && ui(r, o.getUnknownAttributes()) && (o.append(...t.getChildren()), t.remove());
}
function Hx(t) {
  return t.replaceAll("	", " ");
}
const Ng = (t) => {
  navigator.clipboard.read().then(async (e) => {
    if ((await navigator.permissions.query({
      // @ts-expect-error These types are incorrect.
      name: "clipboard-read"
    })).state === "denied") {
      alert("Not allowed to paste from clipboard.");
      return;
    }
    const n = new DataTransfer(), r = e[0];
    for (const o of r.types) {
      const s = await (await r.getType(o)).text();
      n.setData(o, Hx(s));
    }
    const i = new ClipboardEvent("paste", {
      clipboardData: n
    });
    t.dispatchCommand(Qo, i);
  });
}, Sg = (t) => {
  navigator.clipboard.read().then(async () => {
    if ((await navigator.permissions.query({
      // @ts-expect-error These types are incorrect.
      name: "clipboard-read"
    })).state === "denied") {
      alert("Not allowed to paste from clipboard.");
      return;
    }
    const e = new DataTransfer(), n = await navigator.clipboard.readText();
    e.setData("text/plain", Hx(n));
    const r = new ClipboardEvent("paste", {
      clipboardData: e
    });
    t.dispatchCommand(Qo, r);
  });
};
function g5() {
  const [t] = Le();
  return ue(() => {
    const e = (n) => {
      const { key: r, shiftKey: i, metaKey: o, ctrlKey: s, altKey: a } = n;
      !(eh ? o : s) || a || (!i && r.toLowerCase() === "c" ? (n.preventDefault(), t.dispatchCommand(Yi, null)) : !i && r.toLowerCase() === "x" ? (n.preventDefault(), t.dispatchCommand(Zo, null)) : r.toLowerCase() === "v" && (n.preventDefault(), i ? Sg(t) : Ng(t)));
    };
    return t.registerRootListener((n, r) => {
      r !== null && r.removeEventListener("keydown", e), n !== null && n.addEventListener("keydown", e);
    });
  }, [t]), null;
}
function m5({ logger: t }) {
  const [e] = Le();
  return ue(() => Ht(
    // When the backslash or forward slash key is typed.
    e.registerCommand(sa, (n) => n.key !== "\\" && n.key !== "/" ? !1 : (n.preventDefault(), !0), Sc),
    // When the backslash or forward slash character is pasted into the editor.
    e.registerCommand(Qo, (n) => {
      var r;
      const i = (r = n.clipboardData) == null ? void 0 : r.getData("text/plain");
      return !i || !i.includes("\\") && !i.includes("/") ? !1 : (t == null || t.info("CommandMenuPlugin: paste containing backslash or forward slash ignored."), n.preventDefault(), !0);
    }, Sc),
    // When the backslash or forward slash character is dragged into the editor.
    e.registerCommand(Fu, (n) => {
      var r;
      const i = (r = n.dataTransfer) == null ? void 0 : r.getData("text/plain");
      return !i || !i.includes("\\") && !i.includes("/") ? !1 : (t == null || t.info("CommandMenuPlugin: drag containing backslash or forward slash ignored."), n.preventDefault(), !0);
    }, Sc)
  ), [e, t]), null;
}
function w5({ index: t, isSelected: e, onClick: n, onMouseEnter: r, option: i }) {
  let o = "item";
  return e && (o += " selected"), i.isDisabled && (o += " disabled"), p("li", { tabIndex: -1, className: o, ref: i.setRefElement, role: "option", "aria-selected": e, "aria-disabled": i.isDisabled, id: "typeahead-item-" + t, onMouseEnter: r, onClick: i.isDisabled ? void 0 : n, children: p("span", { className: "text", children: i.title }) }, i.key);
}
function b5({ options: t, selectedItemIndex: e, onOptionClick: n, onOptionMouseEnter: r }) {
  return p("div", { className: "typeahead-popover", children: p("ul", { children: t.map((i, o) => p(w5, { index: o, isSelected: e === o, onClick: () => n(i, o), onMouseEnter: () => r(o), option: i }, i.key)) }) });
}
class _c extends ET {
  constructor(e, n) {
    super(e), we(this, "title"), we(this, "onSelect"), we(this, "isDisabled"), this.title = e, this.onSelect = n.onSelect.bind(this), this.isDisabled = n.isDisabled || !1;
  }
}
function y5(t, e = "editor-input") {
  return t ? t.classList.contains(e) : !1;
}
function v5() {
  const [t] = Le(), [e, n] = fe(() => !t.isEditable()), r = xe(void 0), i = xe(void 0), o = xe(void 0), s = Ne(() => [
    new _c("Cut", {
      onSelect: () => {
        t.dispatchCommand(Zo, null);
      },
      isDisabled: e
    }),
    new _c("Copy", {
      onSelect: () => {
        t.dispatchCommand(Yi, null);
      }
    }),
    new _c("Paste", {
      onSelect: () => {
        Ng(t);
      },
      isDisabled: e
    }),
    new _c("Paste as Plain Text", {
      onSelect: () => {
        Sg(t);
      },
      isDisabled: e
    })
  ], [t, e]), a = be((l, c, u) => {
    t.update(() => {
      l == null || l.onSelect(c), u();
    });
  }, [t]);
  return ue(() => {
    var l;
    i.current = ((l = t.getRootElement()) == null ? void 0 : l.className) ?? "";
  }, [t]), ue(() => {
    const l = () => {
      var c;
      (c = o.current) == null || c.call(o);
    };
    return window.addEventListener("scroll", l, !0), () => {
      window.removeEventListener("scroll", l, !0);
    };
  }, []), ue(() => t.registerEditableListener((l) => {
    n(!l);
  }), [t]), p(TT, { options: s, onSelectOption: a, onWillOpen: (l) => {
    r.current = l.target;
  }, menuRenderFn: (l, { selectedIndex: c, options: u, selectOptionAndCleanUp: f, setHighlightedIndex: d }, { setMenuRef: h }) => (o.current = () => f(void 0), l.current && !y5(r.current, i.current) && !fx(r.current) ? O1.createPortal(p("div", { className: "typeahead-popover auto-embed-menu", style: {
    marginLeft: l.current.style.width,
    userSelect: "none",
    width: 200
  }, ref: h, children: p(b5, { options: s, selectedItemIndex: c, onOptionClick: (g, m) => {
    g.isDisabled || (d(m), f(g));
  }, onOptionMouseEnter: (g) => {
    d(g);
  } }) }), l.current) : null) });
}
function _5({ isEditable: t }) {
  const [e] = Le();
  return Cn(() => {
    e.setEditable(t);
  }, [e, t]), null;
}
function x5({ scripture: t, nodeOptions: e, editorAdaptor: n, viewOptions: r, logger: i }) {
  const [o] = Le();
  return ue(() => {
    var s;
    (s = n.initialize) == null || s.call(n, e, i);
  }, [n, i, e]), ue(() => {
    var s;
    (s = n.reset) == null || s.call(n);
    const a = n.serializeEditorState(t, r);
    if (a == null) {
      i == null || i.warn("LoadStatePlugin: serializedEditorState was null or undefined. Skipping editor update.");
      return;
    }
    try {
      const l = o.parseEditorState(a);
      queueMicrotask(() => {
        o.update(() => {
          o.setEditorState(l), o.dispatchCommand(d0, void 0);
        }, { tag: ig });
      });
    } catch {
      i == null || i.error("LoadStatePlugin: error parsing or setting editor state.");
    }
  }, [o, n, i, t, r]), null;
}
function C5({ expandedNoteKeyRef: t, nodeOptions: e, viewOptions: n, logger: r }) {
  const [i] = Le();
  return k5(e, r), E5(i, t, n, r), null;
}
function k5(t, e) {
  const n = xe(void 0), r = t.noteCallers;
  ue(() => {
    let i = r;
    (!i || i.length <= 0) && (i = vO), n.current !== i && (n.current = i, I5("note-callers", i, e));
  }, [e, r]);
}
function E5(t, e, n, r) {
  ue(() => {
    if (!t.hasNodes([yt, Kt, yr]))
      throw new Error("NoteNodePlugin: CharNode, NoteNode or ImmutableNoteCallerNode not registered on editor!");
    const i = (o) => t.update(() => O5(o));
    return Ht(
      // Remove NoteNode if it doesn't contain a caller node and ensure typed text goes before it.
      t.registerNodeTransform(Kt, (o) => N5(o, n)),
      // Update NoteNodeCaller preview text when NoteNode children text is changed.
      t.registerNodeTransform(yt, S5),
      t.registerNodeTransform(Gn, T5),
      // Ensure NBSP after caller.
      t.registerNodeTransform(yr, A5),
      // Re-generate all note callers when a note is removed.
      t.registerMutationListener(yr, (o, { prevEditorState: s }) => D5(o, s)),
      // Handle the cursor moving next to a NoteNode. NoteNode arrow key navigation when note is
      // after a verse node is handled in the ArrowNavigationPlugin.
      t.registerCommand(Xi, () => M5(t, e, n, r), es),
      // Handle double-click of a word immediately following a NoteNode (no space between).
      t.registerRootListener((o, s) => {
        s !== null && s.removeEventListener("dblclick", i), o !== null && o.addEventListener("dblclick", i);
      })
    );
  }, [t, e, r, n]);
}
function N5(t, e) {
  const n = t.getChildren();
  if (!n.some((r) => oo(r)) && (e == null ? void 0 : e.markerMode) !== "editable" && t.getCaller() !== "" && t.remove(), n.length > 0) {
    const r = n[0];
    ie(r) && !Ul(r) && t.insertBefore(r);
  }
}
function S5(t) {
  const e = t.getParentOrThrow(), n = e.getChildren(), r = n.find((s) => oo(s));
  if (!at(t) || !je(e) || !r)
    return;
  const i = gg(n);
  r.getPreviewText() !== i && r.setPreviewText(i);
  const o = t.getNextSibling();
  ie(o) ? o.getTextContent() !== st && o.setTextContent(st) : t.insertAfter(Ie(st));
}
function T5(t) {
  const e = _x(t), n = e == null ? void 0 : e.getChildren(), r = n == null ? void 0 : n.find((o) => oo(o));
  if (!ie(t) || !je(e) || !r || !n)
    return;
  const i = gg(n);
  r.getPreviewText() !== i && r.setPreviewText(i), !(Ul(t) || !je(t.getParent())) && t.getTextContent() !== st && (t.setTextContent(st), t.selectEnd());
}
function A5(t) {
  if (!oo(t))
    return;
  const e = t.getNextSibling();
  !ie(e) || Ul(e) ? t.insertAfter(Ie(st)) : e.getTextContent() !== st && e.setTextContent(st);
}
function D5(t, e) {
  for (const [n, r] of t) {
    if (r !== "destroyed")
      continue;
    const i = e.read(() => {
      const s = Me(n), a = s == null ? void 0 : s.getParent();
      return oo(s) && je(a) && a.getCaller() === Vo;
    }), o = document.querySelector(".editor-input");
    !i || !o || (o.classList.add("reset-counters"), o.offsetHeight, o.classList.remove("reset-counters"));
  }
}
function M5(t, e, n, r) {
  var i;
  if ((n == null ? void 0 : n.noteMode) !== "expandInline")
    return !1;
  const o = oe();
  if (!Z(o) || !o.isCollapsed())
    return !1;
  const s = o.anchor, a = s.getNode();
  if (e.current) {
    const l = xr(a, (c) => je(c));
    if (l)
      e.current !== l.getKey() && (e.current = l.getKey());
    else {
      const c = Me(e.current);
      c && !c.getIsCollapsed() && (r == null || r.debug("Cursor moved away from NoteNode, collapsing it"), Oa(t, e.current, r)), e.current = void 0;
    }
  }
  if (s.offset === 0) {
    const l = a.getPreviousSibling();
    if (je(l)) {
      r == null || r.debug("Cursor is just after a NoteNode");
      const c = l.getKey();
      l.getIsCollapsed() ? e.current = c : e.current = void 0, Oa(t, c, r);
    }
  }
  if (s.offset === a.getTextContentSize()) {
    const l = a.getNextSibling();
    if (je(l)) {
      r == null || r.debug("Cursor is just before a NoteNode");
      const c = l.getKey();
      l.getIsCollapsed() ? e.current = c : e.current = void 0, Oa(t, c, r);
    } else if (!l) {
      const c = xr(a, (u) => je(u));
      if (c && c.getIsCollapsed() && gr(c.getParent()) && c.is((i = c.getParent()) == null ? void 0 : i.getLastChild())) {
        r == null || r.debug("Cursor is at end of note at end of para");
        const u = c.getKey();
        e.current = u, Oa(t, u, r);
      }
    }
  }
  if (gr(a)) {
    const l = a.getChildAtIndex(s.offset), c = l == null ? void 0 : l.getPreviousSibling();
    if (ba(c) && je(l)) {
      r == null || r.debug("Cursor is between verse and NoteNode");
      const u = l.getKey();
      l.getIsCollapsed() ? e.current = u : e.current = void 0, Oa(t, u, r);
    }
  }
  return !1;
}
function Oa(t, e, n) {
  const r = Me(e);
  try {
    r == null || r.toggleIsCollapsed();
  } catch (i) {
    if (i instanceof Error && i.message.includes("read only"))
      n == null || n.warn("Fallback triggered after stabilization - edge case"), setTimeout(() => {
        t.update(() => {
          r == null || r.toggleIsCollapsed();
        });
      }, 0);
    else
      throw i;
  }
}
function O5(t) {
  const e = oe();
  if (!Z(e))
    return;
  const n = e.anchor, r = e.focus, i = n.getNode(), o = r.getNode();
  if (je(i) && ie(o)) {
    t.preventDefault();
    const s = Dl();
    s.anchor.set(o.getKey(), 0, "text"), s.focus.set(o.getKey(), r.offset, "text"), sn(s);
  }
}
function I5(t, e, n) {
  for (const r of document.styleSheets)
    try {
      const i = r.cssRules || r.rules;
      for (const o of i)
        if (R5(o, t)) {
          const s = e.map((a) => `"${a}"`).join(" ");
          o.symbols = s;
          return;
        }
    } catch {
      continue;
    }
  n == null || n.warn(`Editor: counter style "${t}" not found.`);
}
function R5(t, e) {
  return (
    // This check could be simpler but as is also works for test mocks.
    typeof t == "object" && t !== null && "name" in t && t.name === e && "symbols" in t && typeof t.symbols == "string"
  );
}
function P5({ onChange: t }) {
  const [e] = Le();
  return ue(() => e.registerCommand(Xi, () => {
    const n = e.read(() => Dx());
    return t == null || t(n), !1;
  }, es), [e, t]), null;
}
function L5() {
  const [t] = Le();
  return $5(t), null;
}
function $5(t) {
  ue(() => {
    if (!t.hasNodes([On]))
      throw new Error("ParaNodePlugin: ParaNode not registered on editor!");
    return t.registerNodeTransform(On, (e) => F5(e, t));
  }, [t]);
}
function F5(t, e) {
  _g(e, t.getKey()) && Lx(t.getFirstChild()), !(!fn(t) || t.getMarker() !== "b" || t.isEmpty() || !e.getEditorState().read(() => {
    const n = Me(t.getKey());
    return fn(n) && ((n == null ? void 0 : n.isEmpty()) ?? !1);
  })) && t.clear();
}
function Wx({ onStateChange: t }) {
  const [e] = Le(), [n, r] = fe(e), i = xe(!1), o = xe(!1), s = xe(), a = be(() => {
    const l = oe();
    if (Z(l)) {
      const c = l.anchor.getNode();
      let u = c.getKey() === "root" ? c : xr(c, (d) => {
        const h = d.getParent();
        return h !== null && Zr(h);
      });
      u === null && (u = c.getTopLevelElementOrThrow());
      const f = u.getKey();
      n.getElementByKey(f) !== null && (fn(u) || Jr(u) || ql(u)) && (s.current = u.getMarker(), t == null || t(i.current, o.current, s.current));
    }
  }, [n, t]);
  return ue(() => e.registerCommand(Xi, (l, c) => (a(), r(c), !1), _s), [e, a]), ue(() => Ht(n.registerUpdateListener(({ editorState: l }) => {
    l.read(() => {
      a();
    });
  }), n.registerCommand($a, (l) => (i.current = l, t == null || t(i.current, o.current, s.current), !1), _s), n.registerCommand(La, (l) => (o.current = l, t == null || t(i.current, o.current, s.current), !1), _s)), [a, n, t]), null;
}
function B5({ textDirection: t }) {
  const [e] = Le();
  return q5(e, t), j5(e), null;
}
function q5(t, e) {
  ue(() => {
    function n() {
      const r = t.getRootElement();
      if (!r || e === "auto")
        return;
      r.dir = e;
      const i = t._config.theme.placeholder, o = document.getElementsByClassName(i)[0];
      o && (o.dir = e);
    }
    return n(), t.registerUpdateListener(({ dirtyElements: r }) => {
      r.size > 0 && n();
    });
  }, [t, e]);
}
function j5(t) {
  ue(() => {
    const e = (n) => {
      if (n.key !== "ArrowLeft" && n.key !== "ArrowRight")
        return !1;
      const r = oe();
      if (!Z(r))
        return !1;
      const i = r.anchor.getNode(), o = xr(i, (f) => bM(f, t) === "p");
      if (!o)
        return !1;
      const s = t.getElementByKey(o.getKey());
      if (!s)
        return !1;
      const a = s.parentElement, l = s.dir || "ltr", c = ((a == null ? void 0 : a.dir) ?? "") || "ltr";
      if (!a || l === c)
        return !1;
      const u = a.dir === "rtl" && n.key === "ArrowLeft" || a.dir === "ltr" && n.key === "ArrowRight";
      return r.modify("move", u, "character"), n.preventDefault(), !0;
    };
    return t.registerCommand(sa, e, ju);
  }, [t]);
}
function U5() {
  const [t] = Le();
  return z5(t), null;
}
function z5(t) {
  ue(() => {
    if (!t.hasNodes([yt, xn, Kt, Gn, _n]))
      throw new Error("TextSpacingPlugin: CharNode, ImmutableVerseNode, NoteNode, TextNode or VerseNode not registered on editor!");
    return Ht(t.registerNodeTransform(Gn, V5), t.registerNodeTransform(Gn, (e) => H5(e, t)), t.registerNodeTransform(_n, Ub), t.registerNodeTransform(xn, Ub));
  }, [t]);
}
function V5(t) {
  if (!t.isAttached())
    return;
  const e = t.getTextContent(), n = t.getNextSibling(), r = t.getParent();
  t.getMode() !== "normal" || e.endsWith(" ") && e.length > 1 || je(n) || at(r) || on(r) || Bl(r) || (e === " " && !ir(n) ? t.setTextContent("") : vg(t));
}
function H5(t, e) {
  const n = t.getParent();
  !Bl(n) || !t.isAttached() || _g(e, t.getKey()) && n.insertAfter(t);
}
function Ub(t) {
  if (!t.isAttached())
    return;
  const e = t.getPreviousSibling();
  e && !ir(e) && !ie(e) && !Bl(e) && t.insertBefore(Ie(" "));
}
function W5({ trigger: t, scriptureReference: e, contextMarker: n, getMarkerAction: r }) {
  const { markersMenuItems: i } = BO({
    scriptureReference: e,
    contextMarker: n,
    getMarkerAction: r
  });
  return p(FO, { trigger: t, items: i });
}
function K5({ trigger: t, scrRef: e, getMarkerAction: n }) {
  const { book: r, chapterNum: i, verseNum: o, verse: s } = e, a = Ne(() => e, [r, i, o, s]), [l] = Le(), [c] = G5(l);
  return J5(l), p(W5, { trigger: t, scriptureReference: a, contextMarker: c, getMarkerAction: n });
}
function G5(t) {
  const [e, n] = fe();
  return ue(() => t.registerCommand(Xi, () => (t.read(() => {
    const r = oe();
    if (!Z(r)) {
      e && n(void 0);
      return;
    }
    const i = Me(r.anchor.key), o = Me(r.focus.key);
    if (!i || !o) {
      e && n(void 0);
      return;
    }
    const s = hM(i, o);
    if (!s || !HM(s)) {
      e && n(void 0);
      return;
    }
    const a = s.getMarker();
    e !== a && n(a);
  }), !1), es), [e, t]), [e];
}
function J5(t) {
  ue(() => {
    if (!t.hasNodes([_n, xn]))
      throw new Error("UsjNodesMenuPlugin: VerseNode or ImmutableVerseNode not registered on editor!");
    const e = {}, n = {};
    return Ht(t.registerNodeTransform(xn, (r) => zb(r, t, e)), t.registerNodeTransform(_n, (r) => zb(r, t, e)), t.registerMutationListener(xn, (r) => Kb(r, t, e, n)), t.registerMutationListener(_n, (r) => Kb(r, t, e, n)));
  }, [t]);
}
function zb(t, e, n) {
  Qk(ig) || _g(e, t.getKey()) && Q5(t, n);
}
function Vb(t) {
  return RegExp(/(\d+)([a-zA-Z]+)?(-(\d+)([a-zA-Z]+)?)?/).exec(t);
}
const Hb = 2, X5 = 3, Wb = 4, Y5 = 5;
function Q5(t, e) {
  var n;
  const r = fg(t), i = r == null ? void 0 : r.getNumber();
  if (!i)
    return;
  const o = e[i];
  if (!o)
    return;
  let s = parseInt(t.getNumber()), a = ((n = Vb(t.getNumber())) == null ? void 0 : n[Hb]) ?? "";
  o.forEach((l) => {
    const c = Me(l);
    if (!c)
      return;
    const u = c.getNumber(), f = parseInt(u), d = Vb(u), h = !!(d != null && d[X5]), g = h ? parseInt(d[Wb]) : f;
    if (g < s || // e.g. insert 3b before 4 => 4
    f > s || // e.g. insert 3 before 3a => 4a
    g === s && a)
      return;
    const m = (d == null ? void 0 : d[Hb]) ?? "", b = (d == null ? void 0 : d[Y5]) ?? "", _ = h ? kh(parseInt(d[Wb]), void 0) : "";
    let y = `${m}`;
    y += h ? `-${_}${b}` : "";
    const C = kh(f, void 0);
    c.setNumber(`${C}${y}`), s = parseInt(h ? _ : C), a = h ? b : m;
  });
}
function Kb(t, e, n, r) {
  e.getEditorState().read(() => {
    for (const [i, o] of t) {
      const s = Me(i);
      if (ir(s)) {
        if (o === "created") {
          const a = fg(s);
          if (!a)
            continue;
          const l = a.getNumber();
          n[l] || (n[l] = []), n[l].push(i), r[i] = l;
        } else if (o === "destroyed") {
          const a = r[i], l = n[a];
          if (!l)
            continue;
          const c = l.findIndex((u) => u === i);
          if (c === -1)
            continue;
          l.splice(c, 1), Reflect.deleteProperty(r, i);
        }
      }
    }
  });
}
const Kx = "formatted", Z5 = "unformatted";
let Tg;
function eI(t) {
  const e = tI(t);
  if (!e)
    throw new Error(`Invalid view mode: ${t}`);
  Tg = e;
}
eI(Kx);
const Ag = () => Tg;
function tI(t) {
  let e;
  switch (t) {
    case Kx:
      e = {
        markerMode: "hidden",
        noteMode: "collapsed",
        hasSpacing: !0,
        isFormattedFont: !0
      };
      break;
    case Z5:
      e = {
        markerMode: "editable",
        noteMode: "expanded",
        hasSpacing: !1,
        isFormattedFont: !1
      };
      break;
  }
  return e;
}
function nI(t) {
  if (t)
    return t.markerMode === "editable" ? _n : xn;
}
function rI(t) {
  const e = [], n = t ?? Tg;
  return n && (e.push(`${qD}${n.markerMode}`), n.hasSpacing && e.push(FD), n.isFormattedFont && e.push(BD)), e;
}
let Sh;
function iI(t) {
  t && (Sh = t);
}
function oI(t) {
  return t.isEmpty() ? Qh : sI(t.toJSON());
}
function sI(t) {
  if (!t.root || !t.root.children) return;
  const e = t.root.children;
  if (e.length === 1 && lg(e[0]) && (!e[0].children || e[0].children.length === 0))
    return Qh;
  const n = Gx(e), r = Di(n);
  return r ? { type: Qa, version: Za, content: r } : void 0;
}
function aI(t, e) {
  const { type: n, marker: r, unknownAttributes: i } = t;
  let o;
  return t.code !== "" && (o = t.code), Ft({
    type: n,
    marker: r,
    code: o,
    ...i,
    content: e
  });
}
function lI(t) {
  const { marker: e, number: n, sid: r, altnumber: i, pubnumber: o, unknownAttributes: s } = t;
  return Ft({
    type: Ar.getType(),
    marker: e,
    number: n,
    sid: r,
    altnumber: i,
    pubnumber: o,
    ...s
  });
}
function cI(t, e) {
  const { marker: n, sid: r, altnumber: i, pubnumber: o, unknownAttributes: s } = t, a = e && typeof e[0] == "string" ? e[0] : void 0;
  let { number: l } = t;
  return l = xx(n, a, l), Ft({
    type: Ar.getType(),
    marker: n,
    number: l,
    sid: r,
    altnumber: i,
    pubnumber: o,
    ...s
  });
}
function uI(t) {
  const { marker: e, sid: n, altnumber: r, pubnumber: i, unknownAttributes: o } = t, { text: s } = t;
  let { number: a } = t;
  return a = xx(e, s, a), Ft({
    type: _n.getType(),
    marker: e,
    number: a,
    sid: n,
    altnumber: r,
    pubnumber: i,
    ...o
  });
}
function dI(t, e) {
  const { type: n, marker: r, unknownAttributes: i } = t;
  return e == null || e.forEach((o, s) => {
    typeof o == "string" && o.startsWith(st) && (e[s] = o.slice(1));
  }), Ft({
    type: n,
    marker: r,
    ...i,
    content: e
  });
}
function fI(t, e) {
  const { type: n, marker: r, unknownAttributes: i } = t;
  return Ft({
    type: n,
    marker: r,
    ...i,
    content: e
  });
}
function hI(t, e) {
  const { type: n, marker: r, caller: i, category: o, unknownAttributes: s } = t;
  return Ft({
    type: n,
    marker: r,
    caller: i,
    category: o,
    ...s,
    content: e
  });
}
function gs(t) {
  const { type: e, marker: n, sid: r, eid: i, unknownAttributes: o } = t;
  return Ft({
    type: e,
    marker: n,
    sid: r,
    eid: i,
    ...o
  });
}
function pI(t) {
  return t.text;
}
function gI(t, e) {
  const { tag: n, marker: r, unknownAttributes: i } = t;
  return Ft({
    type: n,
    marker: r,
    ...i,
    content: e
  });
}
function mI(t) {
  const { marker: e } = t;
  return {
    type: bu,
    marker: e
  };
}
function Gb(t, e) {
  const n = t[t.length - 1];
  n && typeof n == "string" ? t[t.length - 1] = n + e : t.push(e);
}
function wI(t, e, n, r, i) {
  const o = Qr.getType(), s = e.filter((a) => !n.includes(a));
  if (n.filter((a) => !e.includes(a)).forEach((a) => {
    const l = gs({
      type: o,
      marker: Ns,
      eid: a
    });
    i.push(l);
  }), s.forEach((a) => {
    const l = gs({
      type: o,
      marker: Ho,
      sid: a
    });
    i.push(l);
  }), e.length === 0) {
    const a = gs({
      type: o,
      marker: Ho
    });
    i.push(a);
  }
  if (i.push(...t), e.length === 0) {
    const a = gs({
      type: o,
      marker: Ns
    });
    i.push(a);
  }
  (!r || !kM(r)) && e.forEach((a) => {
    const l = gs({
      type: o,
      marker: Ns,
      eid: a
    });
    i.push(l);
  });
}
function Di(t, e) {
  const n = [];
  let r, i = [];
  return t.forEach((o, s) => {
    const a = o, l = o, c = o, u = o, f = o, d = o, h = o, g = o;
    switch (o.type) {
      case sr.getType():
        n.push(
          aI(a, Di(a.children))
        );
        break;
      case Ni.getType():
        n.push(lI(o));
        break;
      case Ar.getType():
        n.push(
          cI(l, Di(l.children))
        );
        break;
      case xn.getType():
      case _n.getType():
        n.push(uI(o));
        break;
      case yt.getType():
        n.push(
          dI(c, Di(c.children))
        );
        break;
      case On.getType():
        n.push(
          fI(u, Di(u.children))
        );
        break;
      case Kt.getType():
        n.push(
          hI(
            f,
            Di(f.children, f.caller)
          )
        );
        break;
      case ro.getType():
      case yr.getType():
      case Nl.getType():
      case is.getType():
        break;
      case nn.getType():
        if (r = Di(h.children), r) {
          const m = h.typedIDs[$i];
          if (m)
            wI(r, m, i, t[s + 1], n), i = m;
          else {
            const b = r.shift();
            b && (typeof b == "string" ? Gb(n, b) : n.push(b)), r.length > 0 && n.push(...r);
          }
        }
        break;
      case Qr.getType():
        n.push(gs(o));
        break;
      case Gn.getType():
        d.text && d.text !== st && !d.text.startsWith(tg) && (!e || d.text !== pg(e)) && Gb(n, pI(d));
        break;
      case rs.getType():
        n.push(
          gI(g, Di(g.children))
        );
        break;
      case io.getType():
        n.push(mI(o));
        break;
      default:
        Sh == null || Sh.error(`Unexpected node type '${o.type}'!`);
    }
  }), n && n.length > 0 ? n : void 0;
}
function Gx(t) {
  const e = t.findIndex((n) => lg(n));
  if (e >= 0) {
    const n = t.slice(0, e), r = t[e].children, i = Gx(t.slice(e + 1));
    t = [...n, ...r, ...i];
  }
  return t;
}
const pf = {
  initialize: iI,
  deserializeEditorState: oI
}, Jb = Jx([]), bI = {
  type: Nl.getType(),
  version: 1
};
let _u = [], Ae, Pc, Th, dt;
function yI(t, e) {
  _u = [], xI(t), CI(e);
}
function vI(t = 0) {
}
function _I(t, e) {
  Ae = e ?? Ag();
  let n;
  return t ? (t.type !== Qa && (dt == null || dt.warn(`This USJ type '${t.type}' didn't match the expected type '${Qa}'.`)), t.version !== Za && (dt == null || dt.warn(
    `This USJ version '${t.version}' didn't match the expected version '${Za}'.`
  )), t.content.length > 0 ? n = Dh(ja(t.content)) : n = [Jb]) : n = [Jb], Th == null || Th(_u), {
    root: {
      children: n,
      direction: null,
      format: "",
      indent: 0,
      type: "root",
      version: 1
    }
  };
}
function xI(t) {
  t && (Pc = t), t != null && t.addMissingComments && (Th = t.addMissingComments);
}
function CI(t) {
  t && (dt = t);
}
function kI(t) {
  return !t || t.length !== 1 || typeof t[0] != "string" ? "" : t[0];
}
function EI(t) {
  const { marker: e, code: n } = t;
  e !== od && (dt == null || dt.warn(`Unexpected book marker '${e}'!`)), (!n || !sr.isValidBookCode(n)) && (dt == null || dt.warn(`Unexpected book code '${n}'!`));
  const r = [];
  ((Ae == null ? void 0 : Ae.markerMode) === "editable" || (Ae == null ? void 0 : Ae.markerMode) === "visible") && r.push(
    Jo("marker", Si(e) + " " + n + st)
  );
  const i = kI(t.content);
  i && r.push(Go(i));
  const o = Gt(t);
  return Ft({
    type: sr.getType(),
    marker: e,
    code: n ?? "",
    unknownAttributes: o,
    children: r,
    direction: null,
    format: "",
    indent: 0,
    version: nx
  });
}
function NI(t) {
  const { marker: e, number: n, sid: r, altnumber: i, pubnumber: o } = t;
  e !== og && (dt == null || dt.warn(`Unexpected chapter marker '${e}'!`));
  const s = Gt(t);
  let a;
  return (Ae == null ? void 0 : Ae.markerMode) === "visible" && (a = !0), (Ae == null ? void 0 : Ae.markerMode) === "editable" ? Ft({
    type: Ar.getType(),
    marker: e,
    number: n ?? "",
    sid: r,
    altnumber: i,
    pubnumber: o,
    unknownAttributes: s,
    children: [Go(jl(e, n) ?? "")],
    direction: null,
    format: "",
    indent: 0,
    version: ox
  }) : Ft({
    type: Ni.getType(),
    marker: e,
    number: n ?? "",
    showMarker: a,
    sid: r,
    altnumber: i,
    pubnumber: o,
    unknownAttributes: s,
    version: ux
  });
}
function SI(t) {
  const { marker: e, number: n, sid: r, altnumber: i, pubnumber: o } = t;
  e !== ug && (dt == null || dt.warn(`Unexpected verse marker '${e}'!`));
  const s = (nI(Ae) ?? xn).getType(), a = (Ae == null ? void 0 : Ae.markerMode) === "editable" ? yx : Ox;
  let l, c;
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? l = jl(e, n) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && (c = !0);
  const u = Gt(t);
  return Ft({
    type: s,
    text: l,
    marker: e,
    number: n ?? "",
    sid: r,
    altnumber: i,
    pubnumber: o,
    showMarker: c,
    unknownAttributes: u,
    version: a
  });
}
function TI(t, e = []) {
  const { marker: n } = t;
  yt.isValidMarker(n) || dt == null || dt.warn(`Unexpected char marker '${n}'!`), (Ae == null ? void 0 : Ae.markerMode) === "editable" && e.forEach((i) => {
    hg(i) && (i.text = st + i.text);
  });
  const r = Gt(t);
  return Ft({
    type: yt.getType(),
    marker: n,
    unknownAttributes: r,
    children: [...e],
    direction: null,
    format: "",
    indent: 0,
    textFormat: 0,
    textStyle: "",
    version: cx
  });
}
function Jx(t) {
  return {
    type: Ki.getType(),
    children: t,
    direction: null,
    format: "",
    indent: 0,
    textFormat: 0,
    textStyle: "",
    version: hx
  };
}
function AI(t, e = []) {
  const { marker: n } = t;
  On.isValidMarker(n) || dt == null || dt.warn(`Unexpected para marker '${n}'!`);
  const r = [];
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? r.push(Ys(n), Go(st)) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && r.push(Jo("marker", Si(n) + st)), r.push(...e);
  const i = Gt(t);
  return Ft({
    type: On.getType(),
    marker: n,
    unknownAttributes: i,
    children: r,
    direction: null,
    format: "",
    indent: 0,
    textFormat: 0,
    textStyle: "",
    version: bx
  });
}
function DI(t, e) {
  const n = wM(e);
  let r = () => {
  };
  return Pc != null && Pc.noteCallerOnClick && (r = Pc.noteCallerOnClick), Ft({
    type: yr.getType(),
    caller: t,
    previewText: n,
    onClick: r,
    version: Bx
  });
}
function MI(t, e) {
  const { marker: n, category: r } = t;
  Kt.isValidMarker(n) || dt == null || dt.warn(`Unexpected note marker '${n}'!`);
  const i = t.caller ?? "*", o = (Ae == null ? void 0 : Ae.noteMode) !== "expanded", s = Gt(t);
  let a, l;
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? (a = Ys(n), l = Ys(n, "closing")) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && (a = Jo("marker", Si(n) + st), l = Jo("marker", Gs(n) + st));
  const c = [];
  let u;
  if (a && c.push(a), (Ae == null ? void 0 : Ae.markerMode) === "editable")
    u = Go(pg(i)), c.push(u, ...e);
  else {
    const f = Go(st);
    u = DI(i, e), c.push(u, f, ...e.flatMap(OI(f)));
  }
  return l && c.push(l), Ft({
    type: Kt.getType(),
    marker: n,
    caller: i,
    isCollapsed: o,
    category: r,
    unknownAttributes: s,
    children: c,
    direction: null,
    format: "",
    indent: 0,
    version: wx
  });
}
function OI(t) {
  return (e) => TM(e) ? [e] : [e, t];
}
function II(t) {
  const { marker: e, sid: n, eid: r } = t;
  (!e || !Qr.isValidMarker(e)) && (dt == null || dt.warn(`Unexpected milestone marker '${e}'!`));
  const i = Gt(t);
  return Ft({
    type: Qr.getType(),
    marker: e,
    sid: n,
    eid: r,
    unknownAttributes: i,
    version: px
  });
}
function Xb(t, e = []) {
  return {
    type: nn.getType(),
    typedIDs: { [$i]: e },
    children: t,
    direction: null,
    format: "",
    indent: 0,
    version: 1
  };
}
function RI(t, e) {
  const { marker: n } = t, r = t.type, i = Gt(t), o = [...e];
  return o.forEach((s) => {
    hg(s) && (s.mode = "token");
  }), Ft({
    type: rs.getType(),
    tag: r,
    marker: n,
    unknownAttributes: i,
    children: o,
    direction: null,
    format: "",
    indent: 0,
    version: ex
  });
}
function PI(t) {
  return {
    type: io.getType(),
    marker: t,
    version: Tx
  };
}
function Ys(t, e = "opening") {
  return {
    type: is.getType(),
    marker: t,
    markerSyntax: e,
    text: "",
    detail: 0,
    format: 0,
    mode: "normal",
    style: "",
    version: 1
  };
}
function Go(t, e = "normal") {
  return {
    type: Gn.getType(),
    text: t,
    detail: 0,
    format: 0,
    mode: e,
    style: "",
    version: 1
  };
}
function Jo(t, e) {
  return {
    type: ro.getType(),
    text: e,
    textType: t,
    version: Sx
  };
}
function Yb(t, e) {
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? e.push(Ys(t)) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && e.push(Jo("marker", Si(t)));
}
function Qb(t, e, n = !1) {
  yt.isValidFootnoteMarker(t) || yt.isValidCrossReferenceMarker(t) || ((Ae == null ? void 0 : Ae.markerMode) === "editable" ? n ? e.push(Ys("", "selfClosing")) : e.push(Ys(t, "closing")) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && e.push(Jo("marker", Gs(n ? "" : t))));
}
function LI(t, e) {
  if (t.type !== "ms") return;
  const n = [];
  if (t.sid && n.push(`sid="${t.sid}"`), t.eid && n.push(`eid="${t.eid}"`), n.length <= 0) return;
  const r = tg + n.join(" ");
  (Ae == null ? void 0 : Ae.markerMode) === "editable" ? e.push(Go(r)) : (Ae == null ? void 0 : Ae.markerMode) === "visible" && e.push(Jo("attribute", r));
}
function Zb(t, e) {
  return t.length <= 0 || e === 0 ? t : t.map((n) => n - e);
}
function $I(t, e) {
  const n = t.indexOf(e, 0);
  n > -1 && t.splice(n, 1);
}
function ey(t, e) {
  e.marker === Ho && e.sid !== void 0 && t.push(e.sid), e.marker === Ns && e.eid !== void 0 && $I(t, e.eid);
}
function Ah(t, e, n = !1, r = []) {
  if (e.length <= 0 || e[0] >= t.length) return t;
  const i = e.shift(), o = e.length > 0 ? e.shift() : t.length - 1;
  if (i === void 0 || o === void 0 || o >= t.length || t.length <= 0)
    return t;
  const s = t.slice(0, i), a = n ? [Xb(s, [...r])] : s, l = t[i];
  ey(r, l);
  const c = Ah(
    t.slice(i + 1, o),
    Zb(e, i + 1),
    l.marker === Ho,
    r
  ), u = Xb(c, [...r]), f = t[o];
  ey(r, f);
  const d = Ah(
    t.slice(o + 1),
    Zb(e, o + 1),
    f.marker === Ho,
    r
  );
  return [...a, u, ...d];
}
function ja(t) {
  const e = [], n = [];
  return t == null || t.forEach((r) => {
    if (typeof r == "string")
      r && n.push(Go(r));
    else if (!r.type)
      dt == null || dt.error("Marker type is missing!");
    else
      switch (r.type) {
        case sr.getType():
          n.push(EI(r));
          break;
        case Ar.getType():
          n.push(NI(r));
          break;
        case _n.getType():
          Ae != null && Ae.hasSpacing || n.push(bI), n.push(SI(r));
          break;
        case yt.getType():
          Yb(r.marker, n), n.push(TI(r, ja(r.content))), Qb(r.marker, n);
          break;
        case On.getType():
          n.push(AI(r, ja(r.content)));
          break;
        case Kt.getType():
          n.push(MI(r, ja(r.content)));
          break;
        case Qr.getType():
          QD(r.marker) && (e.push(n.length), r.sid !== void 0 && (_u == null || _u.push(r.sid))), n.push(II(r)), Yb(r.marker, n), LI(r, n), Qb(r.marker, n, !0);
          break;
        case io.getType():
          n.push(PI(r.marker));
          break;
        default:
          dt == null || dt.warn(`Unknown type-marker '${r.type}-${r.marker}'!`), n.push(RI(r, ja(r.content)));
      }
  }), Ah(n, e);
}
function Dh(t) {
  const e = t.findIndex(
    (n) => $D(n) || sM(n) || iM(n)
  );
  if (e >= 0) {
    const n = Dh(t.slice(0, e)), r = t[e], i = Dh(t.slice(e + 1));
    return [...n, r, ...i];
  } else if (t.some((n) => "text" in n && "mode" in n || $M(n)))
    return [Jx(t)];
  return t;
}
const Mh = {
  initialize: yI,
  reset: vI,
  serializeEditorState: _I
}, xc = (t) => {
  if (!Kt.isValidMarker(t) || !t.includes("f"))
    throw new Error(`Invalid footnote marker '${t}'`);
  return {
    action: (e) => {
      const { chapterNum: n, verseNum: r } = e.reference, i = [];
      return n !== void 0 && r !== void 0 && i.push({
        type: "char",
        marker: "fr",
        content: [`${n}:${r}`]
      }), e.noteText && i.push({
        type: "char",
        marker: "fq",
        content: [e.noteText]
      }), i.push({ type: "char", marker: "ft", content: ["-"] }), [{
        type: "note",
        marker: t,
        caller: Vo,
        content: i
      }];
    }
  };
}, ty = (t) => {
  if (!Kt.isValidMarker(t) || !t.includes("x"))
    throw new Error(`Invalid cross-reference marker '${t}'`);
  return {
    action: (e) => {
      const { chapterNum: n, verseNum: r } = e.reference, i = [];
      return n !== void 0 && r !== void 0 && i.push({
        type: "char",
        marker: "xo",
        content: [`${n}:${r}`]
      }), i.push({ type: "char", marker: "xt", content: ["-"] }), [{
        type: "note",
        marker: t,
        caller: rg,
        content: i
      }];
    }
  };
}, FI = {
  c: {
    action: (t) => {
      const { chapterNum: e } = t.reference;
      return [{
        type: "chapter",
        marker: "c",
        number: `${e + 1}`
      }];
    }
  },
  v: {
    action: (t) => {
      const { verseNum: e, verse: n } = t.reference;
      return [{
        type: "verse",
        marker: "v",
        number: `${kh(e, n)}`
      }];
    }
  },
  f: xc("f"),
  fe: xc("fe"),
  ef: xc("ef"),
  efe: xc("efe"),
  x: ty("x"),
  ex: ty("ex")
};
function BI(t, e, n, r, i) {
  const o = qI(t);
  return { action: (s) => {
    s.editor.update(() => {
      var a;
      const l = oe();
      Z(l) && (s.noteText = l.getTextContent());
      const c = (a = o == null ? void 0 : o.action) == null ? void 0 : a.call(o, s);
      if (!c) return;
      const u = Ab(c, Mh, r), f = cf(u);
      if (Z(l)) {
        const d = l.anchor.getNode();
        if (je(f))
          Ix(f, l, r), f.getIsCollapsed() || (e.current = f.getKey());
        else if (l.getTextContent().length > 0)
          jI(
            l,
            () => cf(u)
          );
        else if (X(f) && !f.isInline()) {
          const h = l.insertParagraph();
          if (h) {
            const g = h.getChildren();
            f.append(...g), h.replace(f), f.selectStart();
          }
        } else if (ie(d) && !Ul(d) && je(d.getParent()) && l.isCollapsed()) {
          let h = d.insertAfter(f);
          if (wu(f)) {
            const g = {
              ...r || Ag(),
              markerMode: "hidden"
            }, m = Ab(
              c,
              Mh,
              g
            ), b = cf(m);
            h = h.insertAfter(b);
          }
          h.insertAfter(Ie(st));
        } else {
          l.insertNodes([f]), WI(f);
          const h = f.getNextSibling();
          h ? h.selectStart() : f.selectStart();
        }
      } else
        l == null || l.insertNodes([f]);
    }, i);
  }, label: o == null ? void 0 : o.label };
}
function qI(t) {
  let e = FI[t];
  return e || (On.isValidMarker(t) ? e = {
    action: () => [{
      type: On.getType(),
      marker: t,
      content: []
    }]
  } : yt.isValidMarker(t) && (e = {
    action: () => [{
      type: yt.getType(),
      marker: t,
      content: ["-"]
    }]
  })), e;
}
function jI(t, e) {
  const n = t.getNodes(), [r, i] = UI(t);
  let o;
  n.forEach((s, a) => {
    if (X(o) && o.isParentOf(s))
      return;
    const l = zI(
      s,
      a === 0,
      a === n.length - 1,
      r,
      i
    );
    if (!l) {
      o = void 0;
      return;
    }
    o || (o = e(), l.insertBefore(o)), HI(l, o);
  }), (ie(o) || X(o)) && o.selectEnd();
}
function UI(t) {
  const e = t.anchor.offset, n = t.focus.offset;
  return t.isBackward() ? [n, e] : [e, n];
}
function zI(t, e, n, r, i) {
  if (!(on(t) || je(t) || je(t.getParent()))) {
    if (ie(t))
      return VI(t, e, n, r, i);
    if (X(t) && t.isInline())
      return t;
  }
}
function VI(t, e, n, r, i) {
  const o = t.getTextContentSize(), s = e ? r : 0, a = n ? i : o;
  if (s === 0 && a === 0) return;
  const l = t.splitText(s, a);
  return l.length === 1 ? l[0] : l.length === 3 || a === o ? l[1] : l[0];
}
function HI(t, e) {
  var n;
  if (ie(e)) {
    const r = ny(t, e);
    e.setTextContent(r), t.remove();
  } else if (X(e)) {
    const r = e.getChildrenSize();
    e.append(t);
    for (let i = 0; i < r; i++) (n = e.getFirstChild()) == null || n.remove();
    ny(t, e);
  }
}
function ny(t, e) {
  let n = t.getTextContent();
  if (ie(t) && e.isInline() && n.startsWith(" ")) {
    n = n.trimStart(), t.setTextContent(n);
    const r = e.getPreviousSibling();
    vg(r), ie(r) || e.insertBefore(Ie(" "));
  }
  return n;
}
function WI(t) {
  ir(t) && (vg(t.getPreviousSibling()), Lx(t.getNextSibling()));
}
const Xx = {
  chapter: "chapter",
  verse: "verse",
  char: "char",
  para: "para",
  typedMark: "editor-typed-mark",
  typedMarkOverlap: "editor-typed-markOverlap",
  mark: "editor-mark",
  markOverlap: "editor-markOverlap",
  placeholder: "editor-placeholder",
  paragraph: "editor-paragraph",
  quote: "editor-quote",
  heading: {
    h1: "editor-heading-h1",
    h2: "editor-heading-h2",
    h3: "editor-heading-h3",
    h4: "editor-heading-h4",
    h5: "editor-heading-h5"
  },
  list: {
    nested: {
      listitem: "editor-nested-listitem"
    },
    ol: "editor-list-ol",
    ul: "editor-list-ul",
    listitem: "editor-listitem"
  },
  image: "editor-image",
  link: "editor-link",
  text: {
    bold: "editor-text-bold",
    italic: "editor-text-italic",
    overflowed: "editor-text-overflowed",
    hashtag: "editor-text-hashtag",
    underline: "editor-text-underline",
    strikethrough: "editor-text-strikethrough",
    underlineStrikethrough: "editor-text-underlineStrikethrough"
  }
};
function KI({
  options: t,
  editedUsjRef: e,
  usj: n,
  setUsj: r
}) {
  const { view: i, nodes: o } = t || {}, { hasSpacing: s, isFormattedFont: a, markerMode: l } = i || {};
  return ue(() => {
    e.current && !ui(e.current, n) && r(e.current);
  }, [e, s, a, l, o, r, n]), null;
}
function GI({
  scrRef: t,
  onScrRefChange: e
}) {
  const [n] = Le(), r = xe(!1), i = xe(!1), { book: o, chapterNum: s, verseNum: a } = t;
  return ue(
    () => n.registerMutationListener(
      sr,
      (l) => {
        n.update(
          () => {
            for (const [c, u] of l) {
              const f = Me(c);
              f && Jr(f) && u === "created" && ry(s, a, i);
            }
          },
          { tag: _h }
        );
      },
      { skipInitialization: !0 }
    ),
    [n, s, a]
  ), ue(() => {
    r.current ? r.current = !1 : n.update(() => ry(s, a, i), {
      tag: _h
    });
  }, [n, s, a]), ue(
    () => n.registerCommand(
      Xi,
      () => (i.current ? i.current = !1 : JI(
        o,
        s,
        a,
        e,
        r
      ), !1),
      es
    ),
    [n, o, s, a, e]
  ), null;
}
function ry(t, e, n) {
  var r;
  const i = kx(oe()), o = (r = Px(i)) == null ? void 0 : r.getNumber();
  if (yM(o) && mg(e, o)) return;
  const s = Ve().getChildren(), a = aM(s, t), l = mM(s, a), c = lM(l, !!a);
  if (c && !a || !a) return;
  gM(l, c);
  const u = VM(l, e);
  if (u) {
    if (fn(u)) {
      const f = u.getFirstChild();
      ie(f) ? f.select(0, 0) : u.select(0, 0);
    } else u.selectNext(0, 0);
    n.current = !0;
  }
}
function JI(t, e, n, r, i) {
  const o = kx(oe());
  if (!o) return;
  const s = fg(o), a = parseInt((s == null ? void 0 : s.getNumber()) ?? "1", 10), l = Px(o), c = l == null ? void 0 : l.getNumber(), u = parseInt(c ?? "0", 10), f = c ? mg(n, c) : n === u;
  if (i.current = !!(s && a !== e || !f), i.current) {
    const d = {
      book: t,
      chapterNum: a,
      verseNum: u
    };
    c != null && u.toString() !== c && (d.verse = c), r(d);
  }
}
function XI(t) {
  return Jr(t) ? `${t.__code}` : sg(t) ? `${t.__marker} "${t.__number}"` : at(t) ? `${t.__marker}` : ql(t) ? `${t.__marker} "${t.__number}"` : oo(t) ? `${t.__caller}` : ba(t) ? `${t.__marker} "${t.__number}"` : je(t) ? `${t.__marker} "${t.__caller}"` + (t.__isCollapsed ? " (collapsed)" : " (expanded)") : fn(t) ? `${t.__marker}` : on(t) ? `ids: [ ${JSON.stringify(t.getTypedIDs())} ]` : dg(t) ? `${t.__marker} "${t.__number}"` : "";
}
function YI() {
  const [t] = Le();
  return /* @__PURE__ */ p(
    uS,
    {
      viewClassName: "tree-view-output",
      treeTypeButtonClassName: "debug-treetype-button",
      timeTravelPanelClassName: "debug-timetravel-panel",
      timeTravelButtonClassName: "debug-timetravel-button",
      timeTravelPanelSliderClassName: "debug-timetravel-panel-slider",
      timeTravelPanelButtonClassName: "debug-timetravel-panel-button",
      customPrintNode: XI,
      editor: t
    }
  );
}
const Yx = yl(null), iy = 4;
function QI({
  children: t,
  className: e,
  onClick: n,
  title: r
}) {
  const i = xe(null), o = vl(Yx);
  if (o === null)
    throw new Error("DropDownItem must be used within a DropDown");
  const { registerItem: s } = o;
  return ue(() => {
    i && i.current && s(i);
  }, [i, s]), /* @__PURE__ */ p("button", { className: e, onClick: n, ref: i, title: r, type: "button", children: t });
}
function ZI({
  children: t,
  dropDownRef: e,
  onClose: n
}) {
  const [r, i] = fe(), [o, s] = fe(), a = be(
    (u) => {
      i((f) => f ? [...f, u] : [u]);
    },
    [i]
  ), l = (u) => {
    if (!r) return;
    const f = u.key;
    ["Escape", "ArrowUp", "ArrowDown", "Tab"].includes(f) && u.preventDefault(), f === "Escape" || f === "Tab" ? n() : f === "ArrowUp" ? s((d) => {
      if (!d) return r[0];
      const h = r.indexOf(d) - 1;
      return r[h === -1 ? r.length - 1 : h];
    }) : f === "ArrowDown" && s((d) => d ? r[r.indexOf(d) + 1] : r[0]);
  }, c = Ne(
    () => ({
      registerItem: a
    }),
    [a]
  );
  return ue(() => {
    r && !o && s(r[0]), o && o.current && o.current.focus();
  }, [r, o]), /* @__PURE__ */ p(Yx.Provider, { value: c, children: /* @__PURE__ */ p("div", { className: "dropdown", ref: e, onKeyDown: l, children: t }) });
}
function eR({
  disabled: t = !1,
  buttonLabel: e,
  buttonAriaLabel: n,
  buttonClassName: r,
  buttonIconClassName: i,
  children: o,
  stopCloseOnClickSelf: s
}) {
  const a = xe(null), l = xe(null), [c, u] = fe(!1), f = () => {
    u(!1), l && l.current && l.current.focus();
  };
  return ue(() => {
    const d = l.current, h = a.current;
    if (c && d !== null && h !== null) {
      const { top: g, left: m } = d.getBoundingClientRect();
      h.style.top = `${g + d.offsetHeight + iy}px`, h.style.left = `${Math.min(m, window.innerWidth - h.offsetWidth - 20)}px`;
    }
  }, [a, l, c]), ue(() => {
    const d = l.current;
    if (d !== null && c) {
      const h = (g) => {
        const m = g.target;
        s && a.current && a.current.contains(m) || d.contains(m) || u(!1);
      };
      return document.addEventListener("click", h), () => {
        document.removeEventListener("click", h);
      };
    }
    return () => {
    };
  }, [a, l, c, s]), ue(() => {
    const d = () => {
      if (c) {
        const h = l.current, g = a.current;
        if (h !== null && g !== null) {
          const { top: m } = h.getBoundingClientRect(), b = m + h.offsetHeight + iy;
          b !== g.getBoundingClientRect().top && (g.style.top = `${b}px`);
        }
      }
    };
    return document.addEventListener("scroll", d), () => {
      document.removeEventListener("scroll", d);
    };
  }, [l, a, c]), /* @__PURE__ */ j(Lt, { children: [
    /* @__PURE__ */ j(
      "button",
      {
        type: "button",
        disabled: t,
        "aria-label": n || e,
        className: r,
        onClick: () => u(!c),
        ref: l,
        children: [
          i && /* @__PURE__ */ p("span", { className: i }),
          e && /* @__PURE__ */ p("span", { className: "text dropdown-button-text", children: e }),
          /* @__PURE__ */ p("i", { className: "chevron-down" })
        ]
      }
    ),
    c && fi(
      /* @__PURE__ */ p(ZI, { dropDownRef: a, onClose: f, children: o }),
      document.body
    )
  ] });
}
const Oh = {
  m: "m - Paragraph - Margin - No First Line Indent",
  ms: "ms - Heading - Major Section Level 1",
  nb: "nb - Paragraph - No Break with Previous Paragraph",
  p: "p - Paragraph - Normal - First Line Indent",
  pi: "pi - Paragraph - Indented - Level 1 - First Line Indent",
  q1: "q1 - Poetry - Indent Level 1",
  q2: "q2 - Poetry - Indent Level 2",
  r: "r - Heading - Parallel References",
  s: "s - Heading - Section Level 1"
  // do not allow `b - Poetry - Stanza Break (Blank Line)` here to avoid a USFM validity issue.
}, Ih = {
  ...Oh,
  ide: "ide - File - Encoding",
  h: "h - File - Header",
  h1: "h1 - File - Header",
  h2: "h2 - File - Left Header",
  h3: "h3 - File - Right Header",
  toc1: "toc1 - File - Long Table of Contents Text",
  toc2: "toc2 - File - Short Table of Contents Text",
  toc3: "toc3 - File - Book Abbreviation",
  cl: "cl - Chapter - Publishing Label",
  mt: "mt - Title - Major Title Level 1",
  mt1: "mt1 - Title - Major Title Level 1",
  mt2: "mt2 - Title - Major Title Level 2",
  mt3: "mt3 - Title - Major Title Level 3",
  mt4: "mt4 - Title - Major Title Level 4",
  ms1: "ms1 - Heading - Major Section Level 1",
  ms2: "ms2 - Heading - Major Section Level 2",
  ms3: "ms3 - Heading - Major Section Level 3",
  b: "b - Poetry - Stanza Break (Blank Line)"
};
function tR({
  editorRef: t,
  blockMarker: e,
  disabled: n = !1
}) {
  return /* @__PURE__ */ p(
    eR,
    {
      disabled: n,
      buttonClassName: "toolbar-item block-controls",
      buttonIconClassName: "icon block-marker " + nR(e),
      buttonLabel: rR(e),
      buttonAriaLabel: "Formatting options for block type",
      children: Object.keys(Oh).map((r) => /* @__PURE__ */ j(
        QI,
        {
          className: "item block-marker " + iR(e === r),
          onClick: () => {
            var i;
            return (i = t.current) == null ? void 0 : i.formatPara(r);
          },
          children: [
            /* @__PURE__ */ p("i", { className: "icon block-marker " + r }),
            /* @__PURE__ */ p("span", { className: "text usfm_" + r, children: Oh[r] })
          ]
        },
        r
      ))
    }
  );
}
function nR(t) {
  return t && t in Ih ? t : "ban";
}
function rR(t) {
  return t && t in Ih ? Ih[t] : "No Style";
}
function iR(t) {
  return t ? "active dropdown-item-active" : "";
}
function oy() {
  return /* @__PURE__ */ p("div", { className: "divider" });
}
const oR = Yn(function({ editorRef: t, isReadonly: e = !1, onStateChange: n }, r) {
  const [i] = Le(), [o, s] = fe(i), [a, l] = fe(), [c, u] = fe(!1), [f, d] = fe(!1), h = be(
    (g, m, b) => {
      u(g), d(m), l(b), n == null || n(g, m, b);
    },
    [n]
  );
  return ue(() => i.registerCommand(
    Xi,
    (g, m) => (s(m), !1),
    _s
  ), [i]), /* @__PURE__ */ j(Lt, { children: [
    /* @__PURE__ */ p(Wx, { onStateChange: h }),
    /* @__PURE__ */ j("div", { className: "toolbar", children: [
      /* @__PURE__ */ p(
        "button",
        {
          disabled: !c || e,
          onClick: () => {
            o.dispatchCommand(kl, void 0);
          },
          title: eh ? "Undo (⌘Z)" : "Undo (Ctrl+Z)",
          type: "button",
          className: "toolbar-item spaced",
          "aria-label": "Undo",
          children: /* @__PURE__ */ p("i", { className: "format undo" })
        }
      ),
      /* @__PURE__ */ p(
        "button",
        {
          disabled: !f || e,
          onClick: () => {
            o.dispatchCommand(El, void 0);
          },
          title: eh ? "Redo (⌘Y)" : "Redo (Ctrl+Y)",
          type: "button",
          className: "toolbar-item",
          "aria-label": "Redo",
          children: /* @__PURE__ */ p("i", { className: "format redo" })
        }
      ),
      /* @__PURE__ */ p(oy, {}),
      o === i && /* @__PURE__ */ j(Lt, { children: [
        /* @__PURE__ */ p(
          tR,
          {
            editorRef: t,
            blockMarker: a,
            disabled: e
          }
        ),
        /* @__PURE__ */ p(oy, {})
      ] }),
      /* @__PURE__ */ p("div", { ref: r, className: "end-container" })
    ] })
  ] });
}), sy = {
  namespace: "platformEditor",
  theme: Xx,
  editable: !0,
  editorState: void 0,
  // Handling of errors during update
  onError(t) {
    throw t;
  },
  nodes: [nn, ..._O]
}, sR = Ag(), aR = {}, lR = {};
function cR() {
  return /* @__PURE__ */ p("div", { className: "editor-placeholder", children: "Enter some Scripture..." });
}
const Qx = Yn(function({
  defaultUsj: t,
  scrRef: e,
  onScrRefChange: n,
  onSelectionChange: r,
  onUsjChange: i,
  onStateChange: o,
  options: s,
  logger: a,
  children: l
}, c) {
  const u = xe(null), f = xe(null), d = xe(null), h = xe(t), g = xe(), [m, b] = fe(t), [_, y] = fe(0), {
    isReadonly: C = !1,
    hasExternalUI: D = !1,
    hasSpellCheck: R = !1,
    textDirection: N = "ltr",
    markerMenuTrigger: L = "\\",
    view: O = sR,
    nodes: M = aR,
    debug: q = !1
  } = s ?? lR;
  sy.editable = !C, pf.initialize(a), Fh(c, () => ({
    focus() {
      var I;
      (I = u.current) == null || I.focus();
    },
    undo() {
      var I;
      (I = u.current) == null || I.dispatchCommand(kl, void 0);
    },
    redo() {
      var I;
      (I = u.current) == null || I.dispatchCommand(El, void 0);
    },
    cut() {
      var I;
      (I = u.current) == null || I.dispatchCommand(Zo, null);
    },
    copy() {
      var I;
      (I = u.current) == null || I.dispatchCommand(Yi, null);
    },
    paste() {
      u.current && Ng(u.current);
    },
    pastePlainText() {
      u.current && Sg(u.current);
    },
    getUsj() {
      return h.current;
    },
    setUsj(I) {
      if (!ui(h.current, I)) {
        h.current = I;
        const S = ui(m, I);
        b(I), S && y((P) => P + 1);
      }
    },
    applyUpdate(I, S = "remote") {
      var P, T;
      (P = u.current) == null || P.update(
        () => {
          S === "remote" && Z0(Ch), VO(I, O, M, a);
        },
        { discrete: !0 }
      );
      const A = (T = u.current) == null ? void 0 : T.getEditorState();
      if (!A) return;
      const B = pf.deserializeEditorState(A);
      if (B) {
        const V = !ui(h.current, B);
        if (V && (h.current = B), V || !ui(m, B)) {
          const J = Pb(I, A);
          i == null || i(B, I, S, J);
        }
      }
    },
    replaceEmbedUpdate(I, S) {
      var P;
      const T = (P = u.current) == null ? void 0 : P.read(() => ZM(I, S));
      T && this.applyUpdate(T);
    },
    getSelection() {
      var I;
      return (I = u.current) == null ? void 0 : I.read(Dx);
    },
    setSelection(I) {
      var S;
      (S = u.current) == null || S.update(
        () => {
          const P = bg(I);
          P !== void 0 && sn(P);
        },
        { tag: ix }
      );
    },
    addAnnotation(I, S, P) {
      var T;
      (T = f.current) == null || T.addAnnotation(I, Sb(S), P);
    },
    removeAnnotation(I, S) {
      var P;
      (P = f.current) == null || P.removeAnnotation(Sb(I), S);
    },
    formatPara(I) {
      var S;
      (S = u.current) == null || S.update(() => {
        const P = oe();
        Z(P) && NE(P, () => gl(I));
      });
    },
    insertNote(I, S, P) {
      var T;
      (T = u.current) == null || T.update(() => {
        const A = FM(
          I,
          S,
          P,
          e,
          O,
          M,
          a
        );
        A && !A.getIsCollapsed() && (g.current = A.getKey());
      });
    },
    selectNote(I) {
      var S;
      (S = u.current) == null || S.update(() => {
        const P = Ib(I);
        P && (qM(P, O), P.getIsCollapsed() || (g.current = P.getKey()));
      });
    },
    getNoteOps(I) {
      var S;
      return (S = u.current) == null ? void 0 : S.read(() => {
        const P = Ib(I);
        if (P)
          return xg(P);
      });
    },
    get toolbarEndRef() {
      return d;
    }
  }));
  const k = be(
    (I, S, P, T) => {
      if (jD.some((B) => P.has(B))) return;
      const A = pf.deserializeEditorState(I);
      if (A) {
        const B = !ui(h.current, A);
        if (B && (h.current = A), B || !ui(m, A)) {
          const V = P.has(Ch) ? "remote" : "local", J = Pb(T, I);
          i == null || i(A, T, V, J);
        }
      }
    },
    [m, i]
  );
  return /* @__PURE__ */ j(Vv, { initialConfig: sy, children: [
    /* @__PURE__ */ p(_5, { isEditable: !C }),
    /* @__PURE__ */ j("div", { className: "editor-container", children: [
      D ? /* @__PURE__ */ p(Wx, { onStateChange: o }) : /* @__PURE__ */ p("div", { className: "editor-toolbar-container" + (C ? "-readonly" : "-editable"), children: /* @__PURE__ */ p(
        oR,
        {
          ref: d,
          editorRef: c,
          isReadonly: C,
          onStateChange: o
        }
      ) }),
      /* @__PURE__ */ j("div", { className: "editor-inner", children: [
        /* @__PURE__ */ p(Jv, { editorRef: u }),
        /* @__PURE__ */ p(
          IS,
          {
            contentEditable: /* @__PURE__ */ p(
              Gv,
              {
                className: `editor-input usfm ${rI(O).join(" ")}`,
                spellCheck: R
              }
            ),
            placeholder: /* @__PURE__ */ p(cR, {}),
            ErrorBoundary: Xv
          }
        ),
        /* @__PURE__ */ p(Yv, {}),
        e && n && /* @__PURE__ */ p(GI, { scrRef: e, onScrRefChange: n }),
        e && /* @__PURE__ */ p(
          K5,
          {
            trigger: L,
            scrRef: e,
            getMarkerAction: (I, S) => BI(I, g, S, O)
          }
        ),
        /* @__PURE__ */ p(
          KI,
          {
            options: { view: O, nodes: M },
            editedUsjRef: h,
            usj: m,
            setUsj: b
          }
        ),
        /* @__PURE__ */ p(
          x5,
          {
            scripture: m,
            nodeOptions: M,
            editorAdaptor: Mh,
            viewOptions: O,
            logger: a
          },
          _
        ),
        /* @__PURE__ */ p(P5, { onChange: r }),
        /* @__PURE__ */ p(
          UO,
          {
            onChange: k,
            ignoreSelectionChange: !0,
            ignoreHistoryMergeTagChange: !0
          }
        ),
        /* @__PURE__ */ p(jO, { ref: f, logger: a }),
        /* @__PURE__ */ p(s5, { viewOptions: O }),
        /* @__PURE__ */ p(f5, {}),
        /* @__PURE__ */ p(g5, {}),
        /* @__PURE__ */ p(m5, { logger: a }),
        /* @__PURE__ */ p(v5, {}),
        /* @__PURE__ */ p(
          C5,
          {
            expandedNoteKeyRef: g,
            nodeOptions: M,
            viewOptions: O,
            logger: a
          }
        ),
        /* @__PURE__ */ p(L5, {}),
        /* @__PURE__ */ p(B5, { textDirection: N }),
        /* @__PURE__ */ p(U5, {}),
        l
      ] }),
      q && /* @__PURE__ */ p(YI, {})
    ] })
  ] });
}), uR = Yn(function(t, e) {
  const { children: n, ...r } = t;
  return /* @__PURE__ */ p(Qx, { ref: e, ...r });
});
function Zx() {
  return Math.random().toString(36).replace(/[^a-z]+/g, "").substr(0, 5);
}
function xu(t, e, n, r, i) {
  return {
    author: e,
    content: t,
    deleted: i === void 0 ? !1 : i,
    id: n === void 0 ? Zx() : n,
    timeStamp: r === void 0 ? performance.timeOrigin + performance.now() : r,
    type: "comment"
  };
}
function e2(t, e, n) {
  return {
    comments: e,
    id: n === void 0 ? Zx() : n,
    quote: t,
    type: "thread"
  };
}
function ay(t) {
  return {
    comments: Array.from(t.comments),
    id: t.id,
    quote: t.quote,
    type: "thread"
  };
}
function dR(t) {
  return {
    author: t.author,
    content: "[Deleted Comment]",
    deleted: !0,
    id: t.id,
    timeStamp: t.timeStamp,
    type: "comment"
  };
}
function gf(t) {
  const e = t._changeListeners;
  for (const n of e)
    n();
}
class fR {
  /**
   * Creates a new CommentStore instance.
   *
   * @param editor - The LexicalEditor instance.
   * @param logger - Optional logger instance.
   */
  constructor(e, n) {
    we(this, "_editor"), we(this, "_comments"), we(this, "_changeListeners"), we(this, "_collabProvider"), we(this, "logger"), this._comments = [], this._editor = e, this.logger = n, this._collabProvider = null, this._changeListeners = /* @__PURE__ */ new Set();
  }
  /**
   * Checks if collaborative editing is enabled.
   *
   * @returns True if collaborative editing is enabled, false otherwise.
   */
  isCollaborative() {
    return this._collabProvider !== null;
  }
  /**
   * Gets the current list of comments and threads.
   *
   * @returns The Comments array.
   */
  getComments() {
    return this._comments;
  }
  /**
   * Sets the list of comments and threads.
   *
   * @param comments - The new Comments array.
   */
  setComments(e) {
    this._comments = e, gf(this);
  }
  /**
   * Adds a comment or thread to the store.
   *
   * @param commentOrThread - The comment or thread to add.
   * @param thread - Optional parent thread to add the comment to.
   * @param offset - Optional offset for insertion.
   */
  addComment(e, n, r) {
    const i = Array.from(this._comments), o = this._getCollabComments();
    if (n !== void 0 && e.type === "comment")
      for (let s = 0; s < i.length; s++) {
        const a = i[s];
        if (a.type === "thread" && a.id === n.id) {
          const l = ay(a);
          i.splice(s, 1, l);
          const c = r !== void 0 ? r : l.comments.length;
          if (this.isCollaborative() && o !== null) {
            const u = o.get(s).get("comments");
            this._withRemoteTransaction(() => {
              const f = this._createCollabSharedMap(e);
              u.insert(c, [f]);
            });
          }
          l.comments.splice(c, 0, e);
          break;
        }
      }
    else {
      const s = r !== void 0 ? r : i.length;
      this.isCollaborative() && o !== null && this._withRemoteTransaction(() => {
        const a = this._createCollabSharedMap(e);
        o.insert(s, [a]);
      }), i.splice(s, 0, e);
    }
    this._comments = i, gf(this);
  }
  /**
   * Deletes a comment or thread from the store.
   *
   * @param commentOrThread - The comment or thread to delete.
   * @param thread - Optional parent thread if deleting a comment within a thread.
   * @returns An object containing the marked comment and its index, or null.
   */
  deleteCommentOrThread(e, n) {
    const r = Array.from(this._comments), i = this._getCollabComments();
    let o = null;
    if (n !== void 0)
      for (let s = 0; s < r.length; s++) {
        const a = r[s];
        if (a.type === "thread" && a.id === n.id) {
          const l = ay(a);
          r.splice(s, 1, l);
          const c = l.comments;
          if (o = c.indexOf(e), this.isCollaborative() && i !== null) {
            const u = i.get(s).get("comments"), f = o;
            this._withRemoteTransaction(() => {
              u.delete(f);
            });
          }
          c.splice(o, 1);
          break;
        }
      }
    else
      o = r.indexOf(e), this.isCollaborative() && i !== null && this._withRemoteTransaction(() => {
        i.delete(o);
      }), r.splice(o, 1);
    return this._comments = r, gf(this), e.type === "comment" ? {
      index: o,
      markedComment: dR(e)
    } : null;
  }
  /**
   * Registers a callback to be called when the comments change.
   *
   * @param onChange - The callback function.
   * @returns A function to unregister the callback.
   */
  registerOnChange(e) {
    const n = this._changeListeners;
    return n.add(e), () => {
      n.delete(e);
    };
  }
  _withRemoteTransaction(e) {
    const n = this._collabProvider;
    n !== null && n.doc.transact(e, this);
  }
  _withLocalTransaction(e) {
    const n = this._collabProvider;
    try {
      this._collabProvider = null, e();
    } finally {
      this._collabProvider = n;
    }
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _getCollabComments() {
    const e = this._collabProvider;
    return e !== null ? e.doc.get("comments", To) : null;
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _createCollabSharedMap(e) {
    const n = new Hs(), r = e.type, i = e.id;
    if (n.set("type", r), n.set("id", i), r === "comment")
      n.set("author", e.author), n.set("content", e.content), n.set("deleted", e.deleted), n.set("timeStamp", e.timeStamp);
    else {
      n.set("quote", e.quote);
      const o = new To();
      e.comments.forEach((s, a) => {
        const l = this._createCollabSharedMap(s);
        o.insert(a, [l]);
      }), n.set("comments", o);
    }
    return n;
  }
  /**
   * Registers collaborative editing support using a Yjs provider.
   *
   * @param provider - The Yjs Provider instance.
   * @returns A function to unregister collaboration and cleanup.
   */
  registerCollaboration(e) {
    this._collabProvider = e;
    const n = this._getCollabComments(), r = () => {
      e.connect();
    }, i = () => {
      try {
        e.disconnect();
      } catch {
      }
    }, o = this._editor.registerCommand(
      OD,
      (a) => {
        var l, c;
        return r !== void 0 && i !== void 0 && (a ? ((l = this.logger) == null || l.info("Comments connected!"), r()) : ((c = this.logger) == null || c.info("Comments disconnected!"), i())), !1;
      },
      es
    ), s = (a, l) => {
      if (l.origin !== this) {
        for (const c of a)
          if (c instanceof H_) {
            const u = c.target, f = c.delta;
            let d = 0;
            for (const h of f) {
              const g = h.insert, m = h.retain, b = h.delete, _ = u.parent, y = u === n ? void 0 : _ instanceof Hs && this._comments.find((C) => C.id === _.get("id"));
              if (Array.isArray(g)) {
                const C = d;
                g.slice().reverse().forEach((D) => {
                  const R = D.get("id"), N = D.get("type") === "thread" ? e2(
                    D.get("quote"),
                    D.get("comments").toArray().map(
                      (L) => xu(
                        L.get("content"),
                        L.get("author"),
                        L.get("id"),
                        L.get("timeStamp"),
                        L.get("deleted")
                      )
                    ),
                    R
                  ) : xu(
                    D.get("content"),
                    D.get("author"),
                    R,
                    D.get("timeStamp"),
                    D.get("deleted")
                  );
                  this._withLocalTransaction(() => {
                    this.addComment(N, y, C);
                  });
                });
              } else if (typeof m == "number")
                d += m;
              else if (typeof b == "number")
                for (let C = 0; C < b; C++) {
                  const D = y === void 0 || y === !1 ? this._comments[d] : y.comments[d];
                  this._withLocalTransaction(() => {
                    this.deleteCommentOrThread(D, y);
                  }), d++;
                }
            }
          }
      }
    };
    return n === null ? () => null : (n.observeDeep(s), r(), () => {
      n.unobserveDeep(s), o(), this._collabProvider = null;
    });
  }
}
function hR(t) {
  const [e, n] = fe(t.getComments());
  return ue(() => t.registerOnChange(() => {
    n(t.getComments());
  }), [t]), e;
}
function pR({
  onClose: t,
  children: e,
  title: n,
  closeOnClickOutside: r
}) {
  const i = xe(null);
  return ue(() => {
    i.current !== null && i.current.focus();
  }, []), ue(() => {
    let o = null;
    const s = (c) => {
      c.key === "Escape" && t();
    }, a = (c) => {
      const u = c.target;
      i.current !== null && !i.current.contains(u) && r && t();
    }, l = i.current;
    return l !== null && (o = l.parentElement, o !== null && o.addEventListener("click", a)), window.addEventListener("keydown", s), () => {
      window.removeEventListener("keydown", s), o !== null && (o == null || o.removeEventListener("click", a));
    };
  }, [r, t]), /* @__PURE__ */ p("div", { className: "Modal__overlay", role: "dialog", children: /* @__PURE__ */ j("div", { className: "Modal__modal", tabIndex: -1, ref: i, children: [
    /* @__PURE__ */ p("h2", { className: "Modal__title", children: n }),
    /* @__PURE__ */ p(
      "button",
      {
        className: "Modal__closeButton",
        "aria-label": "Close modal",
        type: "button",
        onClick: t,
        children: "X"
      }
    ),
    /* @__PURE__ */ p("div", { className: "Modal__content", children: e })
  ] }) });
}
function gR({
  onClose: t,
  children: e,
  title: n,
  closeOnClickOutside: r = !1
}) {
  return fi(
    /* @__PURE__ */ p(pR, { onClose: t, title: n, closeOnClickOutside: r, children: e }),
    document.body
  );
}
function t2() {
  const [t, e] = fe(null), n = be(() => {
    e(null);
  }, []), r = Ne(() => {
    if (t === null)
      return null;
    const { title: o, content: s, closeOnClickOutside: a } = t;
    return /* @__PURE__ */ p(gR, { onClose: n, title: o, closeOnClickOutside: a, children: s });
  }, [t, n]), i = be(
    (o, s, a = !1) => {
      e({
        closeOnClickOutside: a,
        content: s(n),
        title: o
      });
    },
    [n]
  );
  return [r, i];
}
const mR = {
  ...Xx,
  paragraph: "CommentEditorTheme__paragraph"
};
function wR(...t) {
  return t.filter(Boolean).join(" ");
}
function Gi({
  "data-test-id": t,
  children: e,
  className: n,
  onClick: r,
  disabled: i,
  small: o,
  title: s
}) {
  return /* @__PURE__ */ p(
    "button",
    {
      disabled: i,
      className: wR(
        "Button__root",
        i && "Button__disabled",
        o && "Button__small",
        n
      ),
      onClick: r,
      title: s,
      "aria-label": s,
      ...t && { "data-test-id": t },
      children: e
    }
  );
}
function bR({
  className: t
}) {
  return /* @__PURE__ */ p(Gv, { className: t || "ContentEditable__root" });
}
function yR({
  children: t,
  className: e
}) {
  return /* @__PURE__ */ p("div", { className: e || "Placeholder__root", children: t });
}
const ly = Se("INSERT_INLINE_COMMAND");
function vR({
  anchorKey: t,
  editor: e,
  showComments: n,
  onAddComment: r
}) {
  const i = xe(null), o = be(() => {
    const s = i.current, a = e.getRootElement(), l = e.getElementByKey(t);
    if (s !== null && a !== null && l !== null) {
      const { right: c } = a.getBoundingClientRect(), { top: u } = l.getBoundingClientRect();
      s.style.left = `${c - 20}px`, s.style.top = `${u - 30}px`;
    }
  }, [t, e]);
  return ue(() => (window.addEventListener("resize", o), () => {
    window.removeEventListener("resize", o);
  }), [e, o]), Cn(() => {
    o();
  }, [t, e, n, o]), /* @__PURE__ */ p("div", { className: "CommentPlugin_AddCommentBox", ref: i, children: /* @__PURE__ */ p("button", { className: "CommentPlugin_AddCommentBox_button", onClick: r, children: /* @__PURE__ */ p("i", { className: "icon add-comment" }) }) });
}
function _R({ onEscape: t }) {
  const [e] = Le();
  return ue(() => e.registerCommand(
    $u,
    (n) => t(n),
    Sc
  ), [e, t]), null;
}
function n2({
  className: t,
  autoFocus: e,
  onEscape: n,
  onChange: r,
  editorRef: i,
  placeholder: o = "Type a comment..."
}) {
  return /* @__PURE__ */ p(Vv, { initialConfig: {
    namespace: "Commenting",
    nodes: [],
    onError: (s) => {
      throw s;
    },
    theme: mR
  }, children: /* @__PURE__ */ j("div", { className: "CommentPlugin_CommentInputBox_EditorContainer", children: [
    /* @__PURE__ */ p(
      jT,
      {
        contentEditable: /* @__PURE__ */ p(bR, { className: t }),
        placeholder: /* @__PURE__ */ p(yR, { children: o }),
        ErrorBoundary: Xv
      }
    ),
    /* @__PURE__ */ p(RT, { onChange: r }),
    /* @__PURE__ */ p(Yv, {}),
    e !== !1 && /* @__PURE__ */ p(AT, {}),
    /* @__PURE__ */ p(_R, { onEscape: n }),
    /* @__PURE__ */ p(MT, {}),
    i !== void 0 && /* @__PURE__ */ p(Jv, { editorRef: i })
  ] }) });
}
function r2(t, e) {
  return be(
    (n, r) => {
      n.read(() => {
        t(Hv()), e(!Wv(r.isComposing(), !0));
      });
    },
    [e, t]
  );
}
function xR({
  editor: t,
  cancelAddComment: e,
  submitAddComment: n
}) {
  const [r, i] = fe(""), [o, s] = fe(!1), a = xe(null), l = Ne(
    () => ({
      container: document.createElement("div"),
      elements: []
    }),
    []
  ), c = xe(null), u = o2(), f = be(() => {
    t.getEditorState().read(() => {
      const m = oe();
      if (Z(m)) {
        c.current = m.clone();
        const b = m.anchor, _ = m.focus, y = _E(
          t,
          b.getNode(),
          b.offset,
          _.getNode(),
          _.offset
        ), C = a.current;
        if (y !== null && C !== null) {
          const { left: D, bottom: R, width: N } = y.getBoundingClientRect(), L = xE(t, y);
          let O = L.length === 1 ? D + N / 2 - 125 : D - 125;
          O < 10 && (O = 10), C.style.left = `${O}px`, C.style.top = `${R + 20 + (window.pageYOffset || document.documentElement.scrollTop)}px`;
          const M = L.length, { container: q } = l, k = l.elements, I = k.length;
          for (let S = 0; S < M; S++) {
            const P = L[S];
            let T = k[S];
            T === void 0 && (T = document.createElement("span"), k[S] = T, q.appendChild(T));
            const A = `position:absolute;top:${P.top + (window.pageYOffset || document.documentElement.scrollTop)}px;left:${P.left}px;height:${P.height}px;width:${P.width}px;background-color:rgba(255, 212, 0, 0.3);pointer-events:none;z-index:5;`;
            T.style.cssText = A;
          }
          for (let S = I - 1; S >= M; S--) {
            const P = k[S];
            q.removeChild(P), k.pop();
          }
        }
      }
    });
  }, [t, l]);
  Cn(() => {
    f();
    const m = l.container, b = document.body;
    return b !== null ? (b.appendChild(m), () => {
      b.removeChild(m);
    }) : () => {
    };
  }, [l.container, f]), ue(() => (window.addEventListener("resize", f), () => {
    window.removeEventListener("resize", f);
  }), [f]);
  const d = (m) => (m.preventDefault(), e(), !0), h = () => {
    if (o) {
      let m = t.getEditorState().read(() => {
        const b = c.current;
        return b ? b.getTextContent() : "";
      });
      m.length > 100 && (m = m.slice(0, 99) + "…"), n(
        e2(m, [xu(r, u)]),
        !0,
        void 0,
        c.current
      ), c.current = null;
    }
  }, g = r2(i, s);
  return /* @__PURE__ */ j("div", { className: "CommentPlugin_CommentInputBox", ref: a, children: [
    /* @__PURE__ */ p(
      n2,
      {
        className: "CommentPlugin_CommentInputBox_Editor",
        onEscape: d,
        onChange: g
      }
    ),
    /* @__PURE__ */ j("div", { className: "CommentPlugin_CommentInputBox_Buttons", children: [
      /* @__PURE__ */ p(Gi, { onClick: e, className: "CommentPlugin_CommentInputBox_Button", children: "Cancel" }),
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: h,
          disabled: !o,
          className: "CommentPlugin_CommentInputBox_Button primary",
          children: "Comment"
        }
      )
    ] })
  ] });
}
function CR({
  submitAddComment: t,
  thread: e,
  placeholder: n
}) {
  const [r, i] = fe(""), [o, s] = fe(!1), a = xe(null), l = o2(), c = r2(i, s);
  return /* @__PURE__ */ j(Lt, { children: [
    /* @__PURE__ */ p(
      n2,
      {
        className: "CommentPlugin_CommentsPanel_Editor",
        autoFocus: !1,
        onEscape: () => !0,
        onChange: c,
        editorRef: a,
        placeholder: n
      }
    ),
    /* @__PURE__ */ p(
      Gi,
      {
        className: "CommentPlugin_CommentsPanel_SendButton",
        onClick: () => {
          if (o) {
            t(xu(r, l), !1, e);
            const u = a.current;
            u !== null && u.dispatchCommand(gp, void 0);
          }
        },
        disabled: !o,
        children: /* @__PURE__ */ p("i", { className: "send" })
      }
    )
  ] });
}
function i2({
  commentOrThread: t,
  deleteCommentOrThread: e,
  onClose: n,
  thread: r = void 0
}) {
  return /* @__PURE__ */ j(Lt, { children: [
    "Are you sure you want to delete this ",
    t.type,
    "?",
    /* @__PURE__ */ j("div", { className: "Modal__content", children: [
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: () => {
            e(t, r), n();
          },
          children: "Delete"
        }
      ),
      " ",
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: () => {
            n();
          },
          children: "Cancel"
        }
      )
    ] })
  ] });
}
function cy({
  comment: t,
  deleteComment: e,
  thread: n,
  rtf: r
}) {
  const i = Math.round(
    (t.timeStamp - (performance.timeOrigin + performance.now())) / 1e3
  ), o = Math.round(i / 60), [s, a] = t2();
  return /* @__PURE__ */ j("li", { className: "CommentPlugin_CommentsPanel_List_Comment", children: [
    /* @__PURE__ */ j("div", { className: "CommentPlugin_CommentsPanel_List_Details", children: [
      /* @__PURE__ */ p("span", { className: "CommentPlugin_CommentsPanel_List_Comment_Author", children: t.author }),
      /* @__PURE__ */ j("span", { className: "CommentPlugin_CommentsPanel_List_Comment_Time", children: [
        "· ",
        i > -10 ? "Just now" : r.format(o, "minute")
      ] })
    ] }),
    /* @__PURE__ */ p("p", { className: t.deleted ? "CommentPlugin_CommentsPanel_DeletedComment" : "", children: t.content }),
    !t.deleted && /* @__PURE__ */ j(Lt, { children: [
      /* @__PURE__ */ p(
        Gi,
        {
          onClick: () => {
            a("Delete Comment", (l) => /* @__PURE__ */ p(
              i2,
              {
                commentOrThread: t,
                deleteCommentOrThread: e,
                thread: n,
                onClose: l
              }
            ));
          },
          className: "CommentPlugin_CommentsPanel_List_DeleteButton",
          children: /* @__PURE__ */ p("i", { className: "delete" })
        }
      ),
      s
    ] })
  ] });
}
function kR({
  activeIDs: t,
  comments: e,
  deleteCommentOrThread: n,
  listRef: r,
  submitAddComment: i,
  markNodeMap: o
}) {
  const [s] = Le(), [a, l] = fe(0), [c, u] = t2(), f = Ne(
    () => new Intl.RelativeTimeFormat("en", {
      localeMatcher: "best fit",
      numeric: "auto",
      style: "short"
    }),
    []
  );
  return ue(() => {
    const d = setTimeout(() => {
      l(a + 1);
    }, 1e4);
    return () => {
      clearTimeout(d);
    };
  }, [a]), /* @__PURE__ */ p("ul", { className: "CommentPlugin_CommentsPanel_List", ref: r, children: e.map((d) => {
    const h = d.id;
    return d.type === "thread" ? /* @__PURE__ */ j(
      "li",
      {
        onClick: () => {
          const g = o.get(h);
          if (g !== void 0 && (t === null || t.indexOf(h) === -1)) {
            const m = document.activeElement;
            s.update(
              () => {
                const b = Array.from(g)[0], _ = Me(b);
                on(_) && _.selectStart();
              },
              {
                onUpdate() {
                  m !== null && m.focus();
                }
              }
            );
          }
        },
        className: `CommentPlugin_CommentsPanel_List_Thread ${o.has(h) ? "interactive" : ""} ${t.indexOf(h) === -1 ? "" : "active"}`,
        children: [
          /* @__PURE__ */ j("div", { className: "CommentPlugin_CommentsPanel_List_Thread_QuoteBox", children: [
            /* @__PURE__ */ j("blockquote", { className: "CommentPlugin_CommentsPanel_List_Thread_Quote", children: [
              "> ",
              /* @__PURE__ */ p("span", { children: d.quote })
            ] }),
            /* @__PURE__ */ p(
              Gi,
              {
                onClick: () => {
                  u("Delete Thread", (g) => /* @__PURE__ */ p(
                    i2,
                    {
                      commentOrThread: d,
                      deleteCommentOrThread: n,
                      onClose: g
                    }
                  ));
                },
                className: "CommentPlugin_CommentsPanel_List_DeleteButton",
                children: /* @__PURE__ */ p("i", { className: "delete" })
              }
            ),
            c
          ] }),
          /* @__PURE__ */ p("ul", { className: "CommentPlugin_CommentsPanel_List_Thread_Comments", children: d.comments.map((g) => /* @__PURE__ */ p(
            cy,
            {
              comment: g,
              deleteComment: n,
              thread: d,
              rtf: f
            },
            g.id
          )) }),
          /* @__PURE__ */ p("div", { className: "CommentPlugin_CommentsPanel_List_Thread_Editor", children: /* @__PURE__ */ p(
            CR,
            {
              submitAddComment: i,
              thread: d,
              placeholder: "Reply to comment..."
            }
          ) })
        ]
      },
      h
    ) : /* @__PURE__ */ p(
      cy,
      {
        comment: d,
        deleteComment: n,
        rtf: f
      },
      h
    );
  }) });
}
function ER({
  activeIDs: t,
  deleteCommentOrThread: e,
  comments: n,
  submitAddComment: r,
  markNodeMap: i
}) {
  const o = xe(null), s = n.length === 0;
  return /* @__PURE__ */ j("div", { className: "CommentPlugin_CommentsPanel", children: [
    /* @__PURE__ */ p("h2", { className: "CommentPlugin_CommentsPanel_Heading", children: "Comments" }),
    s ? /* @__PURE__ */ p("div", { className: "CommentPlugin_CommentsPanel_Empty", children: "No Comments" }) : /* @__PURE__ */ p(
      kR,
      {
        activeIDs: t,
        comments: n,
        deleteCommentOrThread: e,
        listRef: o,
        submitAddComment: r,
        markNodeMap: i
      }
    )
  ] });
}
function o2() {
  const t = f_(), { yjsDocMap: e, name: n } = t;
  return e.has("comments") ? n : "Scripture User";
}
function NR({
  providerFactory: t,
  setCommentStore: e,
  onChange: n,
  showCommentsContainerRef: r,
  commentContainerRef: i,
  logger: o
}) {
  const s = f_(), [a] = Le(), l = Ne(() => {
    const O = new fR(a, o);
    return n && O.registerOnChange(n), e == null || e(O), O;
  }, [a, o, n, e]), c = hR(l), u = Ne(() => /* @__PURE__ */ new Map(), []), [f, d] = fe(), [h, g] = fe([]), [m, b] = fe(!1), [_, y] = fe(!1), { yjsDocMap: C } = s;
  ue(() => {
    if (t) {
      const O = t("comments", C);
      return l.registerCollaboration(O);
    }
    return () => {
    };
  }, [l, t, C]);
  const D = be(() => {
    a.update(() => {
      const O = oe();
      O !== null && (O.dirty = !0);
    }), b(!1);
  }, [a]), R = be(
    (O, M) => {
      if (O.type === "comment") {
        const q = l.deleteCommentOrThread(O, M);
        if (!q)
          return;
        const { markedComment: k, index: I } = q;
        l.addComment(k, M, I);
      } else {
        l.deleteCommentOrThread(O);
        const q = M !== void 0 ? M.id : O.id, k = u.get(q);
        k !== void 0 && setTimeout(() => {
          a.update(() => {
            for (const I of k) {
              const S = Me(I);
              on(S) && (S.deleteID($i, q), S.hasNoIDsForEveryType() && Ex(S));
            }
          });
        });
      }
    },
    [l, a, u]
  ), N = be(
    (O, M, q, k) => {
      l.addComment(O, q), M && (a.update(() => {
        Z(k) && Nx(k, $i, O.id);
      }), b(!1));
    },
    [l, a]
  );
  ue(() => {
    const O = [];
    for (const M of h) {
      const q = u.get(M);
      if (q !== void 0)
        for (const k of q) {
          const I = a.getElementByKey(k);
          I !== null && (I.classList.add("selected"), O.push(I), y(!0));
        }
    }
    return () => {
      for (const M of O)
        M.classList.remove("selected");
    };
  }, [h, a, u]), ue(() => {
    if (!a.hasNodes([nn]))
      throw new Error("CommentPlugin: TypedMarkNode not registered on editor!");
    const O = /* @__PURE__ */ new Map();
    return Ht(
      dv(
        a,
        nn,
        (M) => ml(M.getTypedIDs()),
        (M, q) => {
          for (const [k, I] of Object.entries(M.getTypedIDs()))
            I.forEach((S) => {
              q.addID(k, S);
            });
        }
      ),
      a.registerMutationListener(
        nn,
        (M) => {
          a.getEditorState().read(() => {
            for (const [q, k] of M) {
              const I = Me(q);
              let S = [];
              k === "destroyed" ? S = O.get(q) ?? [] : on(I) && (S = I.getTypedIDs()[$i] ?? []);
              for (const P of S) {
                let T = u.get(P);
                O.set(q, S), k === "destroyed" ? T !== void 0 && (T.delete(q), T.size === 0 && u.delete(P)) : (T === void 0 && (T = /* @__PURE__ */ new Set(), u.set(P, T)), T.has(q) || T.add(q));
              }
            }
          });
        },
        { skipInitialization: !1 }
      ),
      a.registerUpdateListener(({ editorState: M, tags: q }) => {
        M.read(() => {
          const k = oe();
          let I = !1, S = !1;
          if (Z(k)) {
            const P = k.anchor.getNode();
            if (ie(P)) {
              const T = EM(P, $i, k.anchor.offset) ?? [];
              T !== null && (g(T), I = !0), k.isCollapsed() || (d(P.getKey()), S = !0);
            }
          }
          I || g((P) => P.length === 0 ? P : []), S || d(null), !q.has("collaboration") && Z(k) && b(!1);
        });
      }),
      a.registerCommand(
        ly,
        () => {
          const M = window.getSelection();
          return M !== null && M.removeAllRanges(), b(!0), !0;
        },
        ke
      )
    );
  }, [a, u]);
  const L = () => {
    a.dispatchCommand(ly, void 0);
  };
  return /* @__PURE__ */ j(Lt, { children: [
    m && fi(
      /* @__PURE__ */ p(
        xR,
        {
          editor: a,
          cancelAddComment: D,
          submitAddComment: N
        }
      ),
      document.body
    ),
    f != null && !m && fi(
      /* @__PURE__ */ p(
        vR,
        {
          anchorKey: f,
          editor: a,
          showComments: _,
          onAddComment: L
        }
      ),
      document.body
    ),
    r !== null && fi(
      /* @__PURE__ */ p(
        Gi,
        {
          className: `CommentPlugin_ShowCommentsButton ${_ ? "active" : ""}`,
          onClick: () => y(!_),
          title: _ ? "Hide Comments" : "Show Comments",
          children: /* @__PURE__ */ p("i", { className: "comments" })
        }
      ),
      (r == null ? void 0 : r.current) ?? document.body
    ),
    _ && fi(
      /* @__PURE__ */ p(
        ER,
        {
          comments: c,
          submitAddComment: N,
          deleteCommentOrThread: R,
          activeIDs: h,
          markNodeMap: u
        }
      ),
      (i == null ? void 0 : i.current) ?? document.body
    )
  ] });
}
function SR() {
  const t = xe(void 0), e = be((n) => {
    t.current = n;
  }, []);
  return [t, e];
}
function TR(t, e) {
  var n, r;
  const i = ((n = e.current) == null ? void 0 : n.getComments()) ?? [], o = i == null ? void 0 : i.map((a) => a.id), s = t.map((a) => {
    const l = o.findIndex((c) => c === a);
    return l !== void 0 && l >= 0 ? i[l] : {
      comments: [
        {
          author: "unknown",
          content: "Comment not found",
          deleted: !1,
          id: "",
          timeStamp: 0,
          type: "comment"
        }
      ],
      id: a,
      quote: "",
      type: "thread"
    };
  });
  i.forEach((a) => {
    t.includes(a.id) || s.push(a);
  }), s && ((r = e.current) == null || r.setComments(s));
}
function AR(t, e) {
  ue(() => {
    var n;
    t.options ?? (t.options = {}), (n = t.options).nodes ?? (n.nodes = {}), t.options.nodes.addMissingComments = (r) => {
      TR(r, e);
    };
  }, [e, t]);
}
Yn(function(t, e) {
  const n = xe(null), r = xe(!0), i = xe(null), [o, s] = fe(null), { children: a, onCommentChange: l, onUsjChange: c, showCommentsContainerRef: u, ...f } = t, { options: { isReadonly: d } = {} } = t, [h, g] = SR();
  AR(f, h), Fh(e, () => ({
    focus() {
      var _;
      (_ = n.current) == null || _.focus();
    },
    undo() {
      var _;
      (_ = n.current) == null || _.undo();
    },
    redo() {
      var _;
      (_ = n.current) == null || _.redo();
    },
    cut() {
      var _;
      (_ = n.current) == null || _.cut();
    },
    copy() {
      var _;
      (_ = n.current) == null || _.copy();
    },
    paste() {
      var _;
      (_ = n.current) == null || _.paste();
    },
    pastePlainText() {
      var _;
      (_ = n.current) == null || _.pastePlainText();
    },
    getUsj() {
      var _;
      return (_ = n.current) == null ? void 0 : _.getUsj();
    },
    setUsj(_) {
      var y;
      (y = n.current) == null || y.setUsj(_);
    },
    applyUpdate(_, y) {
      var C;
      (C = n.current) == null || C.applyUpdate(_, y);
    },
    replaceEmbedUpdate(_, y) {
      var C;
      return (C = n.current) == null ? void 0 : C.replaceEmbedUpdate(_, y);
    },
    getSelection() {
      var _;
      return (_ = n.current) == null ? void 0 : _.getSelection();
    },
    setSelection(_) {
      var y;
      (y = n.current) == null || y.setSelection(_);
    },
    addAnnotation(_, y, C) {
      var D;
      (D = n.current) == null || D.addAnnotation(_, y, C);
    },
    removeAnnotation(_, y) {
      var C;
      (C = n.current) == null || C.removeAnnotation(_, y);
    },
    formatPara(_) {
      var y;
      (y = n.current) == null || y.formatPara(_);
    },
    insertNote(_, y, C) {
      var D;
      (D = n.current) == null || D.insertNote(_, y, C);
    },
    selectNote(_) {
      var y;
      (y = n.current) == null || y.selectNote(_);
    },
    getNoteOps(_) {
      var y;
      return (y = n.current) == null ? void 0 : y.getNoteOps(_);
    },
    setComments(_) {
      var y;
      (y = h.current) == null || y.setComments(_), r.current = !0;
    },
    get toolbarEndRef() {
      return o;
    }
  }));
  const m = be(
    (_, y, C, D) => {
      var R;
      if (!c) return;
      const N = (R = h.current) == null ? void 0 : R.getComments();
      c(_, N, y, C, D);
    },
    [h, c]
  ), b = be(() => {
    var _;
    if (!l || r.current) {
      r.current = !1;
      return;
    }
    const y = (_ = h.current) == null ? void 0 : _.getComments();
    l(y);
  }, [h, r, l]);
  return ue(() => {
    var _;
    return s(((_ = n.current) == null ? void 0 : _.toolbarEndRef) ?? null), () => s(null);
  }, []), /* @__PURE__ */ j(Qx, { ref: n, onUsjChange: m, ...f, children: [
    /* @__PURE__ */ p(
      NR,
      {
        setCommentStore: g,
        onChange: b,
        showCommentsContainerRef: d ? null : u ?? o,
        commentContainerRef: i,
        logger: f.logger
      }
    ),
    /* @__PURE__ */ p("div", { ref: i, className: "comment-container" })
  ] });
});
function VL({
  noteOps: t,
  onSave: e,
  onClose: n,
  scrRef: r,
  noteKey: i,
  viewOptions: o
}) {
  const s = xe(null), a = z2(), l = Ne(
    () => ({
      isReadonly: !1,
      hasSpellCheck: !1,
      hasExternalUI: !0,
      // Might need to change this later
      textDirection: "auto",
      nodes: {
        noteCallerOnClick: (f, d, h, g, m) => {
          h || (g() === Vo ? m(rg) : m(Vo));
        }
      },
      view: { ...o, noteMode: "expanded" }
    }),
    [o]
  );
  return ue(() => {
    var f, d;
    if (t && !((d = (f = s.current) == null ? void 0 : f.getUsj()) != null && d.content)) {
      const h = setTimeout(() => {
        var g, m;
        (g = s.current) == null || g.setUsj(Qh), (m = s.current) == null || m.applyUpdate(t);
      }, 0);
      return () => {
        h && clearTimeout(h);
      };
    }
    return () => {
    };
  }, [t, i]), /* @__PURE__ */ j("div", { className: "tw-grid tw-gap-[12px]", children: [
    /* @__PURE__ */ j("div", { className: "tw-flex tw-w-full tw-justify-end tw-gap-4", children: [
      /* @__PURE__ */ p(Pe, { onClick: n, className: "tw-h-6 tw-w-6", size: "icon", variant: "secondary", children: /* @__PURE__ */ p(ku, {}) }),
      /* @__PURE__ */ p(Pe, { onClick: () => {
        var d;
        const f = (d = s.current) == null ? void 0 : d.getNoteOps(0);
        f && e(f);
      }, className: "tw-h-6 tw-w-6", size: "icon", variant: "default", children: /* @__PURE__ */ p(xi, {}) })
    ] }),
    /* @__PURE__ */ j(
      "div",
      {
        ref: a,
        className: "tw-relative tw-rounded-[6px] tw-border-2 tw-border-ring",
        children: [
          /* @__PURE__ */ p(uR, { options: l, onScrRefChange: () => {
          }, scrRef: r, ref: s }),
          /* @__PURE__ */ p("div", { className: "tw-absolute tw-bottom-0 tw-right-0", children: /* @__PURE__ */ p(Pe, { onClick: () => {
            var d;
            const f = (d = a.current) == null ? void 0 : d.getElementsByClassName("editor-input")[0];
            f != null && f.textContent && navigator.clipboard.writeText(f.textContent);
          }, className: "tw-h-6 tw-w-6", variant: "ghost", size: "icon", children: /* @__PURE__ */ p(gy, {}) }) })
        ]
      }
    )
  ] });
}
function s2(t, e) {
  if (!e || e.length === 0) return t ?? "empty";
  const n = e.find((i) => typeof i == "string");
  if (n)
    return `key-${t ?? "unknown"}-${n.slice(0, 10)}`;
  const r = typeof e[0] == "string" ? "impossible" : e[0].marker ?? "unknown";
  return `key-${t ?? "unknown"}-${r}`;
}
function DR(t, e, n = !0, r = void 0) {
  if (!e || e.length === 0) return;
  const i = [], o = [];
  let s = [];
  return e.forEach((a) => {
    typeof a != "string" && a.marker === "fp" ? (s.length > 0 && o.push(s), s = [a]) : s.push(a);
  }), s.length > 0 && o.push(s), o.map((a, l) => {
    const c = l === o.length - 1;
    return /* @__PURE__ */ j("p", { className: "tw-mb-2", children: [
      Dg(t, a, n, !0, i),
      c && r
    ] }, s2(t, a));
  });
}
function Dg(t, e, n = !0, r = !0, i = []) {
  if (!(!e || e.length === 0))
    return e.map((o) => {
      if (typeof o == "string") {
        const s = `${t}-text-${o.slice(0, 10)}`;
        if (r) {
          const a = G(`usfm_${t}`);
          return /* @__PURE__ */ p("span", { className: a, children: o }, s);
        }
        return /* @__PURE__ */ j(
          "span",
          {
            className: "tw-inline-flex tw-items-center tw-gap-1 tw-underline tw-decoration-destructive",
            children: [
              /* @__PURE__ */ p(_f, { className: "tw-h-4 tw-w-4 tw-fill-destructive" }),
              /* @__PURE__ */ p("span", { children: o }),
              /* @__PURE__ */ p(_f, { className: "tw-h-4 tw-w-4 tw-fill-destructive" })
            ]
          },
          s
        );
      }
      return MR(
        o,
        s2(`${t}\\${o.marker}`, [o]),
        n,
        [...i, t ?? "unknown"]
      );
    });
}
function MR(t, e, n, r = []) {
  const { marker: i } = t;
  return /* @__PURE__ */ j("span", { children: [
    i ? n && /* @__PURE__ */ p("span", { className: "marker", children: `\\${i} ` }) : /* @__PURE__ */ p(
      _f,
      {
        className: "tw-text-error tw-mr-1 tw-inline-block tw-h-4 tw-w-4",
        "aria-label": "Missing marker"
      }
    ),
    Dg(i, t.content, n, !0, [
      ...r,
      i ?? "unknown"
    ])
  ] }, e);
}
function OR({
  footnote: t,
  layout: e = "horizontal",
  formatCaller: n,
  showMarkers: r = !0
}) {
  const i = n ? n(t.caller) : t.caller, o = i !== t.caller;
  let s, a = t.content;
  Array.isArray(t.content) && t.content.length > 0 && typeof t.content[0] != "string" && (t.content[0].marker === "fr" || t.content[0].marker === "xo") && ([s, ...a] = t.content);
  const l = r ? /* @__PURE__ */ p("span", { className: "marker", children: `\\${t.marker} ` }) : void 0, c = r ? /* @__PURE__ */ p("span", { className: "marker", children: ` \\${t.marker}*` }) : void 0, u = /* @__PURE__ */ j(Lt, { children: [
    i && // USFM does not specify a marker for caller, so instead of a usfm_* class, we use a
    // specific class name in case styling is needed.
    /* @__PURE__ */ j("span", { className: G("note-caller", { formatted: o }), children: [
      i,
      " "
    ] }),
    s && /* @__PURE__ */ j(Lt, { children: [
      Dg(t.marker, [s], r, !1),
      " "
    ] })
  ] }), h = G(e === "horizontal" ? "horizontal tw-table-cell" : "vertical", r ? "marker-visible" : "");
  return /* @__PURE__ */ j(Lt, { children: [
    /* @__PURE__ */ j("div", { className: G("textual-note-header tw-text-nowrap tw-pr-2", h), children: [
      l,
      u
    ] }),
    /* @__PURE__ */ p("div", { className: G("textual-note-body", h), children: a && a.length > 0 && /* @__PURE__ */ p(Lt, { children: DR(t.marker, a, r, c) }) })
  ] });
}
const a2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      className: G(
        "pr-twp tw-rounded-lg tw-border tw-bg-card tw-text-card-foreground tw-shadow-sm",
        t
      ),
      ...e
    }
  )
);
a2.displayName = "Card";
const IR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      className: G("pr-twp tw-flex tw-flex-col tw-space-y-1.5 tw-p-6", t),
      ...e
    }
  )
);
IR.displayName = "CardHeader";
const RR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "h3",
    {
      ref: n,
      className: G(
        "pr-twp tw-text-2xl tw-font-semibold tw-leading-none tw-tracking-tight",
        t
      ),
      ...e,
      children: e.children
    }
  )
);
RR.displayName = "CardTitle";
const PR = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p("p", { ref: n, className: G("pr-twp tw-text-sm tw-text-muted-foreground", t), ...e }));
PR.displayName = "CardDescription";
const LR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p("div", { ref: n, className: G("pr-twp tw-p-6 tw-pt-0", t), ...e })
);
LR.displayName = "CardContent";
const $R = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      className: G("pr-twp tw-flex tw-items-center tw-p-6 tw-pt-0", t),
      ...e
    }
  )
);
$R.displayName = "CardFooter";
const FR = (t, e) => t[e] ?? e;
function HL({
  className: t,
  footnotes: e,
  layout: n = "horizontal",
  listId: r,
  selectedFootnote: i,
  showMarkers: o = !0,
  suppressFormatting: s = !1,
  formatCaller: a,
  onFootnoteSelected: l,
  localizedStrings: c
}) {
  const u = c ? FR(c, "%webView_footnoteList_header%") : "Footnotes", f = a ?? k1(e, void 0), d = (y, C) => {
    l == null || l(y, C, r);
  }, h = i ? e.findIndex((y) => y === i) : 0, [g, m] = fe(h), b = (y) => {
    if (e.length)
      switch (y.key) {
        case "ArrowDown":
          y.preventDefault(), m((C) => Math.min(C + 1, e.length - 1));
          break;
        case "ArrowUp":
          y.preventDefault(), m((C) => Math.max(C - 1, 0));
          break;
        case "Enter":
        case " ":
          y.preventDefault(), l == null || l(e[g], g, r);
          break;
      }
  }, _ = xe([]);
  return ue(() => {
    var y;
    g >= 0 && g < _.current.length && ((y = _.current[g]) == null || y.focus());
  }, [g]), /* @__PURE__ */ j(Lt, { children: [
    n === "vertical" && /* @__PURE__ */ p("h2", { className: "tw-mb-1 tw-font-semibold", children: u }),
    /* @__PURE__ */ p(
      "div",
      {
        role: "listbox",
        "aria-label": "Footnotes",
        tabIndex: 0,
        className: G("tw-h-full tw-overflow-y-auto", t),
        onKeyDown: b,
        children: /* @__PURE__ */ p(
          "div",
          {
            className: G(
              "tw-p-0.5",
              n === "horizontal" ? "tw-table" : "tw-flex tw-flex-col tw-gap-1",
              !s && "formatted-font"
            ),
            children: e.map((y, C) => {
              const D = y === i, R = `${r}-${C}`;
              return /* @__PURE__ */ p(
                a2,
                {
                  ref: (N) => {
                    _.current[C] = N;
                  },
                  role: "option",
                  "aria-selected": D,
                  "data-marker": y.marker,
                  "data-state": D ? "selected" : void 0,
                  tabIndex: -1,
                  className: G(
                    "data-[state=selected]:tw-bg-muted",
                    l && "tw-cursor-pointer hover:tw-bg-muted/50",
                    "tw-w-full tw-rounded-sm tw-border-0 tw-bg-transparent tw-py-0 tw-shadow-none",
                    n === "horizontal" ? "horizontal tw-table-row" : "vertical tw-block tw-text-sm"
                  ),
                  onClick: () => d(y, C),
                  children: /* @__PURE__ */ p(
                    OR,
                    {
                      footnote: y,
                      layout: n,
                      formatCaller: () => f(y.caller, C),
                      showMarkers: o
                    }
                  )
                },
                R
              );
            })
          }
        )
      }
    )
  ] });
}
function BR({
  occurrenceData: t,
  setScriptureReference: e,
  localizedStrings: n
}) {
  const r = n["%webView_inventory_occurrences_table_header_reference%"], i = n["%webView_inventory_occurrences_table_header_occurrence%"], o = Ne(() => {
    const s = [];
    return t.forEach((a) => {
      s.some((l) => qh(l, a)) || s.push(a);
    }), s;
  }, [t]);
  return /* @__PURE__ */ j(Mu, { stickyHeader: !0, children: [
    /* @__PURE__ */ p(Ou, { stickyHeader: !0, children: /* @__PURE__ */ j(hi, { children: [
      /* @__PURE__ */ p(Ya, { children: r }),
      /* @__PURE__ */ p(Ya, { children: i })
    ] }) }),
    /* @__PURE__ */ p(Iu, { children: o.length > 0 && o.map((s) => /* @__PURE__ */ j(
      hi,
      {
        onClick: () => {
          e(s.reference);
        },
        children: [
          /* @__PURE__ */ p(vo, { children: `${nt.bookIdToEnglishName(s.reference.book)} ${s.reference.chapterNum}:${s.reference.verseNum}` }),
          /* @__PURE__ */ p(vo, { children: s.text })
        ]
      },
      `${s.reference.book} ${s.reference.chapterNum}:${s.reference.verseNum}-${s.text}`
    )) })
  ] });
}
const Mg = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Cf.Root,
  {
    ref: n,
    className: G(
      "tw-peer pr-twp tw-h-4 tw-w-4 tw-shrink-0 tw-rounded-sm tw-border tw-border-primary tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 data-[state=checked]:tw-bg-primary data-[state=checked]:tw-text-primary-foreground",
      t
    ),
    ...e,
    children: /* @__PURE__ */ p(
      Cf.Indicator,
      {
        className: G("tw-flex tw-items-center tw-justify-center tw-text-current"),
        children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" })
      }
    )
  }
));
Mg.displayName = Cf.Root.displayName;
const Vl = Y.forwardRef(
  ({ className: t, type: e, ...n }, r) => /* @__PURE__ */ p(
    "input",
    {
      type: e,
      className: G(
        "pr-twp tw-flex tw-h-10 tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background file:tw-border-0 file:tw-bg-transparent file:tw-text-sm file:tw-font-medium file:tw-text-foreground placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50",
        t
      ),
      ref: r,
      ...n
    }
  )
);
Vl.displayName = "Input";
const l2 = Ji(
  "pr-twp tw-inline-flex tw-items-center tw-justify-center tw-rounded-md tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-colors hover:tw-bg-muted hover:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=on]:tw-bg-accent data-[state=on]:tw-text-accent-foreground",
  {
    variants: {
      variant: {
        default: "tw-bg-transparent",
        outline: "tw-border tw-border-input tw-bg-transparent hover:tw-bg-accent hover:tw-text-accent-foreground"
      },
      size: {
        default: "tw-h-10 tw-px-3",
        sm: "tw-h-9 tw-px-2.5",
        lg: "tw-h-11 tw-px-5"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), qR = Y.forwardRef(({ className: t, variant: e, size: n, ...r }, i) => /* @__PURE__ */ p(
  _y.Root,
  {
    ref: i,
    className: G(l2({ variant: e, size: n, className: t })),
    ...r
  }
));
qR.displayName = _y.Root.displayName;
const c2 = Y.createContext({
  size: "default",
  variant: "default"
}), u2 = Y.forwardRef(({ className: t, variant: e, size: n, children: r, ...i }, o) => {
  const s = Jt();
  return /* @__PURE__ */ p(
    Su.Root,
    {
      ref: o,
      className: G("pr-twp tw-flex tw-items-center tw-justify-center tw-gap-1", t),
      ...i,
      dir: s,
      children: /* @__PURE__ */ p(
        c2.Provider,
        {
          value: { variant: e, size: n },
          children: r
        }
      )
    }
  );
});
u2.displayName = Su.Root.displayName;
const Lc = Y.forwardRef(({ className: t, children: e, variant: n, size: r, ...i }, o) => {
  const s = Y.useContext(c2);
  return /* @__PURE__ */ p(
    Su.Item,
    {
      ref: o,
      className: G(
        l2({
          variant: s.variant || n,
          size: s.size || r
        }),
        t
      ),
      ...i,
      children: e
    }
  );
});
Lc.displayName = Su.Item.displayName;
const ad = (t) => t === "asc" ? /* @__PURE__ */ p(s1, { className: "tw-ms-2 tw-h-4 tw-w-4" }) : t === "desc" ? /* @__PURE__ */ p(a1, { className: "tw-ms-2 tw-h-4 tw-w-4" }) : /* @__PURE__ */ p(l1, { className: "tw-ms-2 tw-h-4 tw-w-4" }), WL = (t) => ({
  accessorKey: "item",
  accessorFn: (e) => e.items[0],
  header: ({ column: e }) => /* @__PURE__ */ j(Pe, { variant: "ghost", onClick: () => e.toggleSorting(void 0), children: [
    t,
    ad(e.getIsSorted())
  ] })
}), jR = (t, e) => ({
  accessorKey: `item${e}`,
  accessorFn: (n) => n.items[e],
  header: ({ column: n }) => /* @__PURE__ */ j(Pe, { variant: "ghost", onClick: () => n.toggleSorting(void 0), children: [
    t,
    ad(n.getIsSorted())
  ] })
}), KL = (t) => ({
  accessorKey: "count",
  header: ({ column: e }) => /* @__PURE__ */ p("div", { className: "tw-flex tw-justify-end tw-tabular-nums", children: /* @__PURE__ */ j(Pe, { variant: "ghost", onClick: () => e.toggleSorting(void 0), children: [
    t,
    ad(e.getIsSorted())
  ] }) }),
  cell: ({ row: e }) => /* @__PURE__ */ p("div", { className: "tw-flex tw-justify-end", children: e.getValue("count") })
}), mf = (t, e, n, r, i, o) => {
  let s = [...n];
  t.forEach((l) => {
    e === "approved" ? s.includes(l) || s.push(l) : s = s.filter((c) => c !== l);
  }), r(s);
  let a = [...i];
  t.forEach((l) => {
    e === "unapproved" ? a.includes(l) || a.push(l) : a = a.filter((c) => c !== l);
  }), o(a);
}, GL = (t, e, n, r, i) => ({
  accessorKey: "status",
  header: ({ column: o }) => /* @__PURE__ */ p("div", { className: "tw-flex tw-justify-center", children: /* @__PURE__ */ j(Pe, { variant: "ghost", onClick: () => o.toggleSorting(void 0), children: [
    t,
    ad(o.getIsSorted())
  ] }) }),
  cell: ({ row: o }) => {
    const s = o.getValue("status"), a = o.getValue("item");
    return /* @__PURE__ */ j(u2, { value: s, variant: "outline", type: "single", children: [
      /* @__PURE__ */ p(
        Lc,
        {
          onClick: (l) => {
            l.stopPropagation(), mf(
              [a],
              "approved",
              e,
              n,
              r,
              i
            );
          },
          value: "approved",
          children: /* @__PURE__ */ p(r1, {})
        }
      ),
      /* @__PURE__ */ p(
        Lc,
        {
          onClick: (l) => {
            l.stopPropagation(), mf(
              [a],
              "unapproved",
              e,
              n,
              r,
              i
            );
          },
          value: "unapproved",
          children: /* @__PURE__ */ p(i1, {})
        }
      ),
      /* @__PURE__ */ p(
        Lc,
        {
          onClick: (l) => {
            l.stopPropagation(), mf(
              [a],
              "unknown",
              e,
              n,
              r,
              i
            );
          },
          value: "unknown",
          children: /* @__PURE__ */ p(o1, {})
        }
      )
    ] });
  }
}), JL = (t) => t.split(/(?:\r?\n|\r)|(?=(?:\\(?:v|c|id)))/g), XL = (t) => {
  const e = /^\\[vc]\s+(\d+)/, n = t.match(e);
  if (n)
    return +n[1];
}, YL = (t) => {
  const e = t.match(/^\\id\s+([A-Za-z]+)/);
  return e ? e[1] : "";
}, UR = (t, e, n) => n.includes(t) ? "unapproved" : e.includes(t) ? "approved" : "unknown", QL = Object.freeze([
  "%webView_inventory_all%",
  "%webView_inventory_approved%",
  "%webView_inventory_unapproved%",
  "%webView_inventory_unknown%",
  "%webView_inventory_scope_currentBook%",
  "%webView_inventory_scope_chapter%",
  "%webView_inventory_scope_verse%",
  "%webView_inventory_filter_text%",
  "%webView_inventory_show_additional_items%",
  "%webView_inventory_occurrences_table_header_reference%",
  "%webView_inventory_occurrences_table_header_occurrence%",
  "%webView_inventory_no_results%"
]), zR = (t, e, n) => {
  let r = t;
  return e !== "all" && (r = r.filter(
    (i) => e === "approved" && i.status === "approved" || e === "unapproved" && i.status === "unapproved" || e === "unknown" && i.status === "unknown"
  )), n !== "" && (r = r.filter((i) => i.items[0].includes(n))), r;
}, VR = (t, e, n) => {
  const r = [];
  return t.forEach((i) => {
    const o = r.find(
      (s) => qh(
        s.items,
        Dd(i.inventoryText) ? [i.inventoryText] : i.inventoryText
      )
    );
    if (o)
      o.count += 1, o.occurrences.push({
        reference: i.verseRef,
        text: i.verse
      });
    else {
      const s = {
        items: Dd(i.inventoryText) ? [i.inventoryText] : i.inventoryText,
        count: 1,
        status: UR(
          Dd(i.inventoryText) ? i.inventoryText : i.inventoryText[0],
          e,
          n
        ),
        occurrences: [
          {
            reference: i.verseRef,
            text: i.verse
          }
        ]
      };
      r.push(s);
    }
  }), r;
}, Lr = (t, e) => t[e] ?? e;
function ZL({
  inventoryItems: t,
  setVerseRef: e,
  localizedStrings: n,
  additionalItemsLabels: r,
  approvedItems: i,
  unapprovedItems: o,
  scope: s,
  onScopeChange: a,
  columns: l,
  id: c,
  areInventoryItemsLoading: u = !1
}) {
  const f = Lr(n, "%webView_inventory_all%"), d = Lr(n, "%webView_inventory_approved%"), h = Lr(n, "%webView_inventory_unapproved%"), g = Lr(n, "%webView_inventory_unknown%"), m = Lr(n, "%webView_inventory_scope_currentBook%"), b = Lr(n, "%webView_inventory_scope_chapter%"), _ = Lr(n, "%webView_inventory_scope_verse%"), y = Lr(n, "%webView_inventory_filter_text%"), C = Lr(
    n,
    "%webView_inventory_show_additional_items%"
  ), D = Lr(n, "%webView_inventory_no_results%"), [R, N] = fe(!1), [L, O] = fe("all"), [M, q] = fe(""), [k, I] = fe([]), S = Ne(() => {
    const K = t ?? [];
    return K.length === 0 ? [] : VR(K, i, o);
  }, [t, i, o]), P = Ne(() => {
    if (R) return S;
    const K = [];
    return S.forEach((ne) => {
      const re = ne.items[0], te = K.find(
        (Q) => Q.items[0] === re
      );
      te ? (te.count += ne.count, te.occurrences = te.occurrences.concat(ne.occurrences)) : K.push({
        items: [re],
        count: ne.count,
        occurrences: ne.occurrences,
        status: ne.status
      });
    }), K;
  }, [R, S]), T = Ne(() => P.length === 0 ? [] : zR(P, L, M), [P, L, M]), A = Ne(() => {
    var re, te;
    if (!R) return l;
    const K = (re = r == null ? void 0 : r.tableHeaders) == null ? void 0 : re.length;
    if (!K) return l;
    const ne = [];
    for (let Q = 0; Q < K; Q++)
      ne.push(
        jR(
          ((te = r == null ? void 0 : r.tableHeaders) == null ? void 0 : te[Q]) || "Additional Item",
          Q + 1
        )
      );
    return [...ne, ...l];
  }, [r == null ? void 0 : r.tableHeaders, l, R]);
  ue(() => {
    T.length === 0 ? I([]) : T.length === 1 && I(T[0].items);
  }, [T]);
  const B = (K, ne) => {
    ne.setRowSelection(() => {
      const re = {};
      return re[K.index] = !0, re;
    }), I(K.original.items);
  }, V = (K) => {
    if (K === "book" || K === "chapter" || K === "verse")
      a(K);
    else
      throw new Error(`Invalid scope value: ${K}`);
  }, J = (K) => {
    if (K === "all" || K === "approved" || K === "unapproved" || K === "unknown")
      O(K);
    else
      throw new Error(`Invalid status filter value: ${K}`);
  }, H = Ne(() => {
    if (P.length === 0 || k.length === 0) return [];
    const K = P.filter((ne) => qh(
      R ? ne.items : [ne.items[0]],
      k
    ));
    if (K.length > 1) throw new Error("Selected item is not unique");
    return K.length === 0 ? [] : K[0].occurrences;
  }, [k, R, P]);
  return /* @__PURE__ */ j("div", { id: c, className: "pr-twp tw-flex tw-h-full tw-flex-col", children: [
    /* @__PURE__ */ j("div", { className: "tw-flex tw-items-stretch", children: [
      /* @__PURE__ */ j(
        As,
        {
          onValueChange: (K) => J(K),
          defaultValue: L,
          children: [
            /* @__PURE__ */ p(Mo, { className: "tw-m-1", children: /* @__PURE__ */ p(Ds, { placeholder: "Select filter" }) }),
            /* @__PURE__ */ j(Oo, { children: [
              /* @__PURE__ */ p(er, { value: "all", children: f }),
              /* @__PURE__ */ p(er, { value: "approved", children: d }),
              /* @__PURE__ */ p(er, { value: "unapproved", children: h }),
              /* @__PURE__ */ p(er, { value: "unknown", children: g })
            ] })
          ]
        }
      ),
      /* @__PURE__ */ j(As, { onValueChange: (K) => V(K), defaultValue: s, children: [
        /* @__PURE__ */ p(Mo, { className: "tw-m-1", children: /* @__PURE__ */ p(Ds, { placeholder: "Select scope" }) }),
        /* @__PURE__ */ j(Oo, { children: [
          /* @__PURE__ */ p(er, { value: "book", children: m }),
          /* @__PURE__ */ p(er, { value: "chapter", children: b }),
          /* @__PURE__ */ p(er, { value: "verse", children: _ })
        ] })
      ] }),
      /* @__PURE__ */ p(
        Vl,
        {
          className: "tw-m-1 tw-rounded-md tw-border",
          placeholder: y,
          value: M,
          onChange: (K) => {
            q(K.target.value);
          }
        }
      ),
      r && /* @__PURE__ */ j("div", { className: "tw-m-1 tw-flex tw-items-center tw-rounded-md tw-border", children: [
        /* @__PURE__ */ p(
          Mg,
          {
            className: "tw-m-1",
            checked: R,
            onCheckedChange: (K) => {
              N(K);
            }
          }
        ),
        /* @__PURE__ */ p(Vt, { className: "tw-m-1 tw-flex-shrink-0 tw-whitespace-nowrap", children: (r == null ? void 0 : r.checkboxText) ?? C })
      ] })
    ] }),
    /* @__PURE__ */ p("div", { className: "tw-m-1 tw-flex-1 tw-overflow-auto tw-rounded-md tw-border", children: /* @__PURE__ */ p(
      EC,
      {
        columns: A,
        data: T,
        onRowClickHandler: B,
        stickyHeader: !0,
        isLoading: u,
        noResultsMessage: D
      }
    ) }),
    H.length > 0 && /* @__PURE__ */ p("div", { className: "tw-m-1 tw-flex-1 tw-overflow-auto tw-rounded-md tw-border", children: /* @__PURE__ */ p(
      BR,
      {
        occurrenceData: H,
        setScriptureReference: e,
        localizedStrings: n
      }
    ) })
  ] });
}
const Og = Y.forwardRef(({ className: t, orientation: e = "horizontal", decorative: n = !0, ...r }, i) => /* @__PURE__ */ p(
  xy.Root,
  {
    ref: i,
    decorative: n,
    orientation: e,
    className: G(
      "pr-twp tw-shrink-0 tw-bg-border",
      e === "horizontal" ? "tw-h-[1px] tw-w-full" : "tw-h-full tw-w-[1px]",
      t
    ),
    ...r
  }
));
Og.displayName = xy.Root.displayName;
const Ig = _l.Provider, Rg = _l.Root, Pg = _l.Trigger, ld = Y.forwardRef(({ className: t, sideOffset: e = 4, ...n }, r) => /* @__PURE__ */ p(
  _l.Content,
  {
    ref: r,
    sideOffset: e,
    className: G(
      "pr-twp tw-z-50 tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-px-3 tw-py-1.5 tw-text-sm tw-text-popover-foreground tw-shadow-md tw-animate-in tw-fade-in-0 tw-zoom-in-95 data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=closed]:tw-zoom-out-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...n
  }
));
ld.displayName = _l.Content.displayName;
const HR = "16rem", WR = "3rem", d2 = Y.createContext(void 0);
function cd() {
  const t = Y.useContext(d2);
  if (!t)
    throw new Error("useSidebar must be used within a SidebarProvider.");
  return t;
}
const f2 = Y.forwardRef(
  ({
    defaultOpen: t = !0,
    open: e,
    onOpenChange: n,
    className: r,
    style: i,
    children: o,
    side: s = "primary",
    ...a
  }, l) => {
    const [c, u] = Y.useState(t), f = e ?? c, d = Y.useCallback(
      (C) => {
        const D = typeof C == "function" ? C(f) : C;
        n ? n(D) : u(D);
      },
      [n, f]
    ), h = Y.useCallback(() => d((C) => !C), [d]), g = f ? "expanded" : "collapsed", _ = Jt() === "ltr" ? s : s === "primary" ? "secondary" : "primary", y = Y.useMemo(
      () => ({
        state: g,
        open: f,
        setOpen: d,
        toggleSidebar: h,
        side: _
      }),
      [g, f, d, h, _]
    );
    return /* @__PURE__ */ p(d2.Provider, { value: y, children: /* @__PURE__ */ p(Ig, { delayDuration: 0, children: /* @__PURE__ */ p(
      "div",
      {
        style: (
          // eslint-disable-next-line no-type-assertion/no-type-assertion
          {
            "--sidebar-width": HR,
            "--sidebar-width-icon": WR,
            ...i
          }
        ),
        className: G(
          // Removed tw-min-h-svh
          "tw-group/sidebar-wrapper pr-twp tw-flex tw-w-full has-[[data-variant=inset]]:tw-bg-sidebar",
          r
        ),
        ref: l,
        ...a,
        children: o
      }
    ) }) });
  }
);
f2.displayName = "SidebarProvider";
const h2 = Y.forwardRef(({ variant: t = "sidebar", collapsible: e = "offcanvas", className: n, children: r, ...i }, o) => {
  const s = cd();
  return e === "none" ? /* @__PURE__ */ p(
    "div",
    {
      className: G(
        "tw-flex tw-h-full tw-w-[--sidebar-width] tw-flex-col tw-bg-sidebar tw-text-sidebar-foreground",
        n
      ),
      ref: o,
      ...i,
      children: r
    }
  ) : /* @__PURE__ */ j(
    "div",
    {
      ref: o,
      className: "tw-group tw-peer tw-hidden tw-text-sidebar-foreground md:tw-block",
      "data-state": s.state,
      "data-collapsible": s.state === "collapsed" ? e : "",
      "data-variant": t,
      "data-side": s.side,
      children: [
        /* @__PURE__ */ p(
          "div",
          {
            className: G(
              "tw-relative tw-h-svh tw-w-[--sidebar-width] tw-bg-transparent tw-transition-[width] tw-duration-200 tw-ease-linear",
              "group-data-[collapsible=offcanvas]:tw-w-0",
              "group-data-[side=secondary]:tw-rotate-180",
              t === "floating" || t === "inset" ? "group-data-[collapsible=icon]:tw-w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]" : "group-data-[collapsible=icon]:tw-w-[--sidebar-width-icon]"
            )
          }
        ),
        /* @__PURE__ */ p(
          "div",
          {
            className: G(
              // CUSTOM: Switched tw-fixed to tw-absolute here to scope the sidebar inside of it's container
              "tw-absolute tw-inset-y-0 tw-z-10 tw-hidden tw-h-svh tw-w-[--sidebar-width] tw-transition-[left,right,width] tw-duration-200 tw-ease-linear md:tw-flex",
              s.side === "primary" ? "tw-left-0 group-data-[collapsible=offcanvas]:tw-left-[calc(var(--sidebar-width)*-1)]" : "tw-right-0 group-data-[collapsible=offcanvas]:tw-right-[calc(var(--sidebar-width)*-1)]",
              // Adjust the padding for floating and inset variants.
              t === "floating" || t === "inset" ? "tw-p-2 group-data-[collapsible=icon]:tw-w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]" : "group-data-[collapsible=icon]:tw-w-[--sidebar-width-icon] group-data-[side=primary]:tw-border-r group-data-[side=secondary]:tw-border-l",
              n
            ),
            ...i,
            children: /* @__PURE__ */ p(
              "div",
              {
                "data-sidebar": "sidebar",
                className: "tw-flex tw-h-full tw-w-full tw-flex-col tw-bg-sidebar group-data-[variant=floating]:tw-rounded-lg group-data-[variant=floating]:tw-border group-data-[variant=floating]:tw-border-sidebar-border group-data-[variant=floating]:tw-shadow",
                children: r
              }
            )
          }
        )
      ]
    }
  );
});
h2.displayName = "Sidebar";
const KR = Y.forwardRef(({ className: t, onClick: e, ...n }, r) => {
  const i = cd();
  return /* @__PURE__ */ j(
    Pe,
    {
      ref: r,
      "data-sidebar": "trigger",
      variant: "ghost",
      size: "icon",
      className: G("tw-h-7 tw-w-7", t),
      onClick: (o) => {
        e == null || e(o), i.toggleSidebar();
      },
      ...n,
      children: [
        i.side === "primary" ? /* @__PURE__ */ p(c1, {}) : /* @__PURE__ */ p(u1, {}),
        /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Toggle Sidebar" })
      ]
    }
  );
});
KR.displayName = "SidebarTrigger";
const GR = Y.forwardRef(
  ({ className: t, ...e }, n) => {
    const { toggleSidebar: r } = cd();
    return /* @__PURE__ */ p(
      "button",
      {
        type: "button",
        ref: n,
        "data-sidebar": "rail",
        "aria-label": "Toggle Sidebar",
        tabIndex: -1,
        onClick: r,
        title: "Toggle Sidebar",
        className: G(
          "tw-absolute tw-inset-y-0 tw-z-20 tw-hidden tw-w-4 tw--translate-x-1/2 tw-transition-all tw-ease-linear after:tw-absolute after:tw-inset-y-0 after:tw-left-1/2 after:tw-w-[2px] hover:after:tw-bg-sidebar-border group-data-[side=primary]:tw--right-4 group-data-[side=secondary]:tw-left-0 sm:tw-flex",
          "[[data-side=secondary]_&]:tw-cursor-e-resize [[data-side=secondary]_&]:tw-cursor-w-resize",
          "[[data-side=primary][data-state=collapsed]_&]:tw-cursor-e-resize [[data-side=secondary][data-state=collapsed]_&]:tw-cursor-w-resize",
          "group-data-[collapsible=offcanvas]:tw-translate-x-0 group-data-[collapsible=offcanvas]:after:tw-left-full group-data-[collapsible=offcanvas]:hover:tw-bg-sidebar",
          "[[data-side=primary][data-collapsible=offcanvas]_&]:tw--right-2",
          "[[data-side=secondary][data-collapsible=offcanvas]_&]:tw--left-2",
          t
        ),
        ...e
      }
    );
  }
);
GR.displayName = "SidebarRail";
const p2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "main",
    {
      ref: n,
      className: G(
        // CUSTOM: Removed tw-min-h-svh
        "tw-relative tw-flex tw-flex-1 tw-flex-col tw-bg-background",
        "peer-data-[variant=inset]:tw-min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:tw-m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:tw-ml-2 md:peer-data-[variant=inset]:tw-ml-0 md:peer-data-[variant=inset]:tw-rounded-xl md:peer-data-[variant=inset]:tw-shadow",
        t
      ),
      ...e
    }
  )
);
p2.displayName = "SidebarInset";
const JR = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Vl,
  {
    ref: n,
    "data-sidebar": "input",
    className: G(
      "tw-h-8 tw-w-full tw-bg-background tw-shadow-none focus-visible:tw-ring-2 focus-visible:tw-ring-sidebar-ring",
      t
    ),
    ...e
  }
));
JR.displayName = "SidebarInput";
const XR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "header",
      className: G("tw-flex tw-flex-col tw-gap-2 tw-p-2", t),
      ...e
    }
  )
);
XR.displayName = "SidebarHeader";
const YR = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "footer",
      className: G("tw-flex tw-flex-col tw-gap-2 tw-p-2", t),
      ...e
    }
  )
);
YR.displayName = "SidebarFooter";
const QR = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Og,
  {
    ref: n,
    "data-sidebar": "separator",
    className: G("tw-mx-2 tw-w-auto tw-bg-sidebar-border", t),
    ...e
  }
));
QR.displayName = "SidebarSeparator";
const g2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "content",
      className: G(
        "tw-flex tw-min-h-0 tw-flex-1 tw-flex-col tw-gap-2 tw-overflow-auto group-data-[collapsible=icon]:tw-overflow-hidden",
        t
      ),
      ...e
    }
  )
);
g2.displayName = "SidebarContent";
const Rh = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "group",
      className: G("tw-relative tw-flex tw-w-full tw-min-w-0 tw-flex-col tw-p-2", t),
      ...e
    }
  )
);
Rh.displayName = "SidebarGroup";
const Ph = Y.forwardRef(({ className: t, asChild: e = !1, ...n }, r) => /* @__PURE__ */ p(
  e ? Qs : "div",
  {
    ref: r,
    "data-sidebar": "group-label",
    className: G(
      "tw-flex tw-h-8 tw-shrink-0 tw-items-center tw-rounded-md tw-px-2 tw-text-xs tw-font-medium tw-text-sidebar-foreground/70 tw-outline-none tw-ring-sidebar-ring tw-transition-[margin,opa] tw-duration-200 tw-ease-linear focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
      "group-data-[collapsible=icon]:tw--mt-8 group-data-[collapsible=icon]:tw-opacity-0",
      t
    ),
    ...n
  }
));
Ph.displayName = "SidebarGroupLabel";
const ZR = Y.forwardRef(({ className: t, asChild: e = !1, ...n }, r) => /* @__PURE__ */ p(
  e ? Qs : "button",
  {
    ref: r,
    "data-sidebar": "group-action",
    className: G(
      "tw-absolute tw-right-3 tw-top-3.5 tw-flex tw-aspect-square tw-w-5 tw-items-center tw-justify-center tw-rounded-md tw-p-0 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring tw-transition-transform hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
      // Increases the hit area of the button on mobile.
      "after:tw-absolute after:tw--inset-2 after:md:tw-hidden",
      "group-data-[collapsible=icon]:tw-hidden",
      t
    ),
    ...n
  }
));
ZR.displayName = "SidebarGroupAction";
const Lh = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "group-content",
      className: G("tw-w-full tw-text-sm", t),
      ...e
    }
  )
);
Lh.displayName = "SidebarGroupContent";
const m2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "ul",
    {
      ref: n,
      "data-sidebar": "menu",
      className: G("tw-flex tw-w-full tw-min-w-0 tw-flex-col tw-gap-1", t),
      ...e
    }
  )
);
m2.displayName = "SidebarMenu";
const w2 = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "li",
    {
      ref: n,
      "data-sidebar": "menu-item",
      className: G("tw-group/menu-item tw-relative", t),
      ...e
    }
  )
);
w2.displayName = "SidebarMenuItem";
const eP = Ji(
  "tw-peer/menu-button tw-flex tw-w-full tw-items-center tw-gap-2 tw-overflow-hidden tw-rounded-md tw-p-2 tw-text-left tw-text-sm tw-outline-none tw-ring-sidebar-ring tw-transition-[width,height,padding] hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 active:tw-bg-sidebar-accent active:tw-text-sidebar-accent-foreground disabled:tw-pointer-events-none disabled:tw-opacity-50 tw-group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:tw-pointer-events-none aria-disabled:tw-opacity-50 data-[active=true]:tw-font-medium data-[active=true]:tw-text-sidebar-accent-foreground data-[active=true]:tw-bg-sidebar-accent data-[state=open]:hover:tw-bg-sidebar-accent data-[state=open]:hover:tw-text-sidebar-accent-foreground group-data-[collapsible=icon]:tw-!size-8 group-data-[collapsible=icon]:tw-!p-2 [&>span:last-child]:tw-truncate [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
  {
    variants: {
      variant: {
        default: "hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground",
        outline: "tw-bg-background tw-shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground hover:tw-shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]"
      },
      size: {
        default: "tw-h-8 tw-text-sm",
        sm: "tw-h-7 tw-text-xs",
        lg: "tw-h-12 tw-text-sm group-data-[collapsible=icon]:tw-!p-0"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), b2 = Y.forwardRef(
  ({
    asChild: t = !1,
    isActive: e = !1,
    variant: n = "default",
    size: r = "default",
    tooltip: i,
    className: o,
    ...s
  }, a) => {
    const l = t ? Qs : "button", { state: c } = cd(), u = /* @__PURE__ */ p(
      l,
      {
        ref: a,
        "data-sidebar": "menu-button",
        "data-size": r,
        "data-active": e,
        className: G(eP({ variant: n, size: r }), o),
        ...s
      }
    );
    return i ? (typeof i == "string" && (i = {
      children: i
    }), /* @__PURE__ */ j(Rg, { children: [
      /* @__PURE__ */ p(Pg, { asChild: !0, children: u }),
      /* @__PURE__ */ p(ld, { side: "right", align: "center", hidden: c !== "collapsed", ...i })
    ] })) : u;
  }
);
b2.displayName = "SidebarMenuButton";
const tP = Y.forwardRef(({ className: t, asChild: e = !1, showOnHover: n = !1, ...r }, i) => /* @__PURE__ */ p(
  e ? Qs : "button",
  {
    ref: i,
    "data-sidebar": "menu-action",
    className: G(
      "tw-peer-hover/menu-button:text-sidebar-accent-foreground tw-absolute tw-right-1 tw-top-1.5 tw-flex tw-aspect-square tw-w-5 tw-items-center tw-justify-center tw-rounded-md tw-p-0 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring tw-transition-transform hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0",
      // Increases the hit area of the button on mobile.
      "after:tw-absolute after:tw--inset-2 after:md:tw-hidden",
      "tw-peer-data-[size=sm]/menu-button:top-1",
      "tw-peer-data-[size=default]/menu-button:top-1.5",
      "tw-peer-data-[size=lg]/menu-button:top-2.5",
      "group-data-[collapsible=icon]:tw-hidden",
      n && "tw-group-focus-within/menu-item:opacity-100 tw-group-hover/menu-item:opacity-100 tw-peer-data-[active=true]/menu-button:text-sidebar-accent-foreground data-[state=open]:tw-opacity-100 md:tw-opacity-0",
      t
    ),
    ...r
  }
));
tP.displayName = "SidebarMenuAction";
const nP = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "div",
    {
      ref: n,
      "data-sidebar": "menu-badge",
      className: G(
        "tw-pointer-events-none tw-absolute tw-right-1 tw-flex tw-h-5 tw-min-w-5 tw-select-none tw-items-center tw-justify-center tw-rounded-md tw-px-1 tw-text-xs tw-font-medium tw-tabular-nums tw-text-sidebar-foreground",
        "tw-peer-hover/menu-button:text-sidebar-accent-foreground tw-peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
        "tw-peer-data-[size=sm]/menu-button:top-1",
        "tw-peer-data-[size=default]/menu-button:top-1.5",
        "tw-peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:tw-hidden",
        t
      ),
      ...e
    }
  )
);
nP.displayName = "SidebarMenuBadge";
const rP = Y.forwardRef(({ className: t, showIcon: e = !1, ...n }, r) => {
  const i = Y.useMemo(() => `${Math.floor(Math.random() * 40) + 50}%`, []);
  return /* @__PURE__ */ j(
    "div",
    {
      ref: r,
      "data-sidebar": "menu-skeleton",
      className: G("tw-flex tw-h-8 tw-items-center tw-gap-2 tw-rounded-md tw-px-2", t),
      ...n,
      children: [
        e && /* @__PURE__ */ p(Tf, { className: "tw-size-4 tw-rounded-md", "data-sidebar": "menu-skeleton-icon" }),
        /* @__PURE__ */ p(
          Tf,
          {
            className: "tw-h-4 tw-max-w-[--skeleton-width] tw-flex-1",
            "data-sidebar": "menu-skeleton-text",
            style: (
              // eslint-disable-next-line no-type-assertion/no-type-assertion
              {
                "--skeleton-width": i
              }
            )
          }
        )
      ]
    }
  );
});
rP.displayName = "SidebarMenuSkeleton";
const iP = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "ul",
    {
      ref: n,
      "data-sidebar": "menu-sub",
      className: G(
        "tw-mx-3.5 tw-flex tw-min-w-0 tw-translate-x-px tw-flex-col tw-gap-1 tw-border-l tw-border-sidebar-border tw-px-2.5 tw-py-0.5",
        "group-data-[collapsible=icon]:tw-hidden",
        t
      ),
      ...e
    }
  )
);
iP.displayName = "SidebarMenuSub";
const oP = Y.forwardRef(
  ({ ...t }, e) => /* @__PURE__ */ p("li", { ref: e, ...t })
);
oP.displayName = "SidebarMenuSubItem";
const sP = Y.forwardRef(({ asChild: t = !1, size: e = "md", isActive: n, className: r, ...i }, o) => /* @__PURE__ */ p(
  t ? Qs : "a",
  {
    ref: o,
    "data-sidebar": "menu-sub-button",
    "data-size": e,
    "data-active": n,
    className: G(
      "tw-flex tw-h-7 tw-min-w-0 tw--translate-x-px tw-items-center tw-gap-2 tw-overflow-hidden tw-rounded-md tw-px-2 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 active:tw-bg-sidebar-accent active:tw-text-sidebar-accent-foreground disabled:tw-pointer-events-none disabled:tw-opacity-50 aria-disabled:tw-pointer-events-none aria-disabled:tw-opacity-50 [&>span:last-child]:tw-truncate [&>svg]:tw-size-4 [&>svg]:tw-shrink-0 [&>svg]:tw-text-sidebar-accent-foreground",
      "data-[active=true]:tw-bg-sidebar-accent data-[active=true]:tw-text-sidebar-accent-foreground",
      e === "sm" && "tw-text-xs",
      e === "md" && "tw-text-sm",
      "group-data-[collapsible=icon]:tw-hidden",
      r
    ),
    ...i
  }
));
sP.displayName = "SidebarMenuSubButton";
function aP({
  id: t,
  extensionLabels: e,
  projectInfo: n,
  handleSelectSidebarItem: r,
  selectedSidebarItem: i,
  extensionsSidebarGroupLabel: o,
  projectsSidebarGroupLabel: s,
  buttonPlaceholderText: a,
  className: l
}) {
  const c = be(
    (d, h) => {
      r(d, h);
    },
    [r]
  ), u = be(
    (d) => {
      const h = n.find((g) => g.projectId === d);
      return h ? h.projectName : d;
    },
    [n]
  ), f = be(
    (d) => !i.projectId && d === i.label,
    [i]
  );
  return /* @__PURE__ */ p(
    h2,
    {
      id: t,
      collapsible: "none",
      variant: "inset",
      className: G("tw-w-96 tw-gap-2 tw-overflow-y-auto", l),
      children: /* @__PURE__ */ j(g2, { children: [
        /* @__PURE__ */ j(Rh, { children: [
          /* @__PURE__ */ p(Ph, { className: "tw-text-sm", children: o }),
          /* @__PURE__ */ p(Lh, { children: /* @__PURE__ */ p(m2, { children: Object.entries(e).map(([d, h]) => /* @__PURE__ */ p(w2, { children: /* @__PURE__ */ p(
            b2,
            {
              onClick: () => c(d),
              isActive: f(d),
              children: /* @__PURE__ */ p("span", { className: "tw-pl-3", children: h })
            }
          ) }, d)) }) })
        ] }),
        /* @__PURE__ */ j(Rh, { children: [
          /* @__PURE__ */ p(Ph, { className: "tw-text-sm", children: s }),
          /* @__PURE__ */ p(Lh, { className: "tw-pl-3", children: /* @__PURE__ */ p(
            Sf,
            {
              buttonVariant: "ghost",
              buttonClassName: G("tw-w-full", {
                "tw-bg-sidebar-accent tw-text-sidebar-accent-foreground": i == null ? void 0 : i.projectId
              }),
              popoverContentClassName: "tw-z-[1000]",
              options: n.flatMap((d) => d.projectId),
              getOptionLabel: u,
              buttonPlaceholder: a,
              onChange: (d) => {
                const h = u(d);
                c(h, d);
              },
              value: (i == null ? void 0 : i.projectId) ?? void 0,
              icon: /* @__PURE__ */ p(d1, {})
            }
          ) })
        ] })
      ] })
    }
  );
}
const Lg = Yn(
  ({ value: t, onSearch: e, placeholder: n, isFullWidth: r, className: i, isDisabled: o = !1, id: s }, a) => {
    const l = Jt();
    return /* @__PURE__ */ j("div", { id: s, className: G("tw-relative", { "tw-w-full": r }, i), children: [
      /* @__PURE__ */ p(
        py,
        {
          className: G(
            "tw-absolute tw-top-1/2 tw-h-4 tw-w-4 tw--translate-y-1/2 tw-transform tw-opacity-50",
            { "tw-right-3": l === "rtl" },
            { "tw-left-3": l === "ltr" }
          )
        }
      ),
      /* @__PURE__ */ p(
        Vl,
        {
          ref: a,
          className: "tw-w-full tw-text-ellipsis tw-pe-9 tw-ps-9",
          placeholder: n,
          value: t,
          onChange: (c) => e(c.target.value),
          disabled: o
        }
      ),
      t && /* @__PURE__ */ j(
        Pe,
        {
          variant: "ghost",
          size: "icon",
          className: G(
            "tw-absolute tw-top-1/2 tw-h-7 tw--translate-y-1/2 tw-transform hover:tw-bg-transparent",
            { "tw-left-0": l === "rtl" },
            { "tw-right-0": l === "ltr" }
          ),
          onClick: () => {
            e("");
          },
          children: [
            /* @__PURE__ */ p(ku, { className: "tw-h-4 tw-w-4" }),
            /* @__PURE__ */ p("span", { className: "tw-sr-only", children: "Clear" })
          ]
        }
      )
    ] });
  }
);
Lg.displayName = "SearchBar";
function e3({
  id: t,
  extensionLabels: e,
  projectInfo: n,
  children: r,
  handleSelectSidebarItem: i,
  selectedSidebarItem: o,
  searchValue: s,
  onSearch: a,
  extensionsSidebarGroupLabel: l,
  projectsSidebarGroupLabel: c,
  buttonPlaceholderText: u
}) {
  return /* @__PURE__ */ j("div", { className: "tw-box-border tw-flex tw-h-full tw-flex-col", children: [
    /* @__PURE__ */ p("div", { className: "tw-box-border tw-flex tw-items-center tw-justify-center tw-py-4", children: /* @__PURE__ */ p(
      Lg,
      {
        className: "tw-w-9/12",
        value: s,
        onSearch: a,
        placeholder: "Search app settings, extension settings, and project settings"
      }
    ) }),
    /* @__PURE__ */ j(
      f2,
      {
        id: t,
        className: "tw-h-full tw-flex-1 tw-gap-4 tw-overflow-auto tw-border-t",
        children: [
          /* @__PURE__ */ p(
            aP,
            {
              className: "tw-w-1/2 tw-min-w-[140px] tw-max-w-[220px] tw-border-e",
              extensionLabels: e,
              projectInfo: n,
              handleSelectSidebarItem: i,
              selectedSidebarItem: o,
              extensionsSidebarGroupLabel: l,
              projectsSidebarGroupLabel: c,
              buttonPlaceholderText: u
            }
          ),
          /* @__PURE__ */ p(p2, { className: "tw-min-w-[215px]", children: r })
        ]
      }
    )
  ] });
}
const Mi = "scrBook", lP = "scrRef", mo = "source", cP = "details", uP = "Scripture Reference", dP = "Scripture Book", y2 = "Type", fP = "Details";
function hP(t, e) {
  const n = e ?? !1;
  return [
    {
      accessorFn: (r) => `${r.start.book} ${r.start.chapterNum}:${r.start.verseNum}`,
      id: Mi,
      header: (t == null ? void 0 : t.scriptureReferenceColumnName) ?? uP,
      cell: (r) => {
        const i = r.row.original;
        return r.row.getIsGrouped() ? nt.bookIdToEnglishName(i.start.book) : r.row.groupingColumnId === Mi ? bs(i.start) : void 0;
      },
      getGroupingValue: (r) => nt.bookIdToNumber(r.start.book),
      sortingFn: (r, i) => xf(r.original.start, i.original.start),
      enableGrouping: !0
    },
    {
      accessorFn: (r) => bs(r.start),
      id: lP,
      header: void 0,
      cell: (r) => {
        const i = r.row.original;
        return r.row.getIsGrouped() ? void 0 : bs(i.start);
      },
      sortingFn: (r, i) => xf(r.original.start, i.original.start),
      enableGrouping: !1
    },
    {
      accessorFn: (r) => r.source.displayName,
      id: mo,
      header: n ? (t == null ? void 0 : t.typeColumnName) ?? y2 : void 0,
      cell: (r) => n || r.row.getIsGrouped() ? r.getValue() : void 0,
      getGroupingValue: (r) => r.source.id,
      sortingFn: (r, i) => r.original.source.displayName.localeCompare(i.original.source.displayName),
      enableGrouping: !0
    },
    {
      accessorFn: (r) => r.detail,
      id: cP,
      header: (t == null ? void 0 : t.detailsColumnName) ?? fP,
      cell: (r) => r.getValue(),
      enableGrouping: !1
    }
  ];
}
const pP = (t) => {
  if (!("offset" in t.start))
    throw new Error("No offset available in range start");
  if (t.end && !("offset" in t.end))
    throw new Error("No offset available in range end");
  const { offset: e } = t.start;
  let n = 0;
  return t.end && ({ offset: n } = t.end), !t.end || xf(t.start, t.end) === 0 ? `${Md(t.start)}+${e}` : `${Md(t.start)}+${e}-${Md(t.end)}+${n}`;
}, uy = (t) => `${pP({ start: t.start, end: t.end })} ${t.source.displayName} ${t.detail}`;
function t3({
  sources: t,
  showColumnHeaders: e = !1,
  showSourceColumn: n = !1,
  scriptureReferenceColumnName: r,
  scriptureBookGroupName: i,
  typeColumnName: o,
  detailsColumnName: s,
  onRowSelected: a,
  id: l
}) {
  const [c, u] = fe([]), [f, d] = fe([{ id: Mi, desc: !1 }]), [h, g] = fe({}), m = Ne(
    () => t.flatMap((M) => M.data.map((q) => ({
      ...q,
      source: M.source
    }))),
    [t]
  ), b = Ne(
    () => hP(
      {
        scriptureReferenceColumnName: r,
        typeColumnName: o,
        detailsColumnName: s
      },
      n
    ),
    [r, o, s, n]
  );
  ue(() => {
    c.includes(mo) ? d([
      { id: mo, desc: !1 },
      { id: Mi, desc: !1 }
    ]) : d([{ id: Mi, desc: !1 }]);
  }, [c]);
  const _ = wy({
    data: m,
    columns: b,
    state: {
      grouping: c,
      sorting: f,
      rowSelection: h
    },
    onGroupingChange: u,
    onSortingChange: d,
    onRowSelectionChange: g,
    getExpandedRowModel: A1(),
    getGroupedRowModel: T1(),
    getCoreRowModel: yy(),
    getSortedRowModel: by(),
    getRowId: uy,
    autoResetExpanded: !1,
    enableMultiRowSelection: !1,
    enableSubRowSelection: !1
  });
  ue(() => {
    if (a) {
      const M = _.getSelectedRowModel().rowsById, q = Object.keys(M);
      if (q.length === 1) {
        const k = m.find((I) => uy(I) === q[0]) || void 0;
        k && a(k);
      }
    }
  }, [h, m, a, _]);
  const y = i ?? dP, C = o ?? y2, D = [
    { label: "No Grouping", value: [] },
    { label: `Group by ${y}`, value: [Mi] },
    { label: `Group by ${C}`, value: [mo] },
    {
      label: `Group by ${y} and ${C}`,
      value: [Mi, mo]
    },
    {
      label: `Group by ${C} and ${y}`,
      value: [mo, Mi]
    }
  ], R = (M) => {
    u(JSON.parse(M));
  }, N = (M, q) => {
    !M.getIsGrouped() && !M.getIsSelected() && M.getToggleSelectedHandler()(q);
  }, L = (M, q) => M.getIsGrouped() ? "" : G("banded-row", q % 2 === 0 ? "even" : "odd"), O = (M, q, k) => {
    if (!((M == null ? void 0 : M.length) === 0 || q.depth < k.column.getGroupedIndex())) {
      if (q.getIsGrouped())
        switch (q.depth) {
          case 1:
            return "tw-ps-4";
          default:
            return;
        }
      switch (q.depth) {
        case 1:
          return "tw-ps-8";
        case 2:
          return "tw-ps-12";
        default:
          return;
      }
    }
  };
  return /* @__PURE__ */ j("div", { id: l, className: "pr-twp tw-flex tw-h-full tw-w-full tw-flex-col", children: [
    !e && /* @__PURE__ */ j(
      As,
      {
        value: JSON.stringify(c),
        onValueChange: (M) => {
          R(M);
        },
        children: [
          /* @__PURE__ */ p(Mo, { className: "tw-mb-1 tw-mt-2", children: /* @__PURE__ */ p(Ds, {}) }),
          /* @__PURE__ */ p(Oo, { position: "item-aligned", children: /* @__PURE__ */ p(pC, { children: D.map((M) => /* @__PURE__ */ p(er, { value: JSON.stringify(M.value), children: M.label }, M.label)) }) })
        ]
      }
    ),
    /* @__PURE__ */ j(Mu, { className: "tw-relative tw-flex tw-flex-col tw-overflow-y-auto tw-p-0", children: [
      e && /* @__PURE__ */ p(Ou, { children: _.getHeaderGroups().map((M) => /* @__PURE__ */ p(hi, { children: M.headers.filter((q) => q.column.columnDef.header).map((q) => (
        /* For sticky column headers to work, we probably need to change the default definition of the shadcn Table component. See https://github.com/shadcn-ui/ui/issues/1151 */
        /* @__PURE__ */ p(Ya, { colSpan: q.colSpan, className: "top-0 tw-sticky", children: q.isPlaceholder ? void 0 : /* @__PURE__ */ j("div", { children: [
          q.column.getCanGroup() ? /* @__PURE__ */ p(
            Pe,
            {
              variant: "ghost",
              title: `Toggle grouping by ${q.column.columnDef.header}`,
              onClick: q.column.getToggleGroupingHandler(),
              type: "button",
              children: q.column.getIsGrouped() ? "🛑" : "👊 "
            }
          ) : void 0,
          " ",
          za(q.column.columnDef.header, q.getContext())
        ] }) }, q.id)
      )) }, M.id)) }),
      /* @__PURE__ */ p(Iu, { children: _.getRowModel().rows.map((M, q) => {
        const k = Jt();
        return /* @__PURE__ */ p(
          hi,
          {
            "data-state": M.getIsSelected() ? "selected" : "",
            className: G(L(M, q)),
            onClick: (I) => N(M, I),
            children: M.getVisibleCells().map((I) => {
              if (!(I.getIsPlaceholder() || I.column.columnDef.enableGrouping && !I.getIsGrouped() && (I.column.columnDef.id !== mo || !n)))
                return /* @__PURE__ */ p(
                  vo,
                  {
                    className: G(
                      I.column.columnDef.id,
                      "tw-p-[1px]",
                      O(c, M, I)
                    ),
                    children: I.getIsGrouped() ? /* @__PURE__ */ j(
                      Pe,
                      {
                        variant: "link",
                        onClick: M.getToggleExpandedHandler(),
                        type: "button",
                        children: [
                          M.getIsExpanded() && /* @__PURE__ */ p(Nu, {}),
                          !M.getIsExpanded() && (k === "ltr" ? /* @__PURE__ */ p(Ss, {}) : /* @__PURE__ */ p(vf, {})),
                          " ",
                          za(I.column.columnDef.cell, I.getContext()),
                          " (",
                          M.subRows.length,
                          ")"
                        ]
                      }
                    ) : za(I.column.columnDef.cell, I.getContext())
                  },
                  I.id
                );
            })
          },
          M.id
        );
      }) })
    ] })
  ] });
}
const $g = (t, e) => t.filter((n) => {
  try {
    return Ua(n) === e;
  } catch {
    return !1;
  }
}), v2 = (t, e, n) => $g(t, e).every((r) => n.includes(r));
function gP({
  section: t,
  availableBookIds: e,
  selectedBookIds: n,
  onToggle: r,
  localizedStrings: i
}) {
  const o = $g(e, t).length === 0, s = i["%scripture_section_ot_short%"], a = i["%scripture_section_nt_short%"], l = i["%scripture_section_dc_short%"], c = i["%scripture_section_extra_short%"];
  return /* @__PURE__ */ p(
    Pe,
    {
      variant: "outline",
      size: "sm",
      onClick: () => r(t),
      className: G(
        v2(e, t, n) && !o && "tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/70 hover:tw-text-primary-foreground"
      ),
      disabled: o,
      children: Z1(
        t,
        s,
        a,
        l,
        c
      )
    }
  );
}
const dy = 5, wf = 6;
function mP({
  availableBookInfo: t,
  selectedBookIds: e,
  onChangeSelectedBookIds: n,
  localizedStrings: r,
  localizedBookNames: i
}) {
  const o = r["%webView_book_selector_books_selected%"], s = r["%webView_book_selector_select_books%"], a = r["%webView_book_selector_search_books%"], l = r["%webView_book_selector_select_all%"], c = r["%webView_book_selector_clear_all%"], u = r["%webView_book_selector_no_book_found%"], f = r["%webView_book_selector_more%"], { otLong: d, ntLong: h, dcLong: g, extraLong: m } = {
    otLong: r == null ? void 0 : r["%scripture_section_ot_long%"],
    ntLong: r == null ? void 0 : r["%scripture_section_nt_long%"],
    dcLong: r == null ? void 0 : r["%scripture_section_dc_long%"],
    extraLong: r == null ? void 0 : r["%scripture_section_extra_long%"]
  }, [b, _] = fe(!1), [y, C] = fe(""), D = xe(void 0), R = xe(!1);
  if (t.length !== nt.allBookIds.length)
    throw new Error("availableBookInfo length must match Canon.allBookIds length");
  const N = Ne(() => nt.allBookIds.filter(
    (P, T) => t[T] === "1" && !nt.isObsolete(nt.bookIdToNumber(P))
  ), [t]), L = Ne(() => {
    if (!y.trim()) {
      const A = {
        [ze.OT]: [],
        [ze.NT]: [],
        [ze.DC]: [],
        [ze.Extra]: []
      };
      return N.forEach((B) => {
        const V = Ua(B);
        A[V].push(B);
      }), A;
    }
    const P = N.filter(
      (A) => Wh(A, y, i)
    ), T = {
      [ze.OT]: [],
      [ze.NT]: [],
      [ze.DC]: [],
      [ze.Extra]: []
    };
    return P.forEach((A) => {
      const B = Ua(A);
      T[B].push(A);
    }), T;
  }, [N, y, i]), O = be(
    (P, T = !1) => {
      if (!T || !D.current) {
        n(
          e.includes(P) ? e.filter((K) => K !== P) : [...e, P]
        ), D.current = P;
        return;
      }
      const A = N.findIndex((K) => K === D.current), B = N.findIndex((K) => K === P);
      if (A === -1 || B === -1) return;
      const [V, J] = [
        Math.min(A, B),
        Math.max(A, B)
      ], H = N.slice(V, J + 1).map((K) => K);
      n(
        e.includes(P) ? e.filter((K) => !H.includes(K)) : [.../* @__PURE__ */ new Set([...e, ...H])]
      );
    },
    [e, n, N]
  ), M = (P) => {
    O(P, R.current), R.current = !1;
  }, q = (P, T) => {
    P.preventDefault(), O(T, P.shiftKey);
  }, k = be(
    (P) => {
      const T = $g(N, P).map((A) => A);
      n(
        v2(N, P, e) ? e.filter((A) => !T.includes(A)) : [.../* @__PURE__ */ new Set([...e, ...T])]
      );
    },
    [e, n, N]
  ), I = () => {
    n(N.map((P) => P));
  }, S = () => {
    n([]);
  };
  return /* @__PURE__ */ j("div", { className: "tw-space-y-2", children: [
    /* @__PURE__ */ p("div", { className: "tw-flex tw-flex-wrap tw-gap-2", children: Object.values(ze).map((P) => /* @__PURE__ */ p(
      gP,
      {
        section: P,
        availableBookIds: N,
        selectedBookIds: e,
        onToggle: k,
        localizedStrings: r
      },
      P
    )) }),
    /* @__PURE__ */ j(
      ra,
      {
        open: b,
        onOpenChange: (P) => {
          _(P), P || C("");
        },
        children: [
          /* @__PURE__ */ p(ia, { asChild: !0, children: /* @__PURE__ */ j(
            Pe,
            {
              variant: "outline",
              role: "combobox",
              "aria-expanded": b,
              className: "tw-max-w-64 tw-justify-between",
              children: [
                e.length > 0 ? `${o}: ${e.length}` : s,
                /* @__PURE__ */ p(Bh, { className: "tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50" })
              ]
            }
          ) }),
          /* @__PURE__ */ p(Yo, { className: "tw-w-full tw-p-0", align: "start", children: /* @__PURE__ */ j(
            ea,
            {
              shouldFilter: !1,
              onKeyDown: (P) => {
                P.key === "Enter" && (R.current = P.shiftKey);
              },
              children: [
                /* @__PURE__ */ p(
                  xl,
                  {
                    placeholder: a,
                    value: y,
                    onValueChange: C
                  }
                ),
                /* @__PURE__ */ j("div", { className: "tw-flex tw-justify-between tw-border-b tw-p-2", children: [
                  /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: I, children: l }),
                  /* @__PURE__ */ p(Pe, { variant: "ghost", size: "sm", onClick: S, children: c })
                ] }),
                /* @__PURE__ */ j(ta, { children: [
                  /* @__PURE__ */ p(Tu, { children: u }),
                  Object.values(ze).map((P, T) => {
                    const A = L[P];
                    if (A.length !== 0)
                      return /* @__PURE__ */ j(hy, { children: [
                        /* @__PURE__ */ p(
                          Ao,
                          {
                            heading: My(P, d, h, g, m),
                            children: A.map((B) => /* @__PURE__ */ p(
                              Iy,
                              {
                                bookId: B,
                                isSelected: e.includes(B),
                                onSelect: () => M(B),
                                onMouseDown: (V) => q(V, B),
                                section: Ua(B),
                                showCheck: !0,
                                localizedBookNames: i,
                                commandValue: Nf(B, i),
                                className: "tw-flex tw-items-center"
                              },
                              B
                            ))
                          }
                        ),
                        T < Object.values(ze).length - 1 && /* @__PURE__ */ p(ky, {})
                      ] }, P);
                  })
                ] })
              ]
            }
          ) })
        ]
      }
    ),
    e.length > 0 && /* @__PURE__ */ j("div", { className: "tw-mt-2 tw-flex tw-flex-wrap tw-gap-1", children: [
      e.slice(
        0,
        e.length === wf ? wf : dy
      ).map((P) => /* @__PURE__ */ p(Fc, { className: "hover:tw-bg-secondary", variant: "secondary", children: ys(P, i) }, P)),
      e.length > wf && /* @__PURE__ */ p(
        Fc,
        {
          className: "hover:tw-bg-secondary",
          variant: "secondary",
          children: `+${e.length - dy} ${f}`
        }
      )
    ] })
  ] });
}
const n3 = Object.freeze([
  "%webView_scope_selector_selected_text%",
  "%webView_scope_selector_current_verse%",
  "%webView_scope_selector_current_chapter%",
  "%webView_scope_selector_current_book%",
  "%webView_scope_selector_choose_books%",
  "%webView_scope_selector_scope%",
  "%webView_scope_selector_select_books%",
  "%webView_book_selector_books_selected%",
  "%webView_book_selector_select_books%",
  "%webView_book_selector_search_books%",
  "%webView_book_selector_select_all%",
  "%webView_book_selector_clear_all%",
  "%webView_book_selector_no_book_found%",
  "%webView_book_selector_more%",
  "%scripture_section_ot_long%",
  "%scripture_section_ot_short%",
  "%scripture_section_nt_long%",
  "%scripture_section_nt_short%",
  "%scripture_section_dc_long%",
  "%scripture_section_dc_short%",
  "%scripture_section_extra_long%",
  "%scripture_section_extra_short%"
]), po = (t, e) => t[e] ?? e;
function r3({
  scope: t,
  availableScopes: e,
  onScopeChange: n,
  availableBookInfo: r,
  selectedBookIds: i,
  onSelectedBookIdsChange: o,
  localizedStrings: s,
  localizedBookNames: a,
  id: l
}) {
  const c = po(
    s,
    "%webView_scope_selector_selected_text%"
  ), u = po(
    s,
    "%webView_scope_selector_current_verse%"
  ), f = po(
    s,
    "%webView_scope_selector_current_chapter%"
  ), d = po(s, "%webView_scope_selector_current_book%"), h = po(s, "%webView_scope_selector_choose_books%"), g = po(s, "%webView_scope_selector_scope%"), m = po(s, "%webView_scope_selector_select_books%"), b = [
    { value: "selectedText", label: c, id: "scope-selected-text" },
    { value: "verse", label: u, id: "scope-verse" },
    { value: "chapter", label: f, id: "scope-chapter" },
    { value: "book", label: d, id: "scope-book" },
    { value: "selectedBooks", label: h, id: "scope-selected" }
  ], _ = e ? b.filter((y) => e.includes(y.value)) : b;
  return /* @__PURE__ */ j("div", { id: l, className: "tw-grid tw-gap-4", children: [
    /* @__PURE__ */ j("div", { className: "tw-grid tw-gap-2", children: [
      /* @__PURE__ */ p(Vt, { children: g }),
      /* @__PURE__ */ p(
        Kh,
        {
          value: t,
          onValueChange: n,
          className: "tw-flex tw-flex-col tw-space-y-1",
          children: _.map(({ value: y, label: C, id: D }) => /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center", children: [
            /* @__PURE__ */ p($c, { className: "tw-me-2", value: y, id: D }),
            /* @__PURE__ */ p(Vt, { htmlFor: D, children: C })
          ] }, D))
        }
      )
    ] }),
    t === "selectedBooks" && /* @__PURE__ */ j("div", { className: "tw-grid tw-gap-2", children: [
      /* @__PURE__ */ p(Vt, { children: m }),
      /* @__PURE__ */ p(
        mP,
        {
          availableBookInfo: r,
          selectedBookIds: i,
          onChangeSelectedBookIds: o,
          localizedStrings: s,
          localizedBookNames: a
        }
      )
    ] })
  ] });
}
const bf = {
  [tt("undefined")]: "Ø",
  [tt(0)]: "A",
  [tt(1)]: "B",
  [tt(2)]: "C",
  [tt(3)]: "D",
  [tt(4)]: "E",
  [tt(5)]: "F",
  [tt(6)]: "G",
  [tt(7)]: "H",
  [tt(8)]: "I",
  [tt(9)]: "J",
  [tt(10)]: "K",
  [tt(11)]: "L",
  [tt(12)]: "M",
  [tt(13)]: "N",
  [tt(14)]: "O",
  [tt(15)]: "P",
  [tt(16)]: "Q",
  [tt(17)]: "R",
  [tt(18)]: "S",
  [tt(19)]: "T",
  [tt(20)]: "U",
  [tt(21)]: "V",
  [tt(22)]: "W",
  [tt(23)]: "X",
  [tt(24)]: "Y",
  [tt(25)]: "Z"
};
function i3({
  availableScrollGroupIds: t,
  scrollGroupId: e,
  onChangeScrollGroupId: n,
  localizedStrings: r = {},
  size: i = "sm",
  className: o,
  id: s
}) {
  const a = {
    ...bf,
    ...Object.fromEntries(
      Object.entries(r).map(
        ([c, u]) => [
          c,
          c === u && c in bf ? bf[c] : u
        ]
      )
    )
  }, l = Jt();
  return /* @__PURE__ */ j(
    As,
    {
      value: `${e}`,
      onValueChange: (c) => n(
        c === "undefined" ? void 0 : parseInt(c, 10)
      ),
      children: [
        /* @__PURE__ */ p(Mo, { size: i, className: G("pr-twp tw-w-auto", o), children: /* @__PURE__ */ p(
          Ds,
          {
            placeholder: a[tt(e)] ?? e
          }
        ) }),
        /* @__PURE__ */ p(
          Oo,
          {
            id: s,
            align: l === "rtl" ? "end" : "start",
            style: { zIndex: 250 },
            children: t.map((c) => /* @__PURE__ */ p(er, { value: `${c}`, children: a[tt(c)] }, `${c}`))
          }
        )
      ]
    }
  );
}
function o3({ children: t }) {
  return /* @__PURE__ */ p("div", { className: "pr-twp tw-grid", children: t });
}
function s3({
  primary: t,
  secondary: e,
  children: n,
  isLoading: r = !1,
  loadingMessage: i
}) {
  return /* @__PURE__ */ j("div", { className: "tw-flex tw-items-center tw-justify-between tw-space-x-4 tw-py-2", children: [
    /* @__PURE__ */ j("div", { children: [
      /* @__PURE__ */ p("p", { className: "tw-text-sm tw-font-medium tw-leading-none", children: t }),
      /* @__PURE__ */ p("p", { className: "tw-whitespace-normal tw-break-words tw-text-sm tw-text-muted-foreground", children: e })
    ] }),
    r ? /* @__PURE__ */ p("p", { className: "tw-text-sm tw-text-muted-foreground", children: i }) : /* @__PURE__ */ p("div", { children: n })
  ] });
}
function a3({
  primary: t,
  secondary: e,
  includeSeparator: n = !1
}) {
  return /* @__PURE__ */ j("div", { className: "tw-space-y-4 tw-py-2", children: [
    /* @__PURE__ */ j("div", { children: [
      /* @__PURE__ */ p("h3", { className: "tw-text-lg tw-font-medium", children: t }),
      /* @__PURE__ */ p("p", { className: "tw-text-sm tw-text-muted-foreground", children: e })
    ] }),
    n ? /* @__PURE__ */ p(Og, {}) : ""
  ] });
}
function _2(t, e) {
  var n;
  return (n = Object.entries(t).find(
    ([, r]) => "menuItem" in r && r.menuItem === e
  )) == null ? void 0 : n[0];
}
function Cu({ icon: t, menuLabel: e, leading: n }) {
  return t ? /* @__PURE__ */ p(
    "img",
    {
      className: G("tw-max-h-5 tw-max-w-5", n ? "tw-me-2" : "tw-ms-2"),
      src: t,
      alt: `${n ? "Leading" : "Trailing"} icon for ${e}`
    }
  ) : void 0;
}
const x2 = (t, e, n, r) => n ? Object.entries(t).filter(
  ([o, s]) => "column" in s && s.column === n || o === n
).sort(([, o], [, s]) => o.order - s.order).flatMap(([o]) => e.filter((a) => a.group === o).sort((a, l) => a.order - l.order).map((a) => /* @__PURE__ */ j(Rg, { children: [
  /* @__PURE__ */ p(Pg, { asChild: !0, children: "command" in a ? /* @__PURE__ */ j(
    $y,
    {
      onClick: () => {
        r(a);
      },
      children: [
        a.iconPathBefore && /* @__PURE__ */ p(Cu, { icon: a.iconPathBefore, menuLabel: a.label, leading: !0 }),
        a.label,
        a.iconPathAfter && /* @__PURE__ */ p(Cu, { icon: a.iconPathAfter, menuLabel: a.label })
      ]
    },
    `dropdown-menu-item-${a.label}-${a.command}`
  ) : /* @__PURE__ */ j(uC, { children: [
    /* @__PURE__ */ p(Py, { children: a.label }),
    /* @__PURE__ */ p(cC, { children: /* @__PURE__ */ p(Ly, { children: x2(
      t,
      e,
      _2(t, a.id),
      r
    ) }) })
  ] }, `dropdown-menu-sub-${a.label}-${a.id}`) }),
  a.tooltip && /* @__PURE__ */ p(ld, { children: a.tooltip })
] }, `tooltip-${a.label}-${"command" in a ? a.command : a.id}`))) : void 0;
function $h({
  onSelectMenuItem: t,
  menuData: e,
  tabLabel: n,
  icon: r,
  className: i,
  variant: o,
  buttonVariant: s = "ghost",
  id: a
}) {
  return /* @__PURE__ */ j(Au, { variant: o, children: [
    /* @__PURE__ */ p(Jh, { "aria-label": n, className: i, asChild: !0, id: a, children: /* @__PURE__ */ p(Pe, { variant: s, size: "icon", children: r ?? /* @__PURE__ */ p(f1, {}) }) }),
    /* @__PURE__ */ p(Cl, { align: "start", className: "tw-z-[250]", children: Object.entries(e.columns).filter(([, l]) => typeof l == "object").sort(([, l], [, c]) => typeof l == "boolean" || typeof c == "boolean" ? 0 : l.order - c.order).map(([l], c, u) => /* @__PURE__ */ j(hy, { children: [
      /* @__PURE__ */ p(Ry, { children: /* @__PURE__ */ p(Ig, { children: x2(e.groups, e.items, l, t) }) }),
      c < u.length - 1 && /* @__PURE__ */ p(Du, {})
    ] }, l)) })
  ] });
}
const C2 = Y.forwardRef(
  ({ id: t, className: e, children: n }, r) => /* @__PURE__ */ p(
    "div",
    {
      ref: r,
      className: `tw-sticky tw-top-0 tw-box-border tw-flex tw-h-14 tw-flex-row tw-items-center tw-justify-between tw-gap-2 tw-overflow-clip tw-px-4 tw-py-2 tw-text-foreground tw-@container/toolbar ${e}`,
      id: t,
      children: n
    }
  )
);
function l3({
  onSelectProjectMenuItem: t,
  onSelectViewInfoMenuItem: e,
  projectMenuData: n,
  tabViewMenuData: r,
  id: i,
  className: o,
  startAreaChildren: s,
  centerAreaChildren: a,
  endAreaChildren: l,
  menuButtonIcon: c
}) {
  return /* @__PURE__ */ j(C2, { className: `tw-w-full tw-border ${o}`, id: i, children: [
    n && /* @__PURE__ */ p(
      $h,
      {
        onSelectMenuItem: t,
        menuData: n,
        tabLabel: "Project",
        icon: c ?? /* @__PURE__ */ p(h1, {}),
        buttonVariant: "ghost"
      }
    ),
    s && /* @__PURE__ */ p("div", { className: "tw-flex tw-h-full tw-shrink tw-grow-[2] tw-flex-row tw-flex-wrap tw-items-start tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-start", children: s }),
    a && /* @__PURE__ */ p("div", { className: "tw-flex tw-h-full tw-shrink tw-basis-0 tw-flex-row tw-flex-wrap tw-items-start tw-justify-center tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-center @sm:tw-grow @sm:tw-basis-auto", children: a }),
    /* @__PURE__ */ j("div", { className: "tw-flex tw-h-full tw-shrink tw-grow-[2] tw-flex-row-reverse tw-flex-wrap tw-items-start tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-end", children: [
      r && /* @__PURE__ */ p(
        $h,
        {
          onSelectMenuItem: e,
          menuData: r,
          tabLabel: "View Info",
          icon: /* @__PURE__ */ p(p1, {}),
          className: "tw-h-full"
        }
      ),
      l
    ] })
  ] });
}
function c3({
  onSelectProjectMenuItem: t,
  projectMenuData: e,
  id: n,
  className: r,
  menuButtonIcon: i
}) {
  return /* @__PURE__ */ p(C2, { className: "tw-pointer-events-none", id: n, children: e && /* @__PURE__ */ p(
    $h,
    {
      onSelectMenuItem: t,
      menuData: e,
      tabLabel: "Project",
      icon: i,
      className: `tw-pointer-events-auto tw-shadow-lg ${r}`,
      buttonVariant: "outline"
    }
  ) });
}
const k2 = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Rn.Root,
    {
      orientation: "vertical",
      ref: n,
      className: G("tw-flex tw-gap-1 tw-rounded-md tw-text-muted-foreground", t),
      ...e,
      dir: r
    }
  );
});
k2.displayName = Rn.List.displayName;
const E2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.List,
  {
    ref: n,
    className: G(
      "tw-flex-fit tw-mlk-items-center tw-w-[124px] tw-justify-center tw-rounded-md tw-bg-muted tw-p-1 tw-text-muted-foreground",
      t
    ),
    ...e
  }
));
E2.displayName = Rn.List.displayName;
const wP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Trigger,
  {
    ref: n,
    ...e,
    className: G(
      "overflow-clip tw-inline-flex tw-w-[116px] tw-cursor-pointer tw-items-center tw-justify-center tw-break-words tw-rounded-sm tw-border-0 tw-bg-muted tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-text-inherit tw-ring-offset-background tw-transition-all hover:tw-text-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=active]:tw-bg-background data-[state=active]:tw-text-foreground data-[state=active]:tw-shadow-sm",
      t
    )
  }
)), N2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Content,
  {
    ref: n,
    className: G(
      // Removed tw-mt-2 because Sebastian said so
      "tw-ms-5 tw-flex-grow tw-text-foreground tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2",
      t
    ),
    ...e
  }
));
N2.displayName = Rn.Content.displayName;
function u3({
  tabList: t,
  searchValue: e,
  onSearch: n,
  searchPlaceholder: r,
  headerTitle: i,
  searchClassName: o,
  id: s
}) {
  return /* @__PURE__ */ j("div", { id: s, className: "pr-twp", children: [
    /* @__PURE__ */ j("div", { className: "tw-sticky tw-top-0 tw-space-y-2 tw-pb-2", children: [
      i ? /* @__PURE__ */ p("h1", { children: i }) : "",
      /* @__PURE__ */ p(
        Lg,
        {
          className: o,
          value: e,
          onSearch: n,
          placeholder: r
        }
      )
    ] }),
    /* @__PURE__ */ j(k2, { children: [
      /* @__PURE__ */ p(E2, { children: t.map((a) => /* @__PURE__ */ p(wP, { value: a.value, children: a.value }, a.key)) }),
      t.map((a) => /* @__PURE__ */ p(N2, { value: a.value, children: a.content }, a.key))
    ] })
  ] });
}
function bP({ ...t }) {
  return /* @__PURE__ */ p(ht.Menu, { ...t });
}
function yP({ ...t }) {
  return /* @__PURE__ */ p(ht.Sub, { "data-slot": "menubar-sub", ...t });
}
const S2 = Y.forwardRef(({ className: t, variant: e = "default", ...n }, r) => {
  const i = Y.useMemo(
    () => ({
      variant: e
    }),
    [e]
  );
  return /* @__PURE__ */ p(Gh.Provider, { value: i, children: /* @__PURE__ */ p(
    ht.Root,
    {
      ref: r,
      className: G(
        "tw-flex tw-h-10 tw-items-center tw-space-x-1 tw-rounded-md tw-border tw-bg-background tw-p-1",
        t
      ),
      ...n
    }
  ) });
});
S2.displayName = ht.Root.displayName;
const T2 = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Sr();
  return /* @__PURE__ */ p(
    ht.Trigger,
    {
      ref: n,
      className: G(
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground",
        // CUSTOM
        "pr-twp",
        Ci({ variant: r.variant, className: t })
        // CUSTOM use context to add variants
      ),
      ...e
    }
  );
});
T2.displayName = ht.Trigger.displayName;
const A2 = Y.forwardRef(({ className: t, inset: e, children: n, ...r }, i) => {
  const o = Sr();
  return /* @__PURE__ */ j(
    ht.SubTrigger,
    {
      ref: i,
      className: G(
        "tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground",
        e && "tw-pl-8",
        Ci({ variant: o.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      ...r,
      children: [
        n,
        /* @__PURE__ */ p(Ss, { className: "tw-ml-auto tw-h-4 tw-w-4" })
      ]
    }
  );
});
A2.displayName = ht.SubTrigger.displayName;
const D2 = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Sr();
  return /* @__PURE__ */ p(
    ht.SubContent,
    {
      ref: n,
      className: G(
        "tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        // CUSTOM use context to add variants
        {
          "tw-bg-popover": r.variant === "muted"
        },
        t
      ),
      ...e
    }
  );
});
D2.displayName = ht.SubContent.displayName;
const M2 = Y.forwardRef(({ className: t, align: e = "start", alignOffset: n = -4, sideOffset: r = 8, ...i }, o) => {
  const s = Sr();
  return /* @__PURE__ */ p(ht.Portal, { children: /* @__PURE__ */ p(
    ht.Content,
    {
      ref: o,
      align: e,
      alignOffset: n,
      sideOffset: r,
      className: G(
        "tw-z-50 tw-min-w-[12rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
        // CUSTOM reset styles so that only shadcn styles are applied
        "pr-twp",
        // CUSTOM use context to add variants
        {
          "tw-bg-popover": s.variant === "muted"
        },
        t
      ),
      ...i
    }
  ) });
});
M2.displayName = ht.Content.displayName;
const O2 = Y.forwardRef(({ className: t, inset: e, ...n }, r) => {
  const i = Sr();
  return /* @__PURE__ */ p(
    ht.Item,
    {
      ref: r,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        e && "tw-pl-8",
        Ci({ variant: i.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      ...n
    }
  );
});
O2.displayName = ht.Item.displayName;
const vP = Y.forwardRef(({ className: t, children: e, checked: n, ...r }, i) => {
  const o = Sr();
  return /* @__PURE__ */ j(
    ht.CheckboxItem,
    {
      ref: i,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        Ci({ variant: o.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      checked: n,
      ...r,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(ht.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
        e
      ]
    }
  );
});
vP.displayName = ht.CheckboxItem.displayName;
const _P = Y.forwardRef(({ className: t, children: e, ...n }, r) => {
  const i = Sr();
  return /* @__PURE__ */ j(
    ht.RadioItem,
    {
      ref: r,
      className: G(
        "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
        Ci({ variant: i.variant, className: t }),
        // CUSTOM use context to add variants
        t
      ),
      ...n,
      children: [
        /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(ht.ItemIndicator, { children: /* @__PURE__ */ p(Eu, { className: "tw-h-2 tw-w-2 tw-fill-current" }) }) }),
        e
      ]
    }
  );
});
_P.displayName = ht.RadioItem.displayName;
const xP = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  ht.Label,
  {
    ref: r,
    className: G("tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold", e && "tw-pl-8", t),
    ...n
  }
));
xP.displayName = ht.Label.displayName;
const I2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  ht.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-muted", t),
    ...e
  }
));
I2.displayName = ht.Separator.displayName;
const Ia = (t, e) => {
  setTimeout(() => {
    e.forEach((n) => {
      var r;
      (r = t.current) == null || r.dispatchEvent(new KeyboardEvent("keydown", n));
    });
  }, 0);
}, R2 = (t, e, n, r) => {
  if (!n) return;
  const i = Object.entries(t).filter(
    ([o, s]) => "column" in s && s.column === n || o === n
  ).sort(([, o], [, s]) => o.order - s.order);
  return i.flatMap(([o], s) => {
    const a = e.filter((c) => c.group === o).sort((c, u) => c.order - u.order).map((c) => /* @__PURE__ */ j(Rg, { children: [
      /* @__PURE__ */ p(Pg, { asChild: !0, children: "command" in c ? /* @__PURE__ */ j(
        O2,
        {
          onClick: () => {
            r(c);
          },
          children: [
            c.iconPathBefore && /* @__PURE__ */ p(Cu, { icon: c.iconPathBefore, menuLabel: c.label, leading: !0 }),
            c.label,
            c.iconPathAfter && /* @__PURE__ */ p(Cu, { icon: c.iconPathAfter, menuLabel: c.label })
          ]
        },
        `menubar-item-${c.label}-${c.command}`
      ) : /* @__PURE__ */ j(yP, { children: [
        /* @__PURE__ */ p(A2, { children: c.label }),
        /* @__PURE__ */ p(D2, { children: R2(
          t,
          e,
          _2(t, c.id),
          r
        ) })
      ] }, `menubar-sub-${c.label}-${c.id}`) }),
      c.tooltip && /* @__PURE__ */ p(ld, { children: c.tooltip })
    ] }, `tooltip-${c.label}-${"command" in c ? c.command : c.id}`)), l = [...a];
    return a.length > 0 && s < i.length - 1 && l.push(/* @__PURE__ */ p(I2, {}, `separator-${o}`)), l;
  });
};
function CP({
  menuData: t,
  onSelectMenuItem: e,
  onOpenChange: n,
  variant: r
}) {
  const i = xe(void 0), o = xe(void 0), s = xe(void 0), a = xe(void 0), l = xe(void 0), c = (u) => {
    switch (u) {
      case "platform.app":
        return o;
      case "platform.window":
        return s;
      case "platform.layout":
        return a;
      case "platform.help":
        return l;
      default:
        return;
    }
  };
  if (I1(["alt", "alt+p", "alt+l", "alt+n", "alt+h"], (u, f) => {
    var g, m, b, _;
    u.preventDefault();
    const d = { key: "Escape", code: "Escape", keyCode: 27, bubbles: !0 }, h = { key: " ", code: "Space", keyCode: 32, bubbles: !0 };
    switch (f.hotkey) {
      case "alt":
        Ia(o, [d]);
        break;
      case "alt+p":
        (g = o.current) == null || g.focus(), Ia(o, [d, h]);
        break;
      case "alt+l":
        (m = s.current) == null || m.focus(), Ia(s, [d, h]);
        break;
      case "alt+n":
        (b = a.current) == null || b.focus(), Ia(a, [d, h]);
        break;
      case "alt+h":
        (_ = l.current) == null || _.focus(), Ia(l, [d, h]);
        break;
    }
  }), ue(() => {
    if (!n || !i.current) return;
    const u = new MutationObserver((h) => {
      h.forEach((g) => {
        if (g.attributeName === "data-state" && g.target instanceof HTMLElement) {
          const m = g.target.getAttribute("data-state");
          n(m === "open");
        }
      });
    });
    return i.current.querySelectorAll("[data-state]").forEach((h) => {
      u.observe(h, { attributes: !0 });
    }), () => u.disconnect();
  }, [n]), !!t)
    return /* @__PURE__ */ p(S2, { ref: i, className: "pr-twp tw-border-0 tw-bg-transparent", variant: r, children: Object.entries(t.columns).filter(([, u]) => typeof u == "object").sort(([, u], [, f]) => typeof u == "boolean" || typeof f == "boolean" ? 0 : u.order - f.order).map(([u, f]) => /* @__PURE__ */ j(bP, { children: [
      /* @__PURE__ */ p(T2, { ref: c(u), children: typeof f == "object" && "label" in f && f.label }),
      /* @__PURE__ */ p(
        M2,
        {
          className: "tw-z-[250]",
          children: /* @__PURE__ */ p(Ig, { children: R2(t.groups, t.items, u, e) })
        }
      )
    ] }, u)) });
}
function d3(t) {
  switch (t) {
    case void 0:
      return;
    case "darwin":
      return "tw-ps-[85px]";
    default:
      return "tw-pe-[calc(138px+1rem)]";
  }
}
function f3({
  menuData: t,
  onOpenChange: e,
  onSelectMenuItem: n,
  className: r,
  id: i,
  children: o,
  appMenuAreaChildren: s,
  configAreaChildren: a,
  shouldUseAsAppDragArea: l,
  menubarVariant: c = "default"
}) {
  const u = xe(void 0);
  return /* @__PURE__ */ p(
    "div",
    {
      className: G("tw-border tw-px-4 tw-text-foreground", r),
      ref: u,
      style: { position: "relative" },
      id: i,
      children: /* @__PURE__ */ j(
        "div",
        {
          className: "tw-flex tw-h-full tw-w-full tw-justify-between tw-overflow-hidden",
          style: l ? { WebkitAppRegion: "drag" } : void 0,
          children: [
            /* @__PURE__ */ p("div", { className: "tw-flex tw-grow tw-basis-0", children: /* @__PURE__ */ j(
              "div",
              {
                className: "tw-flex tw-items-center tw-gap-2",
                style: l ? { WebkitAppRegion: "no-drag" } : void 0,
                children: [
                  s,
                  t && /* @__PURE__ */ p(
                    CP,
                    {
                      menuData: t,
                      onOpenChange: e,
                      onSelectMenuItem: n,
                      variant: c
                    }
                  )
                ]
              }
            ) }),
            /* @__PURE__ */ p(
              "div",
              {
                className: "tw-flex tw-items-center tw-gap-2 tw-px-2",
                style: l ? { WebkitAppRegion: "no-drag" } : void 0,
                children: o
              }
            ),
            /* @__PURE__ */ p("div", { className: "tw-flex tw-min-w-0 tw-grow tw-basis-0 tw-justify-end", children: /* @__PURE__ */ p(
              "div",
              {
                className: "tw-flex tw-min-w-0 tw-items-center tw-gap-2 tw-pe-1",
                style: l ? { WebkitAppRegion: "no-drag" } : void 0,
                children: a
              }
            ) })
          ]
        }
      )
    }
  );
}
const kP = (t, e) => t[e] ?? e;
function h3({
  knownUiLanguages: t,
  primaryLanguage: e = "en",
  fallbackLanguages: n = [],
  onLanguagesChange: r,
  onPrimaryLanguageChange: i,
  onFallbackLanguagesChange: o,
  localizedStrings: s,
  className: a,
  id: l
}) {
  const c = kP(
    s,
    "%settings_uiLanguageSelector_fallbackLanguages%"
  ), [u, f] = fe(!1), d = (g) => {
    i && i(g), r && r([g, ...n.filter((m) => m !== g)]), o && n.find((m) => m === g) && o([...n.filter((m) => m !== g)]), f(!1);
  }, h = (g, m) => {
    var _, y, C, D, R, N;
    const b = m !== g ? ((y = (_ = t[g]) == null ? void 0 : _.uiNames) == null ? void 0 : y[m]) ?? ((D = (C = t[g]) == null ? void 0 : C.uiNames) == null ? void 0 : D.en) : void 0;
    return b ? `${(R = t[g]) == null ? void 0 : R.autonym} (${b})` : (N = t[g]) == null ? void 0 : N.autonym;
  };
  return /* @__PURE__ */ j("div", { id: l, className: G("pr-twp tw-max-w-sm", a), children: [
    /* @__PURE__ */ j(
      As,
      {
        name: "uiLanguage",
        value: e,
        onValueChange: d,
        open: u,
        onOpenChange: (g) => f(g),
        children: [
          /* @__PURE__ */ p(Mo, { children: /* @__PURE__ */ p(Ds, {}) }),
          /* @__PURE__ */ p(
            Oo,
            {
              className: "tw-z-[250]",
              children: Object.keys(t).map((g) => /* @__PURE__ */ p(er, { value: g, children: h(g, e) }, g))
            }
          )
        ]
      }
    ),
    e !== "en" && /* @__PURE__ */ p("div", { className: "tw-pt-3", children: /* @__PURE__ */ p(Vt, { className: "tw-font-normal tw-text-muted-foreground", children: E1(c, {
      fallbackLanguages: (n == null ? void 0 : n.length) > 0 ? n.map((g) => h(g, e)).join(", ") : t.en.autonym
    }) }) })
  ] });
}
function EP({ item: t, createLabel: e, createComplexLabel: n }) {
  return e ? /* @__PURE__ */ p(Vt, { children: e(t) }) : n ? /* @__PURE__ */ p(Vt, { children: n(t) }) : /* @__PURE__ */ p(Vt, { children: t });
}
function p3({
  id: t,
  className: e,
  listItems: n,
  selectedListItems: r,
  handleSelectListItem: i,
  createLabel: o,
  createComplexLabel: s
}) {
  return /* @__PURE__ */ p("div", { id: t, className: e, children: n.map((a) => /* @__PURE__ */ j("div", { className: "tw-m-2 tw-flex tw-items-center", children: [
    /* @__PURE__ */ p(
      Mg,
      {
        className: "tw-me-2 tw-align-middle",
        checked: r.includes(a),
        onCheckedChange: (l) => i(a, l)
      }
    ),
    /* @__PURE__ */ p(
      EP,
      {
        item: a,
        createLabel: o,
        createComplexLabel: s
      }
    )
  ] }, a)) });
}
function g3({
  cardKey: t,
  isSelected: e,
  onSelect: n,
  isDenied: r,
  isHidden: i = !1,
  className: o,
  children: s,
  dropdownContent: a,
  additionalSelectedContent: l,
  accentColor: c
}) {
  return /* @__PURE__ */ j(
    "div",
    {
      hidden: i,
      onClick: n,
      onKeyDown: (f) => {
        (f.key === "Enter" || f.key === " ") && (f.preventDefault(), n());
      },
      role: "button",
      tabIndex: 0,
      "aria-pressed": e,
      className: G(
        "tw-relative tw-min-w-36 tw-rounded-xl tw-border tw-shadow-none hover:tw-bg-muted/50",
        { "tw-opacity-50 hover:tw-opacity-100": r && !e },
        { "tw-bg-accent": e },
        { "tw-bg-transparent": !e },
        o
      ),
      children: [
        /* @__PURE__ */ j("div", { className: "tw-flex tw-flex-col tw-gap-2 tw-p-4", children: [
          /* @__PURE__ */ j("div", { className: "tw-flex tw-justify-between tw-overflow-hidden", children: [
            /* @__PURE__ */ p("div", { className: "tw-min-w-0 tw-flex-1", children: s }),
            e && a && /* @__PURE__ */ j(Au, { children: [
              /* @__PURE__ */ p(Jh, { className: G(c && "tw-me-1"), asChild: !0, children: /* @__PURE__ */ p(Pe, { className: "tw-h-6 tw-w-6", variant: "ghost", size: "icon", children: /* @__PURE__ */ p(g1, {}) }) }),
              /* @__PURE__ */ p(Cl, { align: "end", children: a })
            ] })
          ] }),
          e && l && /* @__PURE__ */ p("div", { className: "tw-w-fit tw-min-w-0 tw-max-w-full tw-overflow-hidden", children: l })
        ] }),
        c && /* @__PURE__ */ p(
          "div",
          {
            className: `tw-absolute tw-right-0 tw-top-0 tw-h-full tw-w-2 tw-rounded-r-xl ${c}`
          }
        )
      ]
    },
    t
  );
}
const NP = Yn(({ className: t, ...e }, n) => /* @__PURE__ */ p(m1, { size: 35, className: G("tw-animate-spin", t), ...e, ref: n }));
NP.displayName = "Spinner";
function m3({
  id: t,
  isDisabled: e = !1,
  hasError: n = !1,
  isFullWidth: r = !1,
  helperText: i,
  label: o,
  placeholder: s,
  isRequired: a = !1,
  className: l,
  defaultValue: c,
  value: u,
  onChange: f,
  onFocus: d,
  onBlur: h
}) {
  return /* @__PURE__ */ j("div", { className: G("tw-inline-grid tw-items-center tw-gap-1.5", { "tw-w-full": r }), children: [
    /* @__PURE__ */ p(
      Vt,
      {
        htmlFor: t,
        className: G({
          "tw-text-red-600": n,
          "tw-hidden": !o
        }),
        children: `${o}${a ? "*" : ""}`
      }
    ),
    /* @__PURE__ */ p(
      Vl,
      {
        id: t,
        disabled: e,
        placeholder: s,
        required: a,
        className: G(l, { "tw-border-red-600": n }),
        defaultValue: c,
        value: u,
        onChange: f,
        onFocus: d,
        onBlur: h
      }
    ),
    /* @__PURE__ */ p("p", { className: G({ "tw-hidden": !i }), children: i })
  ] });
}
const SP = Ji(
  // CUSTOM: Copied all `svg` arbitrary selector variant classes as `img` variants so we can use
  // images (or svgs from file) as icons
  // Implemented by TJ Couch
  // Approved by Alex Mercado
  // 20 February 2025
  "tw-relative tw-w-full tw-rounded-lg tw-border tw-p-4 [&>svg~*]:tw-pl-7 [&>svg+div]:tw-translate-y-[-3px] [&>svg]:tw-absolute [&>svg]:tw-left-4 [&>svg]:tw-top-4 [&>svg]:tw-text-foreground [&>img~*]:tw-pl-7 [&>img+div]:tw-translate-y-[-3px] [&>img]:tw-absolute [&>img]:tw-left-4 [&>img]:tw-top-4 [&>img]:tw-text-foreground",
  {
    variants: {
      variant: {
        default: "tw-bg-background tw-text-foreground",
        destructive: (
          // CUSTOM: Copied all `svg` arbitrary selector variant classes as `img` variants so we can
          // use images (or svgs from file) as icons
          // Implemented by TJ Couch
          // Approved by Alex Mercado
          // 20 February 2025
          "tw-border-destructive/50 tw-text-destructive dark:tw-border-destructive [&>svg]:tw-text-destructive [&>img]:tw-text-destructive"
        )
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), TP = Y.forwardRef(({ className: t, variant: e, ...n }, r) => /* @__PURE__ */ p(
  "div",
  {
    ref: r,
    role: "alert",
    className: G(
      // CUSTOM
      "pr-twp",
      SP({ variant: e }),
      t
    ),
    ...n
  }
));
TP.displayName = "Alert";
const AP = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ j(
    "h5",
    {
      ref: n,
      className: G("tw-mb-1 tw-font-medium tw-leading-none tw-tracking-tight", t),
      ...e,
      children: [
        e.children,
        " "
      ]
    }
  )
);
AP.displayName = "AlertTitle";
const DP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p("div", { ref: n, className: G("tw-text-sm [&_p]:tw-leading-relaxed", t), ...e }));
DP.displayName = "AlertDescription";
const MP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Zs.Root,
  {
    ref: n,
    className: G(
      "pr-twp tw-relative tw-flex tw-h-10 tw-w-10 tw-shrink-0 tw-overflow-hidden tw-rounded-full",
      t
    ),
    ...e
  }
));
MP.displayName = Zs.Root.displayName;
const OP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Zs.Image,
  {
    ref: n,
    className: G("pr-twp tw-aspect-square tw-h-full tw-w-full", t),
    ...e
  }
));
OP.displayName = Zs.Image.displayName;
const IP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Zs.Fallback,
  {
    ref: n,
    className: G(
      "pr-twp tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center tw-rounded-full tw-bg-muted",
      t
    ),
    ...e
  }
));
IP.displayName = Zs.Fallback.displayName;
const w3 = pt.Root, b3 = pt.Trigger, y3 = pt.Group, v3 = pt.Portal, _3 = pt.Sub, x3 = pt.RadioGroup, RP = Y.forwardRef(({ className: t, inset: e, children: n, ...r }, i) => /* @__PURE__ */ j(
  pt.SubTrigger,
  {
    ref: i,
    className: G(
      "pr-twp tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground",
      e && "tw-pl-8",
      t
    ),
    ...r,
    children: [
      n,
      /* @__PURE__ */ p(Ss, { className: "tw-ml-auto tw-h-4 tw-w-4" })
    ]
  }
));
RP.displayName = pt.SubTrigger.displayName;
const PP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  pt.SubContent,
  {
    ref: n,
    className: G(
      "pr-twp tw-z-50 tw-min-w-[8rem] tw-origin-[--radix-context-menu-content-transform-origin] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...e
  }
));
PP.displayName = pt.SubContent.displayName;
const LP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(pt.Portal, { children: /* @__PURE__ */ p(
  pt.Content,
  {
    ref: n,
    className: G(
      "pr-twp tw-z-50 tw-max-h-[--radix-context-menu-content-available-height] tw-min-w-[8rem] tw-origin-[--radix-context-menu-content-transform-origin] tw-overflow-y-auto tw-overflow-x-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md tw-animate-in tw-fade-in-80 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2",
      t
    ),
    ...e
  }
) }));
LP.displayName = pt.Content.displayName;
const $P = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  pt.Item,
  {
    ref: r,
    className: G(
      "pr-twp tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      e && "tw-pl-8",
      t
    ),
    ...n
  }
));
$P.displayName = pt.Item.displayName;
const FP = Y.forwardRef(({ className: t, children: e, checked: n, ...r }, i) => /* @__PURE__ */ j(
  pt.CheckboxItem,
  {
    ref: i,
    className: G(
      "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      t
    ),
    checked: n,
    ...r,
    children: [
      /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(pt.ItemIndicator, { children: /* @__PURE__ */ p(xi, { className: "tw-h-4 tw-w-4" }) }) }),
      e
    ]
  }
));
FP.displayName = pt.CheckboxItem.displayName;
const BP = Y.forwardRef(({ className: t, children: e, ...n }, r) => /* @__PURE__ */ j(
  pt.RadioItem,
  {
    ref: r,
    className: G(
      "tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50",
      t
    ),
    ...n,
    children: [
      /* @__PURE__ */ p("span", { className: "tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center", children: /* @__PURE__ */ p(pt.ItemIndicator, { children: /* @__PURE__ */ p(Eu, { className: "tw-h-2 tw-w-2 tw-fill-current" }) }) }),
      e
    ]
  }
));
BP.displayName = pt.RadioItem.displayName;
const qP = Y.forwardRef(({ className: t, inset: e, ...n }, r) => /* @__PURE__ */ p(
  pt.Label,
  {
    ref: r,
    className: G(
      "tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold tw-text-foreground",
      e && "tw-pl-8",
      t
    ),
    ...n
  }
));
qP.displayName = pt.Label.displayName;
const jP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  pt.Separator,
  {
    ref: n,
    className: G("tw--mx-1 tw-my-1 tw-h-px tw-bg-border", t),
    ...e
  }
));
jP.displayName = pt.Separator.displayName;
function UP({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "span",
    {
      className: G("tw-ml-auto tw-text-xs tw-tracking-widest tw-text-muted-foreground", t),
      ...e
    }
  );
}
UP.displayName = "ContextMenuShortcut";
const P2 = Y.createContext({
  direction: "bottom"
});
function zP({
  shouldScaleBackground: t = !0,
  direction: e = "bottom",
  ...n
}) {
  const r = Y.useMemo(() => ({ direction: e }), [e]);
  return /* @__PURE__ */ p(P2.Provider, { value: r, children: /* @__PURE__ */ p(
    Nr.Root,
    {
      shouldScaleBackground: t,
      direction: e,
      ...n
    }
  ) });
}
zP.displayName = "Drawer";
const C3 = Nr.Trigger, VP = Nr.Portal, k3 = Nr.Close, L2 = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Nr.Overlay,
  {
    ref: n,
    className: G("tw-fixed tw-inset-0 tw-z-50 tw-bg-black/80", t),
    ...e
  }
));
L2.displayName = Nr.Overlay.displayName;
const HP = Y.forwardRef(({ className: t, children: e, hideDrawerHandle: n = !1, ...r }, i) => {
  const { direction: o = "bottom" } = Y.useContext(P2), s = {
    bottom: "tw-inset-x-0 tw-bottom-0 tw-mt-24 tw-rounded-t-[10px]",
    top: "tw-inset-x-0 tw-top-0 tw-mb-24 tw-rounded-b-[10px]",
    left: "tw-inset-y-0 tw-left-0 tw-mr-24 tw-rounded-r-[10px] tw-w-auto tw-max-w-sm",
    right: "tw-inset-y-0 tw-right-0 tw-ml-24 tw-rounded-l-[10px] tw-w-auto tw-max-w-sm"
  }, a = {
    bottom: "tw-mx-auto tw-mt-4 tw-h-2 tw-w-[100px] tw-rounded-full tw-bg-muted",
    top: "tw-mx-auto tw-mb-4 tw-h-2 tw-w-[100px] tw-rounded-full tw-bg-muted",
    left: "tw-my-auto tw-mr-4 tw-w-2 tw-h-[100px] tw-rounded-full tw-bg-muted",
    right: "tw-my-auto tw-ml-4 tw-w-2 tw-h-[100px] tw-rounded-full tw-bg-muted"
  };
  return /* @__PURE__ */ j(VP, { children: [
    /* @__PURE__ */ p(L2, {}),
    /* @__PURE__ */ j(
      Nr.Content,
      {
        ref: i,
        className: G(
          // CUSTOM: Change Tailwind CSS classes for styling
          // Removed tw-inset-x-0 tw-bottom-0 tw-mt-24 tw-rounded-t-[10px] tw-flex-col
          "pr-twp tw-fixed tw-z-50 tw-flex tw-h-auto tw-border tw-bg-background",
          o === "bottom" || o === "top" ? "tw-flex-col" : "tw-flex-row",
          s[o],
          t
        ),
        ...r,
        children: [
          !n && (o === "bottom" || o === "right") && /* @__PURE__ */ p("div", { className: a[o] }),
          /* @__PURE__ */ p("div", { className: "tw-flex tw-flex-col", children: e }),
          !n && (o === "top" || o === "left") && /* @__PURE__ */ p("div", { className: a[o] })
        ]
      }
    )
  ] });
});
HP.displayName = "DrawerContent";
function WP({ className: t, ...e }) {
  return /* @__PURE__ */ p(
    "div",
    {
      className: G("tw-grid tw-gap-1.5 tw-p-4 tw-text-center sm:tw-text-left", t),
      ...e
    }
  );
}
WP.displayName = "DrawerHeader";
function KP({ className: t, ...e }) {
  return /* @__PURE__ */ p("div", { className: G("tw-mt-auto tw-flex tw-flex-col tw-gap-2 tw-p-4", t), ...e });
}
KP.displayName = "DrawerFooter";
const GP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Nr.Title,
  {
    ref: n,
    className: G("tw-text-lg tw-font-semibold tw-leading-none tw-tracking-tight", t),
    ...e
  }
));
GP.displayName = Nr.Title.displayName;
const JP = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Nr.Description,
  {
    ref: n,
    className: G("tw-text-sm tw-text-muted-foreground", t),
    ...e
  }
));
JP.displayName = Nr.Description.displayName;
const XP = Y.forwardRef(({ className: t, value: e, ...n }, r) => /* @__PURE__ */ p(
  kf.Root,
  {
    ref: r,
    className: G(
      "pr-twp tw-relative tw-h-4 tw-w-full tw-overflow-hidden tw-rounded-full tw-bg-secondary",
      t
    ),
    ...n,
    children: /* @__PURE__ */ p(
      kf.Indicator,
      {
        className: "tw-h-full tw-w-full tw-flex-1 tw-bg-primary tw-transition-all",
        style: { transform: `translateX(-${100 - (e || 0)}%)` }
      }
    )
  }
));
XP.displayName = kf.Root.displayName;
function E3({
  className: t,
  ...e
}) {
  return /* @__PURE__ */ p(
    jh.PanelGroup,
    {
      className: G(
        "tw-flex tw-h-full tw-w-full data-[panel-group-direction=vertical]:tw-flex-col",
        t
      ),
      ...e
    }
  );
}
const N3 = jh.Panel;
function S3({
  withHandle: t,
  className: e,
  ...n
}) {
  return /* @__PURE__ */ p(
    jh.PanelResizeHandle,
    {
      className: G(
        "tw-relative tw-flex tw-w-px tw-items-center tw-justify-center tw-bg-border after:tw-absolute after:tw-inset-y-0 after:tw-left-1/2 after:tw-w-1 after:tw--translate-x-1/2 focus-visible:tw-outline-none focus-visible:tw-ring-1 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-1 data-[panel-group-direction=vertical]:tw-h-px data-[panel-group-direction=vertical]:tw-w-full data-[panel-group-direction=vertical]:after:tw-left-0 data-[panel-group-direction=vertical]:after:tw-h-1 data-[panel-group-direction=vertical]:after:tw-w-full data-[panel-group-direction=vertical]:after:tw--translate-y-1/2 data-[panel-group-direction=vertical]:after:tw-translate-x-0 [&[data-panel-group-direction=vertical]>div]:tw-rotate-90",
        e
      ),
      ...n,
      children: t && /* @__PURE__ */ p("div", { className: "tw-z-10 tw-flex tw-h-4 tw-w-3 tw-items-center tw-justify-center tw-rounded-sm tw-border tw-bg-border", children: /* @__PURE__ */ p(w1, { className: "tw-h-2.5 tw-w-2.5" }) })
    }
  );
}
function T3({ ...t }) {
  return /* @__PURE__ */ p(
    R1,
    {
      className: "tw-toaster tw-group",
      toastOptions: {
        classNames: {
          toast: "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton: "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton: "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground"
        }
      },
      ...t
    }
  );
}
const YP = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ j(
    Ra.Root,
    {
      ref: n,
      className: G(
        "pr-twp tw-relative tw-flex tw-w-full tw-touch-none tw-select-none tw-items-center",
        t
      ),
      ...e,
      dir: r,
      children: [
        /* @__PURE__ */ p(Ra.Track, { className: "tw-relative tw-h-2 tw-w-full tw-grow tw-overflow-hidden tw-rounded-full tw-bg-secondary", children: /* @__PURE__ */ p(Ra.Range, { className: "tw-absolute tw-h-full tw-bg-primary" }) }),
        /* @__PURE__ */ p(Ra.Thumb, { className: "tw-block tw-h-5 tw-w-5 tw-rounded-full tw-border-2 tw-border-primary tw-bg-background tw-ring-offset-background tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50" })
      ]
    }
  );
});
YP.displayName = Ra.Root.displayName;
const QP = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Ef.Root,
    {
      className: G(
        "tw-peer pr-twp tw-inline-flex tw-h-6 tw-w-11 tw-shrink-0 tw-cursor-pointer tw-items-center tw-rounded-full tw-border-2 tw-border-transparent tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 focus-visible:tw-ring-offset-background disabled:tw-cursor-not-allowed disabled:tw-opacity-50 data-[state=checked]:tw-bg-primary data-[state=unchecked]:tw-bg-input",
        t
      ),
      ...e,
      ref: n,
      children: /* @__PURE__ */ p(
        Ef.Thumb,
        {
          className: G(
            "pr-twp tw-pointer-events-none tw-block tw-h-5 tw-w-5 tw-rounded-full tw-bg-background tw-shadow-lg tw-ring-0 tw-transition-transform",
            {
              "data-[state=checked]:tw-translate-x-5 data-[state=unchecked]:tw-translate-x-0": r === "ltr"
            },
            {
              "data-[state=checked]:tw-translate-x-[-20px] data-[state=unchecked]:tw-translate-x-0": r === "rtl"
            }
          )
        }
      )
    }
  );
});
QP.displayName = Ef.Root.displayName;
const A3 = Rn.Root, ZP = Y.forwardRef(({ className: t, ...e }, n) => {
  const r = Jt();
  return /* @__PURE__ */ p(
    Rn.List,
    {
      ref: n,
      className: G(
        "pr-twp tw-inline-flex tw-h-10 tw-items-center tw-justify-center tw-rounded-md tw-bg-muted tw-p-1 tw-text-muted-foreground",
        t
      ),
      ...e,
      dir: r
    }
  );
});
ZP.displayName = Rn.List.displayName;
const eL = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Trigger,
  {
    ref: n,
    className: G(
      "pr-twp tw-inline-flex tw-items-center tw-justify-center tw-whitespace-nowrap tw-rounded-sm tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-all hover:tw-text-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=active]:tw-bg-background data-[state=active]:tw-text-foreground data-[state=active]:tw-shadow-sm",
      t
    ),
    ...e
  }
));
eL.displayName = Rn.Trigger.displayName;
const tL = Y.forwardRef(({ className: t, ...e }, n) => /* @__PURE__ */ p(
  Rn.Content,
  {
    ref: n,
    className: G(
      "pr-twp tw-mt-2 tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2",
      t
    ),
    ...e
  }
));
tL.displayName = Rn.Content.displayName;
const nL = Y.forwardRef(
  ({ className: t, ...e }, n) => /* @__PURE__ */ p(
    "textarea",
    {
      className: G(
        "pr-twp tw-flex tw-min-h-[80px] tw-w-full tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-base tw-ring-offset-background placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 md:tw-text-sm",
        t
      ),
      ref: n,
      ...e
    }
  )
);
nL.displayName = "Textarea";
const D3 = (t, e) => {
  ue(() => {
    if (!t) return () => {
    };
    const n = t(e);
    return () => {
      n();
    };
  }, [t, e]);
};
function rL(t) {
  return {
    preserveValue: !0,
    ...t
  };
}
const iL = (t, e, n = {}) => {
  const r = xe(e);
  r.current = e;
  const i = xe(n);
  i.current = rL(i.current);
  const [o, s] = fe(() => r.current), [a, l] = fe(!0);
  return ue(() => {
    let c = !0;
    return l(!!t), (async () => {
      if (t) {
        const u = await t();
        c && (s(() => u), l(!1));
      }
    })(), () => {
      c = !1, i.current.preserveValue || s(() => r.current);
    };
  }, [t]), [o, a];
}, yf = () => !1, M3 = (t, e) => {
  const [n] = iL(
    be(async () => {
      if (!t) return yf;
      const r = await Promise.resolve(t(e));
      return async () => r();
    }, [e, t]),
    yf,
    // We want the unsubscriber to return to default value immediately upon changing subscription
    // So the useEffect below will unsubscribe asap
    { preserveValue: !1 }
  );
  ue(() => () => {
    n !== yf && n();
  }, [n]);
}, O3 = ({
  options: t,
  onFocusChange: e,
  onOptionSelect: n,
  onCharacterPress: r
}) => {
  const i = xe(null), [o, s] = fe(void 0), [a, l] = fe(void 0), c = be(
    (d) => {
      s(d);
      const h = t.find((m) => m.id === d);
      h && (e == null || e(h));
      const g = document.getElementById(d);
      g && (g.scrollIntoView({ block: "center" }), g.focus()), i.current && i.current.setAttribute("aria-activedescendant", d);
    },
    [e, t]
  ), u = be(
    (d) => {
      const h = t.find((g) => g.id === d);
      h && (l((g) => g === d ? void 0 : d), n == null || n(h));
    },
    [n, t]
  ), f = be(
    (d) => {
      const h = t.findIndex((b) => b.id === o);
      let g = h;
      switch (d.key) {
        case "ArrowDown":
          g = Math.min(h + 1, t.length - 1), d.preventDefault();
          break;
        case "ArrowUp":
          g = Math.max(h - 1, 0), d.preventDefault();
          break;
        case "Home":
          g = 0, d.preventDefault();
          break;
        case "End":
          g = t.length - 1, d.preventDefault();
          break;
        case " ":
        case "Enter":
          o && u(o), d.preventDefault(), d.stopPropagation();
          return;
        default:
          d.key.length === 1 && !d.metaKey && !d.ctrlKey && !d.altKey && (r == null || r(d.key), d.preventDefault());
          return;
      }
      const m = t[g];
      m && c(m.id);
    },
    [t, c, o, u, r]
  );
  return {
    listboxRef: i,
    activeId: o,
    selectedId: a,
    handleKeyDown: f,
    focusOption: c
  };
};
function oL(t, e = "top") {
  if (!t || typeof document > "u") return;
  const n = document.head || document.querySelector("head"), r = n.querySelector(":first-child"), i = document.createElement("style");
  i.appendChild(document.createTextNode(t)), e === "top" && r ? n.insertBefore(i, r) : n.appendChild(i);
}
oL(`*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*:where(.pr-twp,.pr-twp *),
::before:where(.pr-twp,.pr-twp *),
::after:where(.pr-twp,.pr-twp *) {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before:where(.pr-twp,.pr-twp *),
::after:where(.pr-twp,.pr-twp *) {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured \`sans\` font-family by default.
5. Use the user's configured \`sans\` font-feature-settings by default.
6. Use the user's configured \`sans\` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html:where(.pr-twp,.pr-twp *),
:host:where(.pr-twp,.pr-twp *) {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */ /* 3 */
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from \`html\` so users can set them as a class directly on the \`html\` element.
*/

body:where(.pr-twp,.pr-twp *) {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr:where(.pr-twp,.pr-twp *) {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]):where(.pr-twp,.pr-twp *) {
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1:where(.pr-twp,.pr-twp *),
h2:where(.pr-twp,.pr-twp *),
h3:where(.pr-twp,.pr-twp *),
h4:where(.pr-twp,.pr-twp *),
h5:where(.pr-twp,.pr-twp *),
h6:where(.pr-twp,.pr-twp *) {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a:where(.pr-twp,.pr-twp *) {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b:where(.pr-twp,.pr-twp *),
strong:where(.pr-twp,.pr-twp *) {
  font-weight: bolder;
}

/*
1. Use the user's configured \`mono\` font-family by default.
2. Use the user's configured \`mono\` font-feature-settings by default.
3. Use the user's configured \`mono\` font-variation-settings by default.
4. Correct the odd \`em\` font sizing in all browsers.
*/

code:where(.pr-twp,.pr-twp *),
kbd:where(.pr-twp,.pr-twp *),
samp:where(.pr-twp,.pr-twp *),
pre:where(.pr-twp,.pr-twp *) {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small:where(.pr-twp,.pr-twp *) {
  font-size: 80%;
}

/*
Prevent \`sub\` and \`sup\` elements from affecting the line height in all browsers.
*/

sub:where(.pr-twp,.pr-twp *),
sup:where(.pr-twp,.pr-twp *) {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub:where(.pr-twp,.pr-twp *) {
  bottom: -0.25em;
}

sup:where(.pr-twp,.pr-twp *) {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table:where(.pr-twp,.pr-twp *) {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button:where(.pr-twp,.pr-twp *),
input:where(.pr-twp,.pr-twp *),
optgroup:where(.pr-twp,.pr-twp *),
select:where(.pr-twp,.pr-twp *),
textarea:where(.pr-twp,.pr-twp *) {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button:where(.pr-twp,.pr-twp *),
select:where(.pr-twp,.pr-twp *) {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button:where(.pr-twp,.pr-twp *),
input:where([type='button']):where(.pr-twp,.pr-twp *),
input:where([type='reset']):where(.pr-twp,.pr-twp *),
input:where([type='submit']):where(.pr-twp,.pr-twp *) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring:where(.pr-twp,.pr-twp *) {
  outline: auto;
}

/*
Remove the additional \`:invalid\` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid:where(.pr-twp,.pr-twp *) {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress:where(.pr-twp,.pr-twp *) {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button:where(.pr-twp,.pr-twp *),
::-webkit-outer-spin-button:where(.pr-twp,.pr-twp *) {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search']:where(.pr-twp,.pr-twp *) {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration:where(.pr-twp,.pr-twp *) {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to \`inherit\` in Safari.
*/

::-webkit-file-upload-button:where(.pr-twp,.pr-twp *) {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary:where(.pr-twp,.pr-twp *) {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote:where(.pr-twp,.pr-twp *),
dl:where(.pr-twp,.pr-twp *),
dd:where(.pr-twp,.pr-twp *),
h1:where(.pr-twp,.pr-twp *),
h2:where(.pr-twp,.pr-twp *),
h3:where(.pr-twp,.pr-twp *),
h4:where(.pr-twp,.pr-twp *),
h5:where(.pr-twp,.pr-twp *),
h6:where(.pr-twp,.pr-twp *),
hr:where(.pr-twp,.pr-twp *),
figure:where(.pr-twp,.pr-twp *),
p:where(.pr-twp,.pr-twp *),
pre:where(.pr-twp,.pr-twp *) {
  margin: 0;
}

fieldset:where(.pr-twp,.pr-twp *) {
  margin: 0;
  padding: 0;
}

legend:where(.pr-twp,.pr-twp *) {
  padding: 0;
}

ol:where(.pr-twp,.pr-twp *),
ul:where(.pr-twp,.pr-twp *),
menu:where(.pr-twp,.pr-twp *) {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog:where(.pr-twp,.pr-twp *) {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea:where(.pr-twp,.pr-twp *) {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder:where(.pr-twp,.pr-twp *),
textarea::placeholder:where(.pr-twp,.pr-twp *) {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button:where(.pr-twp,.pr-twp *),
[role="button"]:where(.pr-twp,.pr-twp *) {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled:where(.pr-twp,.pr-twp *) {
  cursor: default;
}

/*
1. Make replaced elements \`display: block\` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add \`vertical-align: middle\` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img:where(.pr-twp,.pr-twp *),
svg:where(.pr-twp,.pr-twp *),
video:where(.pr-twp,.pr-twp *),
canvas:where(.pr-twp,.pr-twp *),
audio:where(.pr-twp,.pr-twp *),
iframe:where(.pr-twp,.pr-twp *),
embed:where(.pr-twp,.pr-twp *),
object:where(.pr-twp,.pr-twp *) {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img:where(.pr-twp,.pr-twp *),
video:where(.pr-twp,.pr-twp *) {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])):where(.pr-twp,.pr-twp *) {
  display: none;
}
  /* Adding the preflight selector (pr-twp) to components was not changing the font as desired.
  So this piece of code adds tw-font-sans everywhere we include preflight. */
  .pr-twp {
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
  @font-face {
    font-family: 'Inter';
    font-display: 'swap';
    src: url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
  }

  /**
   * Theme colors and other CSS variable properties in Platform.Bible. These are applied in CSS
   * properties using \`hsl(var(--variableName))\` or Tailwind classes like \`tw-bg-primary\`
   *
   * See the wiki's [Matching Application
   * Theme](https://github.com/paranext/paranext-extension-template/wiki/Extension-Anatomy#matching-application-theme)
   * section for more information
   */
  /* ["Slate" base theme by shadcn/ui](https://ui.shadcn.com/docs/theming#slate) */
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%; /* black */
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%; /* black */
    --popover: 210 20% 98%; /* popover platform */
    --popover-foreground: 222.2 84% 4.9%; /* black */
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 50% 95%;
    --secondary-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --muted: 210 50% 95%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 50% 95%;
    --accent-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%; /* slate-50 */
    --border: 214.3 31.8% 91.4%; /* slate-200 */
    --input: 214.3 31.8% 91.4%; /* slate-200 */
    --ring: 222.2 84% 4.9%; /* black */

    --sidebar-background: 210 20% 98%; /* popover platform */
    --sidebar-foreground: 222.2 84% 4.9%; /* black */
    --sidebar-primary: 222.2 47.4% 11.2%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 210 50% 95%;
    --sidebar-accent-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --sidebar-border: 214.3 31.8% 91.4%; /* slate-200 */
    --sidebar-ring: 222.2 84% 4.9%; /* black */

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%; /* black */
    --foreground: 210 40% 98%; /* slate-50 */
    --card: 222.2 84% 4.9%; /* black */
    --card-foreground: 210 40% 98%; /* slate-50 */
    --popover: 222.2 84% 4.9%; /* black */
    --popover-foreground: 210 40% 98%; /* slate-50 */
    --primary: 210 40% 98%; /* slate-50 */
    --primary-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%; /* slate-50 */
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%; /* slate-50 */
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%; /* slate-50 */
    --border: 215.3 19.3% 34.5%; /* slate-600 */
    --input: 215.3 19.3% 34.5%; /* slate-600 */
    --ring: 212.7 26.8% 83.9%;

    --sidebar-background: 222.2 84% 4.9%; /* black */
    --sidebar-foreground: 215 20.2% 65.1%;
    --sidebar-primary: 210 40% 98%; /* slate-50 */
    --sidebar-primary-foreground: 222.2 47.4% 11.2%; /* slate-900 */
    --sidebar-accent: 217.2 32.6% 17.5%;
    --sidebar-accent-foreground: 215 20.2% 65.1%;
    --sidebar-border: 217.2 32.6% 17.5%;
    --sidebar-ring: 212.7 26.8% 83.9%;
  }

  /* Palette built in https://tweakcn.com/themes/cmeukcpoj000204l45lxw5a74 based on "Caffeine" theme*/
  .pr-twp,
  .pr-twp * {
  border-color: hsl(var(--border));
  outline-color: hsl(var(--ring) / 0.5);
}

  /**
    * disabled because tslint does not like it, but it is the selector that's needed
    */
  /* stylelint-disable-next-line selector-no-qualifying-type */
  body.pr-twp {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}
.tw-prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.tw-prose :where(p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.tw-prose :where([class~="lead"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.tw-prose :where(a):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.tw-prose :where(strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.tw-prose :where(a strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(blockquote strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(thead th strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.tw-prose :where(ol[type="A"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-alpha;
}
.tw-prose :where(ol[type="a"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-alpha;
}
.tw-prose :where(ol[type="A" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-alpha;
}
.tw-prose :where(ol[type="a" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-alpha;
}
.tw-prose :where(ol[type="I"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-roman;
}
.tw-prose :where(ol[type="i"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-roman;
}
.tw-prose :where(ol[type="I" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: upper-roman;
}
.tw-prose :where(ol[type="i" s]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: lower-roman;
}
.tw-prose :where(ol[type="1"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: decimal;
}
.tw-prose :where(ul):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.tw-prose :where(ol > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.tw-prose :where(ul > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.tw-prose :where(dt):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.tw-prose :where(hr):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.tw-prose :where(blockquote):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "0o201C""0o201D""0o2018""0o2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.tw-prose :where(blockquote p:first-of-type):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::before {
  content: open-quote;
}
.tw-prose :where(blockquote p:last-of-type):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::after {
  content: close-quote;
}
.tw-prose :where(h1):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.tw-prose :where(h1 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.tw-prose :where(h2):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.tw-prose :where(h2 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.tw-prose :where(h3):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.tw-prose :where(h3 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.tw-prose :where(h4):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.tw-prose :where(h4 strong):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.tw-prose :where(img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(picture):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(video):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(kbd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.tw-prose :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.tw-prose :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::before {
  content: "\`";
}
.tw-prose :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::after {
  content: "\`";
}
.tw-prose :where(a code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(h1 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(h2 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.tw-prose :where(h3 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.tw-prose :where(h4 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(blockquote code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(thead th code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: inherit;
}
.tw-prose :where(pre):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.tw-prose :where(pre code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.tw-prose :where(pre code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::before {
  content: none;
}
.tw-prose :where(pre code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *))::after {
  content: none;
}
.tw-prose :where(table):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.tw-prose :where(thead):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.tw-prose :where(thead th):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.tw-prose :where(tbody tr):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.tw-prose :where(tbody tr:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-bottom-width: 0;
}
.tw-prose :where(tbody td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  vertical-align: baseline;
}
.tw-prose :where(tfoot):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.tw-prose :where(tfoot td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  vertical-align: top;
}
.tw-prose :where(th, td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  text-align: start;
}
.tw-prose :where(figure > *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose :where(figcaption):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.tw-prose {
  --tw-prose-body: hsl(var(--foreground));
  --tw-prose-headings: hsl(var(--foreground));
  --tw-prose-lead: hsl(var(--muted-foreground));
  --tw-prose-links: hsl(var(--primary));
  --tw-prose-bold: hsl(var(--foreground));
  --tw-prose-counters: hsl(var(--muted-foreground));
  --tw-prose-bullets: hsl(var(--muted-foreground));
  --tw-prose-hr: hsl(var(--border));
  --tw-prose-quotes: hsl(var(--foreground));
  --tw-prose-quote-borders: hsl(var(--border));
  --tw-prose-captions: hsl(var(--muted-foreground));
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: hsl(var(--foreground));
  --tw-prose-pre-code: hsl(var(--muted-foreground));
  --tw-prose-pre-bg: hsl(var(--muted));
  --tw-prose-th-borders: hsl(var(--border));
  --tw-prose-td-borders: hsl(var(--border));
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.tw-prose :where(picture > img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose :where(li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.tw-prose :where(ol > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.tw-prose :where(ul > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.tw-prose :where(.tw-prose > ul > li p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.tw-prose :where(.tw-prose > ul > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
}
.tw-prose :where(.tw-prose > ul > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.25em;
}
.tw-prose :where(.tw-prose > ol > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
}
.tw-prose :where(.tw-prose > ol > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.25em;
}
.tw-prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.tw-prose :where(dl):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.tw-prose :where(dd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.tw-prose :where(hr + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(h2 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(h3 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(h4 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(thead th:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose :where(thead th:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose :where(tbody td, tfoot td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.tw-prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose :where(figure):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.tw-prose :where(.tw-prose > :first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose :where(.tw-prose > :last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 0;
}
.tw-prose-sm {
  font-size: 0.875rem;
  line-height: 1.7142857;
}
.tw-prose-sm :where(p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where([class~="lead"]):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.tw-prose-sm :where(blockquote):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-inline-start: 1.1111111em;
}
.tw-prose-sm :where(h1):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}
.tw-prose-sm :where(h2):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}
.tw-prose-sm :where(h3):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}
.tw-prose-sm :where(h4):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}
.tw-prose-sm :where(img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(picture):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(picture > img):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose-sm :where(video):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(kbd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  border-radius: 0.3125rem;
  padding-top: 0.1428571em;
  padding-inline-end: 0.3571429em;
  padding-bottom: 0.1428571em;
  padding-inline-start: 0.3571429em;
}
.tw-prose-sm :where(code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
}
.tw-prose-sm :where(h2 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.9em;
}
.tw-prose-sm :where(h3 code):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8888889em;
}
.tw-prose-sm :where(pre):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}
.tw-prose-sm :where(ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}
.tw-prose-sm :where(ul):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}
.tw-prose-sm :where(li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}
.tw-prose-sm :where(ol > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.4285714em;
}
.tw-prose-sm :where(ul > li):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0.4285714em;
}
.tw-prose-sm :where(.tw-prose-sm > ul > li p):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}
.tw-prose-sm :where(.tw-prose-sm > ul > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
}
.tw-prose-sm :where(.tw-prose-sm > ul > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where(.tw-prose-sm > ol > li > p:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
}
.tw-prose-sm :where(.tw-prose-sm > ol > li > p:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}
.tw-prose-sm :where(dl):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}
.tw-prose-sm :where(dt):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.1428571em;
}
.tw-prose-sm :where(dd):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0.2857143em;
  padding-inline-start: 1.5714286em;
}
.tw-prose-sm :where(hr):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}
.tw-prose-sm :where(hr + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(h2 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(h3 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(h4 + *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(table):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}
.tw-prose-sm :where(thead th):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}
.tw-prose-sm :where(thead th:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose-sm :where(thead th:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose-sm :where(tbody td, tfoot td):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}
.tw-prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-start: 0;
}
.tw-prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  padding-inline-end: 0;
}
.tw-prose-sm :where(figure):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}
.tw-prose-sm :where(figure > *):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.tw-prose-sm :where(figcaption):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}
.tw-prose-sm :where(.tw-prose-sm > :first-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-top: 0;
}
.tw-prose-sm :where(.tw-prose-sm > :last-child):not(:where([class~="tw-not-prose"],[class~="tw-not-prose"] *)) {
  margin-bottom: 0;
}
.tw-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.tw-pointer-events-none {
  pointer-events: none;
}
.tw-pointer-events-auto {
  pointer-events: auto;
}
.tw-fixed {
  position: fixed;
}
.tw-absolute {
  position: absolute;
}
.tw-relative {
  position: relative;
}
.tw-sticky {
  position: sticky;
}
.tw-inset-0 {
  inset: 0px;
}
.tw-inset-x-0 {
  left: 0px;
  right: 0px;
}
.tw-inset-y-0 {
  top: 0px;
  bottom: 0px;
}
.tw-bottom-0 {
  bottom: 0px;
}
.tw-left-0 {
  left: 0px;
}
.tw-left-2 {
  left: 0.5rem;
}
.tw-left-3 {
  left: 0.75rem;
}
.tw-left-4 {
  left: 1rem;
}
.tw-left-\\[50\\%\\] {
  left: 50%;
}
.tw-right-0 {
  right: 0px;
}
.tw-right-1 {
  right: 0.25rem;
}
.tw-right-3 {
  right: 0.75rem;
}
.tw-right-4 {
  right: 1rem;
}
.tw-start-2 {
  inset-inline-start: 0.5rem;
}
.tw-top-0 {
  top: 0px;
}
.tw-top-1\\.5 {
  top: 0.375rem;
}
.tw-top-1\\/2 {
  top: 50%;
}
.tw-top-2\\.5 {
  top: 0.625rem;
}
.tw-top-3\\.5 {
  top: 0.875rem;
}
.tw-top-4 {
  top: 1rem;
}
.tw-top-\\[-1px\\] {
  top: -1px;
}
.tw-top-\\[50\\%\\] {
  top: 50%;
}
.tw-z-10 {
  z-index: 10;
}
.tw-z-20 {
  z-index: 20;
}
.tw-z-50 {
  z-index: 50;
}
.tw-z-\\[1000\\] {
  z-index: 1000;
}
.tw-z-\\[250\\] {
  z-index: 250;
}
.tw-col-span-2 {
  grid-column: span 2 / span 2;
}
.tw-col-span-3 {
  grid-column: span 3 / span 3;
}
.tw-m-1 {
  margin: 0.25rem;
}
.tw-m-2 {
  margin: 0.5rem;
}
.tw--mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}
.tw-mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}
.tw-mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.tw-mx-3\\.5 {
  margin-left: 0.875rem;
  margin-right: 0.875rem;
}
.tw-mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.tw-my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.tw-my-auto {
  margin-top: auto;
  margin-bottom: auto;
}
.tw-mb-1 {
  margin-bottom: 0.25rem;
}
.tw-mb-2 {
  margin-bottom: 0.5rem;
}
.tw-mb-24 {
  margin-bottom: 6rem;
}
.tw-mb-4 {
  margin-bottom: 1rem;
}
.tw-me-1 {
  margin-inline-end: 0.25rem;
}
.tw-me-2 {
  margin-inline-end: 0.5rem;
}
.tw-ml-2 {
  margin-left: 0.5rem;
}
.tw-ml-24 {
  margin-left: 6rem;
}
.tw-ml-4 {
  margin-left: 1rem;
}
.tw-ml-auto {
  margin-left: auto;
}
.tw-mr-1 {
  margin-right: 0.25rem;
}
.tw-mr-2 {
  margin-right: 0.5rem;
}
.tw-mr-24 {
  margin-right: 6rem;
}
.tw-mr-4 {
  margin-right: 1rem;
}
.tw-ms-1 {
  margin-inline-start: 0.25rem;
}
.tw-ms-2 {
  margin-inline-start: 0.5rem;
}
.tw-ms-5 {
  margin-inline-start: 1.25rem;
}
.tw-ms-auto {
  margin-inline-start: auto;
}
.tw-mt-1 {
  margin-top: 0.25rem;
}
.tw-mt-2 {
  margin-top: 0.5rem;
}
.tw-mt-24 {
  margin-top: 6rem;
}
.tw-mt-3 {
  margin-top: 0.75rem;
}
.tw-mt-4 {
  margin-top: 1rem;
}
.tw-mt-6 {
  margin-top: 1.5rem;
}
.tw-mt-auto {
  margin-top: auto;
}
.tw-box-border {
  box-sizing: border-box;
}
.tw-block {
  display: block;
}
.tw-inline-block {
  display: inline-block;
}
.tw-flex {
  display: flex;
}
.tw-inline-flex {
  display: inline-flex;
}
.tw-table {
  display: table;
}
.tw-table-cell {
  display: table-cell;
}
.tw-table-row {
  display: table-row;
}
.tw-grid {
  display: grid;
}
.tw-inline-grid {
  display: inline-grid;
}
.tw-hidden {
  display: none;
}
.tw-aspect-square {
  aspect-ratio: 1 / 1;
}
.tw-size-4 {
  width: 1rem;
  height: 1rem;
}
.tw-h-10 {
  height: 2.5rem;
}
.tw-h-11 {
  height: 2.75rem;
}
.tw-h-12 {
  height: 3rem;
}
.tw-h-14 {
  height: 3.5rem;
}
.tw-h-2 {
  height: 0.5rem;
}
.tw-h-2\\.5 {
  height: 0.625rem;
}
.tw-h-20 {
  height: 5rem;
}
.tw-h-24 {
  height: 6rem;
}
.tw-h-3 {
  height: 0.75rem;
}
.tw-h-3\\.5 {
  height: 0.875rem;
}
.tw-h-32 {
  height: 8rem;
}
.tw-h-4 {
  height: 1rem;
}
.tw-h-40 {
  height: 10rem;
}
.tw-h-5 {
  height: 1.25rem;
}
.tw-h-6 {
  height: 1.5rem;
}
.tw-h-64 {
  height: 16rem;
}
.tw-h-7 {
  height: 1.75rem;
}
.tw-h-8 {
  height: 2rem;
}
.tw-h-9 {
  height: 2.25rem;
}
.tw-h-96 {
  height: 24rem;
}
.tw-h-\\[1\\.2rem\\] {
  height: 1.2rem;
}
.tw-h-\\[100px\\] {
  height: 100px;
}
.tw-h-\\[1px\\] {
  height: 1px;
}
.tw-h-\\[300px\\] {
  height: 300px;
}
.tw-h-\\[5px\\] {
  height: 5px;
}
.tw-h-\\[var\\(--radix-select-trigger-height\\)\\] {
  height: var(--radix-select-trigger-height);
}
.tw-h-auto {
  height: auto;
}
.tw-h-full {
  height: 100%;
}
.tw-h-px {
  height: 1px;
}
.tw-h-svh {
  height: 100svh;
}
.tw-max-h-5 {
  max-height: 1.25rem;
}
.tw-max-h-80 {
  max-height: 20rem;
}
.tw-max-h-96 {
  max-height: 24rem;
}
.tw-max-h-\\[--radix-context-menu-content-available-height\\] {
  max-height: var(--radix-context-menu-content-available-height);
}
.tw-max-h-\\[300px\\] {
  max-height: 300px;
}
.tw-max-h-\\[96\\%\\] {
  max-height: 96%;
}
.tw-min-h-0 {
  min-height: 0px;
}
.tw-min-h-\\[80px\\] {
  min-height: 80px;
}
.tw-min-h-svh {
  min-height: 100svh;
}
.tw-w-1\\/2 {
  width: 50%;
}
.tw-w-10 {
  width: 2.5rem;
}
.tw-w-11 {
  width: 2.75rem;
}
.tw-w-12 {
  width: 3rem;
}
.tw-w-2 {
  width: 0.5rem;
}
.tw-w-2\\.5 {
  width: 0.625rem;
}
.tw-w-20 {
  width: 5rem;
}
.tw-w-24 {
  width: 6rem;
}
.tw-w-3 {
  width: 0.75rem;
}
.tw-w-3\\.5 {
  width: 0.875rem;
}
.tw-w-3\\/4 {
  width: 75%;
}
.tw-w-32 {
  width: 8rem;
}
.tw-w-4 {
  width: 1rem;
}
.tw-w-4\\/5 {
  width: 80%;
}
.tw-w-4\\/6 {
  width: 66.666667%;
}
.tw-w-48 {
  width: 12rem;
}
.tw-w-5 {
  width: 1.25rem;
}
.tw-w-5\\/6 {
  width: 83.333333%;
}
.tw-w-56 {
  width: 14rem;
}
.tw-w-6 {
  width: 1.5rem;
}
.tw-w-60 {
  width: 15rem;
}
.tw-w-64 {
  width: 16rem;
}
.tw-w-7 {
  width: 1.75rem;
}
.tw-w-72 {
  width: 18rem;
}
.tw-w-8 {
  width: 2rem;
}
.tw-w-80 {
  width: 20rem;
}
.tw-w-9\\/12 {
  width: 75%;
}
.tw-w-96 {
  width: 24rem;
}
.tw-w-\\[--sidebar-width\\] {
  width: var(--sidebar-width);
}
.tw-w-\\[1\\.2rem\\] {
  width: 1.2rem;
}
.tw-w-\\[100px\\] {
  width: 100px;
}
.tw-w-\\[116px\\] {
  width: 116px;
}
.tw-w-\\[124px\\] {
  width: 124px;
}
.tw-w-\\[150px\\] {
  width: 150px;
}
.tw-w-\\[180px\\] {
  width: 180px;
}
.tw-w-\\[1px\\] {
  width: 1px;
}
.tw-w-\\[200px\\] {
  width: 200px;
}
.tw-w-\\[250px\\] {
  width: 250px;
}
.tw-w-\\[280px\\] {
  width: 280px;
}
.tw-w-\\[300px\\] {
  width: 300px;
}
.tw-w-\\[350px\\] {
  width: 350px;
}
.tw-w-\\[400px\\] {
  width: 400px;
}
.tw-w-\\[500px\\] {
  width: 500px;
}
.tw-w-\\[5px\\] {
  width: 5px;
}
.tw-w-\\[600px\\] {
  width: 600px;
}
.tw-w-\\[70px\\] {
  width: 70px;
}
.tw-w-auto {
  width: auto;
}
.tw-w-fit {
  width: fit-content;
}
.tw-w-full {
  width: 100%;
}
.tw-w-px {
  width: 1px;
}
.tw-min-w-0 {
  min-width: 0px;
}
.tw-min-w-16 {
  min-width: 4rem;
}
.tw-min-w-36 {
  min-width: 9rem;
}
.tw-min-w-5 {
  min-width: 1.25rem;
}
.tw-min-w-80 {
  min-width: 20rem;
}
.tw-min-w-\\[12rem\\] {
  min-width: 12rem;
}
.tw-min-w-\\[140px\\] {
  min-width: 140px;
}
.tw-min-w-\\[215px\\] {
  min-width: 215px;
}
.tw-min-w-\\[8rem\\] {
  min-width: 8rem;
}
.tw-min-w-\\[var\\(--radix-select-trigger-width\\)\\] {
  min-width: var(--radix-select-trigger-width);
}
.tw-max-w-2xl {
  max-width: 42rem;
}
.tw-max-w-3xl {
  max-width: 48rem;
}
.tw-max-w-48 {
  max-width: 12rem;
}
.tw-max-w-4xl {
  max-width: 56rem;
}
.tw-max-w-5 {
  max-width: 1.25rem;
}
.tw-max-w-64 {
  max-width: 16rem;
}
.tw-max-w-6xl {
  max-width: 72rem;
}
.tw-max-w-96 {
  max-width: 24rem;
}
.tw-max-w-\\[--skeleton-width\\] {
  max-width: var(--skeleton-width);
}
.tw-max-w-\\[220px\\] {
  max-width: 220px;
}
.tw-max-w-full {
  max-width: 100%;
}
.tw-max-w-lg {
  max-width: 32rem;
}
.tw-max-w-md {
  max-width: 28rem;
}
.tw-max-w-none {
  max-width: none;
}
.tw-max-w-sm {
  max-width: 24rem;
}
.tw-flex-1 {
  flex: 1 1 0%;
}
.tw-flex-shrink-0 {
  flex-shrink: 0;
}
.tw-shrink {
  flex-shrink: 1;
}
.tw-shrink-0 {
  flex-shrink: 0;
}
.tw-flex-grow {
  flex-grow: 1;
}
.tw-grow {
  flex-grow: 1;
}
.tw-grow-\\[2\\] {
  flex-grow: 2;
}
.tw-basis-0 {
  flex-basis: 0px;
}
.tw-caption-bottom {
  caption-side: bottom;
}
.tw-origin-\\[--radix-context-menu-content-transform-origin\\] {
  transform-origin: var(--radix-context-menu-content-transform-origin);
}
.tw--translate-x-1\\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw--translate-x-px {
  --tw-translate-x: -1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw--translate-y-1\\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-x-\\[-50\\%\\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-x-px {
  --tw-translate-x: 1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-translate-y-\\[-50\\%\\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes tw-pulse {

  50% {
    opacity: .5;
  }
}
.tw-animate-pulse {
  animation: tw-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes tw-spin {

  to {
    transform: rotate(360deg);
  }
}
.tw-animate-spin {
  animation: tw-spin 1s linear infinite;
}
.tw-cursor-default {
  cursor: default;
}
.tw-cursor-pointer {
  cursor: pointer;
}
.tw-touch-none {
  touch-action: none;
}
.tw-select-none {
  user-select: none;
}
.tw-list-inside {
  list-style-position: inside;
}
.tw-list-disc {
  list-style-type: disc;
}
.tw-grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.tw-grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.tw-grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.tw-grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.tw-grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr));
}
.tw-grid-cols-\\[25\\%\\,25\\%\\,50\\%\\] {
  grid-template-columns: 25% 25% 50%;
}
.tw-grid-cols-\\[25\\%\\,50\\%\\,25\\%\\] {
  grid-template-columns: 25% 50% 25%;
}
.tw-flex-row {
  flex-direction: row;
}
.tw-flex-row-reverse {
  flex-direction: row-reverse;
}
.tw-flex-col {
  flex-direction: column;
}
.tw-flex-col-reverse {
  flex-direction: column-reverse;
}
.tw-flex-wrap {
  flex-wrap: wrap;
}
.tw-items-start {
  align-items: flex-start;
}
.tw-items-end {
  align-items: flex-end;
}
.tw-items-center {
  align-items: center;
}
.tw-items-stretch {
  align-items: stretch;
}
.tw-justify-start {
  justify-content: flex-start;
}
.tw-justify-end {
  justify-content: flex-end;
}
.tw-justify-center {
  justify-content: center;
}
.tw-justify-between {
  justify-content: space-between;
}
.tw-gap-1 {
  gap: 0.25rem;
}
.tw-gap-1\\.5 {
  gap: 0.375rem;
}
.tw-gap-2 {
  gap: 0.5rem;
}
.tw-gap-2\\.5 {
  gap: 0.625rem;
}
.tw-gap-4 {
  gap: 1rem;
}
.tw-gap-6 {
  gap: 1.5rem;
}
.tw-gap-\\[12px\\] {
  gap: 12px;
}
.tw-gap-x-2 {
  column-gap: 0.5rem;
}
.tw-gap-x-4 {
  column-gap: 1rem;
}
.tw-space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.tw-space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}
.tw-space-y-1\\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}
.tw-space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.tw-space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
.tw-space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.tw-space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.tw-space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.tw-divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
.tw-divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.tw-self-stretch {
  align-self: stretch;
}
.tw-overflow-auto {
  overflow: auto;
}
.tw-overflow-hidden {
  overflow: hidden;
}
.tw-overflow-clip {
  overflow: clip;
}
.tw-overflow-y-auto {
  overflow-y: auto;
}
.tw-overflow-x-hidden {
  overflow-x: hidden;
}
.tw-overflow-y-hidden {
  overflow-y: hidden;
}
.tw-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.tw-text-ellipsis {
  text-overflow: ellipsis;
}
.tw-whitespace-normal {
  white-space: normal;
}
.tw-whitespace-nowrap {
  white-space: nowrap;
}
.tw-text-nowrap {
  text-wrap: nowrap;
}
.tw-text-balance {
  text-wrap: balance;
}
.tw-break-words {
  overflow-wrap: break-word;
}
.tw-rounded {
  border-radius: 0.25rem;
}
.tw-rounded-\\[6px\\] {
  border-radius: 6px;
}
.tw-rounded-full {
  border-radius: 9999px;
}
.tw-rounded-lg {
  border-radius: var(--radius);
}
.tw-rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
.tw-rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}
.tw-rounded-xl {
  border-radius: 0.75rem;
}
.tw-rounded-b-\\[10px\\] {
  border-bottom-right-radius: 10px;
  border-bottom-left-radius: 10px;
}
.tw-rounded-l-\\[10px\\] {
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
}
.tw-rounded-r-\\[10px\\] {
  border-top-right-radius: 10px;
  border-bottom-right-radius: 10px;
}
.tw-rounded-r-xl {
  border-top-right-radius: 0.75rem;
  border-bottom-right-radius: 0.75rem;
}
.tw-rounded-t-\\[10px\\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}
.tw-border {
  border-width: 1px;
}
.tw-border-0 {
  border-width: 0px;
}
.tw-border-2 {
  border-width: 2px;
}
.tw-border-b {
  border-bottom-width: 1px;
}
.tw-border-b-0 {
  border-bottom-width: 0px;
}
.tw-border-e {
  border-inline-end-width: 1px;
}
.tw-border-e-0 {
  border-inline-end-width: 0px;
}
.tw-border-l {
  border-left-width: 1px;
}
.tw-border-l-4 {
  border-left-width: 4px;
}
.tw-border-s-2 {
  border-inline-start-width: 2px;
}
.tw-border-t {
  border-top-width: 1px;
}
.tw-border-t-0 {
  border-top-width: 0px;
}
.tw-border-solid {
  border-style: solid;
}
.tw-border-dashed {
  border-style: dashed;
}
.tw-border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
}
.tw-border-blue-400 {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity, 1));
}
.tw-border-blue-500 {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity, 1));
}
.tw-border-destructive\\/50 {
  border-color: hsl(var(--destructive) / 0.5);
}
.tw-border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}
.tw-border-input {
  border-color: hsl(var(--input));
}
.tw-border-primary {
  border-color: hsl(var(--primary));
}
.tw-border-red-300 {
  --tw-border-opacity: 1;
  border-color: rgb(252 165 165 / var(--tw-border-opacity, 1));
}
.tw-border-red-400 {
  --tw-border-opacity: 1;
  border-color: rgb(248 113 113 / var(--tw-border-opacity, 1));
}
.tw-border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(239 68 68 / var(--tw-border-opacity, 1));
}
.tw-border-red-600 {
  --tw-border-opacity: 1;
  border-color: rgb(220 38 38 / var(--tw-border-opacity, 1));
}
.tw-border-ring {
  border-color: hsl(var(--ring));
}
.tw-border-sidebar-border {
  border-color: hsl(var(--sidebar-border));
}
.tw-border-slate-300 {
  --tw-border-opacity: 1;
  border-color: rgb(203 213 225 / var(--tw-border-opacity, 1));
}
.tw-border-transparent {
  border-color: transparent;
}
.tw-border-yellow-400 {
  --tw-border-opacity: 1;
  border-color: rgb(250 204 21 / var(--tw-border-opacity, 1));
}
.tw-border-yellow-500 {
  --tw-border-opacity: 1;
  border-color: rgb(234 179 8 / var(--tw-border-opacity, 1));
}
.tw-border-s-amber-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(253 230 138 / var(--tw-border-opacity, 1));
}
.tw-border-s-indigo-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(199 210 254 / var(--tw-border-opacity, 1));
}
.tw-border-s-purple-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(233 213 255 / var(--tw-border-opacity, 1));
}
.tw-border-s-red-200 {
  --tw-border-opacity: 1;
  border-inline-start-color: rgb(254 202 202 / var(--tw-border-opacity, 1));
}
.tw-bg-accent {
  background-color: hsl(var(--accent));
}
.tw-bg-background {
  background-color: hsl(var(--background));
}
.tw-bg-black\\/80 {
  background-color: rgb(0 0 0 / 0.8);
}
.tw-bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
}
.tw-bg-blue-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity, 1));
}
.tw-bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity, 1));
}
.tw-bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity, 1));
}
.tw-bg-border {
  background-color: hsl(var(--border));
}
.tw-bg-card {
  background-color: hsl(var(--card));
}
.tw-bg-destructive {
  background-color: hsl(var(--destructive));
}
.tw-bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}
.tw-bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}
.tw-bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity, 1));
}
.tw-bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));
}
.tw-bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));
}
.tw-bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));
}
.tw-bg-muted {
  background-color: hsl(var(--muted));
}
.tw-bg-muted\\/50 {
  background-color: hsl(var(--muted) / 0.5);
}
.tw-bg-neutral-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity, 1));
}
.tw-bg-orange-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 237 213 / var(--tw-bg-opacity, 1));
}
.tw-bg-popover {
  background-color: hsl(var(--popover));
}
.tw-bg-primary {
  background-color: hsl(var(--primary));
}
.tw-bg-purple-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 245 255 / var(--tw-bg-opacity, 1));
}
.tw-bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}
.tw-bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}
.tw-bg-secondary {
  background-color: hsl(var(--secondary));
}
.tw-bg-sidebar {
  background-color: hsl(var(--sidebar-background));
}
.tw-bg-sidebar-accent {
  background-color: hsl(var(--sidebar-accent));
}
.tw-bg-sidebar-border {
  background-color: hsl(var(--sidebar-border));
}
.tw-bg-transparent {
  background-color: transparent;
}
.tw-bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}
.tw-bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
}
.tw-bg-yellow-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 252 232 / var(--tw-bg-opacity, 1));
}
.tw-bg-yellow-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(234 179 8 / var(--tw-bg-opacity, 1));
}
.tw-bg-zinc-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(161 161 170 / var(--tw-bg-opacity, 1));
}
.tw-fill-current {
  fill: currentColor;
}
.tw-fill-destructive {
  fill: hsl(var(--destructive));
}
.tw-fill-yellow-400 {
  fill: #facc15;
}
.tw-fill-yellow-400\\/50 {
  fill: rgb(250 204 21 / 0.5);
}
.tw-p-0 {
  padding: 0px;
}
.tw-p-0\\.5 {
  padding: 0.125rem;
}
.tw-p-1 {
  padding: 0.25rem;
}
.tw-p-2 {
  padding: 0.5rem;
}
.tw-p-3 {
  padding: 0.75rem;
}
.tw-p-4 {
  padding: 1rem;
}
.tw-p-6 {
  padding: 1.5rem;
}
.tw-p-8 {
  padding: 2rem;
}
.tw-p-\\[10px\\] {
  padding: 10px;
}
.tw-p-\\[1px\\] {
  padding: 1px;
}
.tw-px-0 {
  padding-left: 0px;
  padding-right: 0px;
}
.tw-px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.tw-px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.tw-px-2\\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.tw-px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.tw-px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.tw-px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.tw-px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.tw-py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.tw-py-0\\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.tw-py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.tw-py-1\\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.tw-py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.tw-py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.tw-py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.tw-py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.tw-py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.\\!tw-pr-10 {
  padding-right: 2.5rem !important;
}
.tw-pb-2 {
  padding-bottom: 0.5rem;
}
.tw-pb-3 {
  padding-bottom: 0.75rem;
}
.tw-pb-4 {
  padding-bottom: 1rem;
}
.tw-pe-1 {
  padding-inline-end: 0.25rem;
}
.tw-pe-2 {
  padding-inline-end: 0.5rem;
}
.tw-pe-9 {
  padding-inline-end: 2.25rem;
}
.tw-pe-\\[calc\\(138px\\+1rem\\)\\] {
  padding-inline-end: calc(138px + 1rem);
}
.tw-pl-3 {
  padding-left: 0.75rem;
}
.tw-pl-4 {
  padding-left: 1rem;
}
.tw-pl-5 {
  padding-left: 1.25rem;
}
.tw-pl-8 {
  padding-left: 2rem;
}
.tw-pr-2 {
  padding-right: 0.5rem;
}
.tw-pr-3 {
  padding-right: 0.75rem;
}
.tw-pr-4 {
  padding-right: 1rem;
}
.tw-ps-12 {
  padding-inline-start: 3rem;
}
.tw-ps-4 {
  padding-inline-start: 1rem;
}
.tw-ps-8 {
  padding-inline-start: 2rem;
}
.tw-ps-9 {
  padding-inline-start: 2.25rem;
}
.tw-ps-\\[85px\\] {
  padding-inline-start: 85px;
}
.tw-pt-0 {
  padding-top: 0px;
}
.tw-pt-2 {
  padding-top: 0.5rem;
}
.tw-pt-3 {
  padding-top: 0.75rem;
}
.tw-pt-6 {
  padding-top: 1.5rem;
}
.tw-text-left {
  text-align: left;
}
.tw-text-center {
  text-align: center;
}
.tw-text-right {
  text-align: right;
}
.tw-text-start {
  text-align: start;
}
.tw-text-end {
  text-align: end;
}
.tw-align-middle {
  vertical-align: middle;
}
.tw-text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.tw-text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.tw-text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.tw-text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.tw-text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.tw-text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.tw-font-bold {
  font-weight: 700;
}
.tw-font-medium {
  font-weight: 500;
}
.tw-font-normal {
  font-weight: 400;
}
.tw-font-semibold {
  font-weight: 600;
}
.tw-capitalize {
  text-transform: capitalize;
}
.tw-italic {
  font-style: italic;
}
.tw-tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}
.tw-leading-loose {
  line-height: 2;
}
.tw-leading-none {
  line-height: 1;
}
.tw-leading-relaxed {
  line-height: 1.625;
}
.tw-leading-tight {
  line-height: 1.25;
}
.tw-tracking-tight {
  letter-spacing: -0.025em;
}
.tw-tracking-widest {
  letter-spacing: 0.1em;
}
.tw-text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity, 1));
}
.tw-text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}
.tw-text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity, 1));
}
.tw-text-card-foreground {
  color: hsl(var(--card-foreground));
}
.tw-text-current {
  color: currentColor;
}
.tw-text-destructive {
  color: hsl(var(--destructive));
}
.tw-text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}
.tw-text-foreground {
  color: hsl(var(--foreground));
}
.tw-text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity, 1));
}
.tw-text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}
.tw-text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}
.tw-text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}
.tw-text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}
.tw-text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
}
.tw-text-green-700 {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity, 1));
}
.tw-text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity, 1));
}
.tw-text-inherit {
  color: inherit;
}
.tw-text-muted-foreground {
  color: hsl(var(--muted-foreground));
}
.tw-text-muted-foreground\\/50 {
  color: hsl(var(--muted-foreground) / 0.5);
}
.tw-text-orange-800 {
  --tw-text-opacity: 1;
  color: rgb(154 52 18 / var(--tw-text-opacity, 1));
}
.tw-text-popover-foreground {
  color: hsl(var(--popover-foreground));
}
.tw-text-primary {
  color: hsl(var(--primary));
}
.tw-text-primary-foreground {
  color: hsl(var(--primary-foreground));
}
.tw-text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}
.tw-text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}
.tw-text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}
.tw-text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity, 1));
}
.tw-text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}
.tw-text-sidebar-accent-foreground {
  color: hsl(var(--sidebar-accent-foreground));
}
.tw-text-sidebar-foreground {
  color: hsl(var(--sidebar-foreground));
}
.tw-text-sidebar-foreground\\/70 {
  color: hsl(var(--sidebar-foreground) / 0.7);
}
.tw-text-slate-900 {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity, 1));
}
.tw-text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}
.tw-text-yellow-400 {
  --tw-text-opacity: 1;
  color: rgb(250 204 21 / var(--tw-text-opacity, 1));
}
.tw-text-yellow-600 {
  --tw-text-opacity: 1;
  color: rgb(202 138 4 / var(--tw-text-opacity, 1));
}
.tw-text-yellow-700 {
  --tw-text-opacity: 1;
  color: rgb(161 98 7 / var(--tw-text-opacity, 1));
}
.tw-underline {
  text-decoration-line: underline;
}
.tw-decoration-destructive {
  text-decoration-color: hsl(var(--destructive));
}
.tw-underline-offset-4 {
  text-underline-offset: 4px;
}
.tw-opacity-0 {
  opacity: 0;
}
.tw-opacity-100 {
  opacity: 1;
}
.tw-opacity-50 {
  opacity: 0.5;
}
.tw-opacity-60 {
  opacity: 0.6;
}
.tw-opacity-70 {
  opacity: 0.7;
}
.tw-shadow-\\[0_0_0_1px_hsl\\(var\\(--sidebar-border\\)\\)\\] {
  --tw-shadow: 0 0 0 1px hsl(var(--sidebar-border));
  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-none {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.tw-ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.tw-ring-sidebar-ring {
  --tw-ring-color: hsl(var(--sidebar-ring));
}
.tw-ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}
.tw-drop-shadow-sm {
  --tw-drop-shadow: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.tw-transition-\\[left\\,right\\,width\\] {
  transition-property: left,right,width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-\\[margin\\,opa\\] {
  transition-property: margin,opa;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-\\[width\\,height\\,padding\\] {
  transition-property: width,height,padding;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-\\[width\\] {
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.tw-duration-200 {
  transition-duration: 200ms;
}
.tw-ease-linear {
  transition-timing-function: linear;
}
@keyframes enter {

  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {

  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
.tw-animate-in {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.tw-fade-in-0 {
  --tw-enter-opacity: 0;
}
.tw-fade-in-80 {
  --tw-enter-opacity: 0.8;
}
.tw-zoom-in-95 {
  --tw-enter-scale: .95;
}
.tw-duration-200 {
  animation-duration: 200ms;
}
.tw-ease-linear {
  animation-timing-function: linear;
}
.tw-\\@container\\/tab-toolbar-center {
  container-type: inline-size;
  container-name: tab-toolbar-center;
}
.tw-\\@container\\/tab-toolbar-end {
  container-type: inline-size;
  container-name: tab-toolbar-end;
}
.tw-\\@container\\/tab-toolbar-start {
  container-type: inline-size;
  container-name: tab-toolbar-start;
}
.tw-\\@container\\/toolbar {
  container-type: inline-size;
  container-name: toolbar;
}

/*
 * WARNING: These themes are also represented in paranext-core/src/shared/data/themes.data.json!
 * Please update in both locations
*/
/* #region shared with https://github.com/paranext/paranext-extension-template/blob/main/src/tailwind.css */
/* #endregion */

/* Note that the following region is from shadcn/ui's styles
 * https://ui.shadcn.com/docs/installation/manual#configure-styles but is scoped down to .pr-twp
 * because this is just a component library and should not apply its styles to the entire page.
 *
 * There is now a section in this library's README.md that explains how to apply these styles to the
 * entire page if desired.
 *
 * The template has the original shadcn/ui styles because it intentionally applies the styles to the
 * entire page. The same is true for Platform.Bible - see \`app.component.scss\`
 */
/* #region shared with https://github.com/paranext/paranext-extension-template/blob/main/src/tailwind.css but with the difference of being scoped to .pr-twp here */
.file\\:tw-border-0::file-selector-button {
  border-width: 0px;
}
.file\\:tw-bg-transparent::file-selector-button {
  background-color: transparent;
}
.file\\:tw-text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.file\\:tw-font-medium::file-selector-button {
  font-weight: 500;
}
.file\\:tw-text-foreground::file-selector-button {
  color: hsl(var(--foreground));
}
.placeholder\\:tw-text-muted-foreground::placeholder {
  color: hsl(var(--muted-foreground));
}
.after\\:tw-absolute::after {
  content: var(--tw-content);
  position: absolute;
}
.after\\:tw--inset-2::after {
  content: var(--tw-content);
  inset: -0.5rem;
}
.after\\:tw-inset-y-0::after {
  content: var(--tw-content);
  top: 0px;
  bottom: 0px;
}
.after\\:tw-left-1\\/2::after {
  content: var(--tw-content);
  left: 50%;
}
.after\\:tw-w-1::after {
  content: var(--tw-content);
  width: 0.25rem;
}
.after\\:tw-w-\\[2px\\]::after {
  content: var(--tw-content);
  width: 2px;
}
.after\\:tw--translate-x-1\\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\\:tw-bg-accent:hover {
  background-color: hsl(var(--accent));
}
.hover\\:tw-bg-blue-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
}
.hover\\:tw-bg-destructive\\/80:hover {
  background-color: hsl(var(--destructive) / 0.8);
}
.hover\\:tw-bg-destructive\\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}
.hover\\:tw-bg-muted:hover {
  background-color: hsl(var(--muted));
}
.hover\\:tw-bg-muted\\/50:hover {
  background-color: hsl(var(--muted) / 0.5);
}
.hover\\:tw-bg-muted\\/80:hover {
  background-color: hsl(var(--muted) / 0.8);
}
.hover\\:tw-bg-primary\\/70:hover {
  background-color: hsl(var(--primary) / 0.7);
}
.hover\\:tw-bg-primary\\/80:hover {
  background-color: hsl(var(--primary) / 0.8);
}
.hover\\:tw-bg-primary\\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}
.hover\\:tw-bg-secondary:hover {
  background-color: hsl(var(--secondary));
}
.hover\\:tw-bg-secondary\\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}
.hover\\:tw-bg-sidebar-accent:hover {
  background-color: hsl(var(--sidebar-accent));
}
.hover\\:tw-bg-transparent:hover {
  background-color: transparent;
}
.hover\\:tw-text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}
.hover\\:tw-text-foreground:hover {
  color: hsl(var(--foreground));
}
.hover\\:tw-text-muted-foreground:hover {
  color: hsl(var(--muted-foreground));
}
.hover\\:tw-text-primary-foreground:hover {
  color: hsl(var(--primary-foreground));
}
.hover\\:tw-text-sidebar-accent-foreground:hover {
  color: hsl(var(--sidebar-accent-foreground));
}
.hover\\:tw-underline:hover {
  text-decoration-line: underline;
}
.hover\\:tw-opacity-100:hover {
  opacity: 1;
}
.hover\\:tw-opacity-80:hover {
  opacity: 0.8;
}
.hover\\:tw-shadow-\\[0_0_0_1px_hsl\\(var\\(--sidebar-accent\\)\\)\\]:hover {
  --tw-shadow: 0 0 0 1px hsl(var(--sidebar-accent));
  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.hover\\:after\\:tw-bg-sidebar-border:hover::after {
  content: var(--tw-content);
  background-color: hsl(var(--sidebar-border));
}
.focus\\:tw-relative:focus {
  position: relative;
}
.focus\\:tw-z-10:focus {
  z-index: 10;
}
.focus\\:tw-bg-accent:focus {
  background-color: hsl(var(--accent));
}
.focus\\:tw-bg-muted:focus {
  background-color: hsl(var(--muted));
}
.focus\\:tw-text-accent-foreground:focus {
  color: hsl(var(--accent-foreground));
}
.focus\\:tw-text-foreground:focus {
  color: hsl(var(--foreground));
}
.focus\\:tw-outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus\\:tw-ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\\:tw-ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}
.focus\\:tw-ring-offset-1:focus {
  --tw-ring-offset-width: 1px;
}
.focus\\:tw-ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}
.focus\\:tw-ring-offset-background:focus {
  --tw-ring-offset-color: hsl(var(--background));
}
.focus-visible\\:tw-outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus-visible\\:tw-ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus-visible\\:tw-ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus-visible\\:tw-ring-\\[color\\:hsl\\(2400o2c 5\\%0o2c 64\\.9\\%\\)\\]:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: hsl(240 5% 64.9% / var(--tw-ring-opacity, 1));
}
.focus-visible\\:tw-ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}
.focus-visible\\:tw-ring-sidebar-ring:focus-visible {
  --tw-ring-color: hsl(var(--sidebar-ring));
}
.focus-visible\\:tw-ring-offset-1:focus-visible {
  --tw-ring-offset-width: 1px;
}
.focus-visible\\:tw-ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}
.focus-visible\\:tw-ring-offset-background:focus-visible {
  --tw-ring-offset-color: hsl(var(--background));
}
.active\\:tw-bg-sidebar-accent:active {
  background-color: hsl(var(--sidebar-accent));
}
.active\\:tw-text-sidebar-accent-foreground:active {
  color: hsl(var(--sidebar-accent-foreground));
}
.disabled\\:tw-pointer-events-none:disabled {
  pointer-events: none;
}
.disabled\\:tw-cursor-not-allowed:disabled {
  cursor: not-allowed;
}
.disabled\\:tw-opacity-50:disabled {
  opacity: 0.5;
}
.tw-peer:disabled ~ .peer-disabled\\:tw-cursor-not-allowed {
  cursor: not-allowed;
}
.tw-peer:disabled ~ .peer-disabled\\:tw-opacity-70 {
  opacity: 0.7;
}
.has-\\[\\[data-variant\\=inset\\]\\]\\:tw-bg-sidebar:has([data-variant=inset]) {
  background-color: hsl(var(--sidebar-background));
}
.aria-disabled\\:tw-pointer-events-none[aria-disabled="true"] {
  pointer-events: none;
}
.aria-disabled\\:tw-opacity-50[aria-disabled="true"] {
  opacity: 0.5;
}
.data-\\[disabled\\=true\\]\\:tw-pointer-events-none[data-disabled="true"] {
  pointer-events: none;
}
.data-\\[disabled\\]\\:tw-pointer-events-none[data-disabled] {
  pointer-events: none;
}
.data-\\[panel-group-direction\\=vertical\\]\\:tw-h-px[data-panel-group-direction="vertical"] {
  height: 1px;
}
.data-\\[panel-group-direction\\=vertical\\]\\:tw-w-full[data-panel-group-direction="vertical"] {
  width: 100%;
}
.data-\\[side\\=bottom\\]\\:tw-translate-y-1[data-side="bottom"] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[side\\=left\\]\\:tw--translate-x-1[data-side="left"] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[side\\=right\\]\\:tw-translate-x-1[data-side="right"] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[side\\=top\\]\\:tw--translate-y-1[data-side="top"] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=checked\\]\\:tw-translate-x-5[data-state="checked"] {
  --tw-translate-x: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=checked\\]\\:tw-translate-x-\\[-20px\\][data-state="checked"] {
  --tw-translate-x: -20px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=unchecked\\]\\:tw-translate-x-0[data-state="unchecked"] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[panel-group-direction\\=vertical\\]\\:tw-flex-col[data-panel-group-direction="vertical"] {
  flex-direction: column;
}
.data-\\[active\\=true\\]\\:tw-bg-sidebar-accent[data-active="true"] {
  background-color: hsl(var(--sidebar-accent));
}
.data-\\[selected\\=true\\]\\:tw-bg-accent[data-selected="true"] {
  background-color: hsl(var(--accent));
}
.data-\\[state\\=active\\]\\:tw-bg-background[data-state="active"] {
  background-color: hsl(var(--background));
}
.data-\\[state\\=checked\\]\\:tw-bg-primary[data-state="checked"] {
  background-color: hsl(var(--primary));
}
.data-\\[state\\=on\\]\\:tw-bg-accent[data-state="on"] {
  background-color: hsl(var(--accent));
}
.data-\\[state\\=open\\]\\:tw-bg-accent[data-state="open"] {
  background-color: hsl(var(--accent));
}
.data-\\[state\\=open\\]\\:tw-bg-muted[data-state="open"] {
  background-color: hsl(var(--muted));
}
.data-\\[state\\=selected\\]\\:tw-bg-muted[data-state="selected"] {
  background-color: hsl(var(--muted));
}
.data-\\[state\\=unchecked\\]\\:tw-bg-input[data-state="unchecked"] {
  background-color: hsl(var(--input));
}
.data-\\[active\\=true\\]\\:tw-font-medium[data-active="true"] {
  font-weight: 500;
}
.data-\\[active\\=true\\]\\:tw-text-sidebar-accent-foreground[data-active="true"] {
  color: hsl(var(--sidebar-accent-foreground));
}
.data-\\[selected\\=true\\]\\:tw-text-accent-foreground[data-selected="true"] {
  color: hsl(var(--accent-foreground));
}
.data-\\[state\\=active\\]\\:tw-text-foreground[data-state="active"] {
  color: hsl(var(--foreground));
}
.data-\\[state\\=checked\\]\\:tw-text-primary-foreground[data-state="checked"] {
  color: hsl(var(--primary-foreground));
}
.data-\\[state\\=on\\]\\:tw-text-accent-foreground[data-state="on"] {
  color: hsl(var(--accent-foreground));
}
.data-\\[state\\=open\\]\\:tw-text-accent-foreground[data-state="open"] {
  color: hsl(var(--accent-foreground));
}
.data-\\[state\\=open\\]\\:tw-text-foreground[data-state="open"] {
  color: hsl(var(--foreground));
}
.data-\\[state\\=open\\]\\:tw-text-muted-foreground[data-state="open"] {
  color: hsl(var(--muted-foreground));
}
.data-\\[disabled\\=true\\]\\:tw-opacity-50[data-disabled="true"] {
  opacity: 0.5;
}
.data-\\[disabled\\]\\:tw-opacity-50[data-disabled] {
  opacity: 0.5;
}
.data-\\[state\\=open\\]\\:tw-opacity-100[data-state="open"] {
  opacity: 1;
}
.data-\\[state\\=active\\]\\:tw-shadow-sm[data-state="active"] {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.data-\\[state\\=open\\]\\:tw-animate-in[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.data-\\[state\\=closed\\]\\:tw-animate-out[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.data-\\[state\\=closed\\]\\:tw-fade-out-0[data-state="closed"] {
  --tw-exit-opacity: 0;
}
.data-\\[state\\=open\\]\\:tw-fade-in-0[data-state="open"] {
  --tw-enter-opacity: 0;
}
.data-\\[state\\=closed\\]\\:tw-zoom-out-95[data-state="closed"] {
  --tw-exit-scale: .95;
}
.data-\\[state\\=open\\]\\:tw-zoom-in-95[data-state="open"] {
  --tw-enter-scale: .95;
}
.data-\\[side\\=bottom\\]\\:tw-slide-in-from-top-2[data-side="bottom"] {
  --tw-enter-translate-y: -0.5rem;
}
.data-\\[side\\=left\\]\\:tw-slide-in-from-right-2[data-side="left"] {
  --tw-enter-translate-x: 0.5rem;
}
.data-\\[side\\=right\\]\\:tw-slide-in-from-left-2[data-side="right"] {
  --tw-enter-translate-x: -0.5rem;
}
.data-\\[side\\=top\\]\\:tw-slide-in-from-bottom-2[data-side="top"] {
  --tw-enter-translate-y: 0.5rem;
}
.data-\\[state\\=closed\\]\\:tw-slide-out-to-left-1\\/2[data-state="closed"] {
  --tw-exit-translate-x: -50%;
}
.data-\\[state\\=closed\\]\\:tw-slide-out-to-top-\\[48\\%\\][data-state="closed"] {
  --tw-exit-translate-y: -48%;
}
.data-\\[state\\=open\\]\\:tw-slide-in-from-left-1\\/2[data-state="open"] {
  --tw-enter-translate-x: -50%;
}
.data-\\[state\\=open\\]\\:tw-slide-in-from-top-\\[48\\%\\][data-state="open"] {
  --tw-enter-translate-y: -48%;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-left-0[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  left: 0px;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-h-1[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  height: 0.25rem;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-w-full[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  width: 100%;
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw--translate-y-1\\/2[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[panel-group-direction\\=vertical\\]\\:after\\:tw-translate-x-0[data-panel-group-direction="vertical"]::after {
  content: var(--tw-content);
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.data-\\[state\\=open\\]\\:hover\\:tw-bg-sidebar-accent:hover[data-state="open"] {
  background-color: hsl(var(--sidebar-accent));
}
.data-\\[state\\=open\\]\\:hover\\:tw-text-sidebar-accent-foreground:hover[data-state="open"] {
  color: hsl(var(--sidebar-accent-foreground));
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-left-\\[calc\\(var\\(--sidebar-width\\)\\*-1\\)\\] {
  left: calc(var(--sidebar-width) * -1);
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-right-\\[calc\\(var\\(--sidebar-width\\)\\*-1\\)\\] {
  right: calc(var(--sidebar-width) * -1);
}
.tw-group[data-side="primary"] .group-data-\\[side\\=primary\\]\\:tw--right-4 {
  right: -1rem;
}
.tw-group[data-side="secondary"] .group-data-\\[side\\=secondary\\]\\:tw-left-0 {
  left: 0px;
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw--mt-8 {
  margin-top: -2rem;
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-hidden {
  display: none;
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-w-\\[--sidebar-width-icon\\] {
  width: var(--sidebar-width-icon);
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-w-\\[calc\\(var\\(--sidebar-width-icon\\)_\\+_theme\\(spacing\\.4\\)\\)\\] {
  width: calc(var(--sidebar-width-icon) + 1rem);
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-w-\\[calc\\(var\\(--sidebar-width-icon\\)_\\+_theme\\(spacing\\.4\\)_\\+2px\\)\\] {
  width: calc(var(--sidebar-width-icon) + 1rem + 2px);
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-w-0 {
  width: 0px;
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:tw-translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-group[data-side="secondary"] .group-data-\\[side\\=secondary\\]\\:tw-rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-overflow-hidden {
  overflow: hidden;
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-rounded-lg {
  border-radius: var(--radius);
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-border {
  border-width: 1px;
}
.tw-group[data-side="primary"] .group-data-\\[side\\=primary\\]\\:tw-border-r {
  border-right-width: 1px;
}
.tw-group[data-side="secondary"] .group-data-\\[side\\=secondary\\]\\:tw-border-l {
  border-left-width: 1px;
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-border-sidebar-border {
  border-color: hsl(var(--sidebar-border));
}
.tw-group[data-collapsible="icon"] .group-data-\\[collapsible\\=icon\\]\\:tw-opacity-0 {
  opacity: 0;
}
.tw-group[data-variant="floating"] .group-data-\\[variant\\=floating\\]\\:tw-shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:after\\:tw-left-full::after {
  content: var(--tw-content);
  left: 100%;
}
.tw-group[data-collapsible="offcanvas"] .group-data-\\[collapsible\\=offcanvas\\]\\:hover\\:tw-bg-sidebar:hover {
  background-color: hsl(var(--sidebar-background));
}
.tw-peer[data-variant="inset"] ~ .peer-data-\\[variant\\=inset\\]\\:tw-min-h-\\[calc\\(100svh-theme\\(spacing\\.4\\)\\)\\] {
  min-height: calc(100svh - 1rem);
}
@container (min-width: 24rem) {

  .\\@sm\\:tw-grow {
    flex-grow: 1;
  }

  .\\@sm\\:tw-basis-auto {
    flex-basis: auto;
  }
}
@media (min-width: 640px) {

  .sm\\:tw-flex {
    display: flex;
  }

  .sm\\:tw-flex-row {
    flex-direction: row;
  }

  .sm\\:tw-justify-end {
    justify-content: flex-end;
  }

  .sm\\:tw-space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\\:tw-rounded-lg {
    border-radius: var(--radius);
  }

  .sm\\:tw-text-left {
    text-align: left;
  }

  .sm\\:tw-text-start {
    text-align: start;
  }
}
@media (min-width: 768px) {

  .md\\:tw-block {
    display: block;
  }

  .md\\:tw-flex {
    display: flex;
  }

  .md\\:tw-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\\:tw-text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .md\\:tw-opacity-0 {
    opacity: 0;
  }

  .after\\:md\\:tw-hidden::after {
    content: var(--tw-content);
    display: none;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-m-2 {
    margin: 0.5rem;
  }

  .tw-peer[data-state="collapsed"][data-variant="inset"] ~ .md\\:peer-data-\\[state\\=collapsed\\]\\:peer-data-\\[variant\\=inset\\]\\:tw-ml-2 {
    margin-left: 0.5rem;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-ml-0 {
    margin-left: 0px;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-rounded-xl {
    border-radius: 0.75rem;
  }

  .tw-peer[data-variant="inset"] ~ .md\\:peer-data-\\[variant\\=inset\\]\\:tw-shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}
@media (min-width: 1024px) {

  .lg\\:tw-flex {
    display: flex;
  }

  .lg\\:tw-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\\:tw-space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }
}
.ltr\\:tw-left-2:where([dir="ltr"], [dir="ltr"] *) {
  left: 0.5rem;
}
.rtl\\:tw-right-2:where([dir="rtl"], [dir="rtl"] *) {
  right: 0.5rem;
}
@media (prefers-color-scheme: dark) {

  .dark\\:tw-border-destructive {
    border-color: hsl(var(--destructive));
  }
}
.\\[\\&\\:has\\(\\[role\\=checkbox\\]\\)\\]\\:tw-pe-0:has([role=checkbox]) {
  padding-inline-end: 0px;
}
.\\[\\&\\>img\\+div\\]\\:tw-translate-y-\\[-3px\\]>img+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.\\[\\&\\>img\\]\\:tw-absolute>img {
  position: absolute;
}
.\\[\\&\\>img\\]\\:tw-left-4>img {
  left: 1rem;
}
.\\[\\&\\>img\\]\\:tw-top-4>img {
  top: 1rem;
}
.\\[\\&\\>img\\]\\:tw-text-destructive>img {
  color: hsl(var(--destructive));
}
.\\[\\&\\>img\\]\\:tw-text-foreground>img {
  color: hsl(var(--foreground));
}
.\\[\\&\\>img\\~\\*\\]\\:tw-pl-7>img~* {
  padding-left: 1.75rem;
}
.\\[\\&\\>span\\:last-child\\]\\:tw-truncate>span:last-child {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.\\[\\&\\>span\\]\\:tw-line-clamp-1>span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.\\[\\&\\>svg\\+div\\]\\:tw-translate-y-\\[-3px\\]>svg+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.\\[\\&\\>svg\\]\\:tw-absolute>svg {
  position: absolute;
}
.\\[\\&\\>svg\\]\\:tw-left-4>svg {
  left: 1rem;
}
.\\[\\&\\>svg\\]\\:tw-top-4>svg {
  top: 1rem;
}
.\\[\\&\\>svg\\]\\:tw-size-4>svg {
  width: 1rem;
  height: 1rem;
}
.\\[\\&\\>svg\\]\\:tw-shrink-0>svg {
  flex-shrink: 0;
}
.\\[\\&\\>svg\\]\\:tw-text-destructive>svg {
  color: hsl(var(--destructive));
}
.\\[\\&\\>svg\\]\\:tw-text-foreground>svg {
  color: hsl(var(--foreground));
}
.\\[\\&\\>svg\\]\\:tw-text-sidebar-accent-foreground>svg {
  color: hsl(var(--sidebar-accent-foreground));
}
.\\[\\&\\>svg\\~\\*\\]\\:tw-pl-7>svg~* {
  padding-left: 1.75rem;
}
.\\[\\&\\>tr\\]\\:last\\:tw-border-b-0:last-child>tr {
  border-bottom-width: 0px;
}
.\\[\\&\\[data-panel-group-direction\\=vertical\\]\\>div\\]\\:tw-rotate-90[data-panel-group-direction=vertical]>div {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-px-2 [cmdk-group-heading] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-py-1\\.5 [cmdk-group-heading] {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-text-xs [cmdk-group-heading] {
  font-size: 0.75rem;
  line-height: 1rem;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-font-medium [cmdk-group-heading] {
  font-weight: 500;
}
.\\[\\&_\\[cmdk-group-heading\\]\\]\\:tw-text-muted-foreground [cmdk-group-heading] {
  color: hsl(var(--muted-foreground));
}
.\\[\\&_\\[cmdk-group\\]\\:not\\(\\[hidden\\]\\)_\\~\\[cmdk-group\\]\\]\\:tw-pt-0 [cmdk-group]:not([hidden]) ~[cmdk-group] {
  padding-top: 0px;
}
.\\[\\&_\\[cmdk-group\\]\\]\\:tw-px-2 [cmdk-group] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:tw-h-5 [cmdk-input-wrapper] svg {
  height: 1.25rem;
}
.\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:tw-w-5 [cmdk-input-wrapper] svg {
  width: 1.25rem;
}
.\\[\\&_\\[cmdk-input\\]\\]\\:tw-h-12 [cmdk-input] {
  height: 3rem;
}
.\\[\\&_\\[cmdk-item\\]\\]\\:tw-px-2 [cmdk-item] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.\\[\\&_\\[cmdk-item\\]\\]\\:tw-py-3 [cmdk-item] {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.\\[\\&_\\[cmdk-item\\]_svg\\]\\:tw-h-5 [cmdk-item] svg {
  height: 1.25rem;
}
.\\[\\&_\\[cmdk-item\\]_svg\\]\\:tw-w-5 [cmdk-item] svg {
  width: 1.25rem;
}
.\\[\\&_p\\]\\:tw-leading-relaxed p {
  line-height: 1.625;
}
.\\[\\&_svg\\]\\:tw-pointer-events-none svg {
  pointer-events: none;
}
.\\[\\&_svg\\]\\:tw-size-4 svg {
  width: 1rem;
  height: 1rem;
}
.\\[\\&_svg\\]\\:tw-shrink-0 svg {
  flex-shrink: 0;
}
.\\[\\&_tr\\:last-child\\]\\:tw-border-0 tr:last-child {
  border-width: 0px;
}
.\\[\\&_tr\\]\\:tw-border-b tr {
  border-bottom-width: 1px;
}
[data-side=primary][data-collapsible=offcanvas] .\\[\\[data-side\\=primary\\]\\[data-collapsible\\=offcanvas\\]_\\&\\]\\:tw--right-2 {
  right: -0.5rem;
}
[data-side=primary][data-state=collapsed] .\\[\\[data-side\\=primary\\]\\[data-state\\=collapsed\\]_\\&\\]\\:tw-cursor-e-resize {
  cursor: e-resize;
}
[data-side=secondary][data-collapsible=offcanvas] .\\[\\[data-side\\=secondary\\]\\[data-collapsible\\=offcanvas\\]_\\&\\]\\:tw--left-2 {
  left: -0.5rem;
}
[data-side=secondary][data-state=collapsed] .\\[\\[data-side\\=secondary\\]\\[data-state\\=collapsed\\]_\\&\\]\\:tw-cursor-w-resize {
  cursor: w-resize;
}
[data-side=secondary] .\\[\\[data-side\\=secondary\\]_\\&\\]\\:tw-cursor-e-resize {
  cursor: e-resize;
}
[data-side=secondary] .\\[\\[data-side\\=secondary\\]_\\&\\]\\:tw-cursor-w-resize {
  cursor: w-resize;
}
/* By default the editor is too tall for the footnote editor, even while empty, so this makes it 
   shorter. */
.editor-input {
  min-height: 75px;
}
.banded-row:hover {
  cursor: pointer;
}

.banded-row[data-state='selected']:hover {
  cursor: default;
}
`, "after-all");
export {
  TP as Alert,
  DP as AlertDescription,
  AP as AlertTitle,
  MP as Avatar,
  IP as AvatarFallback,
  OP as AvatarImage,
  TL as BOOK_CHAPTER_CONTROL_STRING_KEYS,
  AL as BOOK_SELECTOR_STRING_KEYS,
  Fc as Badge,
  SL as BookChapterControl,
  lC as BookSelectionMode,
  DL as BookSelector,
  Pe as Button,
  a2 as Card,
  LR as CardContent,
  PR as CardDescription,
  $R as CardFooter,
  IR as CardHeader,
  RR as CardTitle,
  aC as ChapterRangeSelector,
  Mg as Checkbox,
  p3 as Checklist,
  Sf as ComboBox,
  ea as Command,
  Tu as CommandEmpty,
  Ao as CommandGroup,
  xl as CommandInput,
  Xo as CommandItem,
  ta as CommandList,
  w3 as ContextMenu,
  FP as ContextMenuCheckboxItem,
  LP as ContextMenuContent,
  y3 as ContextMenuGroup,
  $P as ContextMenuItem,
  qP as ContextMenuLabel,
  v3 as ContextMenuPortal,
  x3 as ContextMenuRadioGroup,
  BP as ContextMenuRadioItem,
  jP as ContextMenuSeparator,
  UP as ContextMenuShortcut,
  _3 as ContextMenuSub,
  PP as ContextMenuSubContent,
  RP as ContextMenuSubTrigger,
  b3 as ContextMenuTrigger,
  EC as DataTable,
  zP as Drawer,
  k3 as DrawerClose,
  HP as DrawerContent,
  JP as DrawerDescription,
  KP as DrawerFooter,
  WP as DrawerHeader,
  L2 as DrawerOverlay,
  VP as DrawerPortal,
  GP as DrawerTitle,
  C3 as DrawerTrigger,
  Au as DropdownMenu,
  Xh as DropdownMenuCheckboxItem,
  Cl as DropdownMenuContent,
  Ry as DropdownMenuGroup,
  $y as DropdownMenuItem,
  TC as DropdownMenuItemType,
  Yh as DropdownMenuLabel,
  cC as DropdownMenuPortal,
  dC as DropdownMenuRadioGroup,
  Fy as DropdownMenuRadioItem,
  Du as DropdownMenuSeparator,
  fC as DropdownMenuShortcut,
  uC as DropdownMenuSub,
  Ly as DropdownMenuSubContent,
  Py as DropdownMenuSubTrigger,
  Jh as DropdownMenuTrigger,
  NC as ERROR_DUMP_STRING_KEYS,
  OL as ERROR_POPOVER_STRING_KEYS,
  SC as ErrorDump,
  IL as ErrorPopover,
  $L as Filter,
  RL as FilterDropdown,
  LL as Footer,
  VL as FootnoteEditor,
  OR as FootnoteItem,
  HL as FootnoteList,
  QL as INVENTORY_STRING_KEYS,
  Vl as Input,
  ZL as Inventory,
  Vt as Label,
  ML as MarkdownRenderer,
  PL as MoreInfo,
  MC as MultiSelectComboBox,
  u3 as NavigationContentSearch,
  ra as Popover,
  EL as PopoverAnchor,
  Yo as PopoverContent,
  ia as PopoverTrigger,
  XP as Progress,
  Kh as RadioGroup,
  $c as RadioGroupItem,
  tC as RecentSearches,
  S3 as ResizableHandle,
  N3 as ResizablePanel,
  E3 as ResizablePanelGroup,
  g3 as ResultsCard,
  n3 as SCOPE_SELECTOR_STRING_KEYS,
  r3 as ScopeSelector,
  t3 as ScriptureResultsViewer,
  i3 as ScrollGroupSelector,
  Lg as SearchBar,
  As as Select,
  Oo as SelectContent,
  pC as SelectGroup,
  er as SelectItem,
  mC as SelectLabel,
  qy as SelectScrollDownButton,
  By as SelectScrollUpButton,
  wC as SelectSeparator,
  Mo as SelectTrigger,
  Ds as SelectValue,
  Og as Separator,
  o3 as SettingsList,
  a3 as SettingsListHeader,
  s3 as SettingsListItem,
  aP as SettingsSidebar,
  e3 as SettingsSidebarContentSearch,
  h2 as Sidebar,
  g2 as SidebarContent,
  YR as SidebarFooter,
  Rh as SidebarGroup,
  ZR as SidebarGroupAction,
  Lh as SidebarGroupContent,
  Ph as SidebarGroupLabel,
  XR as SidebarHeader,
  JR as SidebarInput,
  p2 as SidebarInset,
  m2 as SidebarMenu,
  tP as SidebarMenuAction,
  nP as SidebarMenuBadge,
  b2 as SidebarMenuButton,
  w2 as SidebarMenuItem,
  rP as SidebarMenuSkeleton,
  iP as SidebarMenuSub,
  sP as SidebarMenuSubButton,
  oP as SidebarMenuSubItem,
  f2 as SidebarProvider,
  GR as SidebarRail,
  QR as SidebarSeparator,
  KR as SidebarTrigger,
  Tf as Skeleton,
  YP as Slider,
  T3 as Sonner,
  NP as Spinner,
  QP as Switch,
  $h as TabDropdownMenu,
  c3 as TabFloatingMenu,
  l3 as TabToolbar,
  Mu as Table,
  Iu as TableBody,
  kC as TableCaption,
  vo as TableCell,
  vC as TableFooter,
  Ya as TableHead,
  Ou as TableHeader,
  hi as TableRow,
  A3 as Tabs,
  tL as TabsContent,
  ZP as TabsList,
  eL as TabsTrigger,
  m3 as TextField,
  nL as Textarea,
  u2 as ToggleGroup,
  Lc as ToggleGroupItem,
  f3 as Toolbar,
  Rg as Tooltip,
  ld as TooltipContent,
  Ig as TooltipProvider,
  Pg as TooltipTrigger,
  h3 as UiLanguageSelector,
  k2 as VerticalTabs,
  N2 as VerticalTabsContent,
  E2 as VerticalTabsList,
  wP as VerticalTabsTrigger,
  DC as badgeVariants,
  eC as buttonVariants,
  G as cn,
  YL as getBookIdFromUSFM,
  JL as getLinesFromUSFM,
  XL as getNumberFromUSFM,
  UR as getStatusForItem,
  d3 as getToolbarOSReservedSpaceClassName,
  KL as inventoryCountColumn,
  WL as inventoryItemColumn,
  GL as inventoryStatusColumn,
  gC as selectTriggerVariants,
  P3 as sonner,
  D3 as useEvent,
  M3 as useEventAsync,
  O3 as useListbox,
  iL as usePromise,
  NL as useRecentSearches,
  cd as useSidebar
};
//# sourceMappingURL=index.js.map
