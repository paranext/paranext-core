{"version":3,"file":"index.cjs","sources":["../src/utils/shadcn-ui.util.ts","../src/components/shadcn-ui/button.tsx","../src/utils/dir-helper.util.ts","../src/components/shadcn-ui/dialog.tsx","../src/components/shadcn-ui/command.tsx","../src/components/shadcn-ui/popover.tsx","../../../node_modules/@sillsdev/scripture/dist/index.es.js","../src/components/advanced/book-chapter-control/book-chapter-control.utils.ts","../src/components/advanced/book-chapter-control/book-chapter-control.navigation.ts","../src/components/advanced/book-chapter-control/chapter-grid.component.tsx","../src/components/advanced/book-chapter-control/book-chapter-control.component.tsx","../src/components/shadcn-ui/label.tsx","../src/components/shadcn-ui/radio-group.tsx","../src/components/basics/combo-box.component.tsx","../src/components/basics/chapter-range-selector.component.tsx","../src/components/advanced/book-selector.component.tsx","../src/context/menu.context.ts","../src/components/shadcn-ui/dropdown-menu.tsx","../src/components/advanced/data-table/data-table-column-toggle.component.tsx","../src/components/shadcn-ui/select.tsx","../src/components/advanced/data-table/data-table-pagination.component.tsx","../src/utils/focus.util.ts","../src/components/shadcn-ui/table.tsx","../src/components/advanced/data-table/data-table.component.tsx","../src/components/advanced/extension-marketplace/markdown-renderer.component.tsx","../src/components/basics/error-dump.component.tsx","../src/components/advanced/error-popover.component.tsx","../src/components/advanced/extension-marketplace/filter-dropdown.component.tsx","../src/components/advanced/extension-marketplace/more-info.component.tsx","../src/components/advanced/extension-marketplace/version-history.component.tsx","../src/components/advanced/extension-marketplace/footer.component.tsx","../src/components/shadcn-ui/badge.tsx","../src/components/advanced/multi-select-combo-box.component.tsx","../src/components/advanced/filter.component.tsx","../src/components/advanced/inventory/occurrences-table.component.tsx","../src/components/shadcn-ui/checkbox.tsx","../src/components/shadcn-ui/input.tsx","../src/components/shadcn-ui/toggle.tsx","../src/components/shadcn-ui/toggle-group.tsx","../src/components/advanced/inventory/inventory-columns.tsx","../src/components/advanced/inventory/inventory-utils.ts","../src/components/advanced/inventory/inventory.component.tsx","../src/components/shadcn-ui/separator.tsx","../src/components/shadcn-ui/skeleton.tsx","../src/components/shadcn-ui/tooltip.tsx","../src/components/shadcn-ui/sidebar.tsx","../src/components/advanced/settings-components/settings-sidebar.component.tsx","../src/components/basics/search-bar.component.tsx","../src/components/advanced/settings-components/settings-sidebar-content-search.component.tsx","../src/components/advanced/scripture-results-viewer/scripture-results-viewer.component.tsx","../src/components/advanced/scope-selector/scope-selector-utils.ts","../src/components/advanced/scope-selector/book-item.component.tsx","../src/components/advanced/scope-selector/section-button.component.tsx","../src/components/advanced/scope-selector/book-selector.component.tsx","../src/components/advanced/scope-selector/scope-selector.component.tsx","../src/components/advanced/scroll-group-selector.component.tsx","../src/components/advanced/settings-components/settings-list.component.tsx","../src/components/advanced/menus/menu.util.ts","../src/components/advanced/menus/menu-icon.component.tsx","../src/components/advanced/menus/tab-dropdown-menu.component.tsx","../src/components/advanced/tab-toolbar.component.tsx","../src/components/basics/tabs-vertical.tsx","../src/components/advanced/tab-navigation-content-search.component.tsx","../src/components/shadcn-ui/menubar.tsx","../src/components/advanced/menus/platform-menubar.component.tsx","../src/components/advanced/toolbar.component.tsx","../src/components/advanced/ui-language-selector.component.tsx","../src/components/basics/smart-label.component.tsx","../src/components/basics/checklist.component.tsx","../src/components/basics/spinner.component.tsx","../src/components/basics/text-field.component.tsx","../src/components/shadcn-ui/alert.tsx","../src/components/shadcn-ui/avatar.tsx","../src/components/shadcn-ui/card.tsx","../src/components/shadcn-ui/context-menu.tsx","../src/components/shadcn-ui/drawer.tsx","../src/components/shadcn-ui/progress.tsx","../src/components/shadcn-ui/sonner.tsx","../src/components/shadcn-ui/slider.tsx","../src/components/shadcn-ui/switch.tsx","../src/components/shadcn-ui/tabs.tsx","../src/components/shadcn-ui/textarea.tsx","../src/hooks/use-event.hook.ts","../src/hooks/use-promise.hook.ts","../src/hooks/use-event-async.hook.ts","../src/hooks/listbox-keyboard-navigation.hook.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { extendTailwindMerge } from 'tailwind-merge';\n\nconst twMergeCustom = extendTailwindMerge({ prefix: 'tw-' });\n\n/**\n * Tailwind and CSS class application helper function. Uses\n * [`clsx`](https://www.npmjs.com/package/clsx) to make it easy to apply classes conditionally using\n * object syntax, and uses [`tailwind-merge`](https://www.npmjs.com/package/tailwind-merge) to make\n * it easy to merge/overwrite Tailwind classes in a programmer-logic-friendly way.\n *\n * Note: `tailwind-merge` is configured to use the prefix `tw-`, so you must use the same prefix\n * with any Tailwind classes you use with this function to successfully overwrite other Tailwind\n * classes. `platform-bible-react` is configured to use `tw-` as its Tailwind prefix, so any\n * Tailwind classes you pass into `platform-bible-react` components will be compared using the `tw-`\n * prefix.\n *\n * This function was popularized by\n * [shadcn/ui](https://ui.shadcn.com/docs/installation/manual#add-a-cn-helper). See [ByteGrad's\n * explanation video](https://www.youtube.com/watch?v=re2JFITR7TI) for more information.\n *\n * @example\n *\n * ```typescript\n * const borderShouldBeBlue = true;\n * const textShouldBeRed = true;\n * const heightShouldBe20 = false;\n * const classString = cn(\n *   'tw-bg-primary tw-h-10 tw-text-primary-foreground',\n *   'tw-bg-secondary',\n *   {\n *     'tw-border-blue-500': borderShouldBeBlue,\n *     'tw-text-red-500': textShouldBeRed,\n *     'tw-h-20': heightShouldBe20,\n *   },\n *   'some-class',\n * );\n * ```\n *\n * The resulting `classString` is `'tw-h-10 tw-bg-secondary tw-border-blue-500 tw-text-red-500\n * some-class'`\n *\n * - Notice that `'tw-bg-secondary'`, specified later, overwrote `'tw-bg-primary'`, specified earlier,\n *   because they are Tailwind classes that affect the same css property\n * - Notice that `'tw-text-red-500'`, specified later, overwrote `'tw-text-primary-foreground'`,\n *   specified earlier, because they are Tailwind classes that affect the same css property\n * - Notice that `'tw-h-20'`, specified later, did not overwrite `'tw-h-10'`, specified earlier,\n *   because `'tw-h-20'` is part of a conditional class object and its value evaluated to `false`;\n *   therefore it was not applied\n * - Notice that `'some-class'` was applied. This function is not limited only to Tailwind classes.\n *\n *\n * @param inputs Class strings or `clsx` conditional class objects to merge. Tailwind classes\n *   specified later in the arguments overwrite similar Tailwind classes specified earlier in the\n *   arguments\n * @returns Class string containing all applicable classes from the arguments based on the rules\n *   described above\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMergeCustom(clsx(inputs));\n}\n","import React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Style variants for the Button component.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/button}\n */\nexport const buttonVariants = cva(\n  'pr-twp tw-inline-flex tw-items-center tw-justify-center tw-gap-2 tw-whitespace-nowrap tw-rounded-md tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 [&_svg]:tw-pointer-events-none [&_svg]:tw-size-4 [&_svg]:tw-shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/90',\n        destructive: 'tw-bg-destructive tw-text-destructive-foreground hover:tw-bg-destructive/90',\n        outline:\n          'tw-border tw-border-input tw-bg-background hover:tw-bg-accent hover:tw-text-accent-foreground',\n        secondary: 'tw-bg-secondary tw-text-secondary-foreground hover:tw-bg-secondary/80',\n        ghost: 'hover:tw-bg-accent hover:tw-text-accent-foreground',\n        link: 'tw-text-primary tw-underline-offset-4 hover:tw-underline',\n      },\n      size: {\n        default: 'tw-h-10 tw-px-4 tw-py-2',\n        sm: 'tw-h-9 tw-rounded-md tw-px-3',\n        lg: 'tw-h-11 tw-rounded-md tw-px-8',\n        icon: 'tw-h-10 tw-w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\n/**\n * Props for Button component\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/button}\n */\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\n/**\n * The Button component displays a button or a component that looks like a button. The component is\n * built and styled by Shadcn UI.\n *\n * @param ButtonProps\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/button}\n */\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n    );\n  },\n);\nButton.displayName = 'Button';\n","/** Text and layout direction */\nexport type Direction = 'rtl' | 'ltr';\n\nconst STORAGE_KEY: string = 'layoutDirection';\n\n/** Read layout direction from localStorage or return 'ltr' */\nexport function readDirection(): Direction {\n  const retrieved = localStorage.getItem(STORAGE_KEY);\n  if (retrieved === 'rtl') {\n    return retrieved;\n  }\n  return 'ltr';\n}\n\n/** Write layout direction to localStorage */\nexport function persistDirection(dir: Direction): void {\n  localStorage.setItem(STORAGE_KEY, dir);\n}\n","import React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { readDirection } from '@/utils/dir-helper.util';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'tw-fixed tw-inset-0 tw-z-50 tw-bg-black/80 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => {\n  const dir = readDirection();\n  return (\n    <DialogPortal>\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        ref={ref}\n        className={cn(\n          'pr-twp tw-fixed tw-left-[50%] tw-top-[50%] tw-z-50 tw-grid tw-w-full tw-max-w-lg tw-translate-x-[-50%] tw-translate-y-[-50%] tw-gap-4 tw-border tw-bg-background tw-p-6 tw-shadow-lg tw-duration-200 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[state=closed]:tw-slide-out-to-left-1/2 data-[state=closed]:tw-slide-out-to-top-[48%] data-[state=open]:tw-slide-in-from-left-1/2 data-[state=open]:tw-slide-in-from-top-[48%] sm:tw-rounded-lg',\n          className,\n        )}\n        {...props}\n        dir={dir}\n      >\n        {children}\n        <DialogPrimitive.Close\n          className={cn(\n            'tw-absolute tw-top-4 tw-rounded-sm tw-opacity-70 tw-ring-offset-background tw-transition-opacity hover:tw-opacity-100 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2 disabled:tw-pointer-events-none data-[state=open]:tw-bg-accent data-[state=open]:tw-text-muted-foreground',\n            { 'tw-right-4': dir === 'ltr' },\n            { 'tw-left-4': dir === 'rtl' },\n          )}\n        >\n          <X className=\"tw-h-4 tw-w-4\" />\n          <span className=\"tw-sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  );\n});\nDialogContent.displayName = DialogPrimitive.Content.displayName;\nfunction DialogHeader({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\n        'tw-flex tw-flex-col tw-space-y-1.5 tw-text-center sm:tw-text-start',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\nDialogHeader.displayName = 'DialogHeader';\n\nfunction DialogFooter({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\n        'tw-flex tw-flex-col-reverse sm:tw-flex-row sm:tw-justify-end sm:tw-space-x-2',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn('tw-text-lg tw-font-semibold tw-leading-none tw-tracking-tight', className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('tw-text-sm tw-text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","import React from 'react';\nimport { type DialogProps } from '@radix-ui/react-dialog';\nimport { Command as CommandPrimitive } from 'cmdk';\nimport { Search } from 'lucide-react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Dialog, DialogContent } from '@/components/shadcn-ui/dialog';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * Command menu for React. These components are built on cmdk and styled with Shadcn UI. See Shadcn\n * UI documentation: https://ui.shadcn.com/docs/components/command See cmdk documentation:\n * https://cmdk.paco.me/\n */\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      'tw-flex tw-h-full tw-w-full tw-flex-col tw-overflow-hidden tw-rounded-md tw-bg-popover tw-text-popover-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\nCommand.displayName = CommandPrimitive.displayName;\n\ninterface CommandDialogProps extends DialogProps {}\n\n/** @inheritdoc Command */\nfunction CommandDialog({ children, ...props }: CommandDialogProps) {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"tw-overflow-hidden tw-p-0 tw-shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:tw-px-2 [&_[cmdk-group-heading]]:tw-font-medium [&_[cmdk-group-heading]]:tw-text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:tw-pt-0 [&_[cmdk-group]]:tw-px-2 [&_[cmdk-input-wrapper]_svg]:tw-h-5 [&_[cmdk-input-wrapper]_svg]:tw-w-5 [&_[cmdk-input]]:tw-h-12 [&_[cmdk-item]]:tw-px-2 [&_[cmdk-item]]:tw-py-3 [&_[cmdk-item]_svg]:tw-h-5 [&_[cmdk-item]_svg]:tw-w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n/** @inheritdoc Command */\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <div className=\"tw-flex tw-items-center tw-border-b tw-px-3\" dir={dir}>\n      <Search className=\"tw-me-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50\" />\n      <CommandPrimitive.Input\n        ref={ref}\n        className={cn(\n          'tw-flex tw-h-11 tw-w-full tw-rounded-md tw-bg-transparent tw-py-3 tw-text-sm tw-outline-none placeholder:tw-text-muted-foreground disabled:tw-cursor-not-allowed disabled:tw-opacity-50',\n          className,\n        )}\n        {...props}\n      />\n    </div>\n  );\n});\n\nCommandInput.displayName = CommandPrimitive.Input.displayName;\n\n/** @inheritdoc Command */\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn('tw-max-h-[300px] tw-overflow-y-auto tw-overflow-x-hidden', className)}\n    {...props}\n  />\n));\n\nCommandList.displayName = CommandPrimitive.List.displayName;\n\n/** @inheritdoc Command */\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty ref={ref} className=\"tw-py-6 tw-text-center tw-text-sm\" {...props} />\n));\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\n\n/** @inheritdoc Command */\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      'tw-overflow-hidden tw-p-1 tw-text-foreground [&_[cmdk-group-heading]]:tw-px-2 [&_[cmdk-group-heading]]:tw-py-1.5 [&_[cmdk-group-heading]]:tw-text-xs [&_[cmdk-group-heading]]:tw-font-medium [&_[cmdk-group-heading]]:tw-text-muted-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\n\n/** @inheritdoc Command */\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn('tw--mx-1 tw-h-px tw-bg-border', className)}\n    {...props}\n  />\n));\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\n\n/** @inheritdoc Command */\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none data-[disabled=true]:tw-pointer-events-none data-[selected=true]:tw-bg-accent data-[selected=true]:tw-text-accent-foreground data-[disabled=true]:tw-opacity-50',\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandItem.displayName = CommandPrimitive.Item.displayName;\n\n/** @inheritdoc Command */\nfunction CommandShortcut({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      className={cn('tw-ms-auto tw-text-xs tw-tracking-widest tw-text-muted-foreground', className)}\n      {...props}\n    />\n  );\n}\nCommandShortcut.displayName = 'CommandShortcut';\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n};\n","import React from 'react';\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * The Popover component displays rich content in a portal, triggered by a button. This popover is\n * built on Radix UI's Popover component and styled by Shadcn UI.\n *\n * See Shadcn UI Documentation https://ui.shadcn.com/docs/components/popover See Radix UI\n * Documentation https://www.radix-ui.com/docs/primitives/components/popover\n */\nconst Popover = PopoverPrimitive.Root;\n\n/** @inheritdoc Popover */\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\n/** @inheritdoc Popover */\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        ref={ref}\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          // CUSTOM Changed z-order from 50 to 250 to make them appear on floating tabs (200)\n          'tw-z-[250]',\n          'pr-twp tw-w-72 tw-rounded-md tw-border tw-bg-popover tw-p-4 tw-text-popover-foreground tw-shadow-md tw-outline-none data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n          className,\n        )}\n        {...props}\n        dir={dir}\n      />\n    </PopoverPrimitive.Portal>\n  );\n});\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverTrigger, PopoverContent };\n","var P = Object.defineProperty;\nvar R = (t, e, s) => e in t ? P(t, e, { enumerable: !0, configurable: !0, writable: !0, value: s }) : t[e] = s;\nvar n = (t, e, s) => R(t, typeof e != \"symbol\" ? e + \"\" : e, s);\nclass _ {\n  constructor() {\n    n(this, \"books\");\n    n(this, \"firstSelectedBookNum\");\n    n(this, \"lastSelectedBookNum\");\n    n(this, \"count\");\n    n(this, \"selectedBookNumbers\");\n    n(this, \"selectedBookIds\");\n  }\n}\nconst N = [\n  \"GEN\",\n  \"EXO\",\n  \"LEV\",\n  \"NUM\",\n  \"DEU\",\n  \"JOS\",\n  \"JDG\",\n  \"RUT\",\n  \"1SA\",\n  \"2SA\",\n  // 10\n  \"1KI\",\n  \"2KI\",\n  \"1CH\",\n  \"2CH\",\n  \"EZR\",\n  \"NEH\",\n  \"EST\",\n  \"JOB\",\n  \"PSA\",\n  \"PRO\",\n  // 20\n  \"ECC\",\n  \"SNG\",\n  \"ISA\",\n  \"JER\",\n  \"LAM\",\n  \"EZK\",\n  \"DAN\",\n  \"HOS\",\n  \"JOL\",\n  \"AMO\",\n  // 30\n  \"OBA\",\n  \"JON\",\n  \"MIC\",\n  \"NAM\",\n  \"HAB\",\n  \"ZEP\",\n  \"HAG\",\n  \"ZEC\",\n  \"MAL\",\n  \"MAT\",\n  // 40\n  \"MRK\",\n  \"LUK\",\n  \"JHN\",\n  \"ACT\",\n  \"ROM\",\n  \"1CO\",\n  \"2CO\",\n  \"GAL\",\n  \"EPH\",\n  \"PHP\",\n  // 50\n  \"COL\",\n  \"1TH\",\n  \"2TH\",\n  \"1TI\",\n  \"2TI\",\n  \"TIT\",\n  \"PHM\",\n  \"HEB\",\n  \"JAS\",\n  \"1PE\",\n  // 60\n  \"2PE\",\n  \"1JN\",\n  \"2JN\",\n  \"3JN\",\n  \"JUD\",\n  \"REV\",\n  \"TOB\",\n  \"JDT\",\n  \"ESG\",\n  \"WIS\",\n  // 70\n  \"SIR\",\n  \"BAR\",\n  \"LJE\",\n  \"S3Y\",\n  \"SUS\",\n  \"BEL\",\n  \"1MA\",\n  \"2MA\",\n  \"3MA\",\n  \"4MA\",\n  // 80\n  \"1ES\",\n  \"2ES\",\n  \"MAN\",\n  \"PS2\",\n  \"ODA\",\n  \"PSS\",\n  \"JSA\",\n  // actual variant text for JOS, now in LXA text\n  \"JDB\",\n  // actual variant text for JDG, now in LXA text\n  \"TBS\",\n  // actual variant text for TOB, now in LXA text\n  \"SST\",\n  // actual variant text for SUS, now in LXA text // 90\n  \"DNT\",\n  // actual variant text for DAN, now in LXA text\n  \"BLT\",\n  // actual variant text for BEL, now in LXA text\n  \"XXA\",\n  \"XXB\",\n  \"XXC\",\n  \"XXD\",\n  \"XXE\",\n  \"XXF\",\n  \"XXG\",\n  \"FRT\",\n  // 100\n  \"BAK\",\n  \"OTH\",\n  \"3ES\",\n  // Used previously but really should be 2ES\n  \"EZA\",\n  // Used to be called 4ES, but not actually in any known project\n  \"5EZ\",\n  // Used to be called 5ES, but not actually in any known project\n  \"6EZ\",\n  // Used to be called 6ES, but not actually in any known project\n  \"INT\",\n  \"CNC\",\n  \"GLO\",\n  \"TDX\",\n  // 110\n  \"NDX\",\n  \"DAG\",\n  \"PS3\",\n  \"2BA\",\n  \"LBA\",\n  \"JUB\",\n  \"ENO\",\n  \"1MQ\",\n  \"2MQ\",\n  \"3MQ\",\n  // 120\n  \"REP\",\n  \"4BA\",\n  \"LAO\"\n], B = [\n  \"XXA\",\n  \"XXB\",\n  \"XXC\",\n  \"XXD\",\n  \"XXE\",\n  \"XXF\",\n  \"XXG\",\n  \"FRT\",\n  \"BAK\",\n  \"OTH\",\n  \"INT\",\n  \"CNC\",\n  \"GLO\",\n  \"TDX\",\n  \"NDX\"\n], O = [\n  \"Genesis\",\n  \"Exodus\",\n  \"Leviticus\",\n  \"Numbers\",\n  \"Deuteronomy\",\n  \"Joshua\",\n  \"Judges\",\n  \"Ruth\",\n  \"1 Samuel\",\n  \"2 Samuel\",\n  \"1 Kings\",\n  \"2 Kings\",\n  \"1 Chronicles\",\n  \"2 Chronicles\",\n  \"Ezra\",\n  \"Nehemiah\",\n  \"Esther (Hebrew)\",\n  \"Job\",\n  \"Psalms\",\n  \"Proverbs\",\n  \"Ecclesiastes\",\n  \"Song of Songs\",\n  \"Isaiah\",\n  \"Jeremiah\",\n  \"Lamentations\",\n  \"Ezekiel\",\n  \"Daniel (Hebrew)\",\n  \"Hosea\",\n  \"Joel\",\n  \"Amos\",\n  \"Obadiah\",\n  \"Jonah\",\n  \"Micah\",\n  \"Nahum\",\n  \"Habakkuk\",\n  \"Zephaniah\",\n  \"Haggai\",\n  \"Zechariah\",\n  \"Malachi\",\n  \"Matthew\",\n  \"Mark\",\n  \"Luke\",\n  \"John\",\n  \"Acts\",\n  \"Romans\",\n  \"1 Corinthians\",\n  \"2 Corinthians\",\n  \"Galatians\",\n  \"Ephesians\",\n  \"Philippians\",\n  \"Colossians\",\n  \"1 Thessalonians\",\n  \"2 Thessalonians\",\n  \"1 Timothy\",\n  \"2 Timothy\",\n  \"Titus\",\n  \"Philemon\",\n  \"Hebrews\",\n  \"James\",\n  \"1 Peter\",\n  \"2 Peter\",\n  \"1 John\",\n  \"2 John\",\n  \"3 John\",\n  \"Jude\",\n  \"Revelation\",\n  \"Tobit\",\n  \"Judith\",\n  \"Esther Greek\",\n  \"Wisdom of Solomon\",\n  \"Sirach (Ecclesiasticus)\",\n  \"Baruch\",\n  \"Letter of Jeremiah\",\n  \"Song of 3 Young Men\",\n  \"Susanna\",\n  \"Bel and the Dragon\",\n  \"1 Maccabees\",\n  \"2 Maccabees\",\n  \"3 Maccabees\",\n  \"4 Maccabees\",\n  \"1 Esdras (Greek)\",\n  \"2 Esdras (Latin)\",\n  \"Prayer of Manasseh\",\n  \"Psalm 151\",\n  \"Odes\",\n  \"Psalms of Solomon\",\n  // WARNING, if you change the spelling of the *obsolete* tag be sure to update\n  // IsObsolete routine\n  \"Joshua A. *obsolete*\",\n  \"Judges B. *obsolete*\",\n  \"Tobit S. *obsolete*\",\n  \"Susanna Th. *obsolete*\",\n  \"Daniel Th. *obsolete*\",\n  \"Bel Th. *obsolete*\",\n  \"Extra A\",\n  \"Extra B\",\n  \"Extra C\",\n  \"Extra D\",\n  \"Extra E\",\n  \"Extra F\",\n  \"Extra G\",\n  \"Front Matter\",\n  \"Back Matter\",\n  \"Other Matter\",\n  \"3 Ezra *obsolete*\",\n  \"Apocalypse of Ezra\",\n  \"5 Ezra (Latin Prologue)\",\n  \"6 Ezra (Latin Epilogue)\",\n  \"Introduction\",\n  \"Concordance \",\n  \"Glossary \",\n  \"Topical Index\",\n  \"Names Index\",\n  \"Daniel Greek\",\n  \"Psalms 152-155\",\n  \"2 Baruch (Apocalypse)\",\n  \"Letter of Baruch\",\n  \"Jubilees\",\n  \"Enoch\",\n  \"1 Meqabyan\",\n  \"2 Meqabyan\",\n  \"3 Meqabyan\",\n  \"Reproof (Proverbs 25-31)\",\n  \"4 Baruch (Rest of Baruch)\",\n  \"Laodiceans\"\n], S = K();\nfunction g(t, e = !0) {\n  return e && (t = t.toUpperCase()), t in S ? S[t] : 0;\n}\nfunction k(t) {\n  return g(t) > 0;\n}\nfunction x(t) {\n  const e = typeof t == \"string\" ? g(t) : t;\n  return e >= 40 && e <= 66;\n}\nfunction T(t) {\n  return (typeof t == \"string\" ? g(t) : t) <= 39;\n}\nfunction X(t) {\n  return t <= 66;\n}\nfunction V(t) {\n  const e = typeof t == \"string\" ? g(t) : t;\n  return w(e) && !X(e);\n}\nfunction* L() {\n  for (let t = 1; t <= N.length; t++) yield t;\n}\nconst G = 1, A = N.length;\nfunction H() {\n  return [\"XXA\", \"XXB\", \"XXC\", \"XXD\", \"XXE\", \"XXF\", \"XXG\"];\n}\nfunction C(t, e = \"***\") {\n  const s = t - 1;\n  return s < 0 || s >= N.length ? e : N[s];\n}\nfunction I(t) {\n  return t <= 0 || t > A ? \"******\" : O[t - 1];\n}\nfunction y(t) {\n  return I(g(t));\n}\nfunction w(t) {\n  const e = typeof t == \"number\" ? C(t) : t;\n  return k(e) && !B.includes(e);\n}\nfunction q(t) {\n  const e = typeof t == \"number\" ? C(t) : t;\n  return k(e) && B.includes(e);\n}\nfunction U(t) {\n  return O[t - 1].includes(\"*obsolete*\");\n}\nfunction K() {\n  const t = {};\n  for (let e = 0; e < N.length; e++)\n    t[N[e]] = e + 1;\n  return t;\n}\nconst m = {\n  allBookIds: N,\n  nonCanonicalIds: B,\n  bookIdToNumber: g,\n  isBookIdValid: k,\n  isBookNT: x,\n  isBookOT: T,\n  isBookOTNT: X,\n  isBookDC: V,\n  allBookNumbers: L,\n  firstBook: G,\n  lastBook: A,\n  extraBooks: H,\n  bookNumberToId: C,\n  bookNumberToEnglishName: I,\n  bookIdToEnglishName: y,\n  isCanonical: w,\n  isExtraMaterial: q,\n  isObsolete: U\n};\nvar l = /* @__PURE__ */ ((t) => (t[t.Unknown = 0] = \"Unknown\", t[t.Original = 1] = \"Original\", t[t.Septuagint = 2] = \"Septuagint\", t[t.Vulgate = 3] = \"Vulgate\", t[t.English = 4] = \"English\", t[t.RussianProtestant = 5] = \"RussianProtestant\", t[t.RussianOrthodox = 6] = \"RussianOrthodox\", t))(l || {});\nconst h = class h {\n  // private versInfo: Versification;\n  constructor(e) {\n    n(this, \"name\");\n    n(this, \"fullPath\");\n    n(this, \"isPresent\");\n    n(this, \"hasVerseSegments\");\n    n(this, \"isCustomized\");\n    n(this, \"baseVersification\");\n    n(this, \"scriptureBooks\");\n    n(this, \"_type\");\n    if (e == null)\n      throw new Error(\"Argument undefined\");\n    typeof e == \"string\" ? (this.name = e, this._type = l[e]) : (this._type = e, this.name = l[e]);\n  }\n  get type() {\n    return this._type;\n  }\n  equals(e) {\n    return !e.type || !this.type ? !1 : e.type === this.type;\n  }\n};\nn(h, \"Original\", new h(l.Original)), n(h, \"Septuagint\", new h(l.Septuagint)), n(h, \"Vulgate\", new h(l.Vulgate)), n(h, \"English\", new h(l.English)), n(h, \"RussianProtestant\", new h(l.RussianProtestant)), n(h, \"RussianOrthodox\", new h(l.RussianOrthodox));\nlet c = h;\nfunction E(t, e) {\n  const s = e[0];\n  for (let r = 1; r < e.length; r++)\n    t = t.split(e[r]).join(s);\n  return t.split(s);\n}\nvar D = /* @__PURE__ */ ((t) => (t[t.Valid = 0] = \"Valid\", t[t.UnknownVersification = 1] = \"UnknownVersification\", t[t.OutOfRange = 2] = \"OutOfRange\", t[t.VerseOutOfOrder = 3] = \"VerseOutOfOrder\", t[t.VerseRepeated = 4] = \"VerseRepeated\", t))(D || {});\nconst i = class i {\n  constructor(e, s, r, a) {\n    /** Not yet implemented. */\n    n(this, \"firstChapter\");\n    /** Not yet implemented. */\n    n(this, \"lastChapter\");\n    /** Not yet implemented. */\n    n(this, \"lastVerse\");\n    /** Not yet implemented. */\n    n(this, \"hasSegmentsDefined\");\n    /** Not yet implemented. */\n    n(this, \"text\");\n    /** Not yet implemented. */\n    n(this, \"BBBCCCVVVS\");\n    /** Not yet implemented. */\n    n(this, \"longHashCode\");\n    /** The versification of the reference. */\n    n(this, \"versification\");\n    n(this, \"rtlMark\", \"‏\");\n    n(this, \"_bookNum\", 0);\n    n(this, \"_chapterNum\", 0);\n    n(this, \"_verseNum\", 0);\n    n(this, \"_verse\");\n    if (r == null && a == null)\n      if (e != null && typeof e == \"string\") {\n        const o = e, u = s != null && s instanceof c ? s : void 0;\n        this.setEmpty(u), this.parse(o);\n      } else if (e != null && typeof e == \"number\") {\n        const o = s != null && s instanceof c ? s : void 0;\n        this.setEmpty(o), this._verseNum = e % i.chapterDigitShifter, this._chapterNum = Math.floor(\n          e % i.bookDigitShifter / i.chapterDigitShifter\n        ), this._bookNum = Math.floor(e / i.bookDigitShifter);\n      } else if (s == null)\n        if (e != null && e instanceof i) {\n          const o = e;\n          this._bookNum = o.bookNum, this._chapterNum = o.chapterNum, this._verseNum = o.verseNum, this._verse = o.verse, this.versification = o.versification;\n        } else {\n          if (e == null) return;\n          const o = e instanceof c ? e : i.defaultVersification;\n          this.setEmpty(o);\n        }\n      else\n        throw new Error(\"VerseRef constructor not supported.\");\n    else if (e != null && s != null && r != null)\n      if (typeof e == \"string\" && typeof s == \"string\" && typeof r == \"string\")\n        this.setEmpty(a), this.updateInternal(e, s, r);\n      else if (typeof e == \"number\" && typeof s == \"number\" && typeof r == \"number\")\n        this._bookNum = e, this._chapterNum = s, this._verseNum = r, this.versification = a ?? i.defaultVersification;\n      else\n        throw new Error(\"VerseRef constructor not supported.\");\n    else\n      throw new Error(\"VerseRef constructor not supported.\");\n  }\n  /**\n   * Determines if the verse string is in a valid format (does not consider versification).\n   */\n  static isVerseParseable(e) {\n    return e.length > 0 && \"0123456789\".includes(e[0]) && !e.endsWith(this.verseRangeSeparator) && !e.endsWith(this.verseSequenceIndicator);\n  }\n  /**\n   * Tries to parse the specified string into a verse reference.\n   * @param str - The string to attempt to parse.\n   * @returns success: `true` if the specified string was successfully parsed, `false` otherwise.\n   * @returns verseRef: The result of the parse if successful, or empty VerseRef if it failed\n   */\n  static tryParse(e) {\n    let s;\n    try {\n      return s = new i(e), { success: !0, verseRef: s };\n    } catch (r) {\n      if (r instanceof v)\n        return s = new i(), { success: !1, verseRef: s };\n      throw r;\n    }\n  }\n  /**\n   * Gets the reference as a comparable integer where the book, chapter, and verse each occupy 3\n   * digits.\n   * @param bookNum - Book number (this is 1-based, not an index).\n   * @param chapterNum - Chapter number.\n   * @param verseNum - Verse number.\n   * @returns The reference as a comparable integer where the book, chapter, and verse each occupy 3\n   * digits.\n   */\n  static getBBBCCCVVV(e, s, r) {\n    return e % i.bcvMaxValue * i.bookDigitShifter + (s >= 0 ? s % i.bcvMaxValue * i.chapterDigitShifter : 0) + (r >= 0 ? r % i.bcvMaxValue : 0);\n  }\n  /**\n   * Deserializes a serialized VerseRef.\n   * @param serializedVerseRef - Serialized VerseRef to create from.\n   * @returns the deserialized VerseRef.\n   */\n  static fromJSON(e) {\n    const { book: s, chapterNum: r, verseNum: a, verse: o, versificationStr: u } = e, f = o || a.toString();\n    let d;\n    return u && (d = new c(u)), s ? new i(s, r.toString(), f, d) : new i();\n  }\n  /**\n   * Parses a verse string and gets the leading numeric portion as a number.\n   * @param verseStr - verse string to parse\n   * @returns true if the entire string could be parsed as a single, simple verse number (1-999);\n   *    false if the verse string represented a verse bridge, contained segment letters, or was invalid\n   */\n  static tryGetVerseNum(e) {\n    let s;\n    if (!e)\n      return s = -1, { success: !0, vNum: s };\n    s = 0;\n    let r;\n    for (let a = 0; a < e.length; a++) {\n      if (r = e[a], r < \"0\" || r > \"9\")\n        return a === 0 && (s = -1), { success: !1, vNum: s };\n      if (s = s * 10 + +r - 0, s > i.bcvMaxValue)\n        return s = -1, { success: !1, vNum: s };\n    }\n    return { success: !0, vNum: s };\n  }\n  /**\n   * Checks to see if a VerseRef hasn't been set - all values are the default.\n   */\n  get isDefault() {\n    return this.bookNum === 0 && this.chapterNum === 0 && this.verseNum === 0 && this.versification == null;\n  }\n  /**\n   * Gets whether the verse contains multiple verses.\n   */\n  get hasMultiple() {\n    return this._verse != null && (this._verse.includes(i.verseRangeSeparator) || this._verse.includes(i.verseSequenceIndicator));\n  }\n  /**\n   * Gets or sets the book of the reference. Book is the 3-letter abbreviation in capital letters,\n   * e.g. `'MAT'`.\n   */\n  get book() {\n    return m.bookNumberToId(this.bookNum, \"\");\n  }\n  set book(e) {\n    this.bookNum = m.bookIdToNumber(e);\n  }\n  /**\n   * Gets or sets the chapter of the reference,. e.g. `'3'`.\n   */\n  get chapter() {\n    return this.isDefault || this._chapterNum < 0 ? \"\" : this._chapterNum.toString();\n  }\n  set chapter(e) {\n    const s = +e;\n    this._chapterNum = Number.isInteger(s) ? s : -1;\n  }\n  /**\n   * Gets or sets the verse of the reference, including range, segments, and sequences, e.g. `'4'`,\n   * or `'4b-5a, 7'`.\n   */\n  get verse() {\n    return this._verse != null ? this._verse : this.isDefault || this._verseNum < 0 ? \"\" : this._verseNum.toString();\n  }\n  set verse(e) {\n    const { success: s, vNum: r } = i.tryGetVerseNum(e);\n    this._verse = s ? void 0 : e.replace(this.rtlMark, \"\"), this._verseNum = r, !(this._verseNum >= 0) && ({ vNum: this._verseNum } = i.tryGetVerseNum(this._verse));\n  }\n  /**\n   * Get or set Book based on book number, e.g. `42`.\n   */\n  get bookNum() {\n    return this._bookNum;\n  }\n  set bookNum(e) {\n    if (e <= 0 || e > m.lastBook)\n      throw new v(\n        \"BookNum must be greater than zero and less than or equal to last book\"\n      );\n    this._bookNum = e;\n  }\n  /**\n   * Gets or sets the chapter number, e.g. `3`. `-1` if not valid.\n   */\n  get chapterNum() {\n    return this._chapterNum;\n  }\n  set chapterNum(e) {\n    this.chapterNum = e;\n  }\n  /**\n   * Gets or sets verse start number, e.g. `4`. `-1` if not valid.\n   */\n  get verseNum() {\n    return this._verseNum;\n  }\n  set verseNum(e) {\n    this._verseNum = e;\n  }\n  /**\n   * String representing the versification (should ONLY be used for serialization/deserialization).\n   *\n   * @remarks This is for backwards compatibility when ScrVers was an enumeration.\n   */\n  get versificationStr() {\n    var e;\n    return (e = this.versification) == null ? void 0 : e.name;\n  }\n  set versificationStr(e) {\n    this.versification = this.versification != null ? new c(e) : void 0;\n  }\n  /**\n   * Determines if the reference is valid.\n   */\n  get valid() {\n    return this.validStatus === 0;\n  }\n  /**\n   * Get the valid status for this reference.\n   */\n  get validStatus() {\n    return this.validateVerse(i.verseRangeSeparators, i.verseSequenceIndicators);\n  }\n  /**\n   * Gets the reference as a comparable integer where the book,\n   * chapter, and verse each occupy three digits and the verse is 0.\n   */\n  get BBBCCC() {\n    return i.getBBBCCCVVV(this._bookNum, this._chapterNum, 0);\n  }\n  /**\n   * Gets the reference as a comparable integer where the book,\n   * chapter, and verse each occupy three digits. If verse is not null\n   * (i.e., this reference represents a complex reference with verse\n   * segments or bridge) this cannot be used for an exact comparison.\n   */\n  get BBBCCCVVV() {\n    return i.getBBBCCCVVV(this._bookNum, this._chapterNum, this._verseNum);\n  }\n  /**\n   * Gets whether the verse is defined as an excluded verse in the versification.\n   * Does not handle verse ranges.\n   */\n  // eslint-disable-next-line @typescript-eslint/class-literal-property-style\n  get isExcluded() {\n    return !1;\n  }\n  /**\n   * Parses the reference in the specified string.\n   * Optionally versification can follow reference as in GEN 3:11/4\n   * Throw an exception if\n   * - invalid book name\n   * - chapter number is missing or not a number\n   * - verse number is missing or does not start with a number\n   * - versification is invalid\n   * @param verseStr - string to parse e.g. 'MAT 3:11'\n   */\n  parse(e) {\n    if (e = e.replace(this.rtlMark, \"\"), e.includes(\"/\")) {\n      const o = e.split(\"/\");\n      if (e = o[0], o.length > 1)\n        try {\n          const u = +o[1].trim();\n          this.versification = new c(l[u]);\n        } catch {\n          throw new v(\"Invalid reference : \" + e);\n        }\n    }\n    const s = e.trim().split(\" \");\n    if (s.length !== 2)\n      throw new v(\"Invalid reference : \" + e);\n    const r = s[1].split(\":\"), a = +r[0];\n    if (r.length !== 2 || m.bookIdToNumber(s[0]) === 0 || !Number.isInteger(a) || a < 0 || !i.isVerseParseable(r[1]))\n      throw new v(\"Invalid reference : \" + e);\n    this.updateInternal(s[0], r[0], r[1]);\n  }\n  /**\n   * Simplifies this verse ref so that it has no bridging of verses or\n   * verse segments like `'1a'`.\n   */\n  simplify() {\n    this._verse = void 0;\n  }\n  /**\n   * Makes a clone of the reference.\n   *\n   * @returns The cloned VerseRef.\n   */\n  clone() {\n    return new i(this);\n  }\n  toString() {\n    const e = this.book;\n    return e === \"\" ? \"\" : `${e} ${this.chapter}:${this.verse}`;\n  }\n  toJSON() {\n    let e = this.verse;\n    (e === \"\" || e === this.verseNum.toString()) && (e = void 0);\n    const s = {\n      book: this.book,\n      chapterNum: this.chapterNum,\n      verseNum: this.verseNum,\n      verse: e,\n      versificationStr: this.versificationStr\n    };\n    return e || delete s.verse, s;\n  }\n  /**\n   * Compares this `VerseRef` with supplied one.\n   * @param verseRef - object to compare this one to.\n   * @returns `true` if this `VerseRef` is equal to the supplied one, `false` otherwise.\n   */\n  equals(e) {\n    return e instanceof i ? e._bookNum === this._bookNum && e._chapterNum === this._chapterNum && e._verseNum === this._verseNum && e.verse === this.verse && (e.versification == null && this.versification == null || e.versification != null && this.versification != null && e.versification.equals(this.versification)) : !1;\n  }\n  /**\n   * Enumerate all individual verses contained in a VerseRef.\n   * Verse ranges are indicated by \"-\" and consecutive verses by \",\"s.\n   * Examples:\n   * GEN 1:2 returns GEN 1:2\n   * GEN 1:1a-3b,5 returns GEN 1:1a, GEN 1:2, GEN 1:3b, GEN 1:5\n   * GEN 1:2a-2c returns //! ??????\n   *\n   * @param specifiedVersesOnly - if set to <c>true</c> return only verses that are\n   * explicitly specified only, not verses within a range. Defaults to `false`.\n   * @param verseRangeSeparators - Verse range separators.\n   * Defaults to `VerseRef.verseRangeSeparators`.\n   * @param verseSequenceSeparators - Verse sequence separators.\n   * Defaults to `VerseRef.verseSequenceIndicators`.\n   * @returns An array of all single verse references in this VerseRef.\n   */\n  allVerses(e = !1, s = i.verseRangeSeparators, r = i.verseSequenceIndicators) {\n    if (this._verse == null || this.chapterNum <= 0)\n      return [this.clone()];\n    const a = [], o = E(this._verse, r);\n    for (const u of o.map((f) => E(f, s))) {\n      const f = this.clone();\n      f.verse = u[0];\n      const d = f.verseNum;\n      if (a.push(f), u.length > 1) {\n        const b = this.clone();\n        if (b.verse = u[1], !e)\n          for (let p = d + 1; p < b.verseNum; p++) {\n            const J = new i(\n              this._bookNum,\n              this._chapterNum,\n              p,\n              this.versification\n            );\n            this.isExcluded || a.push(J);\n          }\n        a.push(b);\n      }\n    }\n    return a;\n  }\n  /**\n   * Validates a verse number using the supplied separators rather than the defaults.\n   */\n  validateVerse(e, s) {\n    if (!this.verse)\n      return this.internalValid;\n    let r = 0;\n    for (const a of this.allVerses(!0, e, s)) {\n      const o = a.internalValid;\n      if (o !== 0)\n        return o;\n      const u = a.BBBCCCVVV;\n      if (r > u)\n        return 3;\n      if (r === u)\n        return 4;\n      r = u;\n    }\n    return 0;\n  }\n  /**\n   * Gets whether a single verse reference is valid.\n   */\n  get internalValid() {\n    return this.versification == null ? 1 : this._bookNum <= 0 || this._bookNum > m.lastBook ? 2 : (m.isCanonical(this._bookNum), 0);\n  }\n  setEmpty(e = i.defaultVersification) {\n    this._bookNum = 0, this._chapterNum = -1, this._verse = void 0, this.versification = e;\n  }\n  updateInternal(e, s, r) {\n    this.bookNum = m.bookIdToNumber(e), this.chapter = s, this.verse = r;\n  }\n};\nn(i, \"defaultVersification\", c.English), n(i, \"verseRangeSeparator\", \"-\"), n(i, \"verseSequenceIndicator\", \",\"), n(i, \"verseRangeSeparators\", [i.verseRangeSeparator]), n(i, \"verseSequenceIndicators\", [i.verseSequenceIndicator]), n(i, \"chapterDigitShifter\", 1e3), n(i, \"bookDigitShifter\", i.chapterDigitShifter * i.chapterDigitShifter), n(i, \"bcvMaxValue\", i.chapterDigitShifter - 1), /**\n * The valid status of the VerseRef.\n */\nn(i, \"ValidStatusType\", D);\nlet M = i;\nclass v extends Error {\n}\nexport {\n  _ as BookSet,\n  m as Canon,\n  c as ScrVers,\n  l as ScrVersType,\n  M as VerseRef,\n  v as VerseRefException\n};\n//# sourceMappingURL=index.es.js.map\n","import { Canon } from '@sillsdev/scripture';\nimport { getChaptersForBook } from 'platform-bible-utils';\nimport { BookType, BookWithOptionalChapterAndVerse } from './book-chapter-control.types';\n\nexport const ALL_BOOK_IDS = Canon.allBookIds.filter(\n  (bookId) => !Canon.isObsolete(Canon.bookIdToNumber(bookId)),\n);\n\nexport const ALL_ENGLISH_BOOK_NAMES = Object.fromEntries(\n  ALL_BOOK_IDS.map((bookId) => [bookId, Canon.bookIdToEnglishName(bookId)]),\n);\n\nexport const BOOK_TYPE_LABELS: Record<BookType, string> = {\n  OT: 'Old Testament',\n  NT: 'New Testament',\n  DC: 'Deuterocanon',\n  Extra: 'Extra',\n};\n\n// Smart parsing regex patterns\nexport const SCRIPTURE_REGEX_PATTERNS = {\n  // Matches start of string (`^`), one or more non-colon/space words, optionally followed by space and more words (`([^:\\s]+(?:\\s+[^:\\s]+)*)`), end of string (`$`), case-insensitive (`i`)\n  BOOK_ONLY: /^([^:\\s]+(?:\\s+[^:\\s]+)*)$/i,\n  // Same as above, but followed by a space and a chapter number (`\\s+(\\d+)`)\n  BOOK_CHAPTER: /^([^:\\s]+(?:\\s+[^:\\s]+)*)\\s+(\\d+)$/i,\n  // Same as above, but followed by a colon and optionally a verse number (`:(\\d*)`)\n  BOOK_CHAPTER_VERSE: /^([^:\\s]+(?:\\s+[^:\\s]+)*)\\s+(\\d+):(\\d*)$/i,\n} as const;\n\nexport const SEARCH_QUERY_FORMATS = [\n  SCRIPTURE_REGEX_PATTERNS.BOOK_ONLY,\n  SCRIPTURE_REGEX_PATTERNS.BOOK_CHAPTER,\n  SCRIPTURE_REGEX_PATTERNS.BOOK_CHAPTER_VERSE,\n];\n\nexport function getKeyCharacterType(key: string) {\n  const isLetter = /^[a-zA-Z]$/.test(key);\n  const isDigit = /^[0-9]$/.test(key);\n  return { isLetter, isDigit };\n}\n\nexport function fetchEndChapter(bookId: string) {\n  // getChaptersForBook returns -1 if not found in scrBookData\n  // scrBookData only includes OT and NT, so all DC will return -1\n  return getChaptersForBook(Canon.bookIdToNumber(bookId));\n}\n\nexport function calculateTopMatch(\n  query: string,\n  availableBooks: string[],\n): BookWithOptionalChapterAndVerse | undefined {\n  if (!query.trim() || availableBooks.length === 0) return undefined;\n\n  // First try smart parsing with regex patterns\n  const topMatch = SEARCH_QUERY_FORMATS.reduce(\n    (result: BookWithOptionalChapterAndVerse | undefined, format) => {\n      if (result) return result;\n\n      const matches = format.exec(query.trim());\n      if (matches) {\n        const [book, chapter = undefined, verse = undefined] = matches.slice(1);\n\n        let validBookId: string | undefined;\n\n        // Match for partial book name or id\n        const bookLowerCase = book.toLowerCase();\n\n        const allPotentialMatches = availableBooks.filter((bookId) => {\n          const bookEnglishName = ALL_ENGLISH_BOOK_NAMES[bookId];\n          return (\n            bookEnglishName.toLowerCase().includes(bookLowerCase) ||\n            bookId.toLowerCase().includes(bookLowerCase)\n          );\n        });\n\n        // Only create a topMatch if exactly one book could match\n        if (allPotentialMatches.length === 1) {\n          [validBookId] = allPotentialMatches;\n        }\n\n        // Match for exact book id\n        // This is only performed when a chapter number is provided, to prevent edge cases where\n        // a search for e.g. `jud` would generate a top match for 'Jude', even though 'Judges' would\n        // also be a valid match\n        if (!validBookId && chapter && Canon.isBookIdValid(book)) {\n          const bookUpperCase = book.toUpperCase();\n          if (availableBooks.includes(bookUpperCase)) {\n            validBookId = bookUpperCase;\n          }\n        }\n\n        // Match for exact full book name\n        // This is only performed when a chapter number is provided, to prevent edge cases where\n        // a search for e.g. `john` only matches `John` but not `1 John`, `2 John` and `3 John`\n        if (!validBookId && chapter) {\n          const getBookIdFromEnglishName = (bookName: string): string | undefined => {\n            return Object.keys(ALL_ENGLISH_BOOK_NAMES).find(\n              (bookId) => ALL_ENGLISH_BOOK_NAMES[bookId].toLowerCase() === bookName.toLowerCase(),\n            );\n          };\n\n          const matchingBookIdForFullName = getBookIdFromEnglishName(book);\n          if (matchingBookIdForFullName && availableBooks.includes(matchingBookIdForFullName)) {\n            validBookId = matchingBookIdForFullName;\n          }\n        }\n\n        if (validBookId) {\n          let chapterNum = chapter ? parseInt(chapter, 10) : undefined;\n          if (chapterNum && chapterNum > fetchEndChapter(validBookId))\n            chapterNum = Math.max(fetchEndChapter(validBookId), 1);\n          const verseNum = verse ? parseInt(verse, 10) : undefined;\n\n          return {\n            book: validBookId,\n            chapterNum,\n            verseNum,\n          };\n        }\n      }\n\n      return undefined;\n    },\n    undefined,\n  );\n\n  if (topMatch) return topMatch;\n\n  return undefined;\n}\n\nexport function generateCommandValue(bookId: string, chapter?: number): string {\n  return `${bookId} ${ALL_ENGLISH_BOOK_NAMES[bookId]}${chapter ? ` ${chapter}` : ''}`;\n}\n","import { Direction } from '@/utils/dir-helper.util';\nimport { SerializedVerseRef } from '@sillsdev/scripture';\nimport { ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight } from 'lucide-react';\nimport { ComponentType, useCallback, useMemo } from 'react';\nimport { fetchEndChapter } from './book-chapter-control.utils';\n\nexport interface QuickNavButton {\n  onClick: () => void;\n  disabled?: boolean;\n  title: string;\n  icon: ComponentType<{ className?: string }>;\n}\n\nexport function useQuickNavButtons(\n  scrRef: SerializedVerseRef,\n  availableBooks: string[],\n  direction: Direction,\n  handleSubmit: (scrRef: SerializedVerseRef) => void,\n): QuickNavButton[] {\n  const handlePreviousChapter = useCallback(() => {\n    if (scrRef.chapterNum > 1) {\n      handleSubmit({\n        book: scrRef.book,\n        chapterNum: scrRef.chapterNum - 1,\n        verseNum: 1,\n      });\n    } else {\n      // Go to previous book's last chapter\n      const currentBookIndex = availableBooks.indexOf(scrRef.book);\n      if (currentBookIndex > 0) {\n        const previousBook = availableBooks[currentBookIndex - 1];\n        const lastChapter = Math.max(fetchEndChapter(previousBook), 1);\n        handleSubmit({\n          book: previousBook,\n          chapterNum: lastChapter,\n          verseNum: 1,\n        });\n      }\n    }\n  }, [scrRef, availableBooks, handleSubmit]);\n\n  const handleNextChapter = useCallback(() => {\n    const maxChapter = fetchEndChapter(scrRef.book);\n    if (scrRef.chapterNum < maxChapter) {\n      handleSubmit({\n        book: scrRef.book,\n        chapterNum: scrRef.chapterNum + 1,\n        verseNum: 1,\n      });\n    } else {\n      // Go to next book's first chapter\n      const currentBookIndex = availableBooks.indexOf(scrRef.book);\n      if (currentBookIndex < availableBooks.length - 1) {\n        const nextBook = availableBooks[currentBookIndex + 1];\n        handleSubmit({\n          book: nextBook,\n          chapterNum: 1,\n          verseNum: 1,\n        });\n      }\n    }\n  }, [scrRef, availableBooks, handleSubmit]);\n\n  const handlePreviousVerse = useCallback(() => {\n    handleSubmit({\n      book: scrRef.book,\n      chapterNum: scrRef.chapterNum,\n      verseNum: scrRef.verseNum > 1 ? scrRef.verseNum - 1 : 0,\n    });\n  }, [scrRef, handleSubmit]);\n\n  const handleNextVerse = useCallback(() => {\n    handleSubmit({\n      book: scrRef.book,\n      chapterNum: scrRef.chapterNum,\n      verseNum: scrRef.verseNum + 1,\n    });\n  }, [scrRef, handleSubmit]);\n\n  return useMemo(() => {\n    return [\n      {\n        onClick: handlePreviousChapter,\n        disabled:\n          availableBooks.length === 0 ||\n          (scrRef.chapterNum === 1 && availableBooks.indexOf(scrRef.book) === 0),\n        title: 'Previous chapter',\n        icon: direction === 'ltr' ? ChevronsLeft : ChevronsRight,\n      },\n      {\n        onClick: handlePreviousVerse,\n        disabled: availableBooks.length === 0 || scrRef.verseNum === 0,\n        title: 'Previous verse',\n        icon: direction === 'ltr' ? ChevronLeft : ChevronRight,\n      },\n      {\n        onClick: handleNextVerse,\n        disabled: availableBooks.length === 0,\n        title: 'Next verse',\n        icon: direction === 'ltr' ? ChevronRight : ChevronLeft,\n      },\n      {\n        onClick: handleNextChapter,\n        disabled:\n          availableBooks.length === 0 ||\n          ((scrRef.chapterNum === fetchEndChapter(scrRef.book) ||\n            fetchEndChapter(scrRef.book) === -1) &&\n            availableBooks.indexOf(scrRef.book) === availableBooks.length - 1),\n        title: 'Next chapter',\n        icon: direction === 'ltr' ? ChevronsRight : ChevronsLeft,\n      },\n    ];\n  }, [\n    scrRef,\n    availableBooks,\n    direction,\n    handlePreviousChapter,\n    handlePreviousVerse,\n    handleNextVerse,\n    handleNextChapter,\n  ]);\n}\n","import { CommandGroup, CommandItem } from '@/components/shadcn-ui/command';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { ALL_ENGLISH_BOOK_NAMES, fetchEndChapter } from './book-chapter-control.utils';\n\nexport interface ChapterGridProps {\n  /** The book ID to render chapters for */\n  bookId: string;\n  /** Current scripture reference for highlighting */\n  scrRef: { book: string; chapterNum: number };\n  /** Callback when a chapter is selected */\n  onChapterSelect: (chapter: number) => void;\n  /** Function to set chapter refs for keyboard navigation */\n  setChapterRef: (chapter: number) => (element: HTMLDivElement | null) => void;\n  /** Optional function to determine if a chapter should be dimmed */\n  isChapterDimmed?: (chapter: number) => boolean;\n  /** Optional additional class name for styling */\n  className?: string;\n}\n\n/**\n * Renders a grid of chapter numbers for a given book, with highlighting for the current chapter and\n * optional dimmed chapters based on state logic.\n */\nexport function ChapterGrid({\n  bookId,\n  scrRef,\n  onChapterSelect,\n  setChapterRef,\n  isChapterDimmed,\n  className,\n}: ChapterGridProps) {\n  if (!bookId) return undefined;\n\n  return (\n    <CommandGroup>\n      <div className={cn('tw-grid tw-grid-cols-6 tw-gap-1', className)}>\n        {Array.from({ length: fetchEndChapter(bookId) }, (_, i) => i + 1).map((chapter) => (\n          <CommandItem\n            key={chapter}\n            value={`${bookId} ${ALL_ENGLISH_BOOK_NAMES[bookId] || ''} ${chapter}`}\n            onSelect={() => onChapterSelect(chapter)}\n            ref={setChapterRef(chapter)}\n            className={cn(\n              'tw-h-8 tw-w-8 tw-cursor-pointer tw-justify-center tw-rounded-md tw-text-center tw-text-sm',\n              {\n                'tw-bg-primary tw-text-primary-foreground':\n                  bookId === scrRef.book && chapter === scrRef.chapterNum,\n              },\n              {\n                'tw-bg-muted/50 tw-text-muted-foreground/50': isChapterDimmed?.(chapter) ?? false,\n              },\n            )}\n          >\n            {chapter}\n          </CommandItem>\n        ))}\n      </div>\n    </CommandGroup>\n  );\n}\n","import { Button } from '@/components/shadcn-ui/button';\nimport {\n  Command,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '@/components/shadcn-ui/command';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/shadcn-ui/popover';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Canon } from '@sillsdev/scripture';\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\nimport { formatScrRef } from 'platform-bible-utils';\nimport { KeyboardEvent, useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useQuickNavButtons } from './book-chapter-control.navigation';\nimport { BookChapterControlProps, BookType, ViewMode } from './book-chapter-control.types';\nimport {\n  ALL_BOOK_IDS,\n  ALL_ENGLISH_BOOK_NAMES,\n  BOOK_TYPE_LABELS,\n  calculateTopMatch,\n  fetchEndChapter,\n  generateCommandValue,\n  getKeyCharacterType,\n} from './book-chapter-control.utils';\nimport { ChapterGrid } from './chapter-grid.component';\n\n/**\n * `BookChapterControl` is a component that provides an interactive UI for selecting book chapters.\n * It allows users to input a search query to find specific books and chapters, navigate through\n * options with keyboard interactions, and submit selections. The component handles various\n * interactions such as opening and closing the dropdown menu, filtering book lists based on search\n * input, and managing highlighted selections. It also integrates with external handlers for\n * submitting selected references and retrieving active book IDs.\n */\nexport function BookChapterControl({\n  scrRef,\n  handleSubmit,\n  className,\n  getActiveBookIds,\n}: BookChapterControlProps) {\n  const direction: Direction = readDirection();\n\n  // Indicates if the Command popover is open or not\n  const [isCommandOpen, setIsCommandOpen] = useState(false);\n  // The value of the Command, mainly needed for reliable keyboard navigation\n  const [commandValue, setCommandValue] = useState('');\n  // The value of the Input inside the Command\n  const [inputValue, setInputValue] = useState('');\n  // The current view mode (books or chapters)\n  const [viewMode, setViewMode] = useState<ViewMode>('books');\n  // The book currently selected for chapter view, if any\n  const [selectedBookForChaptersView, setSelectedBookForChaptersView] = useState<\n    string | undefined\n  >(undefined);\n  const [isCommandListHidden, setIsCommandListHidden] = useState(false);\n\n  // Reference to the Command component\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const commandRef = useRef<HTMLDivElement>(undefined!);\n  // Reference to the Input component inside the Command\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const commandInputRef = useRef<HTMLInputElement>(undefined!);\n  // Reference to the CommandList inside the Command\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const commandListRef = useRef<HTMLDivElement>(undefined!);\n  // Reference to the selected book item in the CommandList\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const selectedBookItemRef = useRef<HTMLDivElement>(undefined!);\n  // References to the chapters that are shown as CommandItems\n  const chapterRefs = useRef<Record<number, HTMLDivElement | null>>({});\n\n  // #region Available books, filtering and top match logic\n\n  const activeBookIds = useMemo(() => {\n    return getActiveBookIds ? getActiveBookIds() : ALL_BOOK_IDS;\n  }, [getActiveBookIds]);\n\n  const availableBooksByType = useMemo(() => {\n    const grouped: Record<BookType, string[]> = {\n      OT: activeBookIds.filter((bookId) => Canon.isBookOT(bookId)),\n      NT: activeBookIds.filter((bookId) => Canon.isBookNT(bookId)),\n      DC: activeBookIds.filter((bookId) => Canon.isBookDC(bookId)),\n      Extra: activeBookIds.filter((bookId) => Canon.extraBooks().includes(bookId)),\n    };\n    return grouped;\n  }, [activeBookIds]);\n\n  const availableBooks = useMemo(() => {\n    return Object.values(availableBooksByType).flat();\n  }, [availableBooksByType]);\n\n  // Filter books based on search input\n  const filteredBooksByType = useMemo(() => {\n    if (!inputValue.trim()) return availableBooksByType;\n\n    const query = inputValue.toLowerCase().trim();\n    const filteredBooks: Record<BookType, string[]> = { OT: [], NT: [], DC: [], Extra: [] };\n\n    const bookTypes: BookType[] = ['OT', 'NT', 'DC', 'Extra'];\n    bookTypes.forEach((type) => {\n      filteredBooks[type] = availableBooksByType[type].filter((bookId) => {\n        const englishName = ALL_ENGLISH_BOOK_NAMES[bookId].toLowerCase();\n        return englishName.includes(query) || bookId.toLowerCase().includes(query);\n      });\n    });\n\n    return filteredBooks;\n  }, [availableBooksByType, inputValue]);\n\n  // Get the current top match\n  const topMatch = useMemo(\n    () => calculateTopMatch(inputValue, availableBooks),\n    [inputValue, availableBooks],\n  );\n\n  // #endregion\n\n  // #region Submitting references\n\n  const handleTopMatchSelect = useCallback(() => {\n    // If we have a top match (smart parsed or single book filter), use its specific chapter/verse\n    if (topMatch) {\n      handleSubmit({\n        book: topMatch.book,\n        chapterNum: topMatch.chapterNum ?? 1,\n        verseNum: topMatch.verseNum ?? 1,\n      });\n      setIsCommandOpen(false);\n      setInputValue('');\n      setCommandValue(''); // Reset command value\n    }\n  }, [handleSubmit, topMatch]);\n\n  const handleBookSelect = useCallback(\n    (bookId: string) => {\n      // Check if book has chapters - if not, submit immediately\n      const endChapter = fetchEndChapter(bookId);\n      if (endChapter <= 1) {\n        handleSubmit({\n          book: bookId,\n          chapterNum: 1,\n          verseNum: 1,\n        });\n        setIsCommandOpen(false);\n        setInputValue('');\n        return;\n      }\n\n      // Book has multiple chapters - transition to chapter view\n      setSelectedBookForChaptersView(bookId);\n      setViewMode('chapters');\n    },\n    [handleSubmit],\n  );\n\n  const handleChapterSelect = useCallback(\n    (chapterNumber: number) => {\n      // Determine which book we're selecting a chapter for\n      const bookId = viewMode === 'chapters' ? selectedBookForChaptersView : topMatch?.book;\n      if (!bookId) return;\n\n      handleSubmit({\n        book: bookId,\n        chapterNum: chapterNumber,\n        verseNum: 1,\n      });\n      setIsCommandOpen(false);\n      setViewMode('books');\n      setSelectedBookForChaptersView(undefined);\n      setInputValue('');\n    },\n    [handleSubmit, viewMode, selectedBookForChaptersView, topMatch],\n  );\n\n  // #endregion\n\n  // #region Navigation and view changes\n\n  // Hook that provides navigation buttons for quick chapter/verse navigation\n  const quickNavButtons = useQuickNavButtons(scrRef, availableBooks, direction, handleSubmit);\n\n  const handleBackToBooks = useCallback(() => {\n    setViewMode('books');\n    setSelectedBookForChaptersView(undefined);\n\n    // Focus the search input when returning to book view\n    setTimeout(() => {\n      if (commandInputRef.current) {\n        commandInputRef.current.focus();\n      }\n    }, 0);\n  }, []);\n\n  // Reset view state when popover opens\n  const handleOpenChange = useCallback(\n    (shouldCommandBeOpen: boolean) => {\n      // If we're closing from chapter view, don't close popover but go back to books view instead\n      if (!shouldCommandBeOpen && viewMode === 'chapters') {\n        handleBackToBooks();\n        return;\n      }\n\n      setIsCommandOpen(shouldCommandBeOpen);\n\n      if (shouldCommandBeOpen) {\n        // Reset Command state when opening\n        setViewMode('books');\n        setSelectedBookForChaptersView(undefined);\n        setInputValue('');\n      }\n    },\n    [viewMode, handleBackToBooks],\n  );\n\n  // #endregion\n\n  // #region Helper functions and variables\n\n  const doesChapterMatch = useCallback(\n    (chapter: number) => {\n      if (!topMatch) return false;\n      return !!topMatch.chapterNum && !chapter.toString().includes(topMatch.chapterNum.toString());\n    },\n    [topMatch],\n  );\n\n  const currentDisplayValue = useMemo(() => formatScrRef(scrRef, 'English'), [scrRef]);\n\n  const setChapterRef = useCallback((chapter: number) => {\n    return (element: HTMLDivElement | null) => {\n      chapterRefs.current[chapter] = element;\n    };\n  }, []);\n\n  // #endregion\n\n  // #region Keyboard handling\n\n  // Handle keyboard navigation for CommandInput\n  const handleInputKeyDown = useCallback((event: KeyboardEvent<HTMLInputElement>) => {\n    // Override default Home and End key behavior to work normally for cursor movement.\n    // Default behavior was to jump to the start/end of the list of items in the Command\n    if (event.key === 'Home' || event.key === 'End') {\n      event.stopPropagation(); // Prevent Command component from handling these\n    }\n  }, []);\n\n  // Grid-aware keyboard navigation using Command's controlled value\n  const handleCommandKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement | HTMLButtonElement>) => {\n      if (event.ctrlKey) return;\n\n      const { isLetter, isDigit } = getKeyCharacterType(event.key);\n\n      // Handle keypresses in chapter viewmode\n      if (viewMode === 'chapters') {\n        // Handle backspace for going back to books\n        if (event.key === 'Backspace') {\n          event.preventDefault();\n          event.stopPropagation();\n          handleBackToBooks();\n          return;\n        }\n\n        if (isLetter || isDigit) {\n          event.preventDefault();\n          event.stopPropagation();\n          setViewMode('books');\n          setSelectedBookForChaptersView(undefined);\n\n          if (isDigit && selectedBookForChaptersView) {\n            // Digit pressed: go back to book list and start search with current book name + digit\n            const currentBookName = ALL_ENGLISH_BOOK_NAMES[selectedBookForChaptersView];\n            setInputValue(`${currentBookName} ${event.key}`);\n          } else {\n            setInputValue(event.key);\n          }\n\n          setTimeout(() => {\n            if (commandInputRef.current) {\n              commandInputRef.current.focus();\n            }\n          }, 0);\n          return;\n        }\n      }\n\n      // Handle grid navigation for arrow keys in chapter views\n      if (\n        (viewMode === 'chapters' || (viewMode === 'books' && topMatch)) &&\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)\n      ) {\n        // Extract current chapter from commandValue\n        const currentBookId =\n          viewMode === 'chapters' ? selectedBookForChaptersView : topMatch?.book;\n        if (!currentBookId) return;\n\n        // Parse chapter from current command value\n        const currentChapter = (() => {\n          if (!commandValue) return 1;\n          const match = commandValue.match(/(\\d+)$/);\n          return match ? parseInt(match[1], 10) : 0;\n        })();\n\n        const maxChapter = fetchEndChapter(currentBookId);\n\n        if (!maxChapter) return;\n\n        let targetChapter = currentChapter;\n        const GRID_COLS = 6;\n\n        switch (event.key) {\n          case 'ArrowLeft':\n            if (currentChapter !== 0)\n              targetChapter = currentChapter > 1 ? currentChapter - 1 : maxChapter;\n            break;\n          case 'ArrowRight':\n            if (currentChapter !== 0)\n              targetChapter = currentChapter < maxChapter ? currentChapter + 1 : 1;\n            break;\n          case 'ArrowUp':\n            targetChapter =\n              currentChapter === 0 ? maxChapter : Math.max(1, currentChapter - GRID_COLS);\n            break;\n          case 'ArrowDown':\n            targetChapter =\n              currentChapter === 0 ? 1 : Math.min(maxChapter, currentChapter + GRID_COLS);\n            break;\n          default:\n            return;\n        }\n\n        if (targetChapter !== currentChapter) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          // Update the command value to the target chapter\n          setCommandValue(generateCommandValue(currentBookId, targetChapter));\n\n          // Scroll the target chapter into view using refs\n          setTimeout(() => {\n            const targetElement = chapterRefs.current[targetChapter];\n            if (targetElement) {\n              targetElement.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n            }\n          }, 0);\n        }\n      }\n    },\n    [viewMode, topMatch, handleBackToBooks, selectedBookForChaptersView, commandValue],\n  );\n\n  const handleQuickNavButtonKeyDown = useCallback((event: KeyboardEvent<HTMLButtonElement>) => {\n    if (event.shiftKey || event.key === 'Tab' || event.key === ' ') return;\n\n    const { isLetter, isDigit } = getKeyCharacterType(event.key);\n\n    if (isLetter || isDigit) {\n      event.preventDefault();\n\n      setInputValue((prevValue) => prevValue + event.key);\n      commandInputRef.current.focus();\n\n      setIsCommandListHidden(false);\n    }\n  }, []);\n\n  // #endregion\n\n  // #region Auto-scroll\n\n  // Auto-scroll to currently selected book when dropdown opens in book view\n  useLayoutEffect(() => {\n    const scrollTimeout = setTimeout(() => {\n      if (\n        isCommandOpen &&\n        viewMode === 'books' &&\n        commandListRef.current &&\n        selectedBookItemRef.current\n      ) {\n        const listElement = commandListRef.current;\n        const itemElement = selectedBookItemRef.current;\n\n        // Calculate scroll position to center the selected item\n        const itemOffsetTop = itemElement.offsetTop;\n        const listHeight = listElement.clientHeight;\n        const itemHeight = itemElement.clientHeight;\n        const scrollPosition = itemOffsetTop - listHeight / 2 + itemHeight / 2;\n\n        listElement.scrollTo({\n          top: Math.max(0, scrollPosition),\n          behavior: 'smooth',\n        });\n\n        // Set the selected book as the active item for keyboard navigation\n        setCommandValue(generateCommandValue(scrRef.book));\n      }\n    }, 0);\n\n    return () => {\n      clearTimeout(scrollTimeout);\n    };\n  }, [isCommandOpen, viewMode, inputValue, topMatch, scrRef.book]);\n\n  // Auto-scroll to appropriate chapter\n  useLayoutEffect(() => {\n    if (viewMode === 'chapters' && selectedBookForChaptersView) {\n      // Check if we're entering chapter view for the currently selected book\n      const isCurrentlySelectedBook = selectedBookForChaptersView === scrRef.book;\n\n      // Reset scroll position to top, except when viewing the currently selected book\n      setTimeout(() => {\n        if (commandListRef.current) {\n          if (isCurrentlySelectedBook) {\n            // Scroll to the currently selected chapter\n            const targetElement = chapterRefs.current[scrRef.chapterNum];\n            if (targetElement) {\n              targetElement.scrollIntoView({ block: 'center', behavior: 'smooth' });\n            }\n          } else {\n            // Reset to top for other books\n            commandListRef.current.scrollTo({ top: 0 });\n          }\n        }\n\n        // Ensure Command component has focus for keyboard navigation\n        if (commandRef.current) {\n          commandRef.current.focus();\n        }\n      }, 0);\n    }\n  }, [viewMode, selectedBookForChaptersView, topMatch, scrRef.book, scrRef.chapterNum]);\n\n  // #endregion\n\n  return (\n    <Popover open={isCommandOpen} onOpenChange={handleOpenChange}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-label=\"book-chapter-trigger\"\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={isCommandOpen}\n          className={cn(\n            'tw-h-8 tw-w-full tw-min-w-16 tw-max-w-48 tw-overflow-hidden tw-px-1',\n            className,\n          )}\n        >\n          <span className=\"tw-truncate\">{currentDisplayValue}</span>\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent forceMount className=\"tw-z-[250] tw-w-[280px] tw-p-0\" align=\"center\">\n        <Command\n          ref={commandRef}\n          onKeyDown={handleCommandKeyDown}\n          loop\n          value={commandValue}\n          onValueChange={setCommandValue}\n          shouldFilter={false}\n        >\n          {/* Header: Input (with quick nav buttons) for book view, fixed header for chapter view */}\n          {viewMode === 'books' ? (\n            <div className=\"tw-flex tw-items-end\">\n              <CommandInput\n                ref={commandInputRef}\n                value={inputValue}\n                onValueChange={setInputValue}\n                onKeyDown={handleInputKeyDown}\n                onFocus={() => setIsCommandListHidden(false)}\n              />\n              {/* Navigation buttons for previous/next chapter/book */}\n              <div className=\"tw-flex tw-items-center tw-gap-1 tw-border-b tw-pe-2\">\n                {quickNavButtons.map(({ onClick, disabled, title, icon: Icon }) => (\n                  <Button\n                    key={title}\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => {\n                      setIsCommandListHidden(true);\n                      onClick();\n                    }}\n                    disabled={disabled}\n                    className=\"tw-h-10 tw-w-4 tw-p-0\"\n                    title={title}\n                    onKeyDown={handleQuickNavButtonKeyDown}\n                  >\n                    <Icon />\n                  </Button>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div className=\"tw-flex tw-items-center tw-border-b tw-px-3 tw-py-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleBackToBooks}\n                className=\"tw-mr-2 tw-h-6 tw-w-6 tw-p-0\"\n                tabIndex={-1}\n              >\n                {direction === 'ltr' ? (\n                  <ArrowLeft className=\"tw-h-4 tw-w-4\" />\n                ) : (\n                  <ArrowRight className=\"tw-h-4 tw-w-4\" />\n                )}\n              </Button>\n              <span tabIndex={-1} className=\"tw-text-sm tw-font-medium\">\n                {ALL_ENGLISH_BOOK_NAMES[selectedBookForChaptersView || ''] || ''}\n              </span>\n            </div>\n          )}\n\n          {/** Body */}\n          {!isCommandListHidden && (\n            <CommandList ref={commandListRef}>\n              {/** Book list mode (also used in case of top matches) */}\n              {viewMode === 'books' && (\n                <>\n                  {/* Book List - Show when we don't have a top match */}\n                  {!topMatch &&\n                    Object.entries(filteredBooksByType).map(([type, books]) => {\n                      if (books.length === 0) return undefined;\n\n                      return (\n                        // We are mapping over filteredBooksByType, which uses BookType as key type\n                        // eslint-disable-next-line no-type-assertion/no-type-assertion\n                        <CommandGroup key={type} heading={BOOK_TYPE_LABELS[type as BookType]}>\n                          {books.map((bookId) => (\n                            <div\n                              key={bookId}\n                              className={cn(\n                                'tw-mx-1 tw-my-1 tw-border-b-0 tw-border-e-0 tw-border-s-2 tw-border-t-0 tw-border-solid',\n                                {\n                                  'tw-border-s-red-200': type.toLowerCase() === 'ot',\n                                  'tw-border-s-purple-200': type.toLowerCase() === 'nt',\n                                  'tw-border-s-indigo-200': type.toLowerCase() === 'dc',\n                                  'tw-border-s-amber-200': type.toLowerCase() === 'extra',\n                                },\n                              )}\n                            >\n                              <CommandItem\n                                value={`${bookId} ${ALL_ENGLISH_BOOK_NAMES[bookId]}`}\n                                onSelect={() => handleBookSelect(bookId)}\n                                ref={bookId === scrRef.book ? selectedBookItemRef : undefined}\n                                className=\"tw-ms-1 tw-px-2\"\n                              >\n                                {ALL_ENGLISH_BOOK_NAMES[bookId]}\n                              </CommandItem>\n                            </div>\n                          ))}\n                        </CommandGroup>\n                      );\n                    })}\n\n                  {/* Top match scripture reference */}\n                  {topMatch && (\n                    <CommandGroup>\n                      <CommandItem\n                        key=\"top-match\"\n                        value={`${topMatch.book} ${ALL_ENGLISH_BOOK_NAMES[topMatch.book]} ${\n                          topMatch.chapterNum || ''\n                        }:${topMatch.verseNum || ''})}`}\n                        onSelect={handleTopMatchSelect}\n                        className=\"tw-font-semibold tw-text-primary\"\n                      >\n                        {formatScrRef({\n                          book: topMatch.book,\n                          chapterNum: topMatch.chapterNum ?? 1,\n                          verseNum: topMatch.verseNum ?? 1,\n                        })}\n                      </CommandItem>\n                    </CommandGroup>\n                  )}\n\n                  {/* Chapter Selector - Show when we have a top match */}\n                  {topMatch && fetchEndChapter(topMatch.book) > 1 && (\n                    <>\n                      <div className=\"tw-mb-2 tw-px-3 tw-text-sm tw-font-medium tw-text-muted-foreground\">\n                        {ALL_ENGLISH_BOOK_NAMES[topMatch.book]}\n                      </div>\n                      <ChapterGrid\n                        bookId={topMatch.book}\n                        scrRef={scrRef}\n                        onChapterSelect={handleChapterSelect}\n                        setChapterRef={setChapterRef}\n                        isChapterDimmed={doesChapterMatch}\n                        className=\"tw-px-4 tw-pb-4\"\n                      />\n                    </>\n                  )}\n                </>\n              )}\n\n              {/* Basic chapter view mode */}\n              {viewMode === 'chapters' && selectedBookForChaptersView && (\n                <ChapterGrid\n                  bookId={selectedBookForChaptersView}\n                  scrRef={scrRef}\n                  onChapterSelect={handleChapterSelect}\n                  setChapterRef={setChapterRef}\n                  className=\"tw-p-4\"\n                />\n              )}\n            </CommandList>\n          )}\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default BookChapterControl;\n","import React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Style variants for the Label component.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/label}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/label}\n */\nconst labelVariants = cva(\n  'tw-text-sm tw-font-medium tw-leading-none peer-disabled:tw-cursor-not-allowed peer-disabled:tw-opacity-70',\n);\n\n/**\n * The Label component renders an accessible label associated with controls. This components is\n * built on Radix UI primitives and styled with Shadcn UI.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/label}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/label}\n */\nexport const Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn('pr-twp', labelVariants(), className)} {...props} />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n","import React from 'react';\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\nimport { Circle } from 'lucide-react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * Radio Group components providing a set of checkable buttons—known as radio buttons—where no more\n * than one of the buttons can be checked at a time. These components are built on Radix UI\n * primitives and styled with Shadcn UI.\n *\n * See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/radio-group See Radix UI\n * Documentation: https://www.radix-ui.com/primitives/docs/components/radio-group\n */\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn('pr-twp tw-grid tw-gap-2', className)}\n      {...props}\n      ref={ref}\n      dir={dir}\n    />\n  );\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\n\n/** @inheritdoc RadioGroup */\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        'pr-twp tw-aspect-square tw-h-4 tw-w-4 tw-rounded-full tw-border tw-border-primary tw-text-primary tw-ring-offset-background focus:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50',\n        className,\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"tw-flex tw-items-center tw-justify-center\">\n        <Circle className=\"tw-h-2.5 tw-w-2.5 tw-fill-current tw-text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n});\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nexport { RadioGroup, RadioGroupItem };\n","import { ReactNode, useState } from 'react';\nimport { Check, ChevronsUpDown } from 'lucide-react';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Button, ButtonProps } from '@/components/shadcn-ui/button';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/shadcn-ui/popover';\nimport {\n  Command,\n  CommandEmpty,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '@/components/shadcn-ui/command';\nimport { PopoverProps } from '@radix-ui/react-popover';\n\nexport type ComboBoxLabelOption = { label: string };\nexport type ComboBoxOption = string | number | ComboBoxLabelOption;\n\nexport type ComboBoxProps<T> = {\n  /** Optional unique identifier */\n  id?: string;\n  /** List of available options for the dropdown menu */\n  options?: readonly T[];\n  /** @deprecated 3 December 2024. Renamed to `buttonClassName` */\n  className?: string;\n  /** Additional css classes to help with unique styling of the combo box button */\n  buttonClassName?: string;\n  /** Additional css classes to help with unique styling of the combo box popover */\n  popoverContentClassName?: string;\n  /**\n   * The selected value that the combo box currently holds. Must be shallow equal to one of the\n   * options entries.\n   */\n  value?: T;\n  /** Triggers when content of textfield is changed */\n  onChange?: (newValue: T) => void;\n  /** Used to determine the string value for a given option. */\n  getOptionLabel?: (option: T) => string;\n  /** Icon to be displayed on the trigger */\n  icon?: ReactNode;\n  /** Text displayed on button if `value` is undefined */\n  buttonPlaceholder?: string;\n  /** Placeholder text for text field */\n  textPlaceholder?: string;\n  /** Text to display when no options match input */\n  commandEmptyMessage?: string;\n  /** Variant of button */\n  buttonVariant?: ButtonProps['variant'];\n  /** Control how the popover menu should be aligned. Defaults to start */\n  alignDropDown?: 'start' | 'center' | 'end';\n  /** Optional boolean to set if trigger should be disabled */\n  isDisabled?: boolean;\n} & PopoverProps;\n\nfunction getOptionLabelDefault(option: ComboBoxOption): string {\n  if (typeof option === 'string') {\n    return option;\n  }\n  if (typeof option === 'number') {\n    return option.toString();\n  }\n  return option.label;\n}\n\n/**\n * Autocomplete input and command palette with a list of suggestions.\n *\n * Thanks to Shadcn for heavy inspiration and documentation\n * https://ui.shadcn.com/docs/components/combobox\n */\nexport function ComboBox<T extends ComboBoxOption = ComboBoxOption>({\n  id,\n  options = [],\n  className,\n  buttonClassName,\n  popoverContentClassName,\n  value,\n  onChange = () => {},\n  getOptionLabel = getOptionLabelDefault,\n  icon = undefined,\n  buttonPlaceholder = '',\n  textPlaceholder = '',\n  commandEmptyMessage = 'No option found',\n  buttonVariant = 'outline',\n  alignDropDown = 'start',\n  isDisabled = false,\n  ...props\n}: ComboBoxProps<T>) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen} {...props}>\n      <PopoverTrigger asChild>\n        <Button\n          variant={buttonVariant}\n          role=\"combobox\"\n          aria-expanded={open}\n          id={id}\n          className={cn(\n            'tw-flex tw-w-[200px] tw-items-center tw-justify-between tw-overflow-hidden',\n            buttonClassName ?? className,\n          )}\n          disabled={isDisabled}\n        >\n          <div className=\"tw-flex tw-flex-1 tw-items-center tw-overflow-hidden\">\n            {icon && <div className=\"tw-pe-2\">{icon}</div>}\n            <span className={cn('tw-overflow-hidden tw-text-ellipsis tw-whitespace-nowrap')}>\n              {value ? getOptionLabel(value) : buttonPlaceholder}\n            </span>\n          </div>\n\n          <ChevronsUpDown className=\"tw-ms-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent\n        align={alignDropDown}\n        className={cn('tw-w-[200px] tw-p-0', popoverContentClassName)}\n      >\n        <Command>\n          <CommandInput placeholder={textPlaceholder} className=\"tw-text-inherit\" />\n          <CommandEmpty>{commandEmptyMessage}</CommandEmpty>\n          <CommandList>\n            {options.map((option) => (\n              <CommandItem\n                key={getOptionLabel(option)}\n                value={getOptionLabel(option)}\n                onSelect={() => {\n                  onChange(option);\n                  setOpen(false);\n                }}\n              >\n                <Check\n                  className={cn('tw-me-2 tw-h-4 tw-w-4', {\n                    'tw-opacity-0': !value || getOptionLabel(value) !== getOptionLabel(option),\n                  })}\n                />\n                {getOptionLabel(option)}\n              </CommandItem>\n            ))}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default ComboBox;\n","import { ComboBox } from '@/components/basics/combo-box.component';\nimport { Label } from '@/components/shadcn-ui/label';\nimport { useMemo } from 'react';\n\nexport type ChapterRangeSelectorProps = {\n  /** The selected start chapter */\n  startChapter: number;\n  /** The selected end chapter */\n  endChapter: number;\n  /** Callback function to handle the selection of the start chapter */\n  handleSelectStartChapter: (chapter: number) => void;\n  /** Callback function to handle the selection of the end chapter */\n  handleSelectEndChapter: (chapter: number) => void;\n  /** Flag to disable the component */\n  isDisabled?: boolean;\n  /** The total number of chapters available */\n  chapterCount: number;\n};\n\n/**\n * ChapterRangeSelector is a component that provides a UI for selecting a range of chapters. It\n * consists of two combo boxes for selecting the start and end chapters. The component ensures that\n * the selected start chapter is always less than or equal to the end chapter, and vice versa.\n *\n * @deprecated Jul 18 2025. This component is no longer supported or tested. Use of this component\n *   is discouraged and it may be removed in the future.\n * @param {ChapterRangeSelectorProps} props - The props for the component.\n */\n\nexport function ChapterRangeSelector({\n  startChapter,\n  endChapter,\n  handleSelectStartChapter,\n  handleSelectEndChapter,\n  isDisabled = false,\n  chapterCount,\n}: ChapterRangeSelectorProps) {\n  const chapterOptions = useMemo(\n    () => Array.from({ length: chapterCount }, (_, index) => index + 1),\n    [chapterCount],\n  );\n\n  const onChangeStartChapter = (value: number) => {\n    handleSelectStartChapter(value);\n    if (value > endChapter) {\n      handleSelectEndChapter(value);\n    }\n  };\n\n  const onChangeEndChapter = (value: number) => {\n    handleSelectEndChapter(value);\n    if (value < startChapter) {\n      handleSelectStartChapter(value);\n    }\n  };\n\n  return (\n    <>\n      <Label htmlFor=\"start-chapters-combobox\">Chapters</Label>\n      <ComboBox\n        isDisabled={isDisabled}\n        onChange={onChangeStartChapter}\n        buttonClassName=\"tw-me-2 tw-ms-2 tw-w-20\"\n        key=\"start chapter\"\n        options={chapterOptions}\n        getOptionLabel={(option) => option.toString()}\n        value={startChapter}\n      />\n\n      <Label htmlFor=\"end-chapters-combobox\">to</Label>\n      <ComboBox\n        isDisabled={isDisabled}\n        onChange={onChangeEndChapter}\n        buttonClassName=\"tw-ms-2 tw-w-20\"\n        key=\"end chapter\"\n        options={chapterOptions}\n        getOptionLabel={(option) => option.toString()}\n        value={endChapter}\n      />\n    </>\n  );\n}\n\nexport default ChapterRangeSelector;\n","import { Button } from '@/components/shadcn-ui/button';\nimport { Label } from '@/components/shadcn-ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/shadcn-ui/radio-group';\nimport { Canon } from '@sillsdev/scripture';\nimport { LocalizedStringValue } from 'platform-bible-utils';\nimport { useState } from 'react';\nimport {\n  ChapterRangeSelector,\n  ChapterRangeSelectorProps,\n} from '../basics/chapter-range-selector.component';\n\n/** Enumeration of possible book selection modes */\nexport enum BookSelectionMode {\n  CURRENT_BOOK = 'current book',\n  CHOOSE_BOOKS = 'choose books',\n}\n\n/**\n * Object containing all keys used for localization in this component. If you're using this\n * component in an extension, you can pass it into the useLocalizedStrings hook to easily obtain the\n * localized strings and pass them into the localizedStrings prop of this component\n */\nexport const BOOK_SELECTOR_STRING_KEYS = Object.freeze([\n  '%webView_bookSelector_currentBook%',\n  '%webView_bookSelector_choose%',\n  '%webView_bookSelector_chooseBooks%',\n] as const);\n\nexport type BookSelectorLocalizedStrings = {\n  [localizedBookSelectorKey in (typeof BOOK_SELECTOR_STRING_KEYS)[number]]?: LocalizedStringValue;\n};\n\n/**\n * Gets the localized value for the provided key\n *\n * @param strings Object containing localized string\n * @param key Key for a localized string\n * @returns The localized value for the provided key, if available. Returns the key if no localized\n *   value is available\n */\nconst localizeString = (\n  strings: BookSelectorLocalizedStrings,\n  key: keyof BookSelectorLocalizedStrings,\n) => {\n  return strings[key] ?? key;\n};\n\ntype BookSelectorProps = ChapterRangeSelectorProps & {\n  handleBookSelectionModeChange: (newMode: BookSelectionMode) => void;\n  currentBookName: string;\n  onSelectBooks: () => void;\n  selectedBookIds: string[];\n  localizedStrings: BookSelectorLocalizedStrings;\n};\n\n/**\n * BookSelector is a component that provides an interactive UI for selecting books. It can be set to\n * either allow the user to select a single book or to choose multiple books. In the former case, it\n * will display the range of chapters in the selected book, and in the latter case it will display a\n * list of the selected books.\n *\n * @deprecated Jul 18 2025. This component is no longer supported or tested. Use of this component\n *   is discouraged and it may be removed in the future.\n * @param {BookSelectorProps} props\n * @param {function} props.handleBookSelectionModeChange - Callback function to handle changes in\n *   book selection mode.\n * @param {string} props.currentBookName - The name of the currently selected book.\n * @param {function} props.onSelectBooks - Callback function to handle book selection.\n * @param {string[]} props.selectedBookIds - An array of book IDs that have been selected.\n * @param {BookSelectorLocalizedStrings} props.localizedStrings - Object containing localized\n *   strings for the component.\n */\nexport function BookSelector({\n  handleBookSelectionModeChange,\n  currentBookName,\n  onSelectBooks,\n  selectedBookIds,\n  chapterCount,\n  endChapter,\n  handleSelectEndChapter,\n  startChapter,\n  handleSelectStartChapter,\n  localizedStrings,\n}: BookSelectorProps) {\n  const currentBookText = localizeString(localizedStrings, '%webView_bookSelector_currentBook%');\n  const chooseText = localizeString(localizedStrings, '%webView_bookSelector_choose%');\n  const chooseBooksText = localizeString(localizedStrings, '%webView_bookSelector_chooseBooks%');\n\n  const [bookSelectionMode, setBookSelectionMode] = useState<BookSelectionMode>(\n    BookSelectionMode.CURRENT_BOOK,\n  );\n\n  const onSelectionModeChange = (newMode: BookSelectionMode) => {\n    setBookSelectionMode(newMode);\n    handleBookSelectionModeChange(newMode);\n  };\n\n  return (\n    <RadioGroup\n      className=\"pr-twp tw-flex\"\n      value={bookSelectionMode}\n      // value is always a string but we need it to be BookSelectionMode\n      // eslint-disable-next-line no-type-assertion/no-type-assertion\n      onValueChange={(value: string) => onSelectionModeChange(value as BookSelectionMode)}\n    >\n      <div className=\"tw-flex tw-w-full tw-flex-col tw-gap-4\">\n        <div className=\"tw-grid tw-grid-cols-[25%,25%,50%]\">\n          <div className=\"tw-flex tw-items-center\">\n            <RadioGroupItem value={BookSelectionMode.CURRENT_BOOK} />\n            <Label className=\"tw-ms-1\">{currentBookText}</Label>\n          </div>\n          <Label className=\"tw-flex tw-items-center\">{currentBookName}</Label>\n          <div className=\"tw-flex tw-items-center tw-justify-end\">\n            <ChapterRangeSelector\n              isDisabled={bookSelectionMode === BookSelectionMode.CHOOSE_BOOKS}\n              handleSelectStartChapter={handleSelectStartChapter}\n              handleSelectEndChapter={handleSelectEndChapter}\n              chapterCount={chapterCount}\n              startChapter={startChapter}\n              endChapter={endChapter}\n            />\n          </div>\n        </div>\n        <div className=\"tw-grid tw-grid-cols-[25%,50%,25%]\">\n          <div className=\"tw-flex tw-items-center\">\n            <RadioGroupItem value={BookSelectionMode.CHOOSE_BOOKS} />\n            <Label className=\"tw-ms-1\">{chooseBooksText}</Label>\n          </div>\n          <Label className=\"tw-flex tw-items-center\">\n            {selectedBookIds.map((bookId: string) => Canon.bookIdToEnglishName(bookId)).join(', ')}\n          </Label>\n          <Button\n            disabled={bookSelectionMode === BookSelectionMode.CURRENT_BOOK}\n            onClick={() => onSelectBooks()}\n          >\n            {chooseText}\n          </Button>\n        </div>\n      </div>\n    </RadioGroup>\n  );\n}\n\nexport default BookSelector;\n","import { cva } from 'class-variance-authority';\nimport { createContext, useContext } from 'react';\n\nexport type MenuContextProps = {\n  variant?: 'default' | 'muted';\n};\n\nexport const MenuContext = createContext<MenuContextProps | undefined>(undefined);\n\nexport function useMenuContext() {\n  const context = useContext(MenuContext);\n  if (!context) {\n    throw new Error('useMenuContext must be used within a MenuContext.Provider.');\n  }\n\n  return context;\n}\n\nexport const menuVariants = cva('', {\n  variants: {\n    variant: {\n      default: '',\n      muted:\n        'hover:tw-bg-muted hover:tw-text-foreground focus:tw-bg-muted focus:tw-text-foreground data-[state=open]:tw-bg-muted data-[state=open]:tw-text-foreground',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n","import {\n  MenuContext,\n  MenuContextProps,\n  menuVariants,\n  useMenuContext,\n} from '@/context/menu.context';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport React from 'react';\n\n/**\n * Dropdown Menu components providing accessible dropdown menus and submenus. These components are\n * built on Radix UI primitives and styled with Shadcn UI. See Shadcn UI Documentation:\n * https://ui.shadcn.com/docs/components/dropdown-menu See Radix UI Documentation:\n * https://www.radix-ui.com/primitives/docs/components/dropdown-menu\n */\n/* #region CUSTOM Add variant prop to support different styles */\nexport type DropdownMenuProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.Root\n> & {\n  variant?: MenuContextProps['variant'];\n};\n/* #endregion CUSTOM */\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuSubTriggerProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.SubTrigger\n> & {\n  className?: string;\n  inset?: boolean;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuSubContentProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.SubContent\n> & {\n  className?: string;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuContentProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.Content\n> & {\n  className?: string;\n  sideOffset?: number;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuItemProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.Item\n> & {\n  className?: string;\n  inset?: boolean;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuCheckboxItemProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.CheckboxItem\n> & {\n  className?: string;\n  checked?: boolean;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuRadioItemProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.RadioItem\n> & {\n  className?: string;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuLabelProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.Label\n> & {\n  className?: string;\n  inset?: boolean;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuSeparatorProps = React.ComponentPropsWithoutRef<\n  typeof DropdownMenuPrimitive.Separator\n> & {\n  className?: string;\n};\n\n/** @inheritdoc DropdownMenuProps */\nexport type DropdownMenuShortcutProps = React.HTMLAttributes<HTMLSpanElement> & {\n  className?: string;\n};\n\n/* #region CUSTOM Provide context to add variants */\n/** @inheritdoc DropdownMenuProps */\nexport function DropdownMenu({ variant = 'default', ...props }: DropdownMenuProps) {\n  const contextValue = React.useMemo<MenuContextProps>(\n    () => ({\n      variant,\n    }),\n    [variant],\n  );\n  return (\n    <MenuContext.Provider value={contextValue}>\n      <DropdownMenuPrimitive.Root {...props} />\n    </MenuContext.Provider>\n  );\n}\n/* #endregion CUSTOM */\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  DropdownMenuSubTriggerProps\n>(({ className, inset, children, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      ref={ref}\n      className={cn(\n        'tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent data-[state=open]:tw-bg-accent',\n        inset && 'tw-pl-8',\n        className,\n        menuVariants({ variant: context.variant }), // CUSTOM use context to add variants\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRight className=\"tw-ml-auto tw-h-4 tw-w-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n});\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  DropdownMenuSubContentProps\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      'pr-twp tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-lg data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;\n\n/* TODO: bug in shadcn component: DropdownMenuContent does not support a dir prop.\nFor the content we can work around this by adding a div with dir, but that would not cause\nthe scrollbar to appear left in an rtl layout (e.g. see book-chapter-control.component) */\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  DropdownMenuContentProps\n>(({ className, sideOffset = 4, children, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        ref={ref}\n        sideOffset={sideOffset}\n        className={cn(\n          /* adding pr-twp because the dropdown content is added to the dom as a sibling to the app root */\n          'pr-twp tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n          className,\n        )}\n        {...props}\n      >\n        <div dir={dir}>{children}</div>\n      </DropdownMenuPrimitive.Content>\n    </DropdownMenuPrimitive.Portal>\n  );\n});\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  DropdownMenuItemProps\n>(({ className, inset, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <DropdownMenuPrimitive.Item\n      ref={ref}\n      className={cn(\n        // removed: tw-relative focus:tw-text-accent-foreground\n        'tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n        inset && 'tw-pl-8',\n        className,\n        menuVariants({ variant: context.variant }), // CUSTOM use context to add variants\n      )}\n      {...props}\n      dir={dir}\n    />\n  );\n});\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  DropdownMenuCheckboxItemProps\n>(({ className, children, checked, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      ref={ref}\n      className={cn(\n        'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n        className,\n        menuVariants({ variant: context.variant }), // CUSTOM use context to add variants\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"tw-absolute tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center ltr:tw-left-2 rtl:tw-right-2\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <Check className=\"tw-h-4 tw-w-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n});\nDropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  DropdownMenuRadioItemProps\n>(({ className, children, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      ref={ref}\n      className={cn(\n        'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none tw-transition-colors focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n        className,\n        menuVariants({ variant: context.variant }), // CUSTOM use context to add variants\n      )}\n      {...props}\n    >\n      <span className=\"tw-absolute tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center ltr:tw-left-2 rtl:tw-right-2\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <Circle className=\"tw-h-2 tw-w-2 tw-fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n});\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  DropdownMenuLabelProps\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn('tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold', inset && 'tw-pl-8', className)}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport const DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  DropdownMenuSeparatorProps\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn('tw--mx-1 tw-my-1 tw-h-px tw-bg-muted', className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\n/** @inheritdoc DropdownMenuProps */\nexport function DropdownMenuShortcut({ className, ...props }: DropdownMenuShortcutProps) {\n  return (\n    <span\n      className={cn('tw-ms-auto tw-text-xs tw-tracking-widest tw-opacity-60', className)}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n    />\n  );\n}\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\n","import { DropdownMenuTrigger } from '@radix-ui/react-dropdown-menu';\nimport { FilterIcon } from 'lucide-react';\nimport { Table } from '@tanstack/react-table';\n\nimport { Button } from '@/components/shadcn-ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n} from '@/components/shadcn-ui/dropdown-menu';\n\ninterface DataTableViewOptionsProps<TData> {\n  table: Table<TData>;\n}\n\nexport function DataTableViewOptions<TData>({ table }: DataTableViewOptionsProps<TData>) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\" className=\"tw-ml-auto tw-hidden tw-h-8 lg:tw-flex\">\n          <FilterIcon className=\"tw-mr-2 tw-h-4 tw-w-4\" />\n          View\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"tw-w-[150px]\">\n        <DropdownMenuLabel>Toggle columns</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {table\n          .getAllColumns()\n          .filter((column) => column.getCanHide())\n          .map((column) => {\n            return (\n              <DropdownMenuCheckboxItem\n                key={column.id}\n                className=\"tw-capitalize\"\n                checked={column.getIsVisible()}\n                onCheckedChange={(value) => column.toggleVisibility(!!value)}\n              >\n                {column.id}\n              </DropdownMenuCheckboxItem>\n            );\n          })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default DataTableViewOptions;\n","import React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\nimport { cva, VariantProps } from 'class-variance-authority';\n\n/**\n * Props for Select component\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/select}\n */\nexport interface SelectTriggerProps\n  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>,\n    VariantProps<typeof selectTriggerVariants> {\n  asChild?: boolean;\n}\n\n/**\n * Select components display a list of options for the user to pick from—triggered by a button.\n * These components are built on Radix UI primitives and styled with Shadcn UI.\n *\n * See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/select See Radix UI\n * Documentation: https://www.radix-ui.com/primitives/docs/components/select\n */\nconst Select = SelectPrimitive.Root;\n\n/** @inheritdoc Select */\nconst SelectGroup = SelectPrimitive.Group;\n\n/** @inheritdoc Select */\nconst SelectValue = SelectPrimitive.Value;\n\n/**\n * Style variants for the Select Trigger component.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/button}\n */\nexport const selectTriggerVariants = cva(\n  'tw-flex tw-h-10 tw-w-full tw-items-center tw-justify-between tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background placeholder:tw-text-muted-foreground focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 [&>span]:tw-line-clamp-1',\n  {\n    variants: {\n      size: {\n        default: 'tw-h-10 tw-px-4 tw-py-2',\n        sm: 'tw-h-8 tw-rounded-md tw-px-3',\n        lg: 'tw-h-11 tw-rounded-md tw-px-8',\n        icon: 'tw-h-10 tw-w-10',\n      },\n    },\n    defaultVariants: {\n      size: 'default',\n    },\n  },\n);\n\n/** @inheritdoc Select */\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  SelectTriggerProps\n>(({ className, children, size, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <SelectPrimitive.Trigger\n      className={cn(selectTriggerVariants({ size, className }))}\n      ref={ref}\n      {...props}\n      dir={dir}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDown className=\"tw-h-4 tw-w-4 tw-opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  );\n});\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\n/** @inheritdoc Select */\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn('tw-flex tw-cursor-default tw-items-center tw-justify-center tw-py-1', className)}\n    {...props}\n  >\n    <ChevronUp className=\"tw-h-4 tw-w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\n/** @inheritdoc Select */\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn('tw-flex tw-cursor-default tw-items-center tw-justify-center tw-py-1', className)}\n    {...props}\n  >\n    <ChevronDown className=\"tw-h-4 tw-w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;\n\n/** @inheritdoc Select */\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        ref={ref}\n        className={cn(\n          'pr-twp tw-relative tw-z-50 tw-max-h-96 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n          position === 'popper' &&\n            'data-[side=bottom]:tw-translate-y-1 data-[side=left]:tw--translate-x-1 data-[side=right]:tw-translate-x-1 data-[side=top]:tw--translate-y-1',\n          className,\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            'tw-p-1',\n            position === 'popper' &&\n              'tw-h-[var(--radix-select-trigger-height)] tw-w-full tw-min-w-[var(--radix-select-trigger-width)]',\n          )}\n        >\n          <div dir={dir}>{children}</div>\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n});\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\n/** @inheritdoc Select */\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\n/** @inheritdoc Select */\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'tw-relative tw-flex tw-w-full tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pe-2 tw-ps-8 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"tw-absolute tw-start-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"tw-h-4 tw-w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\n/** @inheritdoc Select */\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('tw--mx-1 tw-my-1 tw-h-px tw-bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","import { ChevronLeftIcon, ChevronRightIcon, ArrowLeftIcon, ArrowRightIcon } from 'lucide-react';\nimport { Table } from '@tanstack/react-table';\n\nimport { Button } from '@/components/shadcn-ui/button';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/shadcn-ui/select';\n\ninterface DataTablePaginationProps<TData> {\n  table: Table<TData>;\n}\n\nexport function DataTablePagination<TData>({ table }: DataTablePaginationProps<TData>) {\n  return (\n    <div className=\"tw-flex tw-items-center tw-justify-between tw-px-2 tw-pb-3 tw-pt-3\">\n      <div className=\"tw-flex tw-items-center tw-space-x-6 lg:tw-space-x-8\">\n        <div className=\"tw-flex-1 tw-text-sm tw-text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected\n        </div>\n        <div className=\"tw-flex tw-items-center tw-space-x-2\">\n          <p className=\"tw-text-nowrap tw-text-sm tw-font-medium\">Rows per page</p>\n          <Select\n            value={`${table.getState().pagination.pageSize}`}\n            onValueChange={(value) => {\n              table.setPageSize(Number(value));\n            }}\n          >\n            <SelectTrigger className=\"tw-h-8 tw-w-[70px]\">\n              <SelectValue placeholder={table.getState().pagination.pageSize} />\n            </SelectTrigger>\n            <SelectContent side=\"top\">\n              {[10, 20, 30, 40, 50].map((pageSize) => (\n                <SelectItem key={pageSize} value={`${pageSize}`}>\n                  {pageSize}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"tw-flex tw-w-[100px] tw-items-center tw-justify-center tw-text-sm tw-font-medium\">\n          Page {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </div>\n        <div className=\"tw-flex tw-items-center tw-space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"tw-hidden tw-h-8 tw-w-8 tw-p-0 lg:tw-flex\"\n            onClick={() => table.setPageIndex(0)}\n            disabled={!table.getCanPreviousPage()}\n          >\n            <span className=\"tw-sr-only\">Go to first page</span>\n            <ArrowLeftIcon className=\"tw-h-4 tw-w-4\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"tw-h-8 tw-w-8 tw-p-0\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            <span className=\"tw-sr-only\">Go to previous page</span>\n            <ChevronLeftIcon className=\"tw-h-4 tw-w-4\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"tw-h-8 tw-w-8 tw-p-0\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            <span className=\"tw-sr-only\">Go to next page</span>\n            <ChevronRightIcon className=\"tw-h-4 tw-w-4\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"tw-hidden tw-h-8 tw-w-8 tw-p-0 lg:tw-flex\"\n            onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n            disabled={!table.getCanNextPage()}\n          >\n            <span className=\"tw-sr-only\">Go to last page</span>\n            <ArrowRightIcon className=\"tw-h-4 tw-w-4\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DataTablePagination;\n","/** Defines HTML elements that can be focusable by keyboard as a CSS selector string */\nconst FOCUSABLE_SELECTOR = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [contenteditable],\n  tr:not([disabled])\n`;\n\n/** Returns true if the element is visible in the DOM */\nfunction isVisible(el: HTMLElement): boolean {\n  return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\n/**\n * Finds all focusable elements in the given container. Focusable elements are all HTML elements\n * that can receive keyboard focus, and are not disabled or hidden from screen readers.\n *\n * @param container The container element to search for focusable elements.\n * @param uniqueQuerySelector An optional CSS selector to filter the focusable elements by.\n * @returns An array of focusable elements.\n */\nexport function getFocusableElements(\n  container: HTMLElement,\n  uniqueQuerySelector?: string,\n): HTMLElement[] {\n  const query = uniqueQuerySelector\n    ? `${FOCUSABLE_SELECTOR}, ${uniqueQuerySelector}`\n    : FOCUSABLE_SELECTOR;\n  return Array.from(container.querySelectorAll<HTMLElement>(query)).filter(\n    (el) => !el.hasAttribute('disabled') && !el.getAttribute('aria-hidden') && isVisible(el),\n  );\n}\n","import React from 'react';\nimport { getFocusableElements } from '@/utils/focus.util';\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Table components provide a responsive table. These components are built and styled with Shadcn\n * UI. See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/table\n */\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement> & { stickyHeader?: boolean }\n>(({ className, stickyHeader, ...props }, ref) => {\n  // CUSTOM: Use internal ref to manage keyboard navigation and Enter key behavior\n  // This ref gets passed into the table row ref property which expects null and not undefined\n  // eslint-disable-next-line no-null/no-null\n  const tableRef = React.useRef<HTMLTableElement>(null);\n\n  // CUSTOM: Assign internal ref to external ref if provided\n  React.useEffect(() => {\n    if (typeof ref === 'function') {\n      ref(tableRef.current);\n    } else if (ref && 'current' in ref) {\n      ref.current = tableRef.current;\n    }\n  }, [ref]);\n\n  // CUSTOM: Force tabindex -1 on all focusable elements within the table to prevent tab navigation\n  React.useEffect(() => {\n    const currentTable = tableRef.current;\n    if (!currentTable) return;\n\n    const setTabIndexes = () => {\n      requestAnimationFrame(() => {\n        const focusables = getFocusableElements(currentTable, `[tabindex]:not([tabindex=\"-1\"])`);\n        focusables.forEach((el) => {\n          el.setAttribute('tabindex', '-1');\n        });\n      });\n    };\n\n    setTabIndexes();\n\n    const observer = new MutationObserver(() => {\n      setTabIndexes();\n    });\n\n    observer.observe(currentTable, {\n      childList: true, // Watch for added/removed elements\n      subtree: true, // Include descendants\n      attributes: true,\n      attributeFilter: ['tabindex'], // Watch for tabindex changes\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  // CUSTOM: Handle keydown events for the table\n  const handleKeyDownInTable = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    const { current: currentTable } = tableRef;\n    if (!currentTable) return;\n\n    if (e.key === 'ArrowDown') {\n      // Move focus to the first row in the table (header or body)\n      e.preventDefault();\n      const firstRow = getFocusableElements(currentTable)[0];\n      firstRow.focus();\n      return;\n    }\n    if (e.key === ' ' && document.activeElement === currentTable) {\n      e.preventDefault(); // Prevent scrolling\n    }\n  };\n\n  return (\n    <div className={cn('pr-twp tw-relative tw-w-full', { 'tw-p-1': stickyHeader })}>\n      {/* Table element is not interactive by default but we need to add a keydown handler */}\n      {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n      <table\n        // Need to add a keydown handler to the table to prevent default behavior of space, enter, and arrow down keys\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0} // CUSTOM: Make table tabbable\n        onKeyDown={handleKeyDownInTable} // CUSTOM: Enable keyboard behavior\n        ref={tableRef} // CUSTOM: Use internal ref to manage keyboard navigation\n        className={cn(\n          'tw-w-full tw-caption-bottom tw-text-sm tw-outline-none', // CUSTOM: Add outline-none to remove duplicate outline\n          'focus:tw-relative focus:tw-z-10 focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-1 focus:tw-ring-offset-background', // CUSTOM: Add focus styles\n          className,\n        )}\n        aria-label=\"Table\" // CUSTOM: Add aria-label for accessibility\n        aria-labelledby=\"table-label\" // CUSTOM: Add aria-labelledby for accessibility\n        {...props}\n      />\n    </div>\n  );\n});\nTable.displayName = 'Table';\n\n/** @inheritdoc Table */\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement> & { stickyHeader?: boolean }\n>(({ className, stickyHeader, ...props }, ref) => (\n  <thead\n    ref={ref}\n    className={cn(\n      {\n        'tw-sticky tw-top-[-1px] tw-z-20 tw-bg-background tw-drop-shadow-sm': stickyHeader,\n      },\n      '[&_tr]:tw-border-b',\n      className,\n    )}\n    {...props}\n  />\n));\nTableHeader.displayName = 'TableHeader';\n\n/** @inheritdoc Table */\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody ref={ref} className={cn('[&_tr:last-child]:tw-border-0', className)} {...props} />\n));\nTableBody.displayName = 'TableBody';\n\n/** @inheritdoc Table */\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn('tw-border-t tw-bg-muted/50 tw-font-medium [&>tr]:last:tw-border-b-0', className)}\n    {...props}\n  />\n));\nTableFooter.displayName = 'TableFooter';\n\n// CUSTOM: Manage keyboard navigation and Enter key behavior for focusable elements in a row\nfunction useFocusableInRowKeyboardNavigation(rowRef: React.RefObject<HTMLTableRowElement>) {\n  React.useEffect(() => {\n    const row = rowRef.current;\n    if (!row) return;\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (!row.contains(document.activeElement)) return;\n\n      if (e.key === 'ArrowRight' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        e.stopPropagation(); // Helps override internal widget handlers\n        const focusables = rowRef.current ? getFocusableElements(rowRef.current) : [];\n        // activeElement is generic Element, so we need to cast it to HTMLElement\n        // eslint-disable-next-line no-type-assertion/no-type-assertion\n        const index = focusables.indexOf(document.activeElement as HTMLElement);\n        const nextIndex = e.key === 'ArrowRight' ? index + 1 : index - 1;\n        if (nextIndex >= 0 && nextIndex < focusables.length) {\n          focusables[nextIndex].focus();\n        }\n      }\n\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        row.focus();\n      }\n\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        e.preventDefault();\n      }\n    };\n\n    row.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      row.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [rowRef]);\n}\n\n// CUSTOM: Move focus left or right to adjacent focusable items in the same row\nfunction focusAdjacentFocusableElementInRow(\n  focusablesInRow: HTMLElement[],\n  currentIndexOfFocusables: number,\n  direction: 'ArrowLeft' | 'ArrowRight',\n) {\n  let nextFocusable: HTMLElement | undefined;\n  if (direction === 'ArrowLeft' && currentIndexOfFocusables > 0) {\n    nextFocusable = focusablesInRow[currentIndexOfFocusables - 1];\n  } else if (direction === 'ArrowRight' && currentIndexOfFocusables < focusablesInRow.length - 1) {\n    nextFocusable = focusablesInRow[currentIndexOfFocusables + 1];\n  }\n  if (nextFocusable) {\n    requestAnimationFrame(() => nextFocusable.focus());\n    return true;\n  }\n  return false;\n}\n\n// CUSTOM: Move focus up or down to adjacent rows in the same table\nfunction focusAdjacentRow(\n  rowsInTable: HTMLTableRowElement[],\n  currentRowIndex: number,\n  direction: 'ArrowDown' | 'ArrowUp',\n) {\n  let nextRow: HTMLTableRowElement | undefined;\n  if (direction === 'ArrowDown' && currentRowIndex < rowsInTable.length - 1) {\n    nextRow = rowsInTable[currentRowIndex + 1];\n  } else if (direction === 'ArrowUp' && currentRowIndex > 0) {\n    nextRow = rowsInTable[currentRowIndex - 1];\n  }\n  if (nextRow) {\n    requestAnimationFrame(() => nextRow.focus());\n    return true;\n  }\n  return false;\n}\n\n/** @inheritdoc Table */\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement> & { setFocusAlsoRunsSelect?: boolean }\n>(({ className, onKeyDown, onSelect, setFocusAlsoRunsSelect = false, ...props }, ref) => {\n  // CUSTOM: Use internal ref to manage keyboard navigation and Enter key behavior\n  // This ref gets passed into the table row ref property which expects null and not undefined\n  // eslint-disable-next-line no-null/no-null\n  const rowRef = React.useRef<HTMLTableRowElement>(null);\n\n  // CUSTOM: Assign internal ref to external ref if provided\n  React.useEffect(() => {\n    if (typeof ref === 'function') {\n      ref(rowRef.current);\n    } else if (ref && 'current' in ref) {\n      ref.current = rowRef.current;\n    }\n  }, [ref]);\n\n  // CUSTOM: Use internal ref to manage keyboard navigation and Enter key behavior\n  useFocusableInRowKeyboardNavigation(rowRef);\n\n  // CUSTOM: Get all focusable elements in the current row\n  const focusablesInRow = React.useMemo(\n    () => (rowRef.current ? getFocusableElements(rowRef.current) : []),\n    [rowRef],\n  );\n\n  // CUSTOM: Handle keydown events for keyboard navigation\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent<HTMLTableRowElement>) => {\n      const { current: currentRow } = rowRef;\n      if (!currentRow || !currentRow.parentElement) return;\n\n      const closestTable = currentRow.closest('table');\n      const rowsInTable = closestTable\n        ? // getFocusableElements returns an HTMLElement[] but we are filtering for HTMLTableRowElements\n          // eslint-disable-next-line no-type-assertion/no-type-assertion\n          (getFocusableElements(closestTable) as HTMLTableRowElement[]).filter(\n            (element) => element.tagName === 'TR',\n          )\n        : [];\n      const currentRowIndex = rowsInTable.indexOf(currentRow);\n      const currentIndexOfFocusables = focusablesInRow.indexOf(\n        // activeElement is generic Element, so we need to cast it to HTMLElement\n        // eslint-disable-next-line no-type-assertion/no-type-assertion\n        document.activeElement as HTMLElement,\n      );\n\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        e.preventDefault();\n        focusAdjacentRow(rowsInTable, currentRowIndex, e.key);\n      } else if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        focusAdjacentFocusableElementInRow(focusablesInRow, currentIndexOfFocusables, e.key);\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        const table = currentRow.closest('table');\n        if (table) {\n          table.focus();\n        }\n      }\n\n      // Call user-defined onKeyDown handler if provided\n      onKeyDown?.(e);\n    },\n    [rowRef, focusablesInRow, onKeyDown],\n  );\n\n  const handleFocus = React.useCallback(\n    (e: React.FocusEvent<HTMLTableRowElement>) => {\n      if (setFocusAlsoRunsSelect) onSelect?.(e);\n    },\n    [setFocusAlsoRunsSelect, onSelect],\n  );\n\n  return (\n    <tr\n      ref={rowRef}\n      tabIndex={-1} // CUSTOM: Make row not tabbable\n      onKeyDown={handleKeyDown} // CUSTOM: Enable keyboard behavior\n      onFocus={handleFocus} // CUSTOM: Handle focus event\n      className={cn(\n        // CUSTOM: Add focus styles and add tw-outline-none so there isn't a duplicate outline\n        'tw-border-b tw-outline-none tw-transition-colors hover:tw-bg-muted/50',\n        'focus:tw-relative focus:tw-z-10 focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-1 focus:tw-ring-offset-background',\n        'data-[state=selected]:tw-bg-muted',\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nTableRow.displayName = 'TableRow';\n\n/** @inheritdoc Table */\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'tw-h-12 tw-px-4 tw-text-start tw-align-middle tw-font-medium tw-text-muted-foreground [&:has([role=checkbox])]:tw-pe-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\n/** @inheritdoc Table */\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn('tw-p-4 tw-align-middle [&:has([role=checkbox])]:tw-pe-0', className)}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\n/** @inheritdoc Table */\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn('tw-mt-4 tw-text-sm tw-text-muted-foreground', className)}\n    {...props}\n  />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };\n","import { useState } from 'react';\n\nimport {\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  ColumnDef as TSColumnDef,\n  Row as TSRow,\n  RowSelectionState as TSRowSelectionState,\n  SortDirection as TSSortDirection,\n  Table as TSTable,\n  useReactTable,\n  VisibilityState,\n} from '@tanstack/react-table';\n\nimport { DataTableViewOptions } from '@/components/advanced/data-table/data-table-column-toggle.component';\nimport { DataTablePagination } from '@/components/advanced/data-table/data-table-pagination.component';\nimport { Button } from '@/components/shadcn-ui/button';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/shadcn-ui/table';\n\nexport type ColumnDef<TData, TValue = unknown> = TSColumnDef<TData, TValue>;\nexport type RowContents<TData> = TSRow<TData>;\nexport type TableContents<TData> = TSTable<TData>;\nexport type SortDirection = TSSortDirection;\nexport type RowSelectionState = TSRowSelectionState;\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n  enablePagination?: boolean;\n  showPaginationControls?: boolean;\n  showColumnVisibilityControls?: boolean;\n  stickyHeader?: boolean;\n  onRowClickHandler?: (row: RowContents<TData>, table: TableContents<TData>) => void;\n}\n\n/**\n * Feature-rich table component that infuses our basic shadcn-based Table component with features\n * from TanStack's React Table library\n */\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n  enablePagination = false,\n  showPaginationControls = false,\n  showColumnVisibilityControls = false,\n  stickyHeader = false,\n  onRowClickHandler = () => {},\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    ...(enablePagination && { getPaginationRowModel: getPaginationRowModel() }),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div className=\"pr-twp\">\n      {showColumnVisibilityControls && <DataTableViewOptions table={table} />}\n      <Table stickyHeader={stickyHeader}>\n        <TableHeader stickyHeader={stickyHeader}>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? undefined\n                      : flexRender(header.column.columnDef.header, header.getContext())}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row) => (\n              <TableRow\n                onClick={() => onRowClickHandler(row, table)}\n                key={row.id}\n                data-state={row.getIsSelected() && 'selected'}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"tw-h-24 tw-text-center\">\n                No results.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      {enablePagination && (\n        <div className=\"tw-flex tw-items-center tw-justify-end tw-space-x-2 tw-py-4\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      )}\n      {enablePagination && showPaginationControls && <DataTablePagination table={table} />}\n    </div>\n  );\n}\n\nexport default DataTable;\n","import { cn } from '@/utils/shadcn-ui.util';\nimport Markdown, { MarkdownToJSX } from 'markdown-to-jsx';\nimport { useMemo } from 'react';\n\ninterface MarkdownRendererProps {\n  /** Optional unique identifier */\n  id?: string;\n  /** The markdown string to render */\n  markdown: string;\n  className?: string;\n  /**\n   * The [`target` attribute for `a` html\n   * tags](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target). Defaults to not\n   * adding a `target` to `a` tags\n   */\n  anchorTarget?: string;\n}\n\n/**\n * This component renders markdown content given a markdown string. It uses typography styles from\n * the platform.\n *\n * @param MarkdownRendererProps\n * @returns A div containing the rendered markdown content.\n */\nexport function MarkdownRenderer({ id, markdown, className, anchorTarget }: MarkdownRendererProps) {\n  const options: MarkdownToJSX.Options = useMemo(\n    () => ({\n      overrides: {\n        a: {\n          props: {\n            target: anchorTarget,\n          },\n        },\n      },\n    }),\n    [anchorTarget],\n  );\n  return (\n    <div id={id} className={cn('pr-twp tw-prose', className)}>\n      <Markdown options={options}>{markdown}</Markdown>\n    </div>\n  );\n}\n\nexport default MarkdownRenderer;\n","import { Copy } from 'lucide-react';\nimport { Button } from '@/components/shadcn-ui/button';\nimport { LocalizedStringValue } from 'platform-bible-utils';\n\n/**\n * Object containing all keys used for localization in this component. If you're using this\n * component in an extension, you can pass it into the useLocalizedStrings hook to easily obtain the\n * localized strings and pass them into the localizedStrings prop of this component\n */\nexport const ERROR_DUMP_STRING_KEYS = Object.freeze([\n  '%webView_error_dump_header%',\n  '%webView_error_dump_info_message%',\n] as const);\n\nexport type ErrorDumpLocalizedStrings = {\n  [localizedInventoryKey in (typeof ERROR_DUMP_STRING_KEYS)[number]]?: LocalizedStringValue;\n};\n\n/**\n * Gets the localized value for the provided key\n *\n * @param strings Object containing localized string\n * @param key Key for a localized string\n * @returns The localized value for the provided key, if available. Returns the key if no localized\n *   value is available\n */\nconst localizeString = (\n  strings: ErrorDumpLocalizedStrings,\n  key: keyof ErrorDumpLocalizedStrings,\n) => {\n  return strings[key] ?? key;\n};\n\n/** Interface to store the parameters for the ErrorDump component */\nexport interface ErrorDumpProps {\n  /** String containing the error details to show */\n  errorDetails: string;\n  /** Handler function to notify the frontend when the error is copied */\n  handleCopyNotify?: () => void;\n  /**\n   * List of localized strings to localize the strings in this component. Relevant keys can be found\n   * in `ERROR_DUMP_STRING_KEYS`\n   */\n  localizedStrings: ErrorDumpLocalizedStrings;\n}\n\n/** Component to render an error dump */\nexport function ErrorDump({ errorDetails, handleCopyNotify, localizedStrings }: ErrorDumpProps) {\n  const headerText = localizeString(localizedStrings, '%webView_error_dump_header%');\n  const infoMessage = localizeString(localizedStrings, '%webView_error_dump_info_message%');\n\n  function handleCopy() {\n    navigator.clipboard.writeText(errorDetails);\n    if (handleCopyNotify) {\n      handleCopyNotify();\n    }\n  }\n\n  return (\n    <div className=\"tw-inline-flex tw-w-full tw-flex-col tw-items-start tw-justify-start tw-gap-4\">\n      <div className=\"tw-inline-flex tw-items-start tw-justify-start tw-gap-4 tw-self-stretch\">\n        <div className=\"tw-inline-flex tw-flex-1 tw-flex-col tw-items-start tw-justify-start\">\n          <div className=\"tw-text-color-text tw-justify-center tw-text-center tw-text-lg tw-font-semibold tw-leading-loose\">\n            {headerText}\n          </div>\n          <div className=\"tw-justify-center tw-self-stretch tw-text-sm tw-font-normal tw-leading-tight tw-text-muted-foreground\">\n            {infoMessage}\n          </div>\n        </div>\n        <Button variant=\"secondary\" size=\"icon\" className=\"size-8\" onClick={() => handleCopy()}>\n          <Copy />\n        </Button>\n      </div>\n      <div className=\"tw-prose tw-w-full\">\n        <pre className=\"tw-text-xs\">{errorDetails}</pre>\n      </div>\n    </div>\n  );\n}\n","import { PropsWithChildren, useState } from 'react';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { ErrorDump, ErrorDumpProps, ERROR_DUMP_STRING_KEYS } from '../basics/error-dump.component';\nimport { Popover, PopoverContent, PopoverTrigger } from '../shadcn-ui/popover';\nimport { Label } from '../shadcn-ui/label';\n\n/**\n * Object containing all keys used for localization in the ErrorPopover component. This extends\n * ERROR_DUMP_STRING_KEYS with additional keys specific to the ErrorPopover. If you're using this\n * component in an extension, you can pass it into the useLocalizedStrings hook to easily obtain the\n * localized strings and pass them into the localizedStrings prop of this component\n */\nexport const ERROR_POPOVER_STRING_KEYS = Object.freeze([\n  ...ERROR_DUMP_STRING_KEYS,\n  '%webView_error_dump_copied_message%',\n] as const);\n\nexport type ErrorPopoverLocalizedStrings = {\n  [localizedKey in (typeof ERROR_POPOVER_STRING_KEYS)[number]]?: string;\n};\n\n/** Interface to store the parameters for the ErrorPopover component */\nexport type ErrorPopoverProps = PropsWithChildren &\n  Omit<ErrorDumpProps, 'localizedStrings'> & {\n    /**\n     * List of localized strings to localize the strings in this component. Relevant keys can be\n     * found in `ERROR_POPOVER_STRING_KEYS`\n     */\n    localizedStrings: ErrorPopoverLocalizedStrings;\n    /** Optional CSS classes to insert into the `PopoverContent` */\n    className?: string;\n  };\n\n/** A popover component that displays detailed error information using the ErrorDump component. */\nexport function ErrorPopover({\n  errorDetails,\n  handleCopyNotify,\n  localizedStrings,\n  children,\n  className,\n}: ErrorPopoverProps) {\n  const [isCopySuccess, setIsCopySuccess] = useState<boolean>(false);\n\n  const handleCopyWithNotification = () => {\n    setIsCopySuccess(true);\n    if (handleCopyNotify) {\n      handleCopyNotify();\n    }\n  };\n\n  const handleOpenChange = (open: boolean) => {\n    if (!open) {\n      setIsCopySuccess(false);\n    }\n  };\n\n  return (\n    <Popover onOpenChange={handleOpenChange}>\n      <PopoverTrigger asChild>{children}</PopoverTrigger>\n      <PopoverContent className={cn('tw-min-w-80 tw-max-w-96', className)}>\n        {isCopySuccess && localizedStrings['%webView_error_dump_copied_message%'] && (\n          <Label>{localizedStrings['%webView_error_dump_copied_message%']}</Label>\n        )}\n        <ErrorDump\n          errorDetails={errorDetails}\n          handleCopyNotify={handleCopyWithNotification}\n          localizedStrings={localizedStrings}\n        />\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuLabel,\n  DropdownMenuGroup,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuRadioGroup,\n} from '@/components/shadcn-ui/dropdown-menu';\nimport { Button } from '@/components/shadcn-ui/button';\nimport { ChevronDown, Filter } from 'lucide-react';\nimport { useState } from 'react';\n\n/** The DropdownMenuItemType enum is used to determine the type of the dropdown item */\nexport enum DropdownMenuItemType {\n  Check,\n  Radio,\n}\n\nexport type DropdownItem = {\n  /** Unique identifier for this dropdown */\n  id: string;\n  /** The label is the text that will be displayed on the dropdown item. */\n  label: string;\n  /** The onUpdate function is called when the state of a dropdown item is changed. */\n  onUpdate: (id: string, checked?: boolean) => void;\n};\n\nexport type DropdownGroup = {\n  /**\n   * The label is the text that will be displayed on the dropdown group. It is used to categorize\n   * the items in the group.\n   */\n  label: string;\n  /** The itemType determines the DropdownMenuItemType type as either Check or Radio. */\n  itemType: DropdownMenuItemType;\n  /** The items array contains the items that will be displayed in the dropdown group */\n  items: DropdownItem[];\n};\n\nexport type FilterDropdownProps = {\n  /** Object unique identifier */\n  id?: string;\n  /** Label for the trigger button */\n  label: string;\n  /** The groups array contains the groups that will be displayed in the dropdown */\n  groups: DropdownGroup[];\n}; // TODO: extend the props later\n\n/**\n * The FilterDropdown component is a dropdown designed for filtering content. It includes groups of\n * items that can be checkboxes or radio items.\n *\n * @param FilterDropdownProps\n * @returns A filter dropdown.\n */\nexport function FilterDropdown({ id, label, groups }: FilterDropdownProps) {\n  // Populates the boolean Arrays for the group indexes that are checkbox groups\n  const [checkedStates, setCheckedStates] = useState<Record<number, boolean[]>>(\n    Object.fromEntries(\n      groups\n        .map((group, index) =>\n          group.itemType === DropdownMenuItemType.Check ? [index, []] : undefined,\n        )\n        .filter((entry) => !!entry),\n    ),\n  );\n  const [radioStates, setRadioStates] = useState<Record<number, string>>({});\n\n  const handleCheckboxUpdate = (groupIndex: number, index: number) => {\n    const newCheckedState = !checkedStates[groupIndex][index];\n    // Update the checked state first\n    setCheckedStates((oldCheckedStates) => {\n      oldCheckedStates[groupIndex][index] = newCheckedState;\n      return { ...oldCheckedStates };\n    });\n\n    // Calls the `onUpdate()` handler function for the dropdown item\n    const item = groups[groupIndex].items[index];\n    item.onUpdate(item.id, newCheckedState);\n  };\n\n  const handleRadioUpdate = (groupIndex: number, value: string) => {\n    // Updates the radio state first\n    setRadioStates((oldRadioStates) => {\n      oldRadioStates[groupIndex] = value;\n      return { ...oldRadioStates };\n    });\n\n    // Calls the `onUpdate()` handler function for the dropdown item\n    const currentItem = groups[groupIndex].items.find((item) => item.id === value);\n    if (currentItem) {\n      currentItem.onUpdate(value);\n    } else {\n      console.error(`Could not find dropdown radio item with id '${value}'!`);\n    }\n  };\n\n  return (\n    <div id={id}>\n      {/* TODO: remove this once the DropDown Menu shadcn has an id prop */}\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"default\">\n            <Filter size={16} className=\"tw-mr-2 tw-h-4 tw-w-4\" />\n            {label}\n            <ChevronDown size={16} className=\"tw-ml-2 tw-h-4 tw-w-4\" />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent>\n          {groups.map((group, groupIndex) => (\n            <div key={group.label}>\n              <DropdownMenuLabel>{group.label}</DropdownMenuLabel>\n              <DropdownMenuGroup>\n                {group.itemType === DropdownMenuItemType.Check ? (\n                  <>\n                    {group.items.map((item, index) => (\n                      <div key={item.id}>\n                        <DropdownMenuCheckboxItem\n                          checked={checkedStates[groupIndex][index]}\n                          onCheckedChange={() => handleCheckboxUpdate(groupIndex, index)}\n                        >\n                          {item.label}\n                        </DropdownMenuCheckboxItem>\n                      </div>\n                    ))}\n                  </>\n                ) : (\n                  <DropdownMenuRadioGroup\n                    value={radioStates[groupIndex]}\n                    onValueChange={(value) => handleRadioUpdate(groupIndex, value)}\n                  >\n                    {group.items.map((item) => (\n                      <div key={item.id}>\n                        <DropdownMenuRadioItem value={item.id}>{item.label}</DropdownMenuRadioItem>\n                      </div>\n                    ))}\n                  </DropdownMenuRadioGroup>\n                )}\n              </DropdownMenuGroup>\n              <DropdownMenuSeparator />\n            </div>\n          ))}\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  );\n}\n\nexport default FilterDropdown;\n","import { Button } from '@/components/shadcn-ui/button';\nimport { CircleHelp, Link as LucideLink, User } from 'lucide-react';\nimport { NumberFormat } from 'platform-bible-utils';\n\n/** Interface that stores the parameters passed to the More Info component */\ninterface MoreInfoProps {\n  /** Optional unique identifier */\n  id?: string;\n  /** The category of the extension */\n  category: string;\n  /** The number of downloads for the extension */\n  downloads: Record<string, number>;\n  /** The languages supported by the extension */\n  languages: string[];\n  /** The URL to the more info page of the extension */\n  moreInfoUrl: string;\n  /** Handler function triggered when the more info (Website) link is clicked */\n  handleMoreInfoLinkClick: () => void;\n  /** Optional URL to a website link to get support for the extension */\n  supportUrl: string;\n  /** Handler function triggered when the support link is clicked */\n  handleSupportLinkClick: () => void;\n}\n/**\n * This component displays the more info section of the extension which includes the category,\n * number of downloads, languages, and links to the website and support\n *\n * @param MoreInfoProps\n * @returns The more info component that displays the category, number of downloads, languages, and\n *   links to the website and support\n */\nexport function MoreInfo({\n  id,\n  category,\n  downloads,\n  languages,\n  moreInfoUrl,\n  handleMoreInfoLinkClick,\n  supportUrl,\n  handleSupportLinkClick,\n}: MoreInfoProps) {\n  /**\n   * This constant formats the number of downloads into a more readable format.\n   *\n   * @example 1000 -> 1K\n   *\n   * @example 1000000 -> 1M\n   *\n   * @returns The formatted number of downloads\n   */\n  const numberFormatted = new NumberFormat('en', {\n    notation: 'compact',\n    compactDisplay: 'short',\n  }).format(Object.values(downloads).reduce((a: number, b: number) => a + b, 0));\n\n  /** This function scrolls the window to the bottom of the page. */\n  const handleScrollToBottom = () => {\n    window.scrollTo(0, document.body.scrollHeight);\n  };\n\n  return (\n    <div\n      id={id}\n      className=\"tw-flex tw-items-center tw-justify-center tw-gap-4 tw-divide-x tw-border-b tw-border-t tw-py-2 tw-text-center\"\n    >\n      <div className=\"tw-flex tw-flex-col tw-items-center tw-gap-1\">\n        <div className=\"tw-flex\">\n          <span className=\"tw-text-xs tw-font-semibold tw-text-foreground\">{category}</span>\n        </div>\n        <span className=\"tw-text-xs tw-text-foreground\">CATEGORY</span>\n      </div>\n      <div className=\"tw-flex tw-flex-col tw-items-center tw-gap-1 tw-ps-4\">\n        <div className=\"tw-flex tw-gap-1\">\n          <User className=\"tw-h-4 tw-w-4\" />\n          <span className=\"tw-text-xs tw-font-semibold tw-text-foreground\">{numberFormatted}</span>\n        </div>\n        <span className=\"tw-text-xs tw-text-foreground\">USERS</span>\n      </div>\n      <div className=\"tw-flex tw-flex-col tw-items-center tw-gap-1 tw-ps-4\">\n        <div className=\"tw-flex tw-gap-2\">\n          {languages.slice(0, 3).map((locale) => (\n            <span key={locale} className=\"tw-text-xs tw-font-semibold tw-text-foreground\">\n              {locale.toUpperCase()}\n            </span>\n          ))}\n        </div>\n        {languages.length > 3 && (\n          <button\n            type=\"button\"\n            onClick={() => handleScrollToBottom()}\n            className=\"tw-text-xs tw-text-foreground tw-underline\"\n          >\n            +{languages.length - 3} more languages\n          </button>\n        )}\n      </div>\n      {(moreInfoUrl || supportUrl) && (\n        <div className=\"tw-flex tw-flex-col tw-gap-1 tw-ps-4\">\n          {moreInfoUrl && (\n            <div className=\"tw-flex tw-gap-1\">\n              <Button\n                onClick={() => handleMoreInfoLinkClick()}\n                variant=\"link\"\n                className=\"tw-flex tw-h-auto tw-gap-1 tw-py-0 tw-text-xs tw-font-semibold tw-text-foreground\"\n              >\n                Website\n                <LucideLink className=\"tw-h-4 tw-w-4\" />\n              </Button>\n            </div>\n          )}\n          {supportUrl && (\n            <div className=\"tw-flex tw-gap-1\">\n              <Button\n                onClick={() => handleSupportLinkClick()}\n                variant=\"link\"\n                className=\"tw-flex tw-h-auto tw-gap-1 tw-py-0 tw-text-xs tw-font-semibold tw-text-foreground\"\n              >\n                Support\n                <CircleHelp className=\"tw-h-4 tw-w-4\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nexport type VersionInformation = {\n  /** Date the version was published */\n  date: string;\n  /** Description of the changes in the version */\n  description: string;\n};\n\n/** Type to store the version history information */\nexport type VersionHistoryType = Record<string, VersionInformation>;\n\n/** Interface that stores the parameters passed to the Version History component */\ninterface VersionHistoryProps {\n  /** Optional unique identifier */\n  id?: string;\n  /** Object containing the versions mapped with their information */\n  versionHistory: VersionHistoryType;\n}\n\n/**\n * Component to render the version history information shown in the footer component. Lists the 5\n * most recent versions, with the options to show all versions by pressing a button.\n *\n * @param VersionHistoryProps\n * @returns Rendered version history for the Footer component\n */\nexport function VersionHistory({ id, versionHistory }: VersionHistoryProps) {\n  const [showAllVersions, setShowAllVersions] = useState(false);\n  const currentDate = new Date();\n\n  /**\n   * Function to format the time string for the version history in the form of 'X year(s) ago'.\n   *\n   * @param dateString ISO Date string to determine the time string from\n   * @returns Formatted time string\n   */\n  function formatTimeString(dateString: string) {\n    const date = new Date(dateString);\n    const dateDiff = new Date(currentDate.getTime() - date.getTime());\n    const yearDiff = dateDiff.getUTCFullYear() - 1970;\n    const monthDiff = dateDiff.getUTCMonth();\n    const dayDiff = dateDiff.getUTCDate() - 1;\n\n    // Determines how long ago the version was published\n    let timeString = '';\n    if (yearDiff > 0) {\n      timeString = `${yearDiff.toString()} year${yearDiff === 1 ? '' : 's'} ago`;\n    } else if (monthDiff > 0) {\n      timeString = `${monthDiff.toString()} month${monthDiff === 1 ? '' : 's'} ago`;\n    } else if (dayDiff === 0) {\n      timeString = 'today';\n    } else {\n      timeString = `${dayDiff.toString()} day${dayDiff === 1 ? '' : 's'} ago`;\n    }\n\n    return timeString;\n  }\n\n  // Sorts the version history by version number\n  const sortedEntries = Object.entries(versionHistory).sort((a, b) => b[0].localeCompare(a[0]));\n\n  return (\n    <div id={id}>\n      <h3 className=\"tw-text-md tw-font-semibold\">What`s New</h3>\n      <ul className=\"tw-list-disc tw-pl-5 tw-pr-4 tw-text-xs tw-text-foreground\">\n        {(showAllVersions ? sortedEntries : sortedEntries.slice(0, 5)).map((entry) => (\n          <div key={entry[0]} className=\"tw-mt-3 tw-flex tw-justify-between\">\n            <div className=\"tw-text-foreground\">\n              <li className=\"tw-prose tw-text-xs\">\n                <span>{entry[1].description}</span>\n              </li>\n            </div>\n            <div className=\"tw-justify-end tw-text-right\">\n              <div>Version {entry[0]}</div>\n              <div>{formatTimeString(entry[1].date)}</div>\n            </div>\n          </div>\n        ))}\n      </ul>\n      {sortedEntries.length > 5 && (\n        <button\n          type=\"button\"\n          onClick={() => setShowAllVersions(!showAllVersions)}\n          className=\"tw-text-xs tw-text-foreground tw-underline\"\n        >\n          {showAllVersions ? 'Show Less Version History' : 'Show All Version History'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default VersionHistory;\n","import { useMemo } from 'react';\nimport { formatBytes, getCurrentLocale } from 'platform-bible-utils';\nimport { VersionHistory, VersionHistoryType } from './version-history.component';\n\n/** Interface to store the parameters passed to the Footer component */\ninterface FooterProps {\n  /** Optional unique identifier */\n  id?: string;\n  /** Name of the publisher */\n  publisherDisplayName: string;\n  /** Size of the extension file in bytes */\n  fileSize: number;\n  /** List of language codes supported by the extension */\n  locales: string[];\n  /** Object containing the version history mapped with their information */\n  versionHistory: VersionHistoryType;\n  /** Current version of the extension */\n  currentVersion: string;\n}\n\n/**\n * Component to render the footer for the extension details which contains information on the\n * publisher, version history, languages, and file size.\n *\n * @param FooterProps\n * @returns The rendered Footer component\n */\nexport function Footer({\n  id,\n  publisherDisplayName,\n  fileSize,\n  locales,\n  versionHistory,\n  currentVersion,\n}: FooterProps) {\n  /** Formats the file size into a human-readable format */\n  const formattedFileSize = useMemo(() => formatBytes(fileSize), [fileSize]);\n\n  /**\n   * This function gets the display names of the languages based on the language codes.\n   *\n   * @param codes The list of language codes\n   * @returns The list of language names\n   */\n  const getLanguageNames = (codes: string[]) => {\n    const displayNames = new Intl.DisplayNames(getCurrentLocale(), { type: 'language' });\n    return codes.map((code) => displayNames.of(code));\n  };\n\n  const languageNames = getLanguageNames(locales);\n\n  return (\n    <div id={id} className=\"tw-border-t tw-py-2\">\n      <div className=\"tw-flex tw-flex-col tw-gap-2 tw-divide-y\">\n        {Object.entries(versionHistory).length > 0 && (\n          <VersionHistory versionHistory={versionHistory} />\n        )}\n        <div className=\"tw-flex tw-flex-col tw-gap-2 tw-py-2\">\n          <h2 className=\"tw-text-md tw-font-semibold\">Information</h2>\n          <div className=\"tw-flex tw-items-start tw-justify-between tw-text-xs tw-text-foreground\">\n            <p className=\"tw-flex tw-flex-col tw-justify-start tw-gap-1\">\n              <span>Publisher</span>\n              <span className=\"tw-font-semibold\">{publisherDisplayName}</span>\n              <span>Size</span>\n              <span className=\"tw-font-semibold\">{formattedFileSize}</span>\n            </p>\n            <div className=\"tw-flex tw-w-3/4 tw-items-center tw-justify-between tw-text-xs tw-text-foreground\">\n              <p className=\"tw-flex tw-flex-col tw-justify-start tw-gap-1\">\n                <span>Version</span>\n                <span className=\"tw-font-semibold\">{currentVersion}</span>\n                <span>Languages</span>\n                <span className=\"tw-font-semibold\">{languageNames.join(', ')}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Style variants for the Badge component.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/badge}\n */\nconst badgeVariants = cva(\n  'pr-twp tw-inline-flex tw-items-center tw-rounded-full tw-px-2.5 tw-py-0.5 tw-text-xs tw-font-semibold tw-transition-colors focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-ring focus:tw-ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'tw-border tw-border-transparent tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/80',\n        secondary:\n          'tw-border tw-border-transparent tw-bg-secondary tw-text-secondary-foreground hover:tw-bg-secondary/80',\n        muted:\n          'tw-border tw-border-transparent tw-bg-muted tw-text-muted-foreground hover:tw-bg-muted/80',\n        destructive:\n          'tw-border tw-border-transparent tw-bg-destructive tw-text-destructive-foreground hover:tw-bg-destructive/80',\n        outline: 'tw-border tw-text-foreground',\n        blueIndicator: 'tw-w-[5px] tw-h-[5px] tw-bg-blue-400 tw-px-0',\n        mutedIndicator: 'tw-w-[5px] tw-h-[5px] tw-bg-zinc-400 tw-px-0',\n        ghost: 'hover:tw-bg-accent hover:tw-text-accent-foreground tw-text-mu',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n/**\n * Props for the Badge component.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/badge}\n */\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\n/**\n * The Badge component displays a badge or a component that looks like a badge. The component is\n * built and styled by Shadcn UI.\n *\n * @param BadgeProps\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/badge}\n */\nconst Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\n  ({ className, variant, ...props }, ref) => {\n    return (\n      <div ref={ref} className={cn('pr-twp', badgeVariants({ variant }), className)} {...props} />\n    );\n  },\n);\n\nBadge.displayName = 'Badge';\n\nexport { Badge, badgeVariants };\n","import { Button } from '@/components/shadcn-ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '@/components/shadcn-ui/command';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/shadcn-ui/popover';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Check, ChevronsUpDown, Star } from 'lucide-react';\nimport { ReactNode, useCallback, useMemo, useState } from 'react';\n\nexport type MultiSelectComboBoxEntry = {\n  value: string;\n  label: string;\n  starred?: boolean;\n};\n\nexport interface MultiSelectComboBoxProps {\n  entries: MultiSelectComboBoxEntry[];\n  getEntriesCount?: (option: MultiSelectComboBoxEntry) => number;\n  selected: string[];\n  onChange: (values: string[]) => void;\n  placeholder: string;\n  commandEmptyMessage?: string;\n  customSelectedText?: string;\n  isDisabled?: boolean;\n  sortSelected?: boolean;\n  icon?: ReactNode;\n  className?: string;\n}\n\n/**\n * MultiSelectComboBox is a component that provides a UI for selecting multiple items from a list.\n * It supports displaying a placeholder, custom selected text, and an optional icon. Users can\n * search through options and view starred items prominently.\n *\n * @param {MultiSelectComboBoxProps} props\n * @param {MultiSelectComboBoxEntry[]} props.entries - The list of entries to select from.\n * @param {function} [props.getEntriesCount] - Optional function to get the count of entries.\n * @param {string[]} props.selected - The currently selected values.\n * @param {function} props.onChange - Callback function to handle changes in selection.\n * @param {string} props.placeholder - Placeholder text when no items are selected.\n * @param {string} [props.commandEmptyMessage] - Message displayed when no entries are found.\n * @param {string} [props.customSelectedText] - Custom text to display when items are selected.\n * @param {boolean} [props.isDisabled] - Flag to disable the component.\n * @param {boolean} [props.sortSelected] - Flag to sort selected items.\n * @param {ReactNode} [props.icon] - Optional icon to display in the button.\n * @param {string} [props.className] - Additional class names for styling.\n */\nexport function MultiSelectComboBox({\n  entries,\n  getEntriesCount = undefined,\n  selected,\n  onChange,\n  placeholder,\n  commandEmptyMessage = 'No entries found',\n  customSelectedText,\n  isDisabled = false,\n  sortSelected = false,\n  icon = undefined,\n  className = undefined,\n}: MultiSelectComboBoxProps) {\n  const [open, setOpen] = useState(false);\n\n  const handleSelect = useCallback(\n    (label: string) => {\n      const value = entries.find((entry) => entry.label === label)?.value;\n      if (!value) return;\n      onChange(\n        selected.includes(value) ? selected.filter((item) => item !== value) : [...selected, value],\n      );\n    },\n    [entries, selected, onChange],\n  );\n\n  const getPlaceholderText = () => {\n    if (customSelectedText) return customSelectedText;\n    return placeholder;\n  };\n\n  const sortedOptions = useMemo(() => {\n    if (!sortSelected) return entries;\n\n    const starredItems = entries\n      .filter((opt) => opt.starred)\n      .sort((a, b) => a.label.localeCompare(b.label));\n    const nonStarredItems = entries\n      .filter((opt) => !opt.starred)\n      .sort((a, b) => {\n        const aSelected = selected.includes(a.value);\n        const bSelected = selected.includes(b.value);\n        if (aSelected && !bSelected) return -1;\n        if (!aSelected && bSelected) return 1;\n        return a.label.localeCompare(b.label);\n      });\n\n    return [...starredItems, ...nonStarredItems];\n  }, [entries, selected, sortSelected]);\n\n  return (\n    <div className={className}>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            role=\"combobox\"\n            aria-expanded={open}\n            className={cn(\n              'tw-w-full tw-justify-between',\n              selected.length > 0 && selected.length < entries.length && 'tw-border-primary',\n              'tw-group',\n            )}\n            disabled={isDisabled}\n          >\n            <div className=\"tw-flex tw-items-center tw-gap-2\">\n              <div className=\"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50\">\n                <span className=\"tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center\">\n                  {icon}\n                </span>\n              </div>\n              <div\n                className={cn({\n                  'tw-text-muted-foreground group-hover:tw-text-secondary-foreground':\n                    selected.length === 0 || selected.length === entries.length,\n                })}\n              >\n                <div className=\"tw-font-normal\">{getPlaceholderText()}</div>\n              </div>\n            </div>\n            <ChevronsUpDown className=\"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent align=\"start\" className=\"tw-w-full tw-p-0\">\n          <Command>\n            <CommandInput placeholder={`Search ${placeholder.toLowerCase()}...`} />\n            <CommandList>\n              <CommandEmpty>{commandEmptyMessage}</CommandEmpty>\n              <CommandGroup>\n                {sortedOptions.map((option) => {\n                  const count: number | undefined = getEntriesCount\n                    ? getEntriesCount(option)\n                    : undefined;\n                  return (\n                    <CommandItem\n                      key={option.label}\n                      value={option.label}\n                      onSelect={handleSelect}\n                      className=\"tw-flex tw-items-center tw-gap-2\"\n                    >\n                      <div className=\"w-4\">\n                        <Check\n                          className={cn(\n                            'tw-h-4 tw-w-4',\n                            selected.includes(option.value) ? 'tw-opacity-100' : 'tw-opacity-0',\n                          )}\n                        />\n                      </div>\n                      <div className=\"tw-w-4\">\n                        {option.starred && <Star className=\"tw-h-4 tw-w-4\" />}\n                      </div>\n                      <div className=\"tw-flex-grow\">{option.label}</div>\n                      {getEntriesCount && (\n                        <div className=\"tw-w-10 tw-text-end tw-text-muted-foreground\">{count}</div>\n                      )}\n                    </CommandItem>\n                  );\n                })}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n\nexport default MultiSelectComboBox;\n","import { Badge } from '@/components/shadcn-ui/badge';\nimport { Button } from '@/components/shadcn-ui/button';\nimport { Label } from '@/components/shadcn-ui/label';\nimport { X } from 'lucide-react';\nimport { MultiSelectComboBox, MultiSelectComboBoxProps } from './multi-select-combo-box.component';\n\ninterface FilterProps extends MultiSelectComboBoxProps {\n  /**\n   * Placeholder text that will be displayed when no items are selected. It will appear at the\n   * location where the badges would be if any items were selected.\n   */\n  badgesPlaceholder: string;\n}\n\n/**\n * This is a variant of the {@link MultiSelectComboBox}, that shows a {@link Badge} component for each\n * selected item in the combo box. Clicking the 'X' icon on the badge will clear the item from the\n * selected options. A placeholder text must be provided through 'badgesPlaceholder'. This will be\n * displayed if no items are selected,\n */\nexport function Filter({\n  entries,\n  getEntriesCount,\n  selected,\n  onChange,\n  placeholder,\n  commandEmptyMessage,\n  customSelectedText,\n  isDisabled,\n  sortSelected,\n  icon,\n  className,\n  badgesPlaceholder,\n}: FilterProps) {\n  return (\n    <div className=\"tw-flex tw-items-center tw-gap-2\">\n      <MultiSelectComboBox\n        entries={entries}\n        getEntriesCount={getEntriesCount}\n        selected={selected}\n        onChange={onChange}\n        placeholder={placeholder}\n        commandEmptyMessage={commandEmptyMessage}\n        customSelectedText={customSelectedText}\n        isDisabled={isDisabled}\n        sortSelected={sortSelected}\n        icon={icon}\n        className={className}\n      />\n      {selected.length > 0 ? (\n        <div className=\"tw-flex tw-flex-wrap tw-items-center tw-gap-2\">\n          {selected.map((type) => (\n            <Badge key={type} variant=\"muted\" className=\"tw-flex tw-items-center tw-gap-1\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"tw-h-4 tw-w-4 tw-p-0 hover:tw-bg-transparent\"\n                onClick={() => onChange(selected.filter((selectedType) => selectedType !== type))}\n              >\n                <X className=\"tw-h-3 tw-w-3\" />\n              </Button>\n              {entries.find((entry) => entry.value === type)?.label}\n            </Badge>\n          ))}\n        </div>\n      ) : (\n        <Label>{badgesPlaceholder}</Label>\n      )}\n    </div>\n  );\n}\n\nexport default Filter;\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/shadcn-ui/table';\nimport { Canon, SerializedVerseRef } from '@sillsdev/scripture';\nimport { deepEqual, LanguageStrings } from 'platform-bible-utils';\nimport { useMemo } from 'react';\nimport { InventoryItemOccurrence } from './inventory-utils';\n\n/** Props for the OccurrencesTable component */\ntype OccurrencesTableProps = {\n  /** Data that contains scriptures references and snippets of scripture */\n  occurrenceData: InventoryItemOccurrence[];\n  /** Callback function that is executed when the scripture reference is changed */\n  setScriptureReference: (scriptureReference: SerializedVerseRef) => void;\n  /**\n   * Object with all localized strings that the OccurrencesTable needs to work well across multiple\n   * languages\n   */\n  localizedStrings: LanguageStrings;\n};\n\n/**\n * Table that shows occurrences of specified inventory item(s). The first column shows the related\n * scripture reference. The second column shows the snippet of scripture that contains the specified\n * inventory item\n */\nexport function OccurrencesTable({\n  occurrenceData,\n  setScriptureReference,\n  localizedStrings,\n}: OccurrencesTableProps) {\n  const referenceHeaderText =\n    localizedStrings['%webView_inventory_occurrences_table_header_reference%'];\n  const occurrenceHeaderText =\n    localizedStrings['%webView_inventory_occurrences_table_header_occurrence%'];\n\n  const occurrences: InventoryItemOccurrence[] = useMemo(() => {\n    const uniqueOccurrences: InventoryItemOccurrence[] = [];\n\n    occurrenceData.forEach((occurrence) => {\n      if (!uniqueOccurrences.some((uniqueOccurrence) => deepEqual(uniqueOccurrence, occurrence))) {\n        uniqueOccurrences.push(occurrence);\n      }\n    });\n\n    return uniqueOccurrences;\n  }, [occurrenceData]);\n\n  return (\n    <Table stickyHeader>\n      <TableHeader stickyHeader>\n        <TableRow>\n          <TableHead>{referenceHeaderText}</TableHead>\n          <TableHead>{occurrenceHeaderText}</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {occurrences.length > 0 &&\n          occurrences.map((occurrence) => (\n            <TableRow\n              key={`${occurrence.reference.book} ${occurrence.reference.chapterNum}:${\n                occurrence.reference.verseNum\n              }-${occurrence.text}`}\n              onClick={() => {\n                setScriptureReference(occurrence.reference);\n              }}\n            >\n              <TableCell>{`${Canon.bookIdToEnglishName(occurrence.reference.book)} ${occurrence.reference.chapterNum}:${occurrence.reference.verseNum}`}</TableCell>\n              <TableCell>{occurrence.text}</TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport default OccurrencesTable;\n","import React from 'react';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Checkbox component provides a control that allows the user to toggle between checked and not\n * checked. This components is built on Radix UI primitives and styled with Shadcn UI.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/checkbox}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/checkbox}\n */\nexport const Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'tw-peer pr-twp tw-h-4 tw-w-4 tw-shrink-0 tw-rounded-sm tw-border tw-border-primary tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 data-[state=checked]:tw-bg-primary data-[state=checked]:tw-text-primary-foreground',\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn('tw-flex tw-items-center tw-justify-center tw-text-current')}\n    >\n      <Check className=\"tw-h-4 tw-w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport default Checkbox;\n","import React from 'react';\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Props for Input component\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/input}\n */\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\n/**\n * Input component displays a form input field or a component that looks like an input field. This\n * components is built and styled with Shadcn UI.\n *\n * @param InputProps\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/input}\n */\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'pr-twp tw-flex tw-h-10 tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background file:tw-border-0 file:tw-bg-transparent file:tw-text-sm file:tw-font-medium file:tw-text-foreground placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50',\n          className,\n        )}\n        ref={ref}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = 'Input';\n","import React from 'react';\nimport * as TogglePrimitive from '@radix-ui/react-toggle';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\nconst toggleVariants = cva(\n  'pr-twp tw-inline-flex tw-items-center tw-justify-center tw-rounded-md tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-colors hover:tw-bg-muted hover:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=on]:tw-bg-accent data-[state=on]:tw-text-accent-foreground',\n  {\n    variants: {\n      variant: {\n        default: 'tw-bg-transparent',\n        outline:\n          'tw-border tw-border-input tw-bg-transparent hover:tw-bg-accent hover:tw-text-accent-foreground',\n      },\n      size: {\n        default: 'tw-h-10 tw-px-3',\n        sm: 'tw-h-9 tw-px-2.5',\n        lg: 'tw-h-11 tw-px-5',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n));\n\nToggle.displayName = TogglePrimitive.Root.displayName;\n\nexport { Toggle, toggleVariants };\n","import React from 'react';\nimport * as ToggleGroupPrimitive from '@radix-ui/react-toggle-group';\nimport { type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { toggleVariants } from '@/components/shadcn-ui/toggle';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/** @inheritdoc ToggleGroup */\nconst ToggleGroupContext = React.createContext<VariantProps<typeof toggleVariants>>({\n  size: 'default',\n  variant: 'default',\n});\n\n/**\n * ToggleGroup components provide a set of two-state buttons that can be toggled on or off. These\n * components are built on Radix UI primitives and styled with Shadcn UI. See Shadcn UI\n * Documentation: https://ui.shadcn.com/docs/components/toggle-group See Radix UI Documentation:\n * https://www.radix-ui.com/primitives/docs/components/toggle-group\n */\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <ToggleGroupPrimitive.Root\n      ref={ref}\n      className={cn('pr-twp tw-flex tw-items-center tw-justify-center tw-gap-1', className)}\n      {...props}\n      dir={dir}\n    >\n      <ToggleGroupContext.Provider\n        // Suppress warning produced by imported shadcn code\n        // eslint-disable-next-line react/jsx-no-constructed-context-values\n        value={{ variant, size }}\n      >\n        {children}\n      </ToggleGroupContext.Provider>\n    </ToggleGroupPrimitive.Root>\n  );\n});\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName;\n\n/** @inheritdoc ToggleGroup */\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext);\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  );\n});\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName;\n\nexport { ToggleGroup, ToggleGroupItem };\n","import { ColumnDef, SortDirection } from '@/components/advanced/data-table/data-table.component';\nimport { Button } from '@/components/shadcn-ui/button';\nimport { ToggleGroup, ToggleGroupItem } from '@/components/shadcn-ui/toggle-group';\nimport {\n  ArrowDownIcon,\n  ArrowUpDownIcon,\n  ArrowUpIcon,\n  CircleCheckIcon,\n  CircleHelpIcon,\n  CircleXIcon,\n} from 'lucide-react';\nimport { ReactNode } from 'react';\nimport { InventoryTableData, Status } from './inventory-utils';\n\n/**\n * Gets an icon that indicates the current sorting direction based on the provided input\n *\n * @param sortDirection Sorting direction. Can be ascending ('asc'), descending ('desc') or false (\n *   i.e. not sorted)\n * @returns The appropriate sorting icon for the provided sorting direction\n */\nconst getSortingIcon = (sortDirection: false | SortDirection): ReactNode => {\n  if (sortDirection === 'asc') {\n    return <ArrowUpIcon className=\"tw-ms-2 tw-h-4 tw-w-4\" />;\n  }\n  if (sortDirection === 'desc') {\n    return <ArrowDownIcon className=\"tw-ms-2 tw-h-4 tw-w-4\" />;\n  }\n  return <ArrowUpDownIcon className=\"tw-ms-2 tw-h-4 tw-w-4\" />;\n};\n\n/**\n * Function that creates the item column for inventories\n *\n * @param itemLabel Localized label for the item column (e.g. 'Character', 'Repeated Word', etc.)\n * @returns Column that shows the inventory items. Should be used with the DataTable component\n */\nexport const inventoryItemColumn = (itemLabel: string): ColumnDef<InventoryTableData> => {\n  return {\n    accessorKey: 'item',\n    accessorFn: (row: InventoryTableData) => row.items[0],\n    header: ({ column }) => (\n      <Button variant=\"ghost\" onClick={() => column.toggleSorting(undefined)}>\n        {itemLabel}\n        {getSortingIcon(column.getIsSorted())}\n      </Button>\n    ),\n  };\n};\n\n/**\n * Function that creates the additional item columns for inventories\n *\n * @param additionalItemLabel Localized label for the additional item column (e.g. 'Preceding\n *   Marker')\n * @param additionalItemIndex Index that locates the desired item in the items array of the\n *   inventory\n * @returns Column that shows additional inventory items. Should be used with the DataTable\n *   component\n */\nexport const inventoryAdditionalItemColumn = (\n  additionalItemLabel: string,\n  additionalItemIndex: number,\n): ColumnDef<InventoryTableData> => {\n  return {\n    accessorKey: `item${additionalItemIndex}`,\n    accessorFn: (row: InventoryTableData) => row.items[additionalItemIndex],\n    header: ({ column }) => (\n      <Button variant=\"ghost\" onClick={() => column.toggleSorting(undefined)}>\n        {additionalItemLabel}\n        {getSortingIcon(column.getIsSorted())}\n      </Button>\n    ),\n  };\n};\n\n/**\n * Function that creates the count column for inventories. Should be used with the DataTable\n * component.\n *\n * @param countLabel Localized label for the count column\n * @returns Column that shows the number of occurrences of the related inventory items\n */\nexport const inventoryCountColumn = (countLabel: string): ColumnDef<InventoryTableData> => {\n  return {\n    accessorKey: 'count',\n    header: ({ column }) => (\n      <div className=\"tw-flex tw-justify-end tw-tabular-nums\">\n        <Button variant=\"ghost\" onClick={() => column.toggleSorting(undefined)}>\n          {countLabel}\n          {getSortingIcon(column.getIsSorted())}\n        </Button>\n      </div>\n    ),\n    cell: ({ row }) => <div className=\"tw-flex tw-justify-end\">{row.getValue('count')}</div>,\n  };\n};\n\n/**\n * Function that updates project settings when status for item(s) changes\n *\n * @param changedItems Array of items for which the status is being updated\n * @param newStatus The status that the items are being given\n * @param approvedItems Array of currently approved items\n * @param onApprovedItemsChange Callback function that stores the updated list of approved items\n * @param unapprovedItems Array of currently unapproved items\n * @param onUnapprovedItemsChange Callback function that stores the updated list of unapproved items\n */\nconst statusChangeHandler = (\n  changedItems: string[],\n  newStatus: Status,\n  approvedItems: string[],\n  onApprovedItemsChange: (items: string[]) => void,\n  unapprovedItems: string[],\n  onUnapprovedItemsChange: (items: string[]) => void,\n) => {\n  let newApprovedItems: string[] = [...approvedItems];\n  changedItems.forEach((item) => {\n    if (newStatus === 'approved') {\n      if (!newApprovedItems.includes(item)) {\n        newApprovedItems.push(item);\n      }\n    } else {\n      newApprovedItems = newApprovedItems.filter((validItem) => validItem !== item);\n    }\n  });\n  onApprovedItemsChange(newApprovedItems);\n\n  let newUnapprovedItems: string[] = [...unapprovedItems];\n  changedItems.forEach((item) => {\n    if (newStatus === 'unapproved') {\n      if (!newUnapprovedItems.includes(item)) {\n        newUnapprovedItems.push(item);\n      }\n    } else {\n      newUnapprovedItems = newUnapprovedItems.filter((unapprovedItem) => unapprovedItem !== item);\n    }\n  });\n  onUnapprovedItemsChange(newUnapprovedItems);\n};\n\n/**\n * Function that creates the status column for inventories. Should be used with the DataTable\n * component.\n *\n * @param statusLabel Localized label for the status column\n * @param approvedItems Array of approved items, typically as defined in `Settings.xml`\n * @param onApprovedItemsChange Callback function that stores the updated list of approved items\n * @param unapprovedItems Array of unapproved items, typically as defined in `Settings.xml`\n * @param onUnapprovedItemsChange Callback function that stores the updated list of unapproved items\n * @returns Column that shows the status buttons for the related inventory item. The button for the\n *   current status of the item is selected\n */\nexport const inventoryStatusColumn = (\n  statusLabel: string,\n  approvedItems: string[],\n  onApprovedItemsChange: (items: string[]) => void,\n  unapprovedItems: string[],\n  onUnapprovedItemsChange: (items: string[]) => void,\n): ColumnDef<InventoryTableData> => {\n  return {\n    accessorKey: 'status',\n    header: ({ column }) => {\n      return (\n        <div className=\"tw-flex tw-justify-center\">\n          <Button variant=\"ghost\" onClick={() => column.toggleSorting(undefined)}>\n            {statusLabel}\n            {getSortingIcon(column.getIsSorted())}\n          </Button>\n        </div>\n      );\n    },\n    cell: ({ row }) => {\n      const status: Status = row.getValue('status');\n      const item: string = row.getValue('item');\n      return (\n        <ToggleGroup value={status} variant=\"outline\" type=\"single\">\n          <ToggleGroupItem\n            onClick={(event) => {\n              event.stopPropagation();\n              statusChangeHandler(\n                [item],\n                'approved',\n                approvedItems,\n                onApprovedItemsChange,\n                unapprovedItems,\n                onUnapprovedItemsChange,\n              );\n            }}\n            value=\"approved\"\n          >\n            <CircleCheckIcon />\n          </ToggleGroupItem>\n          <ToggleGroupItem\n            onClick={(event) => {\n              event.stopPropagation();\n              statusChangeHandler(\n                [item],\n                'unapproved',\n                approvedItems,\n                onApprovedItemsChange,\n                unapprovedItems,\n                onUnapprovedItemsChange,\n              );\n            }}\n            value=\"unapproved\"\n          >\n            <CircleXIcon />\n          </ToggleGroupItem>\n          <ToggleGroupItem\n            onClick={(event) => {\n              event.stopPropagation();\n              statusChangeHandler(\n                [item],\n                'unknown',\n                approvedItems,\n                onApprovedItemsChange,\n                unapprovedItems,\n                onUnapprovedItemsChange,\n              );\n            }}\n            value=\"unknown\"\n          >\n            <CircleHelpIcon />\n          </ToggleGroupItem>\n        </ToggleGroup>\n      );\n    },\n  };\n};\n","import { SerializedVerseRef } from '@sillsdev/scripture';\n\n/* #region Types */\n\n/**\n * Status of items that appear in inventories. 'approved' and 'unapproved' items are defined in the\n * project's `Settings.xml`. All other items are defined as 'unknown'\n */\nexport type Status = 'approved' | 'unapproved' | 'unknown';\n\n/** Occurrence of item in inventory. Primarily used by table that shows occurrences */\nexport type InventoryItemOccurrence = {\n  /** Reference to scripture where the item appears */\n  reference: SerializedVerseRef;\n  /** Snippet of scripture that contains the occurrence */\n  text: string;\n};\n\n/** Data structure that contains all information on an item that is shown in an inventory */\nexport type InventoryTableData = {\n  /**\n   * The item (e.g. a character in the characters inventory, a marker in the marker inventory) In\n   * most cases the array will only have one element. In case of additional items (e.g. the\n   * preceding marker in the markers check), the primary item should be stored in the first index.\n   * To show additional items in the inventory, make sure to configure the `additionalItemsLabels`\n   * prop for the Inventory component\n   */\n  items: string[];\n  /** The number of times this item occurs in the selected scope */\n  count: number;\n  /** The status of this item (see documentation for `Status` type for more information) */\n  status: Status;\n  /** Occurrences of this item in the scripture text for the selected scope */\n  occurrences: InventoryItemOccurrence[];\n};\n\n/* #endregion */\n\n/* #region Functions */\n\n/**\n * Splits USFM string into shorter line-like segments\n *\n * @param text A single (likely very large) USFM string\n * @returns An array containing the input text, split into shorter segments\n */\nexport const getLinesFromUSFM = (text: string) => {\n  // Splits on (CR)LF, CR, \\v, \\c and \\id\n  return text.split(/(?:\\r?\\n|\\r)|(?=(?:\\\\(?:v|c|id)))/g);\n};\n\n/**\n * Extracts chapter or verse number from USFM strings that start with a \\c or \\v marker\n *\n * @param text USFM string that is expected to start with \\c or \\v marker\n * @returns Chapter or verse number if one is found. Else returns 0.\n */\nexport const getNumberFromUSFM = (text: string): number | undefined => {\n  // Captures all digits that follow \\v or \\c markers followed by whitespace located at the start of a string\n  const regex = /^\\\\[vc]\\s+(\\d+)/;\n  const match = text.match(regex);\n\n  if (match) {\n    return +match[1];\n  }\n  return undefined;\n};\n\n/**\n * Gets book ID from USFM string that starts with the \\id marker, and returns book number for it\n *\n * @param text USFM string that is expected to start with \\id marker\n * @returns Book number corresponding to the \\id marker in the input text. Returns 0 if no marker is\n *   found or the marker is not valid\n */\nexport const getBookIdFromUSFM = (text: string): string => {\n  // Captures all digits that follow an \\id marker followed by whitespace located at the start of a string\n  const match = text.match(/^\\\\id\\s+([A-Za-z]+)/);\n  if (match) {\n    return match[1];\n  }\n  return '';\n};\n\n/**\n * Gets the status for an item, typically used in the Inventory component\n *\n * @param item The item for which the status is being requested\n * @param approvedItems Array of approved items, typically as defined in `Settings.xml`\n * @param unapprovedItems Array of unapproved items, typically as defined in `Settings.xml`\n * @returns The status for the specified item\n */\nexport const getStatusForItem = (\n  item: string,\n  approvedItems: string[],\n  unapprovedItems: string[],\n): Status => {\n  if (unapprovedItems.includes(item)) return 'unapproved';\n  if (approvedItems.includes(item)) return 'approved';\n  return 'unknown';\n};\n\n/* #endregion */\n","import {\n  ColumnDef,\n  DataTable,\n  RowContents,\n  RowSelectionState,\n  TableContents,\n} from '@/components/advanced/data-table/data-table.component';\nimport { OccurrencesTable } from '@/components/advanced/inventory/occurrences-table.component';\nimport { Checkbox } from '@/components/shadcn-ui/checkbox';\nimport { Input } from '@/components/shadcn-ui/input';\nimport { Label } from '@/components/shadcn-ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/shadcn-ui/select';\nimport { Scope } from '@/components/utils/scripture.util';\nimport { SerializedVerseRef } from '@sillsdev/scripture';\nimport { deepEqual, isString, LocalizedStringValue } from 'platform-bible-utils';\nimport { useEffect, useMemo, useState } from 'react';\nimport { inventoryAdditionalItemColumn } from './inventory-columns';\nimport {\n  getStatusForItem,\n  InventoryItemOccurrence,\n  InventoryTableData,\n  Status,\n} from './inventory-utils';\n\n/** Represents an item in the inventory with associated text and verse reference. */\nexport type InventoryItem = {\n  /**\n   * The label by which the item is shown in the inventory (e.g. the word that is repeated in case\n   * of the Repeated Words check). It serves as a unique identifier for the item. It usually is a\n   * string, but can be a string[] when there are multiple defining attributes (e.g. when 'show\n   * preceding marker' is enabled for the Markers Inventory, the preceding marker will be stored as\n   * the second item in the array)\n   */\n  inventoryText: string | string[];\n  /** The snippet of scripture where this occurrence of the `inventoryItem` is found */\n  verse: string;\n  /** The reference to the location where the `verse` can be found in scripture */\n  verseRef: SerializedVerseRef;\n  /**\n   * Offset used to locate the `inventoryText` (or inventoryText[0] in case of an array) in the\n   * `verse` string\n   */\n  offset: number;\n};\n\n/**\n * Object containing all keys used for localization in this component. If you're using this\n * component in an extension, you can pass it into the useLocalizedStrings hook to easily obtain the\n * localized strings and pass them into the localizedStrings prop of this component\n */\nexport const INVENTORY_STRING_KEYS = Object.freeze([\n  '%webView_inventory_all%',\n  '%webView_inventory_approved%',\n  '%webView_inventory_unapproved%',\n  '%webView_inventory_unknown%',\n  '%webView_inventory_scope_currentBook%',\n  '%webView_inventory_scope_chapter%',\n  '%webView_inventory_scope_verse%',\n  '%webView_inventory_filter_text%',\n  '%webView_inventory_show_additional_items%',\n  '%webView_inventory_occurrences_table_header_reference%',\n  '%webView_inventory_occurrences_table_header_occurrence%',\n] as const);\n\nexport type InventoryLocalizedStrings = {\n  [localizedInventoryKey in (typeof INVENTORY_STRING_KEYS)[number]]?: LocalizedStringValue;\n};\n\n/** Status values that the status filter can select from */\ntype StatusFilter = Status | 'all';\n\n/** Text labels for the inventory columns and the control components of additional inventory items */\ntype AdditionalItemsLabels = {\n  checkboxText?: string;\n  tableHeaders?: string[];\n};\n\n/**\n * Filters data that is shown in the DataTable section of the Inventory\n *\n * @param itemData All inventory items and their related information\n * @param statusFilter Allows filtering by status (i.e. show all items, or only items that are\n *   'approved', 'unapproved' or 'unknown')\n * @param textFilter Allows filtering by text. All items that include the filter text will be\n *   selected.\n * @returns Array of items and their related information that are matched by the specified filters\n */\nconst filterItemData = (\n  itemData: InventoryTableData[],\n  statusFilter: StatusFilter,\n  textFilter: string,\n): InventoryTableData[] => {\n  let filteredItemData: InventoryTableData[] = itemData;\n\n  if (statusFilter !== 'all') {\n    filteredItemData = filteredItemData.filter(\n      (item) =>\n        (statusFilter === 'approved' && item.status === 'approved') ||\n        (statusFilter === 'unapproved' && item.status === 'unapproved') ||\n        (statusFilter === 'unknown' && item.status === 'unknown'),\n    );\n  }\n\n  if (textFilter !== '')\n    filteredItemData = filteredItemData.filter((item) => item.items[0].includes(textFilter));\n\n  return filteredItemData;\n};\n\n/**\n * Turns array of strings into array of inventory items, along with their count and status. The\n * approvedItems and unapprovedItems arrays are used to determine the status of each item, by\n * matching them to the `inventoryText` of the InventoryItem.\n *\n * @param inventoryItems Detailed information on the items that are to be shown in the inventory\n * @param approvedItems Array of approved items, typically as defined in `Settings.xml`\n * @param unapprovedItems Array of unapproved items, typically as defined in `Settings.xml`\n * @returns Array of inventory items, along with their count and status\n */\nconst processInventoryItems = (\n  inventoryItems: InventoryItem[],\n  approvedItems: string[],\n  unapprovedItems: string[],\n): InventoryTableData[] => {\n  const tableData: InventoryTableData[] = [];\n\n  inventoryItems.forEach((item) => {\n    const existingItem = tableData.find((tableEntry) =>\n      deepEqual(\n        tableEntry.items,\n        isString(item.inventoryText) ? [item.inventoryText] : item.inventoryText,\n      ),\n    );\n\n    if (existingItem) {\n      existingItem.count += 1;\n      existingItem.occurrences.push({\n        reference: item.verseRef,\n        text: item.verse,\n      });\n    } else {\n      const newItem: InventoryTableData = {\n        items: isString(item.inventoryText) ? [item.inventoryText] : item.inventoryText,\n        count: 1,\n        status: getStatusForItem(\n          isString(item.inventoryText) ? item.inventoryText : item.inventoryText[0],\n          approvedItems,\n          unapprovedItems,\n        ),\n        occurrences: [\n          {\n            reference: item.verseRef,\n            text: item.verse,\n          },\n        ],\n      };\n      tableData.push(newItem);\n    }\n  });\n\n  return tableData;\n};\n\n/**\n * Gets the localized value for the provided key\n *\n * @param strings Object containing localized string\n * @param key Key for a localized string\n * @returns The localized value for the provided key, if available. Returns the key if no localized\n *   value is available\n */\nconst localizeString = (\n  strings: InventoryLocalizedStrings,\n  key: keyof InventoryLocalizedStrings,\n) => {\n  return strings[key] ?? key;\n};\n\n/** Props for the Inventory component */\ntype InventoryProps = {\n  /** The inventory items that the inventory should be populated with */\n  inventoryItems: InventoryItem[];\n  /** Callback function that is executed when the scripture reference is changed */\n  setVerseRef: (scriptureReference: SerializedVerseRef) => void;\n  /**\n   * Object with all localized strings that the Inventory needs to work well across multiple\n   * languages. When using this component with Platform.Bible, you can import\n   * `INVENTORY_STRING_KEYS` from this library, pass it in to the Platform's localization hook, and\n   * pass the localized keys that are returned by the hook into this prop.\n   */\n  localizedStrings: InventoryLocalizedStrings;\n  /**\n   * Text labels for control elements and additional column headers in case your Inventory has more\n   * than one item to show (e.g. The 'Preceding Marker' in the Markers Inventory)\n   */\n  additionalItemsLabels?: AdditionalItemsLabels;\n  /** Array of approved items, typically as defined in `Settings.xml` */\n  approvedItems: string[];\n  /** Array of unapproved items, typically as defined in `Settings.xml` */\n  unapprovedItems: string[];\n  /** Scope of scripture that the inventory will operate on */\n  scope: Scope;\n  /** Callback function that is executed when the scope is changed from the Inventory */\n  onScopeChange: (scope: Scope) => void;\n  /**\n   * Column definitions for the Inventory data table. The most commonly used column definitions are\n   * pre-configured for your convenience and can be imported (e.g. inventoryItemColumn,\n   * inventoryAdditionalItemColumn inventoryCountColumn, and inventoryStatusColumn). If you need any\n   * other columns you can add these yourself\n   */\n  columns: ColumnDef<InventoryTableData>[];\n};\n\n/** Inventory component that is used to view and control the status of provided project settings */\nexport function Inventory({\n  inventoryItems,\n  setVerseRef,\n  localizedStrings,\n  additionalItemsLabels,\n  approvedItems,\n  unapprovedItems,\n  scope,\n  onScopeChange,\n  columns,\n}: InventoryProps) {\n  const allItemsText = localizeString(localizedStrings, '%webView_inventory_all%');\n  const approvedItemsText = localizeString(localizedStrings, '%webView_inventory_approved%');\n  const unapprovedItemsText = localizeString(localizedStrings, '%webView_inventory_unapproved%');\n  const unknownItemsText = localizeString(localizedStrings, '%webView_inventory_unknown%');\n  const scopeBookText = localizeString(localizedStrings, '%webView_inventory_scope_currentBook%');\n  const scopeChapterText = localizeString(localizedStrings, '%webView_inventory_scope_chapter%');\n  const scopeVerseText = localizeString(localizedStrings, '%webView_inventory_scope_verse%');\n  const filterText = localizeString(localizedStrings, '%webView_inventory_filter_text%');\n  const showAdditionalItemsText = localizeString(\n    localizedStrings,\n    '%webView_inventory_show_additional_items%',\n  );\n\n  const [showAdditionalItems, setShowAdditionalItems] = useState<boolean>(false);\n  const [statusFilter, setStatusFilter] = useState<StatusFilter>('all');\n  const [textFilter, setTextFilter] = useState<string>('');\n  const [selectedItem, setSelectedItem] = useState<string[]>([]);\n\n  const tableData: InventoryTableData[] = useMemo(() => {\n    if (inventoryItems.length === 0) return [];\n    return processInventoryItems(inventoryItems, approvedItems, unapprovedItems);\n  }, [inventoryItems, approvedItems, unapprovedItems]);\n\n  const reducedTableData: InventoryTableData[] = useMemo(() => {\n    if (showAdditionalItems) return tableData;\n\n    const newTableData: InventoryTableData[] = [];\n\n    tableData.forEach((tableEntry) => {\n      const firstItem = tableEntry.items[0];\n\n      const existingEntry = newTableData.find(\n        (newTableEntry) => newTableEntry.items[0] === firstItem,\n      );\n\n      if (existingEntry) {\n        existingEntry.count += tableEntry.count;\n        existingEntry.occurrences = existingEntry.occurrences.concat(tableEntry.occurrences);\n      } else {\n        newTableData.push({\n          items: [firstItem],\n          count: tableEntry.count,\n          occurrences: tableEntry.occurrences,\n          status: tableEntry.status,\n        });\n      }\n    });\n\n    return newTableData;\n  }, [showAdditionalItems, tableData]);\n\n  const filteredTableData: InventoryTableData[] = useMemo(() => {\n    return filterItemData(reducedTableData, statusFilter, textFilter);\n  }, [reducedTableData, statusFilter, textFilter]);\n\n  const allColumns: ColumnDef<InventoryTableData>[] = useMemo(() => {\n    if (!showAdditionalItems) return columns;\n\n    const numberOfAdditionalItems = additionalItemsLabels?.tableHeaders?.length;\n    if (!numberOfAdditionalItems) return columns;\n\n    const additionalColumns: ColumnDef<InventoryTableData>[] = [];\n\n    for (let index = 0; index < numberOfAdditionalItems; index++) {\n      additionalColumns.push(\n        inventoryAdditionalItemColumn(\n          additionalItemsLabels?.tableHeaders?.[index] || 'Additional Item',\n          index + 1,\n        ),\n      );\n    }\n\n    return [...additionalColumns, ...columns];\n  }, [additionalItemsLabels?.tableHeaders, columns, showAdditionalItems]);\n\n  useEffect(() => {\n    if (filteredTableData.length === 0) {\n      setSelectedItem([]);\n    } else if (filteredTableData.length === 1) {\n      setSelectedItem(filteredTableData[0].items);\n    }\n  }, [filteredTableData]);\n\n  const rowClickHandler = (\n    row: RowContents<InventoryTableData>,\n    table: TableContents<InventoryTableData>,\n  ) => {\n    table.setRowSelection(() => {\n      const newSelection: RowSelectionState = {};\n      newSelection[row.index] = true;\n      return newSelection;\n    });\n\n    setSelectedItem(row.original.items);\n  };\n\n  const handleScopeChange = (value: string) => {\n    if (value === 'book' || value === 'chapter' || value === 'verse') {\n      onScopeChange(value);\n    } else {\n      throw new Error(`Invalid scope value: ${value}`);\n    }\n  };\n\n  const handleStatusFilterChange = (value: string) => {\n    if (value === 'all' || value === 'approved' || value === 'unapproved' || value === 'unknown') {\n      setStatusFilter(value);\n    } else {\n      throw new Error(`Invalid status filter value: ${value}`);\n    }\n  };\n\n  const occurrenceData: InventoryItemOccurrence[] = useMemo(() => {\n    if (reducedTableData.length === 0 || selectedItem.length === 0) return [];\n    const occurrence = reducedTableData.filter((tableEntry: InventoryTableData) => {\n      return deepEqual(\n        showAdditionalItems ? tableEntry.items : [tableEntry.items[0]],\n        selectedItem,\n      );\n    });\n    if (occurrence.length > 1) throw new Error('Selected item is not unique');\n    if (occurrence.length === 0) return [];\n    return occurrence[0].occurrences;\n  }, [selectedItem, showAdditionalItems, reducedTableData]);\n\n  return (\n    <div className=\"pr-twp tw-flex tw-h-full tw-flex-col\">\n      <div className=\"tw-flex tw-items-stretch\">\n        <Select\n          onValueChange={(value) => handleStatusFilterChange(value)}\n          defaultValue={statusFilter}\n        >\n          <SelectTrigger className=\"tw-m-1\">\n            <SelectValue placeholder=\"Select filter\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">{allItemsText}</SelectItem>\n            <SelectItem value=\"approved\">{approvedItemsText}</SelectItem>\n            <SelectItem value=\"unapproved\">{unapprovedItemsText}</SelectItem>\n            <SelectItem value=\"unknown\">{unknownItemsText}</SelectItem>\n          </SelectContent>\n        </Select>\n        <Select onValueChange={(value) => handleScopeChange(value)} defaultValue={scope}>\n          <SelectTrigger className=\"tw-m-1\">\n            <SelectValue placeholder=\"Select scope\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"book\">{scopeBookText}</SelectItem>\n            <SelectItem value=\"chapter\">{scopeChapterText}</SelectItem>\n            <SelectItem value=\"verse\">{scopeVerseText}</SelectItem>\n          </SelectContent>\n        </Select>\n        <Input\n          className=\"tw-m-1 tw-rounded-md tw-border\"\n          placeholder={filterText}\n          value={textFilter}\n          onChange={(event) => {\n            setTextFilter(event.target.value);\n          }}\n        />\n        {additionalItemsLabels && (\n          <div className=\"tw-m-1 tw-flex tw-items-center tw-rounded-md tw-border\">\n            <Checkbox\n              className=\"tw-m-1\"\n              checked={showAdditionalItems}\n              onCheckedChange={(checked: boolean) => {\n                setShowAdditionalItems(checked);\n              }}\n            />\n            <Label className=\"tw-m-1 tw-flex-shrink-0 tw-whitespace-nowrap\">\n              {additionalItemsLabels?.checkboxText ?? showAdditionalItemsText}\n            </Label>\n          </div>\n        )}\n      </div>\n      <div className=\"tw-m-1 tw-flex-1 tw-overflow-auto tw-rounded-md tw-border\">\n        <DataTable\n          columns={allColumns}\n          data={filteredTableData}\n          onRowClickHandler={rowClickHandler}\n          stickyHeader\n        />\n      </div>\n      {occurrenceData.length > 0 && (\n        <div className=\"tw-m-1 tw-flex-1 tw-overflow-auto tw-rounded-md tw-border\">\n          <OccurrencesTable\n            occurrenceData={occurrenceData}\n            setScriptureReference={setVerseRef}\n            localizedStrings={localizedStrings}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Inventory;\n","import React from 'react';\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * The Separator component visually or semantically separates content. This component is built on\n * Radix UI primitives and styled with Shadcn UI.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/separator}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/separator}\n */\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => (\n  <SeparatorPrimitive.Root\n    ref={ref}\n    decorative={decorative}\n    orientation={orientation}\n    className={cn(\n      'pr-twp tw-shrink-0 tw-bg-border',\n      orientation === 'horizontal' ? 'tw-h-[1px] tw-w-full' : 'tw-h-full tw-w-[1px]',\n      className,\n    )}\n    {...props}\n  />\n));\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\n\nexport { Separator };\n","import React from 'react';\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Use to show a placeholder while content is loading. This component is from Shadcn UI. See Shadcn\n * UI documentation: https://ui.shadcn.com/docs/components/skeleton\n */\nfunction Skeleton({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn('pr-twp tw-animate-pulse tw-rounded-md tw-bg-muted', className)}\n      {...props}\n    />\n  );\n}\n\nexport { Skeleton };\n","import React from 'react';\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/** @inheritdoc Tooltip */\nconst TooltipProvider = TooltipPrimitive.Provider;\n\n/**\n * Tooltip components provide a popover that displays information related to an element when hovered\n * or focused. These components are built on Radix UI primitives and styled with Shadcn UI. See\n * Shadcn UI Documentation: https://ui.shadcn.com/docs/components/tooltip See Radix UI\n * Documentation: https://www.radix-ui.com/primitives/docs/components/tooltip\n */\nconst Tooltip = TooltipPrimitive.Root;\n\n/** @inheritdoc Tooltip */\nconst TooltipTrigger = TooltipPrimitive.Trigger;\n\n/** @inheritdoc Tooltip */\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      'pr-twp tw-z-50 tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-px-3 tw-py-1.5 tw-text-sm tw-text-popover-foreground tw-shadow-md tw-animate-in tw-fade-in-0 tw-zoom-in-95 data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=closed]:tw-zoom-out-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n      className,\n    )}\n    {...props}\n  />\n));\nTooltipContent.displayName = TooltipPrimitive.Content.displayName;\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };\n","import React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { VariantProps, cva } from 'class-variance-authority';\nimport { PanelLeft, PanelRight } from 'lucide-react';\n\nimport { Button } from '@/components/shadcn-ui/button';\nimport { Input } from '@/components/shadcn-ui/input';\nimport { Separator } from '@/components/shadcn-ui/separator';\nimport { Skeleton } from '@/components/shadcn-ui/skeleton';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/shadcn-ui/tooltip';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * CUSTOM: Changes from the original code from Shadcn- Removed uses of useIsMobile, Sheet, and\n * SheetContent. Also removed the parts setting COOKIES.\n */\n\nconst SIDEBAR_WIDTH = '16rem';\nconst SIDEBAR_WIDTH_ICON = '3rem';\n// CUSTOM: Commented this out pending a discussion with UX about keyboard shortcuts\n// const SIDEBAR_KEYBOARD_SHORTCUT = 'b';\n\ntype Side = 'primary' | 'secondary';\n\ntype SidebarContextProps = {\n  state: 'expanded' | 'collapsed';\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  toggleSidebar: () => void;\n  // CUSTOM: this was moved from Sidebar to SidebarProvider to also be able to flip the icon based on the side\n  side: Side;\n};\n\nconst SidebarContext = React.createContext<SidebarContextProps | undefined>(undefined);\n\n/** @inheritdoc SidebarProvider */\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext);\n  if (!context) {\n    throw new Error('useSidebar must be used within a SidebarProvider.');\n  }\n\n  return context;\n}\n\n/**\n * Sidebar components providing an accessible sidebar along with all the sub components that can be\n * used to populate and style it. These components are adapted from Shadcn UI. See Shadcn UI\n * Documentation: https://ui.shadcn.com/docs/components/sidebar\n */\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & {\n    defaultOpen?: boolean;\n    open?: boolean;\n    onOpenChange?: (open: boolean) => void;\n    side?: Side;\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      side = 'primary',\n      ...props\n    },\n    ref,\n  ) => {\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const [_open, _setOpen] = React.useState(defaultOpen);\n    const isOpen = openProp ?? _open;\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === 'function' ? value(isOpen) : value;\n        if (setOpenProp) {\n          setOpenProp(openState);\n        } else {\n          _setOpen(openState);\n        }\n      },\n      [setOpenProp, isOpen],\n    );\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return setOpen((open) => !open);\n    }, [setOpen]);\n\n    // CUSTOM: Commented this out pending a discussion with UX about keyboard shortcuts\n    // Adds a keyboard shortcut to toggle the sidebar.\n    // React.useEffect(() => {\n    //   const handleKeyDown = (event: KeyboardEvent) => {\n    //     if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {\n    //       event.preventDefault();\n    //       toggleSidebar();\n    //     }\n    //   };\n\n    //   window.addEventListener('keydown', handleKeyDown);\n    //   return () => window.removeEventListener('keydown', handleKeyDown);\n    // }, [toggleSidebar]);\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = isOpen ? 'expanded' : 'collapsed';\n\n    const dir: Direction = readDirection();\n    const oppositeSide: Side = side === 'primary' ? 'secondary' : 'primary';\n    const directionAwareSide = dir === 'ltr' ? side : oppositeSide;\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open: isOpen,\n        setOpen,\n        toggleSidebar,\n        side: directionAwareSide,\n      }),\n      [state, isOpen, setOpen, toggleSidebar, directionAwareSide],\n    );\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              // eslint-disable-next-line no-type-assertion/no-type-assertion\n              {\n                '--sidebar-width': SIDEBAR_WIDTH,\n                '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              // Removed tw-min-h-svh\n              'tw-group/sidebar-wrapper pr-twp tw-flex tw-w-full has-[[data-variant=inset]]:tw-bg-sidebar',\n              className,\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    );\n  },\n);\nSidebarProvider.displayName = 'SidebarProvider';\n\n/** @inheritdoc SidebarProvider */\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & {\n    variant?: 'sidebar' | 'floating' | 'inset';\n    collapsible?: 'offcanvas' | 'icon' | 'none';\n  }\n>(({ variant = 'sidebar', collapsible = 'offcanvas', className, children, ...props }, ref) => {\n  const context = useSidebar();\n\n  if (collapsible === 'none') {\n    return (\n      <div\n        className={cn(\n          'tw-flex tw-h-full tw-w-[--sidebar-width] tw-flex-col tw-bg-sidebar tw-text-sidebar-foreground',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"tw-group tw-peer tw-hidden tw-text-sidebar-foreground md:tw-block\"\n      data-state={context.state}\n      data-collapsible={context.state === 'collapsed' ? collapsible : ''}\n      data-variant={variant}\n      data-side={context.side}\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        className={cn(\n          'tw-relative tw-h-svh tw-w-[--sidebar-width] tw-bg-transparent tw-transition-[width] tw-duration-200 tw-ease-linear',\n          'group-data-[collapsible=offcanvas]:tw-w-0',\n          'group-data-[side=secondary]:tw-rotate-180',\n          variant === 'floating' || variant === 'inset'\n            ? 'group-data-[collapsible=icon]:tw-w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]'\n            : 'group-data-[collapsible=icon]:tw-w-[--sidebar-width-icon]',\n        )}\n      />\n      <div\n        className={cn(\n          // CUSTOM: Switched tw-fixed to tw-absolute here to scope the sidebar inside of it's container\n          'tw-absolute tw-inset-y-0 tw-z-10 tw-hidden tw-h-svh tw-w-[--sidebar-width] tw-transition-[left,right,width] tw-duration-200 tw-ease-linear md:tw-flex',\n          context.side === 'primary'\n            ? 'tw-left-0 group-data-[collapsible=offcanvas]:tw-left-[calc(var(--sidebar-width)*-1)]'\n            : 'tw-right-0 group-data-[collapsible=offcanvas]:tw-right-[calc(var(--sidebar-width)*-1)]',\n          // Adjust the padding for floating and inset variants.\n          variant === 'floating' || variant === 'inset'\n            ? 'tw-p-2 group-data-[collapsible=icon]:tw-w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]'\n            : 'group-data-[collapsible=icon]:tw-w-[--sidebar-width-icon] group-data-[side=primary]:tw-border-r group-data-[side=secondary]:tw-border-l',\n          className,\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          className=\"tw-flex tw-h-full tw-w-full tw-flex-col tw-bg-sidebar group-data-[variant=floating]:tw-rounded-lg group-data-[variant=floating]:tw-border group-data-[variant=floating]:tw-border-sidebar-border group-data-[variant=floating]:tw-shadow\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n});\nSidebar.displayName = 'Sidebar';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const context = useSidebar();\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn('tw-h-7 tw-w-7', className)}\n      onClick={(event) => {\n        onClick?.(event);\n        context.toggleSidebar();\n      }}\n      {...props}\n    >\n      {context.side === 'primary' ? <PanelLeft /> : <PanelRight />}\n      <span className=\"tw-sr-only\">Toggle Sidebar</span>\n    </Button>\n  );\n});\nSidebarTrigger.displayName = 'SidebarTrigger';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarRail = React.forwardRef<HTMLButtonElement, React.ComponentProps<'button'>>(\n  ({ className, ...props }, ref) => {\n    const { toggleSidebar } = useSidebar();\n\n    return (\n      <button\n        type=\"button\"\n        ref={ref}\n        data-sidebar=\"rail\"\n        aria-label=\"Toggle Sidebar\"\n        tabIndex={-1}\n        onClick={toggleSidebar}\n        title=\"Toggle Sidebar\"\n        className={cn(\n          'tw-absolute tw-inset-y-0 tw-z-20 tw-hidden tw-w-4 tw--translate-x-1/2 tw-transition-all tw-ease-linear after:tw-absolute after:tw-inset-y-0 after:tw-left-1/2 after:tw-w-[2px] hover:after:tw-bg-sidebar-border group-data-[side=primary]:tw--right-4 group-data-[side=secondary]:tw-left-0 sm:tw-flex',\n          '[[data-side=secondary]_&]:tw-cursor-e-resize [[data-side=secondary]_&]:tw-cursor-w-resize',\n          '[[data-side=primary][data-state=collapsed]_&]:tw-cursor-e-resize [[data-side=secondary][data-state=collapsed]_&]:tw-cursor-w-resize',\n          'group-data-[collapsible=offcanvas]:tw-translate-x-0 group-data-[collapsible=offcanvas]:after:tw-left-full group-data-[collapsible=offcanvas]:hover:tw-bg-sidebar',\n          '[[data-side=primary][data-collapsible=offcanvas]_&]:tw--right-2',\n          '[[data-side=secondary][data-collapsible=offcanvas]_&]:tw--left-2',\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarRail.displayName = 'SidebarRail';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarInset = React.forwardRef<HTMLDivElement, React.ComponentProps<'main'>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <main\n        ref={ref}\n        className={cn(\n          // CUSTOM: Removed tw-min-h-svh\n          'tw-relative tw-flex tw-flex-1 tw-flex-col tw-bg-background',\n          'peer-data-[variant=inset]:tw-min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:tw-m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:tw-ml-2 md:peer-data-[variant=inset]:tw-ml-0 md:peer-data-[variant=inset]:tw-rounded-xl md:peer-data-[variant=inset]:tw-shadow',\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarInset.displayName = 'SidebarInset';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        'tw-h-8 tw-w-full tw-bg-background tw-shadow-none focus-visible:tw-ring-2 focus-visible:tw-ring-sidebar-ring',\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarInput.displayName = 'SidebarInput';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarHeader = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        data-sidebar=\"header\"\n        className={cn('tw-flex tw-flex-col tw-gap-2 tw-p-2', className)}\n        {...props}\n      />\n    );\n  },\n);\nSidebarHeader.displayName = 'SidebarHeader';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarFooter = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        data-sidebar=\"footer\"\n        className={cn('tw-flex tw-flex-col tw-gap-2 tw-p-2', className)}\n        {...props}\n      />\n    );\n  },\n);\nSidebarFooter.displayName = 'SidebarFooter';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn('tw-mx-2 tw-w-auto tw-bg-sidebar-border', className)}\n      {...props}\n    />\n  );\n});\nSidebarSeparator.displayName = 'SidebarSeparator';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarContent = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        data-sidebar=\"content\"\n        className={cn(\n          'tw-flex tw-min-h-0 tw-flex-1 tw-flex-col tw-gap-2 tw-overflow-auto group-data-[collapsible=icon]:tw-overflow-hidden',\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarContent.displayName = 'SidebarContent';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarGroup = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        data-sidebar=\"group\"\n        className={cn('tw-relative tw-flex tw-w-full tw-min-w-0 tw-flex-col tw-p-2', className)}\n        {...props}\n      />\n    );\n  },\n);\nSidebarGroup.displayName = 'SidebarGroup';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'div';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        'tw-flex tw-h-8 tw-shrink-0 tw-items-center tw-rounded-md tw-px-2 tw-text-xs tw-font-medium tw-text-sidebar-foreground/70 tw-outline-none tw-ring-sidebar-ring tw-transition-[margin,opa] tw-duration-200 tw-ease-linear focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0',\n        'group-data-[collapsible=icon]:tw--mt-8 group-data-[collapsible=icon]:tw-opacity-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarGroupLabel.displayName = 'SidebarGroupLabel';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        'tw-absolute tw-right-3 tw-top-3.5 tw-flex tw-aspect-square tw-w-5 tw-items-center tw-justify-center tw-rounded-md tw-p-0 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring tw-transition-transform hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0',\n        // Increases the hit area of the button on mobile.\n        'after:tw-absolute after:tw--inset-2 after:md:tw-hidden',\n        'group-data-[collapsible=icon]:tw-hidden',\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarGroupAction.displayName = 'SidebarGroupAction';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarGroupContent = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-sidebar=\"group-content\"\n      className={cn('tw-w-full tw-text-sm', className)}\n      {...props}\n    />\n  ),\n);\nSidebarGroupContent.displayName = 'SidebarGroupContent';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenu = React.forwardRef<HTMLUListElement, React.ComponentProps<'ul'>>(\n  ({ className, ...props }, ref) => (\n    <ul\n      ref={ref}\n      data-sidebar=\"menu\"\n      className={cn('tw-flex tw-w-full tw-min-w-0 tw-flex-col tw-gap-1', className)}\n      {...props}\n    />\n  ),\n);\nSidebarMenu.displayName = 'SidebarMenu';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuItem = React.forwardRef<HTMLLIElement, React.ComponentProps<'li'>>(\n  ({ className, ...props }, ref) => (\n    <li\n      ref={ref}\n      data-sidebar=\"menu-item\"\n      className={cn('tw-group/menu-item tw-relative', className)}\n      {...props}\n    />\n  ),\n);\nSidebarMenuItem.displayName = 'SidebarMenuItem';\n\nconst sidebarMenuButtonVariants = cva(\n  'tw-peer/menu-button tw-flex tw-w-full tw-items-center tw-gap-2 tw-overflow-hidden tw-rounded-md tw-p-2 tw-text-left tw-text-sm tw-outline-none tw-ring-sidebar-ring tw-transition-[width,height,padding] hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 active:tw-bg-sidebar-accent active:tw-text-sidebar-accent-foreground disabled:tw-pointer-events-none disabled:tw-opacity-50 tw-group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:tw-pointer-events-none aria-disabled:tw-opacity-50 data-[active=true]:tw-font-medium data-[active=true]:tw-text-sidebar-accent-foreground data-[active=true]:tw-bg-sidebar-accent data-[state=open]:hover:tw-bg-sidebar-accent data-[state=open]:hover:tw-text-sidebar-accent-foreground group-data-[collapsible=icon]:tw-!size-8 group-data-[collapsible=icon]:tw-!p-2 [&>span:last-child]:tw-truncate [&>svg]:tw-size-4 [&>svg]:tw-shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground',\n        outline:\n          'tw-bg-background tw-shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground hover:tw-shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]',\n      },\n      size: {\n        default: 'tw-h-8 tw-text-sm',\n        sm: 'tw-h-7 tw-text-xs',\n        lg: 'tw-h-12 tw-text-sm group-data-[collapsible=icon]:tw-!p-0',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'> & {\n    asChild?: boolean;\n    isActive?: boolean;\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>;\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = 'default',\n      size = 'default',\n      tooltip,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    const { state } = useSidebar();\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    );\n\n    if (!tooltip) {\n      return button;\n    }\n\n    if (typeof tooltip === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      tooltip = {\n        children: tooltip,\n      };\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent side=\"right\" align=\"center\" hidden={state !== 'collapsed'} {...tooltip} />\n      </Tooltip>\n    );\n  },\n);\nSidebarMenuButton.displayName = 'SidebarMenuButton';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<'button'> & {\n    asChild?: boolean;\n    showOnHover?: boolean;\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        'tw-peer-hover/menu-button:text-sidebar-accent-foreground tw-absolute tw-right-1 tw-top-1.5 tw-flex tw-aspect-square tw-w-5 tw-items-center tw-justify-center tw-rounded-md tw-p-0 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring tw-transition-transform hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 [&>svg]:tw-size-4 [&>svg]:tw-shrink-0',\n        // Increases the hit area of the button on mobile.\n        'after:tw-absolute after:tw--inset-2 after:md:tw-hidden',\n        'tw-peer-data-[size=sm]/menu-button:top-1',\n        'tw-peer-data-[size=default]/menu-button:top-1.5',\n        'tw-peer-data-[size=lg]/menu-button:top-2.5',\n        'group-data-[collapsible=icon]:tw-hidden',\n        showOnHover &&\n          'tw-group-focus-within/menu-item:opacity-100 tw-group-hover/menu-item:opacity-100 tw-peer-data-[active=true]/menu-button:text-sidebar-accent-foreground data-[state=open]:tw-opacity-100 md:tw-opacity-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuAction.displayName = 'SidebarMenuAction';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuBadge = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        'tw-pointer-events-none tw-absolute tw-right-1 tw-flex tw-h-5 tw-min-w-5 tw-select-none tw-items-center tw-justify-center tw-rounded-md tw-px-1 tw-text-xs tw-font-medium tw-tabular-nums tw-text-sidebar-foreground',\n        'tw-peer-hover/menu-button:text-sidebar-accent-foreground tw-peer-data-[active=true]/menu-button:text-sidebar-accent-foreground',\n        'tw-peer-data-[size=sm]/menu-button:top-1',\n        'tw-peer-data-[size=default]/menu-button:top-1.5',\n        'tw-peer-data-[size=lg]/menu-button:top-2.5',\n        'group-data-[collapsible=icon]:tw-hidden',\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nSidebarMenuBadge.displayName = 'SidebarMenuBadge';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & {\n    showIcon?: boolean;\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`;\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn('tw-flex tw-h-8 tw-items-center tw-gap-2 tw-rounded-md tw-px-2', className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton className=\"tw-size-4 tw-rounded-md\" data-sidebar=\"menu-skeleton-icon\" />\n      )}\n      <Skeleton\n        className=\"tw-h-4 tw-max-w-[--skeleton-width] tw-flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          // eslint-disable-next-line no-type-assertion/no-type-assertion\n          {\n            '--skeleton-width': width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  );\n});\nSidebarMenuSkeleton.displayName = 'SidebarMenuSkeleton';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuSub = React.forwardRef<HTMLUListElement, React.ComponentProps<'ul'>>(\n  ({ className, ...props }, ref) => (\n    <ul\n      ref={ref}\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        'tw-mx-3.5 tw-flex tw-min-w-0 tw-translate-x-px tw-flex-col tw-gap-1 tw-border-l tw-border-sidebar-border tw-px-2.5 tw-py-0.5',\n        'group-data-[collapsible=icon]:tw-hidden',\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nSidebarMenuSub.displayName = 'SidebarMenuSub';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuSubItem = React.forwardRef<HTMLLIElement, React.ComponentProps<'li'>>(\n  ({ ...props }, ref) => <li ref={ref} {...props} />,\n);\nSidebarMenuSubItem.displayName = 'SidebarMenuSubItem';\n\n/** @inheritdoc SidebarProvider */\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<'a'> & {\n    asChild?: boolean;\n    size?: 'sm' | 'md';\n    isActive?: boolean;\n  }\n>(({ asChild = false, size = 'md', isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'a';\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        'tw-flex tw-h-7 tw-min-w-0 tw--translate-x-px tw-items-center tw-gap-2 tw-overflow-hidden tw-rounded-md tw-px-2 tw-text-sidebar-foreground tw-outline-none tw-ring-sidebar-ring hover:tw-bg-sidebar-accent hover:tw-text-sidebar-accent-foreground focus-visible:tw-ring-2 active:tw-bg-sidebar-accent active:tw-text-sidebar-accent-foreground disabled:tw-pointer-events-none disabled:tw-opacity-50 aria-disabled:tw-pointer-events-none aria-disabled:tw-opacity-50 [&>span:last-child]:tw-truncate [&>svg]:tw-size-4 [&>svg]:tw-shrink-0 [&>svg]:tw-text-sidebar-accent-foreground',\n        'data-[active=true]:tw-bg-sidebar-accent data-[active=true]:tw-text-sidebar-accent-foreground',\n        size === 'sm' && 'tw-text-xs',\n        size === 'md' && 'tw-text-sm',\n        'group-data-[collapsible=icon]:tw-hidden',\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuSubButton.displayName = 'SidebarMenuSubButton';\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n};\n","import { ComboBox } from '@/components/basics/combo-box.component';\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuItem,\n  SidebarMenuButton,\n} from '@/components/shadcn-ui/sidebar';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { ScrollText } from 'lucide-react';\nimport { useCallback } from 'react';\n\nexport type SelectedSettingsSidebarItem = {\n  label: string;\n  projectId?: string;\n};\n\nexport type ProjectInfo = { projectId: string; projectName: string };\n\nexport type SettingsSidebarProps = {\n  /** Optional id for testing */\n  id?: string;\n\n  /** Extension labels from contribution */\n  extensionLabels: Record<string, string>;\n\n  /** Project names and ids */\n  projectInfo: ProjectInfo[];\n\n  /** Handler for selecting a sidebar item */\n  handleSelectSidebarItem: (key: string, projectId?: string) => void;\n\n  /** The current selected value in the sidebar */\n  selectedSidebarItem: SelectedSettingsSidebarItem;\n\n  /** Label for the group of extensions setting groups */\n  extensionsSidebarGroupLabel: string;\n\n  /** Label for the group of projects settings */\n  projectsSidebarGroupLabel: string;\n\n  /** Placeholder text for the button */\n  buttonPlaceholderText: string;\n\n  /** Additional css classes to help with unique styling of the sidebar */\n  className?: string;\n};\n\n/**\n * The SettingsSidebar component is a sidebar that displays a list of extension settings and project\n * settings. It can be used to navigate to different settings pages. Must be wrapped in a\n * SidebarProvider component otherwise produces errors.\n *\n * @param props - {@link SettingsSidebarProps} The props for the component.\n */\nexport function SettingsSidebar({\n  id,\n  extensionLabels,\n  projectInfo,\n  handleSelectSidebarItem,\n  selectedSidebarItem,\n  extensionsSidebarGroupLabel,\n  projectsSidebarGroupLabel,\n  buttonPlaceholderText,\n  className,\n}: SettingsSidebarProps) {\n  const handleSelectItem = useCallback(\n    (item: string, projectId?: string) => {\n      handleSelectSidebarItem(item, projectId);\n    },\n    [handleSelectSidebarItem],\n  );\n\n  const getProjectNameFromProjectId = useCallback(\n    (projectId: string) => {\n      const project = projectInfo.find((info) => info.projectId === projectId);\n      return project ? project.projectName : projectId;\n    },\n    [projectInfo],\n  );\n\n  const getIsActive: (label: string) => boolean = useCallback(\n    (label: string) => !selectedSidebarItem.projectId && label === selectedSidebarItem.label,\n    [selectedSidebarItem],\n  );\n\n  return (\n    <Sidebar\n      id={id}\n      collapsible=\"none\"\n      variant=\"inset\"\n      className={cn('tw-w-96 tw-gap-2 tw-overflow-y-auto', className)}\n    >\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel className=\"tw-text-sm\">\n            {extensionsSidebarGroupLabel}\n          </SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {Object.entries(extensionLabels).map(([key, label]) => (\n                <SidebarMenuItem key={key}>\n                  <SidebarMenuButton\n                    onClick={() => handleSelectItem(key)}\n                    isActive={getIsActive(key)}\n                  >\n                    <span className=\"tw-pl-3\">{label}</span>\n                  </SidebarMenuButton>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n        <SidebarGroup>\n          <SidebarGroupLabel className=\"tw-text-sm\">{projectsSidebarGroupLabel}</SidebarGroupLabel>\n          <SidebarGroupContent className=\"tw-pl-3\">\n            <ComboBox\n              buttonVariant=\"ghost\"\n              buttonClassName={cn('tw-w-full', {\n                'tw-bg-sidebar-accent tw-text-sidebar-accent-foreground':\n                  selectedSidebarItem?.projectId,\n              })}\n              popoverContentClassName=\"tw-z-[1000]\"\n              options={projectInfo.flatMap((info) => info.projectId)}\n              getOptionLabel={getProjectNameFromProjectId}\n              buttonPlaceholder={buttonPlaceholderText}\n              onChange={(projectId: string) => {\n                const selectedProjectName = getProjectNameFromProjectId(projectId);\n                handleSelectItem(selectedProjectName, projectId);\n              }}\n              value={selectedSidebarItem?.projectId ?? undefined}\n              icon={<ScrollText />}\n            />\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n\nexport default SettingsSidebar;\n","import { Button } from '@/components/shadcn-ui/button';\nimport { Input } from '@/components/shadcn-ui/input';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Search, X } from 'lucide-react';\nimport { forwardRef } from 'react';\n\n/** Props for the SearchBar component. */\nexport type SearchBarProps = {\n  /** Search query for the search bar */\n  value: string;\n  /**\n   * Callback fired to handle the search query is updated\n   *\n   * @param searchQuery\n   */\n  onSearch: (searchQuery: string) => void;\n\n  /** Optional string that appears in the search bar without a search string */\n  placeholder?: string;\n\n  /** Optional boolean to set the input base to full width */\n  isFullWidth?: boolean;\n\n  /** Additional css classes to help with unique styling of the search bar */\n  className?: string;\n\n  /** Optional boolean to disable the search bar */\n  isDisabled?: boolean;\n};\n\n/**\n * A search bar component with a search icon and a clear button when the search query is not empty.\n *\n * @param {SearchBarProps} props - The props for the component.\n * @param {string} props.value - The search query for the search bar\n * @param {(searchQuery: string) => void} props.onSearch - Callback fired to handle the search query\n *   is updated\n * @param {string} [props.placeholder] - Optional string that appears in the search bar without a\n *   search string\n * @param {boolean} [props.isFullWidth] - Optional boolean to set the input base to full width\n * @param {string} [props.className] - Additional css classes to help with unique styling of the\n *   search bar\n * @param {boolean} [props.isDisabled] - Optional boolean to disable the search bar\n */\nexport const SearchBar = forwardRef<HTMLInputElement, SearchBarProps>(\n  ({ value, onSearch, placeholder, isFullWidth, className, isDisabled = false }, inputRef) => {\n    const dir: Direction = readDirection();\n\n    return (\n      <div className={cn('tw-relative', { 'tw-w-full': isFullWidth }, className)}>\n        <Search\n          className={cn(\n            'tw-absolute tw-top-1/2 tw-h-4 tw-w-4 tw--translate-y-1/2 tw-transform tw-opacity-50',\n            { 'tw-right-3': dir === 'rtl' },\n            { 'tw-left-3': dir === 'ltr' },\n          )}\n        />\n        <Input\n          ref={inputRef}\n          className=\"tw-w-full tw-text-ellipsis tw-pe-9 tw-ps-9\"\n          placeholder={placeholder}\n          value={value}\n          onChange={(e) => onSearch(e.target.value)}\n          disabled={isDisabled}\n        />\n        {value && (\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className={cn(\n              'tw-absolute tw-top-1/2 tw-h-7 tw--translate-y-1/2 tw-transform hover:tw-bg-transparent',\n              { 'tw-left-0': dir === 'rtl' },\n              { 'tw-right-0': dir === 'ltr' },\n            )}\n            onClick={() => {\n              onSearch('');\n            }}\n          >\n            <X className=\"tw-h-4 tw-w-4\" />\n            <span className=\"tw-sr-only\">Clear</span>\n          </Button>\n        )}\n      </div>\n    );\n  },\n);\n\nSearchBar.displayName = 'SearchBar';\n\nexport default SearchBar;\n","import { SidebarInset, SidebarProvider } from '@/components/shadcn-ui/sidebar';\nimport { PropsWithChildren } from 'react';\nimport { SearchBar } from '@/components/basics/search-bar.component';\nimport { SettingsSidebar, SettingsSidebarProps } from './settings-sidebar.component';\n\nexport type SettingsSidebarContentSearchProps = SettingsSidebarProps &\n  PropsWithChildren & {\n    /** The search query in the search bar */\n    searchValue: string;\n\n    /** Handler to run when the value of the search bar changes */\n    onSearch: (searchQuery: string) => void;\n  };\n\n/**\n * A component that wraps a search bar and a settings sidebar, providing a way to search and\n * navigate to different settings pages.\n *\n * @param {SettingsSidebarContentSearchProps} props - The props for the component.\n * @param {string} props.id - The id of the sidebar.\n */\nexport function SettingsSidebarContentSearch({\n  id,\n  extensionLabels,\n  projectInfo,\n  children,\n  handleSelectSidebarItem,\n  selectedSidebarItem,\n  searchValue,\n  onSearch,\n  extensionsSidebarGroupLabel,\n  projectsSidebarGroupLabel,\n  buttonPlaceholderText,\n}: SettingsSidebarContentSearchProps) {\n  return (\n    <div className=\"tw-box-border tw-flex tw-h-full tw-flex-col\">\n      <div className=\"tw-box-border tw-flex tw-items-center tw-justify-center tw-py-4\">\n        <SearchBar\n          className=\"tw-w-9/12\"\n          value={searchValue}\n          onSearch={onSearch}\n          placeholder=\"Search app settings, extension settings, and project settings\"\n        />\n      </div>\n      <SidebarProvider\n        id={id}\n        className=\"tw-h-full tw-flex-1 tw-gap-4 tw-overflow-auto tw-border-t\"\n      >\n        <SettingsSidebar\n          className=\"tw-w-1/2 tw-min-w-[140px] tw-max-w-[220px] tw-border-e\"\n          extensionLabels={extensionLabels}\n          projectInfo={projectInfo}\n          handleSelectSidebarItem={handleSelectSidebarItem}\n          selectedSidebarItem={selectedSidebarItem}\n          extensionsSidebarGroupLabel={extensionsSidebarGroupLabel}\n          projectsSidebarGroupLabel={projectsSidebarGroupLabel}\n          buttonPlaceholderText={buttonPlaceholderText}\n        />\n        <SidebarInset className=\"tw-min-w-[215px]\">{children}</SidebarInset>\n      </SidebarProvider>\n    </div>\n  );\n}\n\nexport default SettingsSidebarContentSearch;\n","import { Button } from '@/components/shadcn-ui/button';\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/shadcn-ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/shadcn-ui/table';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Canon } from '@sillsdev/scripture';\nimport {\n  Cell,\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  getExpandedRowModel,\n  getGroupedRowModel,\n  getSortedRowModel,\n  GroupingState,\n  Row,\n  RowSelectionState,\n  SortingState,\n  useReactTable,\n} from '@tanstack/react-table';\nimport '@/components/advanced/scripture-results-viewer/scripture-results-viewer.component.css';\nimport {\n  compareScrRefs,\n  formatScrRef,\n  ScriptureSelection,\n  scrRefToBBBCCCVVV,\n} from 'platform-bible-utils';\nimport { MouseEvent, useEffect, useMemo, useState } from 'react';\nimport { ChevronDown, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * Information (e.g., a checking error or some other type of \"transient\" annotation) about something\n * noteworthy at a specific place in an instance of the Scriptures.\n */\nexport type ScriptureItemDetail = ScriptureSelection & {\n  /**\n   * Text of the error, note, etc. In the future, we might want to support something more than just\n   * text so that a JSX element could be provided with a link or some other controls related to the\n   * issue being reported.\n   */\n  detail: string;\n};\n\n/**\n * A uniquely identifiable source of results that can be displayed in the ScriptureResultsViewer.\n * Generally, the source will be a particular Scripture check, but there may be other types of\n * sources.\n */\nexport type ResultsSource = {\n  /**\n   * Uniquely identifies the source.\n   *\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Name (potentially localized) of the source, suitable for display in the UI.\n   *\n   * @type {string}\n   */\n  displayName: string;\n};\n\nexport type ScriptureSrcItemDetail = ScriptureItemDetail & {\n  /** Source/type of detail. Can be used for grouping. */\n  source: ResultsSource;\n};\n\n/**\n * Represents a set of results keyed by Scripture reference. Generally, the source will be a\n * particular Scripture check, but this type also allows for other types of uniquely identifiable\n * sources.\n */\nexport type ResultsSet = {\n  /**\n   * The backing source associated with this set of results.\n   *\n   * @type {ResultsSource}\n   */\n  source: ResultsSource;\n\n  /**\n   * Array of Scripture item details (messages keyed by Scripture reference).\n   *\n   * @type {ScriptureItemDetail[]}\n   */\n  data: ScriptureItemDetail[];\n};\n\nconst scrBookColId = 'scrBook';\nconst scrRefColId = 'scrRef';\nconst typeColId = 'source';\nconst detailsColId = 'details';\n\nconst defaultScrRefColumnName = 'Scripture Reference';\nconst defaultScrBookGroupName = 'Scripture Book';\nconst defaultTypeColumnName = 'Type';\nconst defaultDetailsColumnName = 'Details';\n\nexport type ScriptureResultsViewerColumnInfo = {\n  /** Optional header to display for the Reference column. Default value: 'Scripture Reference'. */\n  scriptureReferenceColumnName?: string;\n\n  /** Optional text to display to refer to the Scripture book group. Default value: 'Scripture Book'. */\n  scriptureBookGroupName?: string;\n\n  /** Optional header to display for the Type column. Default value: 'Type'. */\n  typeColumnName?: string;\n\n  /** Optional header to display for the Details column. Default value: 'Details' */\n  detailsColumnName?: string;\n};\n\nexport type ScriptureResultsViewerProps = ScriptureResultsViewerColumnInfo & {\n  /** Groups of ScriptureItemDetail objects from particular sources (e.g., Scripture checks) */\n  sources: ResultsSet[];\n\n  /** Flag indicating whether to display column headers. Default is false. */\n  showColumnHeaders?: boolean;\n\n  /** Flag indicating whether to display source column. Default is false. */\n  showSourceColumn?: boolean;\n\n  /** Callback function to notify when a row is selected */\n  onRowSelected?: (selectedRow: ScriptureSrcItemDetail | undefined) => void;\n};\n\nfunction getColumns(\n  colInfo?: ScriptureResultsViewerColumnInfo,\n  showSourceColumn?: boolean,\n): ColumnDef<ScriptureSrcItemDetail>[] {\n  const showSrcCol = showSourceColumn ?? false;\n  return [\n    {\n      accessorFn: (row) => `${row.start.book} ${row.start.chapterNum}:${row.start.verseNum}`,\n      id: scrBookColId,\n      header: colInfo?.scriptureReferenceColumnName ?? defaultScrRefColumnName,\n      cell: (info) => {\n        const row = info.row.original;\n        if (info.row.getIsGrouped()) {\n          return Canon.bookIdToEnglishName(row.start.book);\n        }\n        return info.row.groupingColumnId === scrBookColId ? formatScrRef(row.start) : undefined;\n      },\n      getGroupingValue: (row) => Canon.bookIdToNumber(row.start.book),\n      sortingFn: (a, b) => {\n        return compareScrRefs(a.original.start, b.original.start);\n      },\n      enableGrouping: true,\n    },\n    {\n      accessorFn: (row) => formatScrRef(row.start),\n      id: scrRefColId,\n      header: undefined,\n      cell: (info) => {\n        const row = info.row.original;\n        return info.row.getIsGrouped() ? undefined : formatScrRef(row.start);\n      },\n      sortingFn: (a, b) => {\n        return compareScrRefs(a.original.start, b.original.start);\n      },\n      enableGrouping: false,\n    },\n    {\n      accessorFn: (row) => row.source.displayName,\n      id: typeColId,\n      header: showSrcCol ? (colInfo?.typeColumnName ?? defaultTypeColumnName) : undefined,\n      cell: (info) => (showSrcCol || info.row.getIsGrouped() ? info.getValue() : undefined),\n      getGroupingValue: (row) => row.source.id,\n      sortingFn: (a, b) =>\n        a.original.source.displayName.localeCompare(b.original.source.displayName),\n      enableGrouping: true,\n    },\n    {\n      accessorFn: (row) => row.detail,\n      id: detailsColId,\n      header: colInfo?.detailsColumnName ?? defaultDetailsColumnName,\n      cell: (info) => info.getValue(),\n      enableGrouping: false,\n    },\n  ];\n}\n\nconst toRefOrRange = (scriptureSelection: ScriptureSelection) => {\n  if (!('offset' in scriptureSelection.start))\n    throw new Error('No offset available in range start');\n  if (scriptureSelection.end && !('offset' in scriptureSelection.end))\n    throw new Error('No offset available in range end');\n  const { offset: offsetStart } = scriptureSelection.start;\n  let offsetEnd: number = 0;\n  if (scriptureSelection.end) ({ offset: offsetEnd } = scriptureSelection.end);\n  if (\n    !scriptureSelection.end ||\n    compareScrRefs(scriptureSelection.start, scriptureSelection.end) === 0\n  )\n    return `${scrRefToBBBCCCVVV(scriptureSelection.start)}+${offsetStart}`;\n  return `${scrRefToBBBCCCVVV(scriptureSelection.start)}+${offsetStart}-${scrRefToBBBCCCVVV(scriptureSelection.end)}+${offsetEnd}`;\n};\n\nconst getRowKey = (row: ScriptureSrcItemDetail) =>\n  `${toRefOrRange({ start: row.start, end: row.end })} ${row.source.displayName} ${row.detail}`;\n\n/**\n * Component to display a combined list of detailed items from one or more sources, where the items\n * are keyed primarily by Scripture reference. This is particularly useful for displaying a list of\n * results from Scripture checks, but more generally could be used to display any \"results\" from any\n * source(s). The component allows for grouping by Scripture book, source, or both. By default, it\n * displays somewhat \"tree-like\" which allows it to be more horizontally compact and intuitive. But\n * it also has the option of displaying as a traditional table with column headings (with or without\n * the source column showing).\n */\nexport function ScriptureResultsViewer({\n  sources,\n  showColumnHeaders = false,\n  showSourceColumn = false,\n  scriptureReferenceColumnName,\n  scriptureBookGroupName,\n  typeColumnName,\n  detailsColumnName,\n  onRowSelected,\n}: ScriptureResultsViewerProps) {\n  const [grouping, setGrouping] = useState<GroupingState>([]);\n  const [sorting, setSorting] = useState<SortingState>([{ id: scrBookColId, desc: false }]);\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>({});\n\n  const scriptureResults = useMemo(\n    () =>\n      sources.flatMap((source) => {\n        return source.data.map((item) => ({\n          ...item,\n          source: source.source,\n        }));\n      }),\n    [sources],\n  );\n\n  const columns = useMemo(\n    () =>\n      getColumns(\n        {\n          scriptureReferenceColumnName,\n          typeColumnName,\n          detailsColumnName,\n        },\n        showSourceColumn,\n      ),\n    [scriptureReferenceColumnName, typeColumnName, detailsColumnName, showSourceColumn],\n  );\n\n  useEffect(() => {\n    // Ensure sorting is applied correctly when grouped by type\n    if (grouping.includes(typeColId)) {\n      setSorting([\n        { id: typeColId, desc: false },\n        { id: scrBookColId, desc: false },\n      ]);\n    } else {\n      setSorting([{ id: scrBookColId, desc: false }]);\n    }\n  }, [grouping]);\n\n  const table = useReactTable({\n    data: scriptureResults,\n    columns,\n    state: {\n      grouping,\n      sorting,\n      rowSelection,\n    },\n    onGroupingChange: setGrouping,\n    onSortingChange: setSorting,\n    onRowSelectionChange: setRowSelection,\n    getExpandedRowModel: getExpandedRowModel(),\n    getGroupedRowModel: getGroupedRowModel(),\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getRowId: getRowKey,\n    autoResetExpanded: false,\n    enableMultiRowSelection: false,\n    enableSubRowSelection: false,\n  });\n\n  useEffect(() => {\n    if (onRowSelected) {\n      const selectedRows = table.getSelectedRowModel().rowsById;\n      const keys = Object.keys(selectedRows);\n      if (keys.length === 1) {\n        const selectedRow = scriptureResults.find((row) => getRowKey(row) === keys[0]) || undefined;\n        if (selectedRow) onRowSelected(selectedRow);\n      }\n    }\n  }, [rowSelection, scriptureResults, onRowSelected, table]);\n\n  // Define possible grouping options\n  const scrBookGroupName = scriptureBookGroupName ?? defaultScrBookGroupName;\n  const typeGroupName = typeColumnName ?? defaultTypeColumnName;\n\n  const groupingOptions = [\n    { label: 'No Grouping', value: [] },\n    { label: `Group by ${scrBookGroupName}`, value: [scrBookColId] },\n    { label: `Group by ${typeGroupName}`, value: [typeColId] },\n    {\n      label: `Group by ${scrBookGroupName} and ${typeGroupName}`,\n      value: [scrBookColId, typeColId],\n    },\n    {\n      label: `Group by ${typeGroupName} and ${scrBookGroupName}`,\n      value: [typeColId, scrBookColId],\n    },\n  ];\n\n  const handleSelectChange = (selectedGrouping: string) => {\n    setGrouping(JSON.parse(selectedGrouping));\n  };\n\n  const handleRowClick = (row: Row<ScriptureSrcItemDetail>, event: MouseEvent) => {\n    if (!row.getIsGrouped() && !row.getIsSelected()) {\n      row.getToggleSelectedHandler()(event);\n    }\n  };\n\n  const getEvenOrOddBandingStyle = (row: Row<ScriptureSrcItemDetail>, index: number) => {\n    if (row.getIsGrouped()) return '';\n    // UX has now said they don't think they want banding. I'm leaving in the code to\n    // set even and odd styles, but there's nothing in the CSS to style them differently.\n    // The \"even\" style used to also have  tw-bg-neutral-300 (along with even) to create\n    // a visual banding effect. That could be added back in if UX changes the decision.\n    return cn('banded-row', index % 2 === 0 ? 'even' : 'odd');\n  };\n\n  const getIndent = (\n    groupingState: GroupingState,\n    row: Row<ScriptureSrcItemDetail>,\n    cell: Cell<ScriptureSrcItemDetail, unknown>,\n  ) => {\n    if (groupingState?.length === 0 || row.depth < cell.column.getGroupedIndex()) return undefined;\n    if (row.getIsGrouped()) {\n      switch (row.depth) {\n        case 1:\n          return 'tw-ps-4';\n        default:\n          return undefined;\n      }\n    }\n    switch (row.depth) {\n      case 1:\n        return 'tw-ps-8';\n      case 2:\n        return 'tw-ps-12';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <div className=\"pr-twp tw-flex tw-h-full tw-w-full tw-flex-col\">\n      {!showColumnHeaders && (\n        <Select\n          value={JSON.stringify(grouping)}\n          onValueChange={(value) => {\n            handleSelectChange(value);\n          }}\n        >\n          <SelectTrigger className=\"tw-mb-1 tw-mt-2\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent position=\"item-aligned\">\n            <SelectGroup>\n              {groupingOptions.map((option) => (\n                <SelectItem key={option.label} value={JSON.stringify(option.value)}>\n                  {option.label}\n                </SelectItem>\n              ))}\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      )}\n      <Table className=\"tw-relative tw-flex tw-flex-col tw-overflow-y-auto tw-p-0\">\n        {showColumnHeaders && (\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers\n                  .filter((h) => h.column.columnDef.header)\n                  .map((header) => (\n                    /* For sticky column headers to work, we probably need to change the default definition of the shadcn Table component. See https://github.com/shadcn-ui/ui/issues/1151 */\n                    <TableHead key={header.id} colSpan={header.colSpan} className=\"top-0 tw-sticky\">\n                      {header.isPlaceholder ? undefined : (\n                        <div>\n                          {header.column.getCanGroup() ? (\n                            <Button\n                              variant=\"ghost\"\n                              title={`Toggle grouping by ${header.column.columnDef.header}`}\n                              onClick={header.column.getToggleGroupingHandler()}\n                              type=\"button\"\n                            >\n                              {header.column.getIsGrouped() ? `🛑` : `👊 `}\n                            </Button>\n                          ) : undefined}{' '}\n                          {flexRender(header.column.columnDef.header, header.getContext())}\n                        </div>\n                      )}\n                    </TableHead>\n                  ))}\n              </TableRow>\n            ))}\n          </TableHeader>\n        )}\n        <TableBody>\n          {table.getRowModel().rows.map((row, rowIndex) => {\n            const dir: Direction = readDirection();\n            return (\n              <TableRow\n                data-state={row.getIsSelected() ? 'selected' : ''}\n                key={row.id}\n                className={cn(getEvenOrOddBandingStyle(row, rowIndex))}\n                onClick={(event) => handleRowClick(row, event)}\n              >\n                {row.getVisibleCells().map((cell) => {\n                  if (\n                    cell.getIsPlaceholder() ||\n                    (cell.column.columnDef.enableGrouping &&\n                      !cell.getIsGrouped() &&\n                      (cell.column.columnDef.id !== typeColId || !showSourceColumn))\n                  )\n                    return undefined;\n                  return (\n                    <TableCell\n                      key={cell.id}\n                      // It seems like a hack to use tw-p-[1px] to override the \"built in\" tw-p-4\n                      // that comes in with the shadcn TableCell class. I could just remove it from\n                      // that class, but it's not clear that that is desirable. I'm not even 100%\n                      // sure I know what padding value to use here, but the problem with 4 (the\n                      // default) is that is prevents the nested indentation when grouping.\n                      className={cn(\n                        cell.column.columnDef.id,\n                        'tw-p-[1px]',\n                        getIndent(grouping, row, cell),\n                      )}\n                    >\n                      {(() => {\n                        if (cell.getIsGrouped()) {\n                          return (\n                            <Button\n                              variant=\"link\"\n                              onClick={row.getToggleExpandedHandler()}\n                              type=\"button\"\n                            >\n                              {row.getIsExpanded() && <ChevronDown />}\n                              {!row.getIsExpanded() &&\n                                (dir === 'ltr' ? <ChevronRight /> : <ChevronLeft />)}{' '}\n                              {flexRender(cell.column.columnDef.cell, cell.getContext())} (\n                              {row.subRows.length})\n                            </Button>\n                          );\n                        }\n\n                        // if (cell.getIsAggregated()) {\n                        //   flexRender(\n                        //     cell.column.columnDef.aggregatedCell ?? cell.column.columnDef.cell,\n                        //     cell.getContext(),\n                        //   );\n                        // }\n\n                        return flexRender(cell.column.columnDef.cell, cell.getContext());\n                      })()}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default ScriptureResultsViewer;\n","import { Canon } from '@sillsdev/scripture';\n\n/**\n * Represents the major sections of the Bible and extra materials. Used for grouping and filtering\n * books in the book selector.\n */\nexport enum Section {\n  /** Old Testament books (Genesis through Malachi) */\n  OT = 'OT',\n  /** New Testament books (Matthew through Revelation) */\n  NT = 'NT',\n  /** Deuterocanonical books (e.g. Tobit, Judith, 1-2 Maccabees) */\n  DC = 'DC',\n  /** Additional materials not part of the biblical canon (e.g. XXA, XXB etc.) */\n  Extra = 'Extra',\n}\n\n/**\n * Gets the localized full name of a Bible section from its enum value\n *\n * @param section - The section enum value to get the name for\n * @param otLongName - Optional localized name for Old Testament section\n * @param ntLongName - Optional localized name for New Testament section\n * @param dcLongName - Optional localized name for Deuterocanonical section\n * @param extraLongName - Optional localized name for Extra Materials section\n * @returns {string} The human-readable localized name of the section. Defaults to English names\n * @throws {Error} When the section enum value is not recognized\n */\nexport const getSectionLongName = (\n  section: Section,\n  otLongName?: string,\n  ntLongName?: string,\n  dcLongName?: string,\n  extraLongName?: string,\n): string => {\n  switch (section) {\n    case Section.OT:\n      return otLongName ?? 'Old Testament';\n    case Section.NT:\n      return ntLongName ?? 'New Testament';\n    case Section.DC:\n      return dcLongName ?? 'Deuterocanon';\n    case Section.Extra:\n      return extraLongName ?? 'Extra Materials';\n    default:\n      throw new Error(`Unknown section: ${section}`);\n  }\n};\n\n/**\n * Gets the short name of a Bible section from its enum value\n *\n * @param section - The section enum value to get the short name for\n * @param otShortName - Optional localized short name for Old Testament section\n * @param ntShortName - Optional localized short name for New Testament section\n * @param dcShortName - Optional localized short name for Deuterocanonical section\n * @param extraShortName - Optional localized short name for Extra Materials section\n * @returns {string} The short name of the section. Defaults to English\n * @throws {Error} When the section enum value is not recognized\n */\nexport const getSectionShortName = (\n  section: Section,\n  otShortName?: string,\n  ntShortName?: string,\n  dcShortName?: string,\n  extraShortName?: string,\n): string => {\n  switch (section) {\n    case Section.OT:\n      return otShortName ?? 'OT';\n    case Section.NT:\n      return ntShortName ?? 'NT';\n    case Section.DC:\n      return dcShortName ?? 'DC';\n    case Section.Extra:\n      return extraShortName ?? 'Extra';\n    default:\n      throw new Error(`Unknown section: ${section}`);\n  }\n};\n\n/**\n * Determines which section a book belongs to based on its ID\n *\n * @param bookId The ID of the book (e.g., 'GEN', 'MAT')\n * @returns The section (OT, NT, DC, or Extra) that the book belongs to\n * @throws Error if the book ID is not recognized or cannot be categorized\n */\nexport const getSectionForBook = (bookId: string): Section => {\n  if (Canon.isBookOT(bookId)) return Section.OT;\n  if (Canon.isBookNT(bookId)) return Section.NT;\n  if (Canon.isBookDC(bookId)) return Section.DC;\n  if (Canon.isExtraMaterial(bookId)) return Section.Extra;\n\n  throw new Error(`Unknown section for book: ${bookId}`);\n};\n\n/**\n * Filters an array of book IDs to only include books from a specific section\n *\n * @param bookIds Array of book IDs to filter\n * @param section The section to filter by\n * @returns Array of book IDs that belong to the specified section\n */\nexport const getBooksForSection = (bookIds: string[], section: Section) => {\n  return bookIds.filter((bookId) => {\n    try {\n      return getSectionForBook(bookId) === section;\n    } catch {\n      return false;\n    }\n  });\n};\n\n/**\n * Checks if all books in a given section are included in the selectedBookIds array\n *\n * @param bookIds Array of all available book IDs\n * @param section The section to check\n * @param selectedBookIds Array of currently selected book IDs\n * @returns True if all books from the specified section are selected, false otherwise\n */\nexport const isSectionFullySelected = (\n  bookIds: string[],\n  section: Section,\n  selectedBookIds: string[],\n) => getBooksForSection(bookIds, section).every((bookId) => selectedBookIds.includes(bookId));\n","import { CommandItem } from '@/components/shadcn-ui/command';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Canon } from '@sillsdev/scripture';\nimport { Check } from 'lucide-react';\nimport { MutableRefObject, useRef } from 'react';\nimport { getSectionForBook, Section } from './scope-selector-utils';\n\ntype BookItemProps = {\n  /** The book ID (e.g., 'GEN', 'EXO') */\n  bookId: string;\n  /** Array of currently selected book IDs */\n  selectedBookIds: string[];\n  /** Callback function to handle book selection/deselection with optional shift-key support */\n  toggleBook: (bookId: string, shiftKey: boolean) => void;\n  /** Reference to track if the last key event included the shift key */\n  lastKeyEventShiftKey: MutableRefObject<boolean>;\n  /**\n   * Optional map of localized book IDs/short names and full names. Key is the (English) book ID,\n   * value contains localized versions of the ID and full book name\n   */\n  localizedBookNames?: Map<string, { localizedId: string; localizedName: string }>;\n};\n\n/**\n * A component that represents a single book item in the book selector. Handles both keyboard and\n * mouse interactions for book selection, including shift-click for range selection. The component\n * shows the book's localized name, its ID, and visually indicates its testament (OT/NT/DC/Extra)\n * through color coding.\n */\nfunction BookItem({\n  bookId,\n  selectedBookIds,\n  toggleBook,\n  lastKeyEventShiftKey,\n  localizedBookNames,\n}: BookItemProps) {\n  const isMouseClick = useRef(false);\n  const mouseClickTimer = useRef<ReturnType<typeof setTimeout>>();\n  return (\n    <CommandItem\n      key={bookId}\n      value={bookId}\n      className=\"tw-flex tw-items-center\"\n      onSelect={() => {\n        // Only process selection if it wasn't triggered by mouse\n        if (!isMouseClick.current) {\n          toggleBook(bookId, lastKeyEventShiftKey.current);\n          lastKeyEventShiftKey.current = false;\n        }\n        if (mouseClickTimer.current) {\n          clearTimeout(mouseClickTimer.current);\n        }\n        mouseClickTimer.current = setTimeout(() => {\n          isMouseClick.current = false;\n        }, 100);\n      }}\n      onMouseDown={(e) => {\n        e.preventDefault();\n        isMouseClick.current = true;\n        toggleBook(bookId, e.shiftKey);\n      }}\n      role=\"option\"\n      aria-selected={selectedBookIds.includes(bookId)}\n      aria-label={`${Canon.bookIdToEnglishName(bookId)} (${bookId.toLocaleUpperCase()})`}\n    >\n      <Check\n        className={cn(\n          'tw-me-2 tw-h-4 tw-w-4',\n          selectedBookIds.includes(bookId) ? 'tw-opacity-100' : 'tw-opacity-0',\n        )}\n      />\n      <span\n        className={cn(\n          'tw-flex-1 tw-border-b-0 tw-border-e-0 tw-border-s-2 tw-border-t-0 tw-border-solid tw-px-2',\n          {\n            'tw-border-s-red-200': getSectionForBook(bookId) === Section.OT,\n            'tw-border-s-purple-200': getSectionForBook(bookId) === Section.NT,\n            'tw-border-s-indigo-200': getSectionForBook(bookId) === Section.DC,\n            'tw-border-s-yellow-200': getSectionForBook(bookId) === Section.Extra,\n          },\n        )}\n      >\n        {(localizedBookNames && localizedBookNames.get(bookId)?.localizedName) ||\n          Canon.bookIdToEnglishName(bookId)}\n      </span>\n\n      <span className=\"tw-ml-2 tw-text-xs tw-text-muted-foreground\">\n        {(localizedBookNames && localizedBookNames.get(bookId)?.localizedId) ||\n          bookId.toLocaleUpperCase()}\n      </span>\n    </CommandItem>\n  );\n}\n\nexport default BookItem;\n","import { Button } from '@/components/shadcn-ui/button';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { LanguageStrings } from 'platform-bible-utils';\nimport {\n  getBooksForSection,\n  getSectionShortName,\n  isSectionFullySelected,\n  Section,\n} from './scope-selector-utils';\n\n/**\n * A button component that represents a scripture section (testament) in the book selector. The\n * button shows a different state when all books in its section are selected and becomes disabled\n * when no books are available in its section.\n */\nfunction SectionButton({\n  section,\n  availableBookIds,\n  selectedBookIds,\n  onToggle,\n  localizedStrings,\n}: {\n  section: Section;\n  availableBookIds: string[];\n  selectedBookIds: string[];\n  onToggle: (section: Section) => void;\n  localizedStrings: LanguageStrings;\n}) {\n  const isDisabled = getBooksForSection(availableBookIds, section).length === 0;\n\n  const sectionOtShortText = localizedStrings['%scripture_section_ot_short%'];\n  const sectionNtShortText = localizedStrings['%scripture_section_nt_short%'];\n  const sectionDcShortText = localizedStrings['%scripture_section_dc_short%'];\n  const sectionExtraShortText = localizedStrings['%scripture_section_extra_short%'];\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"sm\"\n      onClick={() => onToggle(section)}\n      className={cn(\n        isSectionFullySelected(availableBookIds, section, selectedBookIds) &&\n          !isDisabled &&\n          'tw-bg-primary tw-text-primary-foreground hover:tw-bg-primary/70 hover:tw-text-primary-foreground',\n      )}\n      disabled={isDisabled}\n    >\n      {getSectionShortName(\n        section,\n        sectionOtShortText,\n        sectionNtShortText,\n        sectionDcShortText,\n        sectionExtraShortText,\n      )}\n    </Button>\n  );\n}\n\nexport default SectionButton;\n","import { Badge } from '@/components/shadcn-ui/badge';\nimport { Button } from '@/components/shadcn-ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandList,\n  CommandSeparator,\n} from '@/components/shadcn-ui/command';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/shadcn-ui/popover';\nimport { Canon } from '@sillsdev/scripture';\nimport { ChevronsUpDown } from 'lucide-react';\nimport { LanguageStrings } from 'platform-bible-utils';\nimport { Fragment, useCallback, useMemo, useRef, useState } from 'react';\nimport BookItem from './book-item.component';\nimport {\n  getBooksForSection,\n  getSectionForBook,\n  getSectionLongName,\n  isSectionFullySelected,\n  Section,\n} from './scope-selector-utils';\nimport SectionButton from './section-button.component';\n\n/** Maximum number of badges to show before collapsing into a \"+X more\" badge */\nconst VISIBLE_BADGES_COUNT = 5;\n/** Maximum number of badges that can be shown without triggering the collapse */\nconst MAX_VISIBLE_BADGES = 6;\n\ntype BookSelectorProps = {\n  /**\n   * Information about available books, formatted as a 123 character long string as defined in a\n   * projects BooksPresent setting\n   */\n  availableBookInfo: string;\n  /** Array of currently selected book IDs */\n  selectedBookIds: string[];\n  /** Callback function that is executed when the book selection changes */\n  onChangeSelectedBookIds: (books: string[]) => void;\n  /** Object containing the localized strings for the component */\n  localizedStrings: LanguageStrings;\n  /**\n   * Optional map of localized book IDs/short names and full names. Key is the (English) book ID,\n   * value contains localized versions of the ID and full book name\n   */\n  localizedBookNames?: Map<string, { localizedId: string; localizedName: string }>;\n};\n\n/**\n * A component for selecting multiple books from the Bible canon. It provides:\n *\n * - Quick selection buttons for major sections (OT, NT, DC, Extra)\n * - A searchable dropdown with all available books\n * - Support for shift-click range selection\n * - Visual feedback with badges showing selected books\n */\nexport function BookSelector({\n  availableBookInfo,\n  selectedBookIds,\n  onChangeSelectedBookIds,\n  localizedStrings,\n  localizedBookNames,\n}: BookSelectorProps) {\n  const booksSelectedText = localizedStrings['%webView_book_selector_books_selected%'];\n  const selectBooksText = localizedStrings['%webView_book_selector_select_books%'];\n  const searchBooksText = localizedStrings['%webView_book_selector_search_books%'];\n  const selectAllText = localizedStrings['%webView_book_selector_select_all%'];\n  const clearAllText = localizedStrings['%webView_book_selector_clear_all%'];\n  const noBookFoundText = localizedStrings['%webView_book_selector_no_book_found%'];\n  const moreText = localizedStrings['%webView_book_selector_more%'];\n  const sectionOtLongText = localizedStrings['%scripture_section_ot_long%'];\n  const sectionNtLongText = localizedStrings['%scripture_section_nt_long%'];\n  const sectionDcLongText = localizedStrings['%scripture_section_dc_long%'];\n  const sectionExtraLongText = localizedStrings['%scripture_section_extra_long%'];\n\n  const [isBooksSelectorOpen, setIsBooksSelectorOpen] = useState(false);\n  const lastSelectedBookRef = useRef<string | undefined>(undefined);\n  const lastKeyEventShiftKey = useRef(false);\n\n  if (availableBookInfo.length !== Canon.allBookIds.length) {\n    throw new Error('availableBookInfo length must match Canon.allBookIds length');\n  }\n\n  const availableBooksIds = useMemo(() => {\n    return Canon.allBookIds.filter(\n      (bookId, index) =>\n        availableBookInfo[index] === '1' && !Canon.isObsolete(Canon.bookIdToNumber(bookId)),\n    );\n  }, [availableBookInfo]);\n\n  const toggleBook = useCallback(\n    (bookId: string, shiftKey = false) => {\n      if (!shiftKey || !lastSelectedBookRef.current) {\n        onChangeSelectedBookIds(\n          selectedBookIds.includes(bookId)\n            ? selectedBookIds.filter((id) => id !== bookId)\n            : [...selectedBookIds, bookId],\n        );\n        lastSelectedBookRef.current = bookId;\n        return;\n      }\n\n      const lastIndex = availableBooksIds.findIndex((id) => id === lastSelectedBookRef.current);\n      const currentIndex = availableBooksIds.findIndex((id) => id === bookId);\n\n      if (lastIndex === -1 || currentIndex === -1) return;\n\n      const [startIndex, endIndex] = [\n        Math.min(lastIndex, currentIndex),\n        Math.max(lastIndex, currentIndex),\n      ];\n      const booksInRange = availableBooksIds.slice(startIndex, endIndex + 1).map((id) => id);\n\n      onChangeSelectedBookIds(\n        selectedBookIds.includes(bookId)\n          ? selectedBookIds.filter((shortname) => !booksInRange.includes(shortname))\n          : [...new Set([...selectedBookIds, ...booksInRange])],\n      );\n    },\n    [selectedBookIds, onChangeSelectedBookIds, availableBooksIds],\n  );\n\n  const toggleSection = useCallback(\n    (section: Section) => {\n      const sectionBooks = getBooksForSection(availableBooksIds, section).map((bookId) => bookId);\n      onChangeSelectedBookIds(\n        isSectionFullySelected(availableBooksIds, section, selectedBookIds)\n          ? selectedBookIds.filter((shortname) => !sectionBooks.includes(shortname))\n          : [...new Set([...selectedBookIds, ...sectionBooks])],\n      );\n    },\n    [selectedBookIds, onChangeSelectedBookIds, availableBooksIds],\n  );\n\n  const handleSelectAll = () => {\n    onChangeSelectedBookIds(availableBooksIds.map((bookId) => bookId));\n  };\n\n  const handleClearAll = () => {\n    onChangeSelectedBookIds([]);\n  };\n\n  return (\n    <div className=\"tw-space-y-2\">\n      <div className=\"tw-flex tw-flex-wrap tw-gap-2\">\n        {Object.values(Section).map((section) => {\n          return (\n            <SectionButton\n              key={section}\n              section={section}\n              availableBookIds={availableBooksIds}\n              selectedBookIds={selectedBookIds}\n              onToggle={toggleSection}\n              localizedStrings={localizedStrings}\n            />\n          );\n        })}\n      </div>\n\n      <Popover open={isBooksSelectorOpen} onOpenChange={setIsBooksSelectorOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"outline\"\n            role=\"combobox\"\n            aria-expanded={isBooksSelectorOpen}\n            className=\"tw-max-w-64 tw-justify-between\"\n          >\n            {selectedBookIds.length > 0\n              ? `${booksSelectedText}: ${selectedBookIds.length}`\n              : selectBooksText}\n            <ChevronsUpDown className=\"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"tw-w-full tw-p-0\" align=\"start\">\n          <Command\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                // Store shift state in a ref that will be used by onSelect\n                lastKeyEventShiftKey.current = e.shiftKey;\n              }\n            }}\n          >\n            <CommandInput placeholder={searchBooksText} />\n            <div className=\"tw-flex tw-justify-between tw-border-b tw-p-2\">\n              <Button variant=\"ghost\" size=\"sm\" onClick={handleSelectAll}>\n                {selectAllText}\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" onClick={handleClearAll}>\n                {clearAllText}\n              </Button>\n            </div>\n            <CommandList>\n              <CommandEmpty>{noBookFoundText}</CommandEmpty>\n              {Object.values(Section).map((section, index) => {\n                const sectionBooks = availableBooksIds.filter(\n                  (bookId) => getSectionForBook(bookId) === section,\n                );\n\n                if (sectionBooks.length === 0) return undefined;\n\n                return (\n                  <Fragment key={section}>\n                    <CommandGroup\n                      heading={getSectionLongName(\n                        section,\n                        sectionOtLongText,\n                        sectionNtLongText,\n                        sectionDcLongText,\n                        sectionExtraLongText,\n                      )}\n                    >\n                      {sectionBooks.map((bookId) => (\n                        <BookItem\n                          key={bookId}\n                          bookId={bookId}\n                          selectedBookIds={selectedBookIds}\n                          toggleBook={toggleBook}\n                          lastKeyEventShiftKey={lastKeyEventShiftKey}\n                          localizedBookNames={localizedBookNames}\n                        />\n                      ))}\n                    </CommandGroup>\n                    {index < Object.values(Section).length - 1 && <CommandSeparator />}\n                  </Fragment>\n                );\n              })}\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n\n      {selectedBookIds.length > 0 && (\n        <div className=\"tw-mt-2 tw-flex tw-flex-wrap tw-gap-1\">\n          {selectedBookIds\n            .slice(\n              0,\n              selectedBookIds.length === MAX_VISIBLE_BADGES\n                ? MAX_VISIBLE_BADGES\n                : VISIBLE_BADGES_COUNT,\n            )\n            .map((bookId) => (\n              <Badge className=\"hover:tw-bg-secondary\" key={bookId} variant=\"secondary\">\n                {(localizedBookNames && localizedBookNames.get(bookId)?.localizedName) ||\n                  Canon.bookIdToEnglishName(bookId) ||\n                  bookId}\n              </Badge>\n            ))}\n          {selectedBookIds.length > MAX_VISIBLE_BADGES && (\n            <Badge\n              className=\"hover:tw-bg-secondary\"\n              variant=\"secondary\"\n            >{`+${selectedBookIds.length - VISIBLE_BADGES_COUNT} ${moreText}`}</Badge>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { BookSelector } from '@/components/advanced/scope-selector/book-selector.component';\nimport { Label } from '@/components/shadcn-ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/shadcn-ui/radio-group';\nimport { Scope } from '@/components/utils/scripture.util';\nimport { LocalizedStringValue } from 'platform-bible-utils';\n\n/**\n * Object containing all keys used for localization in this component. If you're using this\n * component in an extension, you can pass it into the useLocalizedStrings hook to easily obtain the\n * localized strings and pass them into the localizedStrings prop of this component\n */\nexport const SCOPE_SELECTOR_STRING_KEYS = Object.freeze([\n  '%webView_scope_selector_selected_text%',\n  '%webView_scope_selector_current_verse%',\n  '%webView_scope_selector_current_chapter%',\n  '%webView_scope_selector_current_book%',\n  '%webView_scope_selector_choose_books%',\n  '%webView_scope_selector_scope%',\n  '%webView_scope_selector_select_books%',\n  '%webView_book_selector_books_selected%',\n  '%webView_book_selector_select_books%',\n  '%webView_book_selector_search_books%',\n  '%webView_book_selector_select_all%',\n  '%webView_book_selector_clear_all%',\n  '%webView_book_selector_no_book_found%',\n  '%webView_book_selector_more%',\n  '%scripture_section_ot_long%',\n  '%scripture_section_ot_short%',\n  '%scripture_section_nt_long%',\n  '%scripture_section_nt_short%',\n  '%scripture_section_dc_long%',\n  '%scripture_section_dc_short%',\n  '%scripture_section_extra_long%',\n  '%scripture_section_extra_short%',\n] as const);\n\n/** Type definition for the localized strings used in this component */\nexport type ScopeSelectorLocalizedStrings = {\n  [localizedInventoryKey in (typeof SCOPE_SELECTOR_STRING_KEYS)[number]]?: LocalizedStringValue;\n};\n\n/**\n * Gets the localized value for the provided key\n *\n * @param strings Object containing localized string\n * @param key Key for a localized string\n * @returns The localized value for the provided key, if available. Returns the key if no localized\n *   value is available\n */\nconst localizeString = (\n  strings: ScopeSelectorLocalizedStrings,\n  key: keyof ScopeSelectorLocalizedStrings,\n) => {\n  return strings[key] ?? key;\n};\n\n/** Props for configuring the ScopeSelector component */\ninterface ScopeSelectorProps {\n  /** The current scope selection */\n  scope: Scope;\n\n  /**\n   * Optional array of scopes that should be available in the selector. If not provided, all scopes\n   * will be shown as defined in the Scope type\n   */\n  availableScopes?: Scope[];\n\n  /** Callback function that is executed when the user changes the scope selection */\n  onScopeChange: (scope: Scope) => void;\n\n  /**\n   * Information about available books, formatted as a 123 character long string as defined in a\n   * projects BooksPresent setting\n   */\n  availableBookInfo: string;\n\n  /** Array of currently selected book IDs */\n  selectedBookIds: string[];\n\n  /** Callback function that is executed when the user changes the book selection */\n  onSelectedBookIdsChange: (books: string[]) => void;\n\n  /**\n   * Object with all localized strings that the component needs to work well across multiple\n   * languages. When using this component with Platform.Bible, you can import\n   * `SCOPE_SELECTOR_STRING_KEYS` from this library, pass it in to the Platform's localization hook,\n   * and pass the localized keys that are returned by the hook into this prop.\n   */\n  localizedStrings: ScopeSelectorLocalizedStrings;\n  /**\n   * Optional map of localized book IDs/short names and full names. Key is the (English) book ID,\n   * value contains localized versions of the ID and full book name\n   */\n  localizedBookNames?: Map<string, { localizedId: string; localizedName: string }>;\n}\n\n/**\n * A component that allows users to select the scope of their search or operation. Available scopes\n * are defined in the Scope type. When 'selectedBooks' is chosen as the scope, a BookSelector\n * component is displayed to allow users to choose specific books.\n */\nexport function ScopeSelector({\n  scope,\n  availableScopes,\n  onScopeChange,\n  availableBookInfo,\n  selectedBookIds,\n  onSelectedBookIdsChange,\n  localizedStrings,\n  localizedBookNames,\n}: ScopeSelectorProps) {\n  const selectedTextText = localizeString(\n    localizedStrings,\n    '%webView_scope_selector_selected_text%',\n  );\n  const currentVerseText = localizeString(\n    localizedStrings,\n    '%webView_scope_selector_current_verse%',\n  );\n  const currentChapterText = localizeString(\n    localizedStrings,\n    '%webView_scope_selector_current_chapter%',\n  );\n  const currentBookText = localizeString(localizedStrings, '%webView_scope_selector_current_book%');\n  const chooseBooksText = localizeString(localizedStrings, '%webView_scope_selector_choose_books%');\n  const scopeText = localizeString(localizedStrings, '%webView_scope_selector_scope%');\n  const selectBooksText = localizeString(localizedStrings, '%webView_scope_selector_select_books%');\n\n  const SCOPE_OPTIONS: Array<{ value: Scope; label: string; id: string }> = [\n    { value: 'selectedText', label: selectedTextText, id: 'scope-selected-text' },\n    { value: 'verse', label: currentVerseText, id: 'scope-verse' },\n    { value: 'chapter', label: currentChapterText, id: 'scope-chapter' },\n    { value: 'book', label: currentBookText, id: 'scope-book' },\n    { value: 'selectedBooks', label: chooseBooksText, id: 'scope-selected' },\n  ];\n\n  const displayedScopes = availableScopes\n    ? SCOPE_OPTIONS.filter((option) => availableScopes.includes(option.value))\n    : SCOPE_OPTIONS;\n\n  return (\n    <div className=\"tw-grid tw-gap-4\">\n      <div className=\"tw-grid tw-gap-2\">\n        <Label>{scopeText}</Label>\n        <RadioGroup\n          value={scope}\n          onValueChange={onScopeChange}\n          className=\"tw-flex tw-flex-col tw-space-y-1\"\n        >\n          {displayedScopes.map(({ value, label, id }) => (\n            <div key={id} className=\"tw-flex tw-items-center\">\n              <RadioGroupItem className=\"tw-me-2\" value={value} id={id} />\n              <Label htmlFor={id}>{label}</Label>\n            </div>\n          ))}\n        </RadioGroup>\n      </div>\n\n      {scope === 'selectedBooks' && (\n        <div className=\"tw-grid tw-gap-2\">\n          <Label>{selectBooksText}</Label>\n          <BookSelector\n            availableBookInfo={availableBookInfo}\n            selectedBookIds={selectedBookIds}\n            onChangeSelectedBookIds={onSelectedBookIdsChange}\n            localizedStrings={localizedStrings}\n            localizedBookNames={localizedBookNames}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ScopeSelector;\n","import {\n  getLocalizeKeyForScrollGroupId,\n  LanguageStrings,\n  ScrollGroupId,\n} from 'platform-bible-utils';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/shadcn-ui/select';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\nimport { cn } from '@/utils/shadcn-ui.util';\n\nconst DEFAULT_SCROLL_GROUP_LOCALIZED_STRINGS = {\n  [getLocalizeKeyForScrollGroupId('undefined')]: 'Ø',\n  [getLocalizeKeyForScrollGroupId(0)]: 'A',\n  [getLocalizeKeyForScrollGroupId(1)]: 'B',\n  [getLocalizeKeyForScrollGroupId(2)]: 'C',\n  [getLocalizeKeyForScrollGroupId(3)]: 'D',\n  [getLocalizeKeyForScrollGroupId(4)]: 'E',\n  [getLocalizeKeyForScrollGroupId(5)]: 'F',\n  [getLocalizeKeyForScrollGroupId(6)]: 'G',\n  [getLocalizeKeyForScrollGroupId(7)]: 'H',\n  [getLocalizeKeyForScrollGroupId(8)]: 'I',\n  [getLocalizeKeyForScrollGroupId(9)]: 'J',\n  [getLocalizeKeyForScrollGroupId(10)]: 'K',\n  [getLocalizeKeyForScrollGroupId(11)]: 'L',\n  [getLocalizeKeyForScrollGroupId(12)]: 'M',\n  [getLocalizeKeyForScrollGroupId(13)]: 'N',\n  [getLocalizeKeyForScrollGroupId(14)]: 'O',\n  [getLocalizeKeyForScrollGroupId(15)]: 'P',\n  [getLocalizeKeyForScrollGroupId(16)]: 'Q',\n  [getLocalizeKeyForScrollGroupId(17)]: 'R',\n  [getLocalizeKeyForScrollGroupId(18)]: 'S',\n  [getLocalizeKeyForScrollGroupId(19)]: 'T',\n  [getLocalizeKeyForScrollGroupId(20)]: 'U',\n  [getLocalizeKeyForScrollGroupId(21)]: 'V',\n  [getLocalizeKeyForScrollGroupId(22)]: 'W',\n  [getLocalizeKeyForScrollGroupId(23)]: 'X',\n  [getLocalizeKeyForScrollGroupId(24)]: 'Y',\n  [getLocalizeKeyForScrollGroupId(25)]: 'Z',\n};\n\nexport type ScrollGroupSelectorProps = {\n  /**\n   * List of scroll group ids to show to the user. Either a `ScrollGroupId` or `undefined` for no\n   * scroll group\n   */\n  availableScrollGroupIds: (ScrollGroupId | undefined)[];\n  /** Currently selected scroll group id. `undefined` for no scroll group */\n  scrollGroupId: ScrollGroupId | undefined;\n  /** Callback function run when the user tries to change the scroll group id */\n  onChangeScrollGroupId: (newScrollGroupId: ScrollGroupId | undefined) => void;\n  /**\n   * Localized strings to use for displaying scroll group ids. Must be an object whose keys are\n   * `getLocalizeKeyForScrollGroupId(scrollGroupId)` for all scroll group ids (and `undefined` if\n   * included) in {@link ScrollGroupSelectorProps.availableScrollGroupIds} and whose values are the\n   * localized strings to use for those scroll group ids.\n   *\n   * Defaults to English localizations of English alphabet for scroll groups 0-25 (e.g. 0 is A) and\n   * Ø for `undefined`. Will fill in any that are not provided with these English localizations.\n   * Also, if any values match the keys, the English localization will be used. This is useful in\n   * case you want to pass in a temporary version of the localized strings while your localized\n   * strings load.\n   *\n   * @example\n   *\n   * ```typescript\n   * const myScrollGroupIdLocalizedStrings = {\n   *   [getLocalizeKeyForScrollGroupId('undefined')]: 'Ø',\n   *   [getLocalizeKeyForScrollGroupId(0)]: 'A',\n   *   [getLocalizeKeyForScrollGroupId(1)]: 'B',\n   *   [getLocalizeKeyForScrollGroupId(2)]: 'C',\n   *   [getLocalizeKeyForScrollGroupId(3)]: 'D',\n   *   [getLocalizeKeyForScrollGroupId(4)]: 'E',\n   * };\n   * ```\n   *\n   * @example\n   *\n   * ```tsx\n   * const availableScrollGroupIds = [undefined, 0, 1, 2, 3, 4];\n   *\n   * const localizeKeys = getLocalizeKeysForScrollGroupIds();\n   *\n   * const [localizedStrings] = useLocalizedStrings(localizeKeys);\n   *\n   * ...\n   *\n   * <ScrollGroupSelector localizedStrings={localizedStrings} />\n   * ```\n   */\n  localizedStrings?: LanguageStrings;\n\n  /** Size of the scroll group dropdown button. Defaults to 'sm' */\n  size?: 'default' | 'sm' | 'lg' | 'icon';\n\n  /** Additional css classes to help with unique styling */\n  className?: string;\n};\n\n/** Selector component for choosing a scroll group */\nexport function ScrollGroupSelector({\n  availableScrollGroupIds,\n  scrollGroupId,\n  onChangeScrollGroupId,\n  localizedStrings = {},\n  size = 'sm',\n  className,\n}: ScrollGroupSelectorProps) {\n  const localizedStringsDefaulted = {\n    ...DEFAULT_SCROLL_GROUP_LOCALIZED_STRINGS,\n    ...Object.fromEntries(\n      Object.entries(localizedStrings).map(\n        ([localizedStringKey, localizedStringValue]: [string, string]) => [\n          localizedStringKey,\n          localizedStringKey === localizedStringValue &&\n          localizedStringKey in DEFAULT_SCROLL_GROUP_LOCALIZED_STRINGS\n            ? DEFAULT_SCROLL_GROUP_LOCALIZED_STRINGS[localizedStringKey]\n            : localizedStringValue,\n        ],\n      ),\n    ),\n  };\n\n  const dir: Direction = readDirection();\n\n  return (\n    <Select\n      value={`${scrollGroupId}`}\n      onValueChange={(newScrollGroupString) =>\n        onChangeScrollGroupId(\n          newScrollGroupString === 'undefined' ? undefined : parseInt(newScrollGroupString, 10),\n        )\n      }\n    >\n      <SelectTrigger size={size} className={cn('pr-twp tw-w-auto', className)}>\n        <SelectValue\n          placeholder={\n            localizedStringsDefaulted[getLocalizeKeyForScrollGroupId(scrollGroupId)] ??\n            scrollGroupId\n          }\n        />\n      </SelectTrigger>\n      <SelectContent\n        align={dir === 'rtl' ? 'end' : 'start'}\n        // Need to get over the floating web view z-index 200\n        style={{ zIndex: 250 }}\n      >\n        {availableScrollGroupIds.map((scrollGroupOptionId) => (\n          <SelectItem key={`${scrollGroupOptionId}`} value={`${scrollGroupOptionId}`}>\n            {localizedStringsDefaulted[getLocalizeKeyForScrollGroupId(scrollGroupOptionId)]}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n}\n\nexport default ScrollGroupSelector;\n","import { PropsWithChildren } from 'react';\nimport { Separator } from '@/components/shadcn-ui/separator';\n\n/** Props for the SettingsList component, currently just children */\ntype SettingsListProps = PropsWithChildren;\n\n/**\n * SettingsList component is a wrapper for list items. Rendered with a formatted div\n *\n * @deprecated Jul 18 2025. This component is no longer supported or tested. Use of this component\n *   is discouraged and it may be removed in the future.\n * @param children To populate the list with\n * @returns Formatted div encompassing the children\n */\nexport function SettingsList({ children }: SettingsListProps) {\n  return <div className=\"pr-twp tw-grid\">{children}</div>;\n}\n\n/** Props for SettingsListItem component */\ntype SettingsListItemProps = PropsWithChildren & {\n  /** Primary text of the list item */\n  primary: string;\n\n  /** Optional text of the list item */\n  secondary?: string | undefined;\n\n  /** Optional boolean to display a message if the children aren't loaded yet. Defaults to false */\n  isLoading?: boolean;\n\n  /** Optional message to display if isLoading */\n  loadingMessage?: string;\n};\n\n/**\n * SettingsListItem component is a common list item. Rendered with a formatted div\n *\n * @deprecated Jul 18 2025. This component is no longer supported or tested. Use of this component\n *   is discouraged and it may be removed in the future.\n * @param SettingsListItemProps\n * @returns Formatted div encompassing the list item content\n */\nexport function SettingsListItem({\n  primary,\n  secondary,\n  children,\n  isLoading = false,\n  loadingMessage,\n}: SettingsListItemProps) {\n  return (\n    <div className=\"tw-flex tw-items-center tw-justify-between tw-space-x-4 tw-py-2\">\n      <div>\n        <p className=\"tw-text-sm tw-font-medium tw-leading-none\">{primary}</p>\n        <p className=\"tw-whitespace-normal tw-break-words tw-text-sm tw-text-muted-foreground\">\n          {secondary}\n        </p>\n      </div>\n\n      {isLoading ? (\n        <p className=\"tw-text-sm tw-text-muted-foreground\">{loadingMessage}</p>\n      ) : (\n        <div>{children}</div>\n      )}\n    </div>\n  );\n}\n\n/** Props for SettingsListHeader component */\ntype SettingsListHeaderProps = {\n  /** The primary text of the list header */\n  primary: string;\n\n  /** Optional secondary text of the list header */\n  secondary?: string | undefined;\n\n  /** Optional boolean to include a separator underneath the secondary text. Defaults to false */\n  includeSeparator?: boolean;\n};\n\n/**\n * SettingsListHeader component displays text above the list\n *\n * @deprecated Jul 18 2025. This component is no longer supported or tested. Use of this component\n *   is discouraged and it may be removed in the future.\n * @param SettingsListHeaderProps\n * @returns Formatted div with list header content\n */\nexport function SettingsListHeader({\n  primary,\n  secondary,\n  includeSeparator = false,\n}: SettingsListHeaderProps) {\n  return (\n    <div className=\"tw-space-y-4 tw-py-2\">\n      <div>\n        <h3 className=\"tw-text-lg tw-font-medium\">{primary}</h3>\n        <p className=\"tw-text-sm tw-text-muted-foreground\">{secondary}</p>\n      </div>\n      {includeSeparator ? <Separator /> : ''}\n    </div>\n  );\n}\n","import { GroupsInMultiColumnMenu, Localized } from 'platform-bible-utils';\n\n/**\n * Function that looks up the key of a sub-menu group using the value of it's `menuItem` property.\n *\n * @example\n *\n * ```ts\n * const groups = {\n *   'platform.subMenu': { menuItem: 'platform.subMenuId', order: 1 },\n *   'platform.subSubMenu': { menuItem: 'platform.subSubMenuId', order: 2 },\n * };\n * const id = 'platform.subMenuId';\n * const groupKey = getSubMenuGroupKeyForMenuItemId(groups, id);\n * console.log(groupKey); // Output: 'platform.subMenu'\n * ```\n *\n * @param groups The JSON Object containing the group definitions\n * @param id The value of the `menuItem` property of the group to look up\n * @returns The key of the group that has the `menuItem` property with the value of `id` or\n *   `undefined` if no such group exists.\n */\nexport function getSubMenuGroupKeyForMenuItemId(\n  groups: Localized<GroupsInMultiColumnMenu>,\n  id: string,\n): string | undefined {\n  return Object.entries(groups).find(\n    ([, value]) => 'menuItem' in value && value.menuItem === id,\n  )?.[0];\n}\n","import { cn } from '@/utils/shadcn-ui.util';\n\ntype MenuItemIconProps = {\n  /** The icon to display */\n  icon: string;\n  /** The label of the menu item */\n  menuLabel: string;\n  /** Whether the icon is leading or trailing */\n  leading?: boolean;\n};\n\nfunction MenuItemIcon({ icon, menuLabel, leading }: MenuItemIconProps) {\n  return icon ? (\n    <img\n      className={cn('tw-max-h-5 tw-max-w-5', leading ? 'tw-me-2' : 'tw-ms-2')}\n      src={icon}\n      alt={`${leading ? 'Leading' : 'Trailing'} icon for ${menuLabel}`}\n    />\n  ) : undefined;\n}\n\nexport default MenuItemIcon;\n","import {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuPortal,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from '@/components/shadcn-ui/dropdown-menu';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/shadcn-ui/tooltip';\nimport { MenuIcon } from 'lucide-react';\nimport {\n  GroupsInMultiColumnMenu,\n  Localized,\n  MenuItemContainingCommand,\n  MenuItemContainingSubmenu,\n  MultiColumnMenu,\n} from 'platform-bible-utils';\nimport { Fragment, ReactNode } from 'react';\nimport { Button } from '@/components/shadcn-ui/button';\nimport { getSubMenuGroupKeyForMenuItemId } from './menu.util';\nimport { SelectMenuItemHandler } from './platform-menubar.component';\nimport MenuItemIcon from './menu-icon.component';\n\nconst getGroupContent = (\n  groups: Localized<GroupsInMultiColumnMenu>,\n  items: Localized<(MenuItemContainingCommand | MenuItemContainingSubmenu)[]>,\n  columnOrSubMenuKey: string | undefined,\n  onSelectMenuItem: SelectMenuItemHandler,\n) => {\n  if (!columnOrSubMenuKey) return undefined;\n\n  const sortedGroupsForColumn = Object.entries(groups)\n    .filter(\n      ([key, group]) =>\n        ('column' in group && group.column === columnOrSubMenuKey) || key === columnOrSubMenuKey,\n    )\n    .sort(([, a], [, b]) => a.order - b.order);\n\n  return sortedGroupsForColumn.flatMap(([groupKey]) => {\n    const groupItems = items\n      .filter((item) => item.group === groupKey)\n      .sort((a, b) => a.order - b.order)\n      .map((item: Localized<MenuItemContainingCommand | MenuItemContainingSubmenu>) => {\n        return (\n          <Tooltip key={`tooltip-${item.label}-${'command' in item ? item.command : item.id}`}>\n            <TooltipTrigger asChild>\n              {'command' in item ? (\n                <DropdownMenuItem\n                  key={`dropdown-menu-item-${item.label}-${item.command}`}\n                  onClick={() => {\n                    // Since the item has a command, we know it is a MenuItemContainingCommand.\n                    // eslint-disable-next-line no-type-assertion/no-type-assertion\n                    onSelectMenuItem(item as MenuItemContainingCommand);\n                  }}\n                >\n                  {item.iconPathBefore && (\n                    <MenuItemIcon icon={item.iconPathBefore} menuLabel={item.label} leading />\n                  )}\n                  {item.label}\n                  {item.iconPathAfter && (\n                    <MenuItemIcon icon={item.iconPathAfter} menuLabel={item.label} />\n                  )}\n                </DropdownMenuItem>\n              ) : (\n                <DropdownMenuSub key={`dropdown-menu-sub-${item.label}-${item.id}`}>\n                  <DropdownMenuSubTrigger>{item.label}</DropdownMenuSubTrigger>\n\n                  <DropdownMenuPortal>\n                    <DropdownMenuSubContent>\n                      {getGroupContent(\n                        groups,\n                        items,\n                        getSubMenuGroupKeyForMenuItemId(groups, item.id),\n                        onSelectMenuItem,\n                      )}\n                    </DropdownMenuSubContent>\n                  </DropdownMenuPortal>\n                </DropdownMenuSub>\n              )}\n            </TooltipTrigger>\n            {item.tooltip && <TooltipContent>{item.tooltip}</TooltipContent>}\n          </Tooltip>\n        );\n      });\n\n    return groupItems;\n  });\n};\n\nexport type TabDropdownMenuProps = {\n  /** The handler to use for menu commands */\n  onSelectMenuItem: SelectMenuItemHandler;\n\n  /** The menu data to show on the dropdown menu */\n  menuData: Localized<MultiColumnMenu>;\n\n  /** Defines a string value that labels the current element */\n  tabLabel: string;\n\n  /** Optional icon for the dropdown menu trigger. Defaults to hamburger icon. */\n  icon?: ReactNode;\n\n  /** Additional css class(es) to help with unique styling of the tab dropdown menu */\n  className?: string;\n\n  /** Style variant for the app menubar component. */\n  variant?: 'default' | 'muted';\n\n  /** Optional unique identifier */\n  id?: string;\n};\n\n/**\n * Dropdown menu designed to be used with Platform.Bible menu data. Column headers are ignored.\n * Column data is separated by a horizontal divider, so groups are not distinguishable. Tooltips are\n * displayed on hovering over menu items, if a tooltip is defined for them.\n *\n * A child component can be passed in to show as an icon on the menu trigger button.\n */\nexport default function TabDropdownMenu({\n  onSelectMenuItem,\n  menuData,\n  tabLabel,\n  icon,\n  className,\n  variant,\n  id,\n}: TabDropdownMenuProps) {\n  return (\n    <DropdownMenu variant={variant}>\n      <DropdownMenuTrigger aria-label={tabLabel} className={className} asChild id={id}>\n        <Button variant=\"ghost\" size=\"icon\">\n          {icon ?? <MenuIcon />}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"start\" className=\"tw-z-[250]\">\n        {Object.entries(menuData.columns)\n          .filter(([, column]) => typeof column === 'object')\n          .sort(([, a], [, b]) => {\n            if (typeof a === 'boolean' || typeof b === 'boolean') return 0;\n            return a.order - b.order;\n          })\n          .map(([columnKey], index, array) => (\n            <Fragment key={columnKey}>\n              <DropdownMenuGroup>\n                <TooltipProvider>\n                  {getGroupContent(menuData.groups, menuData.items, columnKey, onSelectMenuItem)}\n                </TooltipProvider>\n              </DropdownMenuGroup>\n\n              {index < array.length - 1 && <DropdownMenuSeparator />}\n            </Fragment>\n          ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","import { PropsWithChildren, ReactNode } from 'react';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Localized, MultiColumnMenu } from 'platform-bible-utils';\nimport { Menu, EllipsisVertical } from 'lucide-react';\nimport { SelectMenuItemHandler } from './menus/platform-menubar.component';\nimport TabDropdownMenu from './menus/tab-dropdown-menu.component';\n\nexport type TabToolbarProps = PropsWithChildren<{\n  /** The handler to use for toolbar item commands */\n  onSelectProjectMenuItem: SelectMenuItemHandler;\n\n  /** The handler to use for toolbar item commands */\n  onSelectViewInfoMenuItem: SelectMenuItemHandler;\n\n  /** Menu data that is used to populate the Menubar component for the project menu. */\n  projectMenuData?: Localized<MultiColumnMenu>;\n\n  /** Menu data that is used to populate the Menubar component for the view info menu */\n  tabViewMenuData?: Localized<MultiColumnMenu>;\n\n  /** Optional unique identifier */\n  id?: string;\n\n  /** Additional css classes to help with unique styling of the extensible toolbar */\n  className?: string;\n\n  /**\n   * Toolbar children to be put at the start of the the toolbar after the project menu icon (left\n   * side in ltr, right side in rtl). Recommended for inner navigation.\n   */\n  startAreaChildren?: ReactNode;\n\n  /** Toolbar children to be put in the center area of the the toolbar. Recommended for tools. */\n  centerAreaChildren?: ReactNode;\n\n  /**\n   * Toolbar children to be put at the end of the the toolbar before the tab view menu icon (right\n   * side in ltr, left side in rtl). Recommended for secondary tools and view options.\n   */\n  endAreaChildren?: ReactNode;\n}>;\n\n/**\n * Component for rendering a customizable tab toolbar.\n *\n * The toolbar includes three main areas to place children components: start, center, and end. It\n * optionally displays dropdown menus for project and view info, populated by the given menu data.\n */\nexport function TabToolbar({\n  onSelectProjectMenuItem,\n  onSelectViewInfoMenuItem,\n  projectMenuData,\n  tabViewMenuData,\n  id,\n  className,\n  startAreaChildren,\n  centerAreaChildren,\n  endAreaChildren,\n}: TabToolbarProps) {\n  return (\n    <div\n      className={cn(\n        'tw-box-border tw-flex tw-h-12 tw-w-full tw-flex-row tw-items-start tw-justify-between tw-overflow-clip tw-border-b tw-border-border tw-text-foreground tw-@container/toolbar *:tw-p-2',\n        className,\n      )}\n      id={id}\n    >\n      {projectMenuData && (\n        // div wrapper gets padding instead of the button\n        <div>\n          <TabDropdownMenu\n            onSelectMenuItem={onSelectProjectMenuItem}\n            menuData={projectMenuData}\n            tabLabel=\"Project\"\n            icon={<Menu />}\n            className=\"tw-h-8 tw-w-8\"\n          />\n        </div>\n      )}\n      {startAreaChildren && (\n        <div className=\"tw-flex tw-shrink tw-grow-[2] tw-flex-row tw-flex-wrap tw-items-start tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-start\">\n          {startAreaChildren}\n        </div>\n      )}\n      {centerAreaChildren && (\n        <div className=\"tw-flex tw-shrink tw-basis-0 tw-flex-row tw-flex-wrap tw-items-start tw-justify-center tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-center @sm:tw-grow @sm:tw-basis-auto\">\n          {centerAreaChildren}\n        </div>\n      )}\n      <div className=\"tw-flex tw-shrink tw-grow-[2] tw-flex-row-reverse tw-flex-wrap tw-items-start tw-gap-2 tw-overflow-clip tw-@container/tab-toolbar-end\">\n        {tabViewMenuData && (\n          // div wrapper gets padding instead of the button\n          <div>\n            <TabDropdownMenu\n              onSelectMenuItem={onSelectViewInfoMenuItem}\n              menuData={tabViewMenuData}\n              tabLabel=\"View Info\"\n              icon={<EllipsisVertical />}\n              className=\"tw-h-8\"\n            />\n          </div>\n        )}\n        {endAreaChildren}\n      </div>\n    </div>\n  );\n}\n\nexport default TabToolbar;\n","// adapted from: https://github.com/shadcn-ui/ui/discussions/752\n\n'use client';\n\nimport { TabsContentProps, TabsListProps, TabsTriggerProps } from '@/components/shadcn-ui/tabs';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\nimport React from 'react';\n\nexport type VerticalTabsProps = React.ComponentPropsWithoutRef<typeof TabsPrimitive.Root> & {\n  className?: string;\n};\n\nexport type LeftTabsTriggerProps = TabsTriggerProps & {\n  value: string;\n  ref?: React.Ref<HTMLButtonElement>;\n};\n\n/**\n * Tabs components provide a set of layered sections of content—known as tab panels–that are\n * displayed one at a time. These components are built on Radix UI primitives and styled with Shadcn\n * UI. See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/tabs See Radix UI\n * Documentation: https://www.radix-ui.com/primitives/docs/components/tabs\n */\nexport const VerticalTabs = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Root>,\n  VerticalTabsProps\n>(({ className, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <TabsPrimitive.Root\n      orientation=\"vertical\"\n      ref={ref}\n      className={cn('tw-flex tw-gap-1 tw-rounded-md tw-text-muted-foreground', className)}\n      {...props}\n      dir={dir}\n    />\n  );\n});\n\nVerticalTabs.displayName = TabsPrimitive.List.displayName;\n\n/** @inheritdoc VerticalTabs */\nexport const VerticalTabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  TabsListProps\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'tw-flex-fit tw-mlk-items-center tw-w-[124px] tw-justify-center tw-rounded-md tw-bg-muted tw-p-1 tw-text-muted-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\nVerticalTabsList.displayName = TabsPrimitive.List.displayName;\n\n/** @inheritdoc VerticalTabs */\nexport const VerticalTabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  LeftTabsTriggerProps\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    {...props}\n    className={cn(\n      'overflow-clip tw-inline-flex tw-w-[116px] tw-cursor-pointer tw-items-center tw-justify-center tw-break-words tw-rounded-sm tw-border-0 tw-bg-muted tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-text-inherit tw-ring-offset-background tw-transition-all hover:tw-text-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=active]:tw-bg-background data-[state=active]:tw-text-foreground data-[state=active]:tw-shadow-sm',\n      className,\n    )}\n  />\n));\n\n/** @inheritdoc VerticalTabs */\nexport const VerticalTabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  TabsContentProps\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      // Removed tw-mt-2 because Sebastian said so\n      'tw-ms-5 tw-flex-grow tw-text-foreground tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2',\n      className,\n    )}\n    {...props}\n  />\n));\nVerticalTabsContent.displayName = TabsPrimitive.Content.displayName;\n","import { SearchBar } from '@/components/basics/search-bar.component';\nimport {\n  VerticalTabs,\n  VerticalTabsContent,\n  VerticalTabsList,\n  VerticalTabsTrigger,\n} from '@/components/basics/tabs-vertical';\nimport { ReactNode } from 'react';\n\nexport type TabKeyValueContent = {\n  key: string;\n  value: string;\n  content: ReactNode;\n};\n\nexport type TabNavigationContentSearchProps = {\n  /** List of values and keys for each tab this component should provide */\n  tabList: TabKeyValueContent[];\n\n  /** The search query in the search bar */\n  searchValue: string;\n\n  /** Handler to run when the value of the search bar changes */\n  onSearch: (searchQuery: string) => void;\n\n  /** Optional placeholder for the search bar */\n  searchPlaceholder?: string;\n\n  /** Optional title to include in the header */\n  headerTitle?: string;\n\n  /** Optional className to modify the search input */\n  searchClassName?: string;\n};\n\n/**\n * TabNavigationContentSearch component provides a vertical tab navigation interface with a search\n * bar at the top. This component allows users to filter content within tabs based on a search\n * query.\n *\n * @param {TabNavigationContentSearchProps} props\n * @param {TabKeyValueContent[]} props.tabList - List of objects containing keys, values, and\n *   content for each tab to be displayed.\n * @param {string} props.searchValue - The current value of the search input.\n * @param {function} props.onSearch - Callback function called when the search input changes;\n *   receives the new search query as an argument.\n * @param {string} [props.searchPlaceholder] - Optional placeholder text for the search input.\n * @param {string} [props.headerTitle] - Optional title to display above the search input.\n * @param {string} [props.searchClassName] - Optional CSS class name to apply custom styles to the\n *   search input.\n */\nexport function TabNavigationContentSearch({\n  tabList,\n  searchValue,\n  onSearch,\n  searchPlaceholder,\n  headerTitle,\n  searchClassName,\n}: TabNavigationContentSearchProps) {\n  return (\n    <div className=\"pr-twp\">\n      <div className=\"tw-sticky tw-top-0 tw-space-y-2 tw-pb-2\">\n        {headerTitle ? <h1>{headerTitle}</h1> : ''}\n        <SearchBar\n          className={searchClassName}\n          value={searchValue}\n          onSearch={onSearch}\n          placeholder={searchPlaceholder}\n        />\n      </div>\n      <VerticalTabs>\n        <VerticalTabsList>\n          {tabList.map((tab) => (\n            <VerticalTabsTrigger key={tab.key} value={tab.value}>\n              {tab.value}\n            </VerticalTabsTrigger>\n          ))}\n        </VerticalTabsList>\n        {tabList.map((tab) => (\n          <VerticalTabsContent key={tab.key} value={tab.value}>\n            {tab.content}\n          </VerticalTabsContent>\n        ))}\n      </VerticalTabs>\n    </div>\n  );\n}\n\nexport default TabNavigationContentSearch;\n","import {\n  MenuContext,\n  MenuContextProps,\n  menuVariants,\n  useMenuContext,\n} from '@/context/menu.context';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport * as MenubarPrimitive from '@radix-ui/react-menubar';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport React from 'react';\n\nfunction MenubarMenu({ ...props }: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />;\n}\n\nfunction MenubarGroup({ ...props }: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />;\n}\n\nfunction MenubarPortal({ ...props }: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />;\n}\n\nfunction MenubarRadioGroup({ ...props }: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />;\n}\n\nfunction MenubarSub({ ...props }: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />;\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root> & {\n    variant?: MenuContextProps['variant'];\n  }\n>(({ className, variant = 'default', ...props }, ref) => {\n  /* #region CUSTOM provide context to add variants */\n  const contextValue = React.useMemo<MenuContextProps>(\n    () => ({\n      variant,\n    }),\n    [variant],\n  );\n  return (\n    <MenuContext.Provider value={contextValue}>\n      {/* #endregion CUSTOM */}\n      <MenubarPrimitive.Root\n        ref={ref}\n        className={cn(\n          'tw-flex tw-h-10 tw-items-center tw-space-x-1 tw-rounded-md tw-border tw-bg-background tw-p-1',\n          className,\n        )}\n        {...props}\n      />\n    </MenuContext.Provider>\n  );\n});\nMenubar.displayName = MenubarPrimitive.Root.displayName;\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        'tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground',\n        // CUSTOM\n        menuVariants({ variant: context.variant, className }), // CUSTOM use context to add variants\n      )}\n      {...props}\n    />\n  );\n});\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName;\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.SubTrigger\n      ref={ref}\n      className={cn(\n        'tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground',\n        inset && 'tw-pl-8',\n        menuVariants({ variant: context.variant, className }), // CUSTOM use context to add variants\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRight className=\"tw-ml-auto tw-h-4 tw-w-4\" />\n    </MenubarPrimitive.SubTrigger>\n  );\n});\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName;\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.SubContent\n      ref={ref}\n      className={cn(\n        'tw-z-50 tw-min-w-[8rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n        // CUSTOM use context to add variants\n        {\n          'tw-bg-popover': context.variant === 'muted',\n        },\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName;\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(({ className, align = 'start', alignOffset = -4, sideOffset = 8, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          'tw-z-50 tw-min-w-[12rem] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n          // CUSTOM reset styles so that only shadcn styles are applied\n          'pr-twp',\n          // CUSTOM use context to add variants\n          {\n            'tw-bg-popover': context.variant === 'muted',\n          },\n          className,\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  );\n});\nMenubarContent.displayName = MenubarPrimitive.Content.displayName;\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.Item\n      ref={ref}\n      className={cn(\n        'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n        inset && 'tw-pl-8',\n        menuVariants({ variant: context.variant, className }), // CUSTOM use context to add variants\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nMenubarItem.displayName = MenubarPrimitive.Item.displayName;\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.CheckboxItem\n      ref={ref}\n      className={cn(\n        'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n        menuVariants({ variant: context.variant, className }), // CUSTOM use context to add variants\n        className,\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center\">\n        <MenubarPrimitive.ItemIndicator>\n          <Check className=\"tw-h-4 tw-w-4\" />\n        </MenubarPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </MenubarPrimitive.CheckboxItem>\n  );\n});\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName;\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => {\n  const context = useMenuContext(); // CUSTOM use context to add variants\n  return (\n    <MenubarPrimitive.RadioItem\n      ref={ref}\n      className={cn(\n        'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n        menuVariants({ variant: context.variant, className }), // CUSTOM use context to add variants\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center\">\n        <MenubarPrimitive.ItemIndicator>\n          <Circle className=\"tw-h-2 tw-w-2 tw-fill-current\" />\n        </MenubarPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </MenubarPrimitive.RadioItem>\n  );\n});\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName;\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn('tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold', inset && 'tw-pl-8', className)}\n    {...props}\n  />\n));\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName;\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn('tw--mx-1 tw-my-1 tw-h-px tw-bg-muted', className)}\n    {...props}\n  />\n));\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName;\n\nfunction MenubarShortcut({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      className={cn('tw-ml-auto tw-text-xs tw-tracking-widest tw-text-muted-foreground', className)}\n      {...props}\n    />\n  );\n}\nMenubarShortcut.displayname = 'MenubarShortcut';\n\nexport {\n  Menubar,\n  MenubarCheckboxItem,\n  MenubarContent,\n  MenubarGroup,\n  MenubarItem,\n  MenubarLabel,\n  MenubarMenu,\n  MenubarPortal,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarSeparator,\n  MenubarShortcut,\n  MenubarSub,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarTrigger,\n};\n","import {\n  Menubar,\n  MenubarContent,\n  MenubarItem,\n  MenubarMenu,\n  MenubarSeparator,\n  MenubarSub,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarTrigger,\n} from '@/components/shadcn-ui/menubar';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/shadcn-ui/tooltip';\nimport {\n  GroupsInMultiColumnMenu,\n  Localized,\n  MenuItemContainingCommand,\n  MenuItemContainingSubmenu,\n  MultiColumnMenu,\n} from 'platform-bible-utils';\nimport { RefObject, useEffect, useRef } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { getSubMenuGroupKeyForMenuItemId } from './menu.util';\nimport MenuItemIcon from './menu-icon.component';\n\n/**\n * Callback function that is invoked when a user selects a menu item. Receives the full\n * `MenuItemContainingCommand` object as an argument.\n */\nexport interface SelectMenuItemHandler {\n  (selectedMenuItem: MenuItemContainingCommand): void;\n}\n\nconst simulateKeyPress = (ref: RefObject<HTMLButtonElement>, keys: KeyboardEventInit[]) => {\n  setTimeout(() => {\n    keys.forEach((key) => {\n      ref.current?.dispatchEvent(new KeyboardEvent('keydown', key));\n    });\n  }, 0);\n};\n\nconst getMenubarContent = (\n  groups: Localized<GroupsInMultiColumnMenu>,\n  items: Localized<(MenuItemContainingCommand | MenuItemContainingSubmenu)[]>,\n  columnOrSubMenuKey: string | undefined,\n  onSelectMenuItem: SelectMenuItemHandler,\n) => {\n  if (!columnOrSubMenuKey) return undefined;\n\n  const sortedGroupsForColumn = Object.entries(groups)\n    .filter(\n      ([key, group]) =>\n        ('column' in group && group.column === columnOrSubMenuKey) || key === columnOrSubMenuKey,\n    )\n    .sort(([, a], [, b]) => a.order - b.order);\n\n  return sortedGroupsForColumn.flatMap(([groupKey], index) => {\n    const groupItems = items\n      .filter((item) => item.group === groupKey)\n      .sort((a, b) => a.order - b.order)\n      .map((item: Localized<MenuItemContainingCommand | MenuItemContainingSubmenu>) => {\n        return (\n          <Tooltip key={`tooltip-${item.label}-${'command' in item ? item.command : item.id}`}>\n            <TooltipTrigger asChild>\n              {'command' in item ? (\n                <MenubarItem\n                  key={`menubar-item-${item.label}-${item.command}`}\n                  onClick={() => {\n                    // Since the item has a command, we know it is a MenuItemContainingCommand.\n                    // eslint-disable-next-line no-type-assertion/no-type-assertion\n                    onSelectMenuItem(item as MenuItemContainingCommand);\n                  }}\n                >\n                  {item.iconPathBefore && (\n                    <MenuItemIcon icon={item.iconPathBefore} menuLabel={item.label} leading />\n                  )}\n                  {item.label}\n                  {item.iconPathAfter && (\n                    <MenuItemIcon icon={item.iconPathAfter} menuLabel={item.label} />\n                  )}\n                </MenubarItem>\n              ) : (\n                <MenubarSub key={`menubar-sub-${item.label}-${item.id}`}>\n                  <MenubarSubTrigger>{item.label}</MenubarSubTrigger>\n                  <MenubarSubContent>\n                    {getMenubarContent(\n                      groups,\n                      items,\n                      getSubMenuGroupKeyForMenuItemId(groups, item.id),\n                      onSelectMenuItem,\n                    )}\n                  </MenubarSubContent>\n                </MenubarSub>\n              )}\n            </TooltipTrigger>\n            {item.tooltip && <TooltipContent>{item.tooltip}</TooltipContent>}\n          </Tooltip>\n        );\n      });\n\n    const itemsWithSeparator = [...groupItems];\n    if (groupItems.length > 0 && index < sortedGroupsForColumn.length - 1) {\n      itemsWithSeparator.push(<MenubarSeparator key={`separator-${groupKey}`} />);\n    }\n\n    return itemsWithSeparator;\n  });\n};\n\ntype PlatformMenubarProps = {\n  /** Menu data that is used to populate the Menubar component. */\n  menuData: Localized<MultiColumnMenu>;\n\n  /** The handler to use for menu commands. */\n  onSelectMenuItem: SelectMenuItemHandler;\n\n  /**\n   * Optional callback function that is executed whenever a menu on the Menubar is opened or closed.\n   * Helpful for handling updates to the menu, as changing menu data when the menu is opened is not\n   * desirable.\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /** Style variant for the app menubar component. */\n  variant?: 'default' | 'muted';\n};\n\n/** Menubar component tailored to work with Platform.Bible menu data */\nexport function PlatformMenubar({\n  menuData,\n  onSelectMenuItem,\n  onOpenChange,\n  variant,\n}: PlatformMenubarProps) {\n  // These refs will always be defined\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const menubarRef = useRef<HTMLDivElement>(undefined!);\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const projectMenuRef = useRef<HTMLButtonElement>(undefined!);\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const windowMenuRef = useRef<HTMLButtonElement>(undefined!);\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const layoutMenuRef = useRef<HTMLButtonElement>(undefined!);\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const helpMenuRef = useRef<HTMLButtonElement>(undefined!);\n\n  const getRefForColumn = (columnKey: string) => {\n    switch (columnKey) {\n      case 'platform.app':\n        return projectMenuRef;\n      case 'platform.window':\n        return windowMenuRef;\n      case 'platform.layout':\n        return layoutMenuRef;\n      case 'platform.help':\n        return helpMenuRef;\n      default:\n        return undefined;\n    }\n  };\n\n  // This is a quick and dirty way to implement some shortcuts by simulating key presses\n  useHotkeys(['alt', 'alt+p', 'alt+l', 'alt+n', 'alt+h'], (event, handler) => {\n    event.preventDefault();\n\n    const escKey: KeyboardEventInit = { key: 'Escape', code: 'Escape', keyCode: 27, bubbles: true };\n    const spaceKey: KeyboardEventInit = { key: ' ', code: 'Space', keyCode: 32, bubbles: true };\n\n    switch (handler.hotkey) {\n      case 'alt':\n        simulateKeyPress(projectMenuRef, [escKey]);\n        break;\n      case 'alt+p':\n        projectMenuRef.current?.focus();\n        simulateKeyPress(projectMenuRef, [escKey, spaceKey]);\n        break;\n      case 'alt+l':\n        windowMenuRef.current?.focus();\n        simulateKeyPress(windowMenuRef, [escKey, spaceKey]);\n        break;\n      case 'alt+n':\n        layoutMenuRef.current?.focus();\n        simulateKeyPress(layoutMenuRef, [escKey, spaceKey]);\n        break;\n      case 'alt+h':\n        helpMenuRef.current?.focus();\n        simulateKeyPress(helpMenuRef, [escKey, spaceKey]);\n        break;\n      default:\n        break;\n    }\n  });\n\n  useEffect(() => {\n    if (!onOpenChange || !menubarRef.current) return;\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.attributeName === 'data-state' && mutation.target instanceof HTMLElement) {\n          const state = mutation.target.getAttribute('data-state');\n\n          if (state === 'open') {\n            onOpenChange(true);\n          } else {\n            onOpenChange(false);\n          }\n        }\n      });\n    });\n\n    const menubarElement = menubarRef.current;\n    const dataStateAttributes = menubarElement.querySelectorAll('[data-state]');\n\n    dataStateAttributes.forEach((element) => {\n      observer.observe(element, { attributes: true });\n    });\n\n    return () => observer.disconnect();\n  }, [onOpenChange]);\n\n  if (!menuData) return undefined;\n\n  return (\n    <Menubar ref={menubarRef} className=\"pr-twp tw-border-0 tw-bg-transparent\" variant={variant}>\n      {Object.entries(menuData.columns)\n        .filter(([, column]) => typeof column === 'object')\n        .sort(([, a], [, b]) => {\n          if (typeof a === 'boolean' || typeof b === 'boolean') return 0;\n          return a.order - b.order;\n        })\n        .map(([columnKey, column]) => (\n          <MenubarMenu key={columnKey}>\n            <MenubarTrigger ref={getRefForColumn(columnKey)}>\n              {typeof column === 'object' && 'label' in column && column.label}\n            </MenubarTrigger>\n            <MenubarContent\n              className=\"tw-z-[250]\" // Need to get over the floating web view z-index 200\n            >\n              <TooltipProvider>\n                {getMenubarContent(menuData.groups, menuData.items, columnKey, onSelectMenuItem)}\n              </TooltipProvider>\n            </MenubarContent>\n          </MenubarMenu>\n        ))}\n    </Menubar>\n  );\n}\n\nexport default PlatformMenubar;\n","import {\n  SelectMenuItemHandler,\n  PlatformMenubar,\n} from '@/components/advanced/menus/platform-menubar.component';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Localized, MultiColumnMenu } from 'platform-bible-utils';\nimport { PropsWithChildren, ReactNode, useRef } from 'react';\n\nexport type ToolbarProps = PropsWithChildren<{\n  /** The handler to use for menu commands (and eventually toolbar commands). */\n  onSelectMenuItem: SelectMenuItemHandler;\n\n  /**\n   * Menu data that is used to populate the Menubar component. If empty object, no menus will be\n   * shown on the App Menubar\n   */\n  menuData?: Localized<MultiColumnMenu>;\n\n  /**\n   * Optional callback function that is executed whenever a menu on the App Menubar is opened or\n   * closed. Helpful for handling updates to the menu, as changing menu data when the menu is opened\n   * is not desirable.\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /** Optional unique identifier */\n  id?: string;\n\n  /** Additional css classes to help with unique styling of the toolbar */\n  className?: string;\n\n  /**\n   * Whether the toolbar should be used as a draggable area for moving the application. This will\n   * add an electron specific style `WebkitAppRegion: 'drag'` to the toolbar in order to make it\n   * draggable. See:\n   * https://www.electronjs.org/docs/latest/tutorial/custom-title-bar#create-a-custom-title-bar\n   */\n  shouldUseAsAppDragArea?: boolean;\n\n  /** Toolbar children to be put at the start of the toolbar (left side in ltr, right side in rtl) */\n  appMenuAreaChildren?: ReactNode;\n\n  /** Toolbar children to be put at the end of the toolbar (right side in ltr, left side in rtl) */\n  configAreaChildren?: ReactNode;\n\n  /** Variant of the menubar */\n  menubarVariant?: 'default' | 'muted';\n}>;\n\n/**\n * Get tailwind class for reserved space for the window controls / macos \"traffic lights\". Passing\n * 'darwin' will reserve the necessary space for macos traffic lights at the start, otherwise a\n * different amount of space at the end for the window controls.\n *\n * Apply to the toolbar like: `<Toolbar className={cn('tw-h-8 tw-bg-background',\n * getToolbarOSReservedSpaceClassName('darwin'))}>` or `<Toolbar\n * className={getToolbarOSReservedSpaceClassName('linux')}>`\n *\n * @param operatingSystem The os platform: 'darwin' (macos) | anything else\n * @returns The class name to apply to the toolbar if os specific space should be reserved\n */\nexport function getToolbarOSReservedSpaceClassName(\n  operatingSystem: string | undefined,\n): string | undefined {\n  switch (operatingSystem) {\n    case undefined:\n      return undefined;\n    case 'darwin':\n      return 'tw-ps-[85px]';\n    default:\n      return 'tw-pe-[calc(138px+1rem)]';\n  }\n}\n\n/**\n * A customizable toolbar component with a menubar, content area, and configure area.\n *\n * This component is designed to be used in the window title bar of an electron application.\n *\n * @param {ToolbarProps} props - The props for the component.\n */\nexport function Toolbar({\n  menuData,\n  onOpenChange,\n  onSelectMenuItem,\n  className,\n  id,\n  children,\n  appMenuAreaChildren,\n  configAreaChildren,\n  shouldUseAsAppDragArea,\n  menubarVariant = 'default',\n}: ToolbarProps) {\n  // This ref will always be defined\n  // eslint-disable-next-line no-type-assertion/no-type-assertion\n  const containerRef = useRef<HTMLDivElement>(undefined!);\n\n  return (\n    <div\n      className={cn('tw-border tw-px-4 tw-text-foreground', className)}\n      ref={containerRef}\n      style={{ position: 'relative' }}\n      id={id}\n    >\n      <div\n        className=\"tw-flex tw-h-full tw-w-full tw-justify-between tw-overflow-hidden\"\n        /* @ts-ignore Electron-only property */\n        style={shouldUseAsAppDragArea ? { WebkitAppRegion: 'drag' } : undefined}\n      >\n        {/* App Menu area */}\n        <div className=\"tw-flex tw-grow tw-basis-0\">\n          <div\n            className=\"tw-flex tw-items-center tw-gap-2\"\n            /* @ts-ignore Electron-only property */\n            style={shouldUseAsAppDragArea ? { WebkitAppRegion: 'no-drag' } : undefined}\n          >\n            {appMenuAreaChildren}\n\n            {menuData && (\n              <PlatformMenubar\n                menuData={menuData}\n                onOpenChange={onOpenChange}\n                onSelectMenuItem={onSelectMenuItem}\n                variant={menubarVariant}\n              />\n            )}\n          </div>\n        </div>\n\n        {/* Content area */}\n        <div\n          className=\"tw-flex tw-items-center tw-gap-2 tw-px-2\"\n          /* @ts-ignore Electron-only property */\n          style={shouldUseAsAppDragArea ? { WebkitAppRegion: 'no-drag' } : undefined}\n        >\n          {children}\n        </div>\n\n        {/* Configure area */}\n        <div className=\"tw-flex tw-min-w-0 tw-grow tw-basis-0 tw-justify-end\">\n          <div\n            className=\"tw-flex tw-min-w-0 tw-items-center tw-gap-2 tw-pe-1\"\n            /* @ts-ignore Electron-only property */\n            style={shouldUseAsAppDragArea ? { WebkitAppRegion: 'no-drag' } : undefined}\n          >\n            {configAreaChildren}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import { useState } from 'react';\nimport { LocalizedStringValue } from 'platform-bible-utils';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../shadcn-ui/select';\nimport { Label } from '../shadcn-ui/label';\n\n/**\n * Immutable array containing all keys used for localization in this component. If you're using this\n * component in an extension, you can pass it into the useLocalizedStrings hook to easily obtain the\n * localized strings and pass them into the localizedStrings prop of this component\n */\nexport const UI_LANGUAGE_SELECTOR_STRING_KEYS = Object.freeze([\n  '%settings_uiLanguageSelector_selectFallbackLanguages%',\n] as const);\n\nexport type UiLanguageSelectorLocalizedStrings = {\n  [localizedUiLanguageSelectorKey in (typeof UI_LANGUAGE_SELECTOR_STRING_KEYS)[number]]?: LocalizedStringValue;\n};\n\n/**\n * Gets the localized value for the provided key\n *\n * @param strings Object containing localized string\n * @param key Key for a localized string\n * @returns The localized value for the provided key, if available. Returns the key if no localized\n *   value is available\n */\nconst localizeString = (\n  strings: UiLanguageSelectorLocalizedStrings,\n  key: keyof UiLanguageSelectorLocalizedStrings,\n) => {\n  return strings[key] ?? key;\n};\n\nexport type LanguageInfo = {\n  /** The name of the language to be displayed (in its native script) */\n  autonym: string;\n  /**\n   * The name of the language in other languages, so that the language can also be displayed in the\n   * current UI language, if known.\n   */\n  uiNames?: Record<string, string>;\n  /**\n   * Other known names of the language (for searching). This can include pejorative names and should\n   * never be displayed unless typed by the user.\n   */\n  otherNames?: string[];\n};\n\nexport type UiLanguageSelectorProps = {\n  /** Full set of known languages to display. The keys are valid BCP-47 tags. */\n  knownUiLanguages: Record<string, LanguageInfo>;\n  /** IETF BCP-47 language tag of the current primary UI language. `undefined` => 'en' */\n  primaryLanguage: string;\n  /**\n   * Ordered list of fallback language tags to use if the localization key can't be found in the\n   * current primary UI language. This list never contains English ('en') because it is the ultimate\n   * fallback.\n   */\n  fallbackLanguages: string[] | undefined;\n  /**\n   * Handler for when either the primary or the fallback languages change (or both). For this\n   * handler, the primary UI language is the first one in the array, followed by the fallback\n   * languages in order of decreasing preference.\n   */\n  onLanguagesChange?: (newUiLanguages: string[]) => void;\n  /** Handler for the primary language changes. */\n  onPrimaryLanguageChange?: (newPrimaryUiLanguage: string) => void;\n  /**\n   * Handler for when the fallback languages change. The array contains the fallback languages in\n   * order of decreasing preference.\n   */\n  onFallbackLanguagesChange?: (newFallbackLanguages: string[]) => void;\n  /**\n   * Map whose keys are localized string keys as contained in UI_LANGUAGE_SELECTOR_STRING_KEYS and\n   * whose values are the localized strings (in the current UI language).\n   */\n  localizedStrings: UiLanguageSelectorLocalizedStrings;\n  /** Additional css classes to help with unique styling of the control */\n  className?: string;\n};\n\n/**\n * A component for selecting the user interface language and managing fallback languages. Allows\n * users to choose a primary UI language and optionally select fallback languages.\n *\n * @param {UiLanguageSelectorProps} props - The props for the component.\n */\nexport function UiLanguageSelector({\n  knownUiLanguages,\n  primaryLanguage = 'en',\n  fallbackLanguages = [],\n  onLanguagesChange,\n  onPrimaryLanguageChange,\n  onFallbackLanguagesChange,\n  localizedStrings,\n  className,\n}: UiLanguageSelectorProps) {\n  const selectFallbackLanguagesText = localizeString(\n    localizedStrings,\n    '%settings_uiLanguageSelector_selectFallbackLanguages%',\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleLanguageChange = (code: string) => {\n    if (onPrimaryLanguageChange) onPrimaryLanguageChange(code);\n    // REVIEW: Should fallback languages be preserved when primary language changes?\n    if (onLanguagesChange)\n      onLanguagesChange([code, ...fallbackLanguages.filter((lang) => lang !== code)]);\n    if (onFallbackLanguagesChange && fallbackLanguages.find((l) => l === code))\n      onFallbackLanguagesChange([...fallbackLanguages.filter((lang) => lang !== code)]);\n    setIsOpen(false); // Close the dropdown when a selection is made\n  };\n\n  /**\n   * Gets the display name for the given language. This will typically include the autonym (in the\n   * native script), along with the name of the language in the current UI locale if known, with a\n   * fallback to the English name (if known).\n   *\n   * @param {string} lang - The BCP-47 code of the language whose display name is being requested.\n   * @param {string} uiLang - The BCP-47 code of the current user-interface language used used to\n   *   try to look up the name of the language in a form that is likely to be helpful to the user if\n   *   they do not recognize the autonym.\n   * @returns {string} The display name of the language.\n   */\n  const getLanguageDisplayName = (lang: string, uiLang: string) => {\n    const altName =\n      uiLang !== lang\n        ? (knownUiLanguages[lang]?.uiNames?.[uiLang] ?? knownUiLanguages[lang]?.uiNames?.en)\n        : undefined;\n\n    return altName\n      ? `${knownUiLanguages[lang]?.autonym} (${altName})`\n      : knownUiLanguages[lang]?.autonym;\n  };\n\n  return (\n    <div className={cn('pr-twp tw-max-w-sm', className)}>\n      {/* Language Selector */}\n      <Select\n        name=\"uiLanguage\"\n        value={primaryLanguage}\n        onValueChange={handleLanguageChange}\n        open={isOpen}\n        onOpenChange={(open) => setIsOpen(open)}\n      >\n        <SelectTrigger>\n          <SelectValue />\n        </SelectTrigger>\n        <SelectContent\n          className=\"tw-z-[250]\" // Need to get over the floating web view z-index 200\n        >\n          {Object.keys(knownUiLanguages).map((key) => {\n            return (\n              <SelectItem key={key} value={key}>\n                {getLanguageDisplayName(key, primaryLanguage)}\n              </SelectItem>\n            );\n          })}\n        </SelectContent>\n      </Select>\n\n      {/* Fallback Language Button */}\n      {primaryLanguage !== 'en' && (\n        <>\n          <Label className=\"tw-ms-3\">{selectFallbackLanguagesText}</Label>\n          <div className=\"tw-ms-3\">\n            {/* Do not localize or \"improve\". This label is temporary. */}\n            <Label>\n              Currently:{'\\u00A0'}\n              {fallbackLanguages?.length > 0\n                ? `${fallbackLanguages\n                    .map((f) => getLanguageDisplayName(f, primaryLanguage))\n                    .join(', ')}`\n                : `default (${knownUiLanguages.en.autonym})`}\n            </Label>\n            {/* <MultiSelector>\n              Something like this will be added once UX decides exactly what they want.\n          </MultiSelector> */}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default UiLanguageSelector;\n","import { Label } from '@/components/shadcn-ui/label';\nimport { ReactNode } from 'react';\n\ntype SmartLabelProps = {\n  item: string;\n  createLabel?: (item: string) => string;\n  createComplexLabel?: (item: string) => ReactNode;\n};\n\n/** Create labels with text, react elements (e.g. links), or text + react elements */\nfunction SmartLabel({ item, createLabel, createComplexLabel }: SmartLabelProps): ReactNode {\n  if (createLabel) {\n    return <Label>{createLabel(item)}</Label>;\n  }\n  if (createComplexLabel) {\n    return <Label>{createComplexLabel(item)}</Label>;\n  }\n  return <Label>{item}</Label>;\n}\n\nexport default SmartLabel;\n","import { Checkbox } from '@/components/shadcn-ui/checkbox';\nimport { ReactNode } from 'react';\nimport SmartLabel from './smart-label.component';\n\nexport type ChecklistProps = {\n  /** Optional string representing the id attribute of the Checklist */\n  id?: string;\n  /** Optional string representing CSS class name(s) for styling */\n  className?: string;\n  /** Array of strings representing the checkable items */\n  listItems: string[];\n  /** Array of strings representing the checked items */\n  selectedListItems: string[];\n  /**\n   * Function that is called when a checkbox item is selected or deselected\n   *\n   * @param item The string description for this item\n   * @param selected True if selected, false if not selected\n   */\n  handleSelectListItem: (item: string, selected: boolean) => void;\n\n  /**\n   * Optional function creates a label for a provided checkable item\n   *\n   * @param item The item for which a label is to be created\n   * @returns A string representing the label text for the checkbox associated with that item\n   */\n  createLabel?: (item: string) => string;\n\n  /**\n   * Optional function creates a label for a provided checkable item\n   *\n   * @param item The item for which a label is to be created, including text and any additional\n   *   elements (e.g. links)\n   * @returns A react node representing the label text and any additional elements (e.g. links) for\n   *   the checkbox associated with that item\n   */\n  createComplexLabel?: (item: string) => ReactNode;\n};\n\n/** Renders a list of checkboxes. Each checkbox corresponds to an item from the `listItems` array. */\nexport function Checklist({\n  id,\n  className,\n  listItems,\n  selectedListItems,\n  handleSelectListItem,\n  createLabel,\n  createComplexLabel,\n}: ChecklistProps) {\n  return (\n    <div id={id} className={className}>\n      {listItems.map((item) => (\n        <div key={item} className=\"tw-m-2 tw-flex tw-items-center\">\n          <Checkbox\n            className=\"tw-me-2 tw-align-middle\"\n            checked={selectedListItems.includes(item)}\n            onCheckedChange={(value: boolean) => handleSelectListItem(item, value)}\n          />\n          <SmartLabel\n            item={item}\n            createLabel={createLabel}\n            createComplexLabel={createComplexLabel}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Checklist;\n","import { cn } from '@/utils/shadcn-ui.util';\nimport { LoaderCircle, LucideProps } from 'lucide-react';\nimport { forwardRef } from 'react';\n\nexport type SpinnerProps = LucideProps;\n\n/**\n * A spinner component that uses the LoaderCircle icon from lucide-react to indicate loading states.\n * The spinner rotates to indicate that a process is ongoing.\n */\nexport const Spinner = forwardRef<SVGSVGElement, SpinnerProps>(({ className, ...props }, ref) => {\n  return (\n    <LoaderCircle size={35} className={cn('tw-animate-spin', className)} {...props} ref={ref} />\n  );\n});\n\nSpinner.displayName = 'Spinner';\n\nexport default Spinner;\n","import { Input as ShadInput } from '@/components/shadcn-ui/input';\nimport { Label as ShadLabel } from '@/components/shadcn-ui/label';\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { ChangeEventHandler, FocusEventHandler } from 'react';\n\nexport type TextFieldProps = {\n  /** Optional unique identifier */\n  id?: string;\n  /**\n   * If `true`, the component is disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean;\n  /**\n   * If `true`, the label is displayed in an error state.\n   *\n   * @default false\n   */\n  hasError?: boolean;\n  /**\n   * If `true`, the input will take up the full width of its container.\n   *\n   * @default false\n   */\n  isFullWidth?: boolean;\n  /** Text that gives the user instructions on what contents the TextField expects */\n  helperText?: string;\n  /** The title of the TextField */\n  label?: string;\n  /** The short hint displayed in the `input` before the user enters a value. */\n  placeholder?: string;\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   *\n   * @default false\n   */\n  isRequired?: boolean;\n  /** Additional css classes to help with unique styling of the text field */\n  className?: string;\n  /** Starting value for the text field if it is not controlled */\n  defaultValue?: string | number;\n  /** Value of the text field if controlled */\n  value?: string | number;\n  /** Triggers when content of textfield is changed */\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  /** Triggers when textfield gets focus */\n  onFocus?: FocusEventHandler<HTMLInputElement>;\n  /** Triggers when textfield loses focus */\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n};\n\n/**\n * Text input field\n *\n * Thanks to Shadcn for heavy inspiration and documentation\n * https://ui.shadcn.com/docs/components/input#with-label\n */\nexport function TextField({\n  id,\n  isDisabled = false,\n  hasError = false,\n  isFullWidth = false,\n  helperText,\n  label,\n  placeholder,\n  isRequired = false,\n  className,\n  defaultValue,\n  value,\n  onChange,\n  onFocus,\n  onBlur,\n}: TextFieldProps) {\n  return (\n    <div className={cn('tw-inline-grid tw-items-center tw-gap-1.5', { 'tw-w-full': isFullWidth })}>\n      <ShadLabel\n        htmlFor={id}\n        className={cn({\n          'tw-text-red-600': hasError,\n          'tw-hidden': !label,\n        })}\n      >{`${label}${isRequired ? '*' : ''}`}</ShadLabel>\n      <ShadInput\n        id={id}\n        disabled={isDisabled}\n        placeholder={placeholder}\n        required={isRequired}\n        className={cn(className, { 'tw-border-red-600': hasError })}\n        defaultValue={defaultValue}\n        value={value}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n      />\n      <p className={cn({ 'tw-hidden': !helperText })}>{helperText}</p>\n    </div>\n  );\n}\n\nexport default TextField;\n","import React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\nconst alertVariants = cva(\n  // CUSTOM: Copied all `svg` arbitrary selector variant classes as `img` variants so we can use\n  // images (or svgs from file) as icons\n  // Implemented by TJ Couch\n  // Approved by Alex Mercado\n  // 20 February 2025\n  'tw-relative tw-w-full tw-rounded-lg tw-border tw-p-4 [&>svg~*]:tw-pl-7 [&>svg+div]:tw-translate-y-[-3px] [&>svg]:tw-absolute [&>svg]:tw-left-4 [&>svg]:tw-top-4 [&>svg]:tw-text-foreground [&>img~*]:tw-pl-7 [&>img+div]:tw-translate-y-[-3px] [&>img]:tw-absolute [&>img]:tw-left-4 [&>img]:tw-top-4 [&>img]:tw-text-foreground',\n  {\n    variants: {\n      variant: {\n        default: 'tw-bg-background tw-text-foreground',\n        destructive:\n          // CUSTOM: Copied all `svg` arbitrary selector variant classes as `img` variants so we can\n          // use images (or svgs from file) as icons\n          // Implemented by TJ Couch\n          // Approved by Alex Mercado\n          // 20 February 2025\n          'tw-border-destructive/50 tw-text-destructive dark:tw-border-destructive [&>svg]:tw-text-destructive [&>img]:tw-text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n/**\n * The Alert displays a callout for user attention. The component is built and styled by Shadcn UI.\n * See Shadcn UI Documentation https://ui.shadcn.com/docs/components/alert\n */\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\n));\nAlert.displayName = 'Alert';\n\n/** @inheritdoc Alert */\nconst AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h5\n      ref={ref}\n      className={cn('tw-mb-1 tw-font-medium tw-leading-none tw-tracking-tight', className)}\n      {...props}\n    >\n      {/* added because of https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/heading-has-content.md  */}\n      {props.children}{' '}\n    </h5>\n  ),\n);\nAlertTitle.displayName = 'AlertTitle';\n\n/** @inheritdoc Alert */\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('tw-text-sm [&_p]:tw-leading-relaxed', className)} {...props} />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertTitle, AlertDescription };\n","import React from 'react';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * The Avatar component displays a user's profile picture or initials. The component is built and\n * styled by Shadcn UI. See Shadcn UI Documentation https://ui.shadcn.com/docs/components/avatar\n */\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'pr-twp tw-relative tw-flex tw-h-10 tw-w-10 tw-shrink-0 tw-overflow-hidden tw-rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\n/** @inheritdoc Avatar */\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('pr-twp tw-aspect-square tw-h-full tw-w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\n/** @inheritdoc Avatar */\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'pr-twp tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center tw-rounded-full tw-bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarImage, AvatarFallback };\n","import React from 'react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * The Card component displays a card with header, content, and footer. This component is built and\n * styled with Shadcn UI. See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/card\n */\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'pr-twp tw-rounded-lg tw-border tw-bg-card tw-text-card-foreground tw-shadow-sm',\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nCard.displayName = 'Card';\n\n/** @inheritdoc Card */\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('pr-twp tw-flex tw-flex-col tw-space-y-1.5 tw-p-6', className)}\n      {...props}\n    />\n  ),\n);\nCardHeader.displayName = 'CardHeader';\n\n/** @inheritdoc Card */\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn(\n        'pr-twp tw-text-2xl tw-font-semibold tw-leading-none tw-tracking-tight',\n        className,\n      )}\n      {...props}\n    >\n      {/* added because of https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/heading-has-content.md  */}\n      {props.children}\n    </h3>\n  ),\n);\nCardTitle.displayName = 'CardTitle';\n\n/** @inheritdoc Card */\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('pr-twp tw-text-sm tw-text-muted-foreground', className)} {...props} />\n));\nCardDescription.displayName = 'CardDescription';\n\n/** @inheritdoc Card */\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('pr-twp tw-p-6 tw-pt-0', className)} {...props} />\n  ),\n);\nCardContent.displayName = 'CardContent';\n\n/** @inheritdoc Card */\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('pr-twp tw-flex tw-items-center tw-p-6 tw-pt-0', className)}\n      {...props}\n    />\n  ),\n);\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import React from 'react';\nimport * as ContextMenuPrimitive from '@radix-ui/react-context-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Context Menu component displays a menu to the user — such as a set of actions or functions,\n * triggered by a button.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/context-menu}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/context-menu}\n */\nconst ContextMenu = ContextMenuPrimitive.Root;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuGroup = ContextMenuPrimitive.Group;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuPortal = ContextMenuPrimitive.Portal;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuSub = ContextMenuPrimitive.Sub;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      'pr-twp tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[state=open]:tw-bg-accent data-[state=open]:tw-text-accent-foreground',\n      inset && 'tw-pl-8',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"tw-ml-auto tw-h-4 tw-w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n));\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      'pr-twp tw-z-50 tw-min-w-[8rem] tw-origin-[--radix-context-menu-content-transform-origin] tw-overflow-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n      className,\n    )}\n    {...props}\n  />\n));\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        'pr-twp tw-z-50 tw-max-h-[--radix-context-menu-content-available-height] tw-min-w-[8rem] tw-origin-[--radix-context-menu-content-transform-origin] tw-overflow-y-auto tw-overflow-x-hidden tw-rounded-md tw-border tw-bg-popover tw-p-1 tw-text-popover-foreground tw-shadow-md tw-animate-in tw-fade-in-80 data-[state=open]:tw-animate-in data-[state=closed]:tw-animate-out data-[state=closed]:tw-fade-out-0 data-[state=open]:tw-fade-in-0 data-[state=closed]:tw-zoom-out-95 data-[state=open]:tw-zoom-in-95 data-[side=bottom]:tw-slide-in-from-top-2 data-[side=left]:tw-slide-in-from-right-2 data-[side=right]:tw-slide-in-from-left-2 data-[side=top]:tw-slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n));\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      'pr-twp tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-px-2 tw-py-1.5 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n      inset && 'tw-pl-8',\n      className,\n    )}\n    {...props}\n  />\n));\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n      className,\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"tw-h-4 tw-w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n));\nContextMenuCheckboxItem.displayName = ContextMenuPrimitive.CheckboxItem.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      'tw-relative tw-flex tw-cursor-default tw-select-none tw-items-center tw-rounded-sm tw-py-1.5 tw-pl-8 tw-pr-2 tw-text-sm tw-outline-none focus:tw-bg-accent focus:tw-text-accent-foreground data-[disabled]:tw-pointer-events-none data-[disabled]:tw-opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"tw-absolute tw-left-2 tw-flex tw-h-3.5 tw-w-3.5 tw-items-center tw-justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"tw-h-2 tw-w-2 tw-fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n));\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      'tw-px-2 tw-py-1.5 tw-text-sm tw-font-semibold tw-text-foreground',\n      inset && 'tw-pl-8',\n      className,\n    )}\n    {...props}\n  />\n));\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName;\n\n/** @inheritdoc ContextMenu */\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn('tw--mx-1 tw-my-1 tw-h-px tw-bg-border', className)}\n    {...props}\n  />\n));\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName;\n\n/** @inheritdoc ContextMenu */\nfunction ContextMenuShortcut({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      className={cn('tw-ml-auto tw-text-xs tw-tracking-widest tw-text-muted-foreground', className)}\n      {...props}\n    />\n  );\n}\nContextMenuShortcut.displayName = 'ContextMenuShortcut';\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n};\n","import React from 'react';\nimport { Drawer as DrawerPrimitive } from 'vaul';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n// CUSTOM: Added context to manage drawer direction\nconst DrawerContext = React.createContext<{\n  direction?: 'top' | 'bottom' | 'left' | 'right';\n}>({\n  direction: 'bottom',\n});\n\n/**\n * A drawer component for React. These components are built on Vaul and styled with Shadcn UI. See\n * Shadcn UI Documentation: https://ui.shadcn.com/docs/components/drawer See Vaul Documentation:\n * https://vaul.emilkowal.ski/getting-started\n */\nfunction Drawer({\n  shouldScaleBackground = true,\n  direction = 'bottom',\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) {\n  // CUSTOM: Use context to provide direction to child components\n  const contextValue = React.useMemo(() => ({ direction }), [direction]);\n  return (\n    <DrawerContext.Provider value={contextValue}>\n      <DrawerPrimitive.Root\n        shouldScaleBackground={shouldScaleBackground}\n        direction={direction}\n        {...props}\n      />\n    </DrawerContext.Provider>\n  );\n}\nDrawer.displayName = 'Drawer';\n\n/** @inheritdoc Drawer */\nconst DrawerTrigger = DrawerPrimitive.Trigger;\n\n/** @inheritdoc Drawer */\nconst DrawerPortal = DrawerPrimitive.Portal;\n\n/** @inheritdoc Drawer */\nconst DrawerClose = DrawerPrimitive.Close;\n\n/** @inheritdoc Drawer */\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn('tw-fixed tw-inset-0 tw-z-50 tw-bg-black/80', className)}\n    {...props}\n  />\n));\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;\n\n/* CUSTOM: Extend DrawerPrimitive.Content with additional props */\ninterface DrawerContentProps\n  extends React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content> {\n  /** Optionally hide the drawer handle */\n  hideDrawerHandle?: boolean;\n}\n\n/** @inheritdoc Drawer */\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  DrawerContentProps\n>(({ className, children, hideDrawerHandle = false, ...props }, ref) => {\n  // CUSTOM: Use context to provide direction to child components\n  const { direction = 'bottom' } = React.useContext(DrawerContext);\n\n  // CUSTOM: Define positioning and styling based on direction\n  const directionStyles = {\n    bottom: 'tw-inset-x-0 tw-bottom-0 tw-mt-24 tw-rounded-t-[10px]',\n    top: 'tw-inset-x-0 tw-top-0 tw-mb-24 tw-rounded-b-[10px]',\n    left: 'tw-inset-y-0 tw-left-0 tw-mr-24 tw-rounded-r-[10px] tw-w-auto tw-max-w-sm',\n    right: 'tw-inset-y-0 tw-right-0 tw-ml-24 tw-rounded-l-[10px] tw-w-auto tw-max-w-sm',\n  };\n\n  // CUSTOM: Define handle styles for each direction\n  const handleStyles = {\n    bottom: 'tw-mx-auto tw-mt-4 tw-h-2 tw-w-[100px] tw-rounded-full tw-bg-muted',\n    top: 'tw-mx-auto tw-mb-4 tw-h-2 tw-w-[100px] tw-rounded-full tw-bg-muted',\n    left: 'tw-my-auto tw-mr-4 tw-w-2 tw-h-[100px] tw-rounded-full tw-bg-muted',\n    right: 'tw-my-auto tw-ml-4 tw-w-2 tw-h-[100px] tw-rounded-full tw-bg-muted',\n  };\n\n  return (\n    <DrawerPortal>\n      <DrawerOverlay />\n      <DrawerPrimitive.Content\n        ref={ref}\n        className={cn(\n          // CUSTOM: Change Tailwind CSS classes for styling\n          // Removed tw-inset-x-0 tw-bottom-0 tw-mt-24 tw-rounded-t-[10px] tw-flex-col\n          'pr-twp tw-fixed tw-z-50 tw-flex tw-h-auto tw-border tw-bg-background',\n          direction === 'bottom' || direction === 'top' ? 'tw-flex-col' : 'tw-flex-row',\n          directionStyles[direction],\n          className,\n        )}\n        {...props}\n      >\n        {/* CUSTOM: Render handles and children based on direction and if the drawer handle is hidden */}\n        {!hideDrawerHandle && (direction === 'bottom' || direction === 'right') && (\n          <div className={handleStyles[direction]} />\n        )}\n        <div className=\"tw-flex tw-flex-col\">{children}</div>\n        {!hideDrawerHandle && (direction === 'top' || direction === 'left') && (\n          <div className={handleStyles[direction]} />\n        )}\n      </DrawerPrimitive.Content>\n    </DrawerPortal>\n  );\n});\nDrawerContent.displayName = 'DrawerContent';\n\n/** @inheritdoc Drawer */\nfunction DrawerHeader({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn('tw-grid tw-gap-1.5 tw-p-4 tw-text-center sm:tw-text-left', className)}\n      {...props}\n    />\n  );\n}\nDrawerHeader.displayName = 'DrawerHeader';\n\n/** @inheritdoc Drawer */\nfunction DrawerFooter({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={cn('tw-mt-auto tw-flex tw-flex-col tw-gap-2 tw-p-4', className)} {...props} />\n  );\n}\nDrawerFooter.displayName = 'DrawerFooter';\n\n/** @inheritdoc Drawer */\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn('tw-text-lg tw-font-semibold tw-leading-none tw-tracking-tight', className)}\n    {...props}\n  />\n));\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName;\n\n/** @inheritdoc Drawer */\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn('tw-text-sm tw-text-muted-foreground', className)}\n    {...props}\n  />\n));\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName;\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n};\n","import React from 'react';\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Displays an indicator showing the completion progress of a task, typically displayed as a\n * progress bar. This component is built on Radix UI primitives and styled with Shadcn UI. See\n * Shadcn UI documentation: https://ui.shadcn.com/docs/components/progress See Radix UI\n * documentation: https://www.radix-ui.com/primitives/docs/components/progress#api-reference\n */\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      'pr-twp tw-relative tw-h-4 tw-w-full tw-overflow-hidden tw-rounded-full tw-bg-secondary',\n      className,\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"tw-h-full tw-w-full tw-flex-1 tw-bg-primary tw-transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","import { ComponentProps } from 'react';\nimport { toast as sonner, Toaster } from 'sonner';\n\n/**\n * Props for Sonner component.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/sonner}\n * @see Sonner Documentation: {@link https://sonner.emilkowal.ski}\n */\ntype SonnerProps = ComponentProps<typeof Toaster>;\n\n/**\n * The Sonner component is an opinionated toast component for React. It is built on Sonner and\n * styled with Shadcn UI.\n *\n * @param SonnerProps\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/sonner}\n * @see Sonner Documentation: {@link https://sonner.emilkowal.ski}\n */\nfunction Sonner({ ...props }: SonnerProps) {\n  return (\n    <Toaster\n      className=\"tw-toaster tw-group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n          description: 'group-[.toast]:text-muted-foreground',\n          actionButton: 'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n          cancelButton: 'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n        },\n      }}\n      {...props}\n    />\n  );\n}\n\n// The re-export of the sonner function was added manually\nexport { Sonner, sonner };\n","import React from 'react';\nimport * as SliderPrimitive from '@radix-ui/react-slider';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * The Slider component is an input where the user selects a value from within a given range. This\n * component is built on Radix UI primitives and styled with Shadcn UI.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/slider}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/slider}\n */\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        'pr-twp tw-relative tw-flex tw-w-full tw-touch-none tw-select-none tw-items-center',\n        className,\n      )}\n      {...props}\n      dir={dir}\n    >\n      <SliderPrimitive.Track className=\"tw-relative tw-h-2 tw-w-full tw-grow tw-overflow-hidden tw-rounded-full tw-bg-secondary\">\n        <SliderPrimitive.Range className=\"tw-absolute tw-h-full tw-bg-primary\" />\n      </SliderPrimitive.Track>\n      <SliderPrimitive.Thumb className=\"tw-block tw-h-5 tw-w-5 tw-rounded-full tw-border-2 tw-border-primary tw-bg-background tw-ring-offset-background tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50\" />\n    </SliderPrimitive.Root>\n  );\n});\nSlider.displayName = SliderPrimitive.Root.displayName;\n\nexport { Slider };\n","import * as SwitchPrimitives from '@radix-ui/react-switch';\nimport React from 'react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * The Switch component is a control that allows the user to toggle between checked and not checked.\n * This component is built on Radix UI primitives and styled with Shadcn UI.\n *\n * @see Shadcn UI Documentation: {@link https://ui.shadcn.com/docs/components/switch}\n * @see Radix UI Documentation: {@link https://www.radix-ui.com/primitives/docs/components/switch}\n */\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <SwitchPrimitives.Root\n      className={cn(\n        'tw-peer pr-twp tw-inline-flex tw-h-6 tw-w-11 tw-shrink-0 tw-cursor-pointer tw-items-center tw-rounded-full tw-border-2 tw-border-transparent tw-transition-colors focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 focus-visible:tw-ring-offset-background disabled:tw-cursor-not-allowed disabled:tw-opacity-50 data-[state=checked]:tw-bg-primary data-[state=unchecked]:tw-bg-input',\n        className,\n      )}\n      {...props}\n      ref={ref}\n    >\n      <SwitchPrimitives.Thumb\n        className={cn(\n          'pr-twp tw-pointer-events-none tw-block tw-h-5 tw-w-5 tw-rounded-full tw-bg-background tw-shadow-lg tw-ring-0 tw-transition-transform',\n          {\n            'data-[state=checked]:tw-translate-x-5 data-[state=unchecked]:tw-translate-x-0':\n              dir === 'ltr',\n          },\n          {\n            'data-[state=checked]:tw-translate-x-[-20px] data-[state=unchecked]:tw-translate-x-0':\n              dir === 'rtl',\n          },\n        )}\n      />\n    </SwitchPrimitives.Root>\n  );\n});\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import React from 'react';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\nimport { cn } from '@/utils/shadcn-ui.util';\nimport { Direction, readDirection } from '@/utils/dir-helper.util';\n\n/**\n * Tabs components provide a set of layered sections of content—known as tab panels–that are\n * displayed one at a time. These components are built on Radix UI primitives and styled with Shadcn\n * UI. See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/tabs See Radix UI\n * Documentation: https://www.radix-ui.com/primitives/docs/components/tabs\n */\nexport const Tabs = TabsPrimitive.Root;\n\n/** @inheritdoc Tabs */\nexport type TabsListProps = React.ComponentPropsWithoutRef<typeof TabsPrimitive.List> & {\n  className?: string;\n};\n\n/** @inheritdoc Tabs */\nexport type TabsTriggerProps = React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> & {\n  className?: string;\n};\n\n/** @inheritdoc Tabs */\nexport type TabsContentProps = React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content> & {\n  className?: string;\n};\n\n/** @inheritdoc Tabs */\nexport const TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  TabsListProps\n>(({ className, ...props }, ref) => {\n  const dir: Direction = readDirection();\n  return (\n    <TabsPrimitive.List\n      ref={ref}\n      className={cn(\n        'pr-twp tw-inline-flex tw-h-10 tw-items-center tw-justify-center tw-rounded-md tw-bg-muted tw-p-1 tw-text-muted-foreground',\n        className,\n      )}\n      {...props}\n      dir={dir}\n    />\n  );\n});\nTabsList.displayName = TabsPrimitive.List.displayName;\n\n/** @inheritdoc Tabs */\nexport const TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  TabsTriggerProps\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'pr-twp tw-inline-flex tw-items-center tw-justify-center tw-whitespace-nowrap tw-rounded-sm tw-px-3 tw-py-1.5 tw-text-sm tw-font-medium tw-ring-offset-background tw-transition-all hover:tw-text-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-pointer-events-none disabled:tw-opacity-50 data-[state=active]:tw-bg-background data-[state=active]:tw-text-foreground data-[state=active]:tw-shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\n/** @inheritdoc Tabs */\nexport const TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  TabsContentProps\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'pr-twp tw-mt-2 tw-ring-offset-background focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n","import React from 'react';\n\nimport { cn } from '@/utils/shadcn-ui.util';\n\n/**\n * Displays a form textarea or a component that looks like a textarea. This component is from Shadcn\n * UI. See Shadcn UI documentation: https://ui.shadcn.com/docs/components/textarea\n */\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'pr-twp tw-flex tw-min-h-[80px] tw-w-full tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-base tw-ring-offset-background placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50 md:tw-text-sm',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n","import { PlatformEvent, PlatformEventHandler } from 'platform-bible-utils';\nimport { useEffect } from 'react';\n\n/**\n * Adds an event handler to an event so the event handler runs when the event is emitted. Use\n * `papi.network.getNetworkEvent` to use a networked event with this hook.\n *\n * @param event The event to subscribe to.\n *\n *   - If event is a `PlatformEvent`, that event will be used\n *   - If event is undefined, the callback will not be subscribed. Useful if the event is not yet\n *       available for example\n *\n * @param eventHandler The callback to run when the event is emitted\n *\n *   WARNING: MUST BE STABLE - const or wrapped in useCallback. The reference must not be updated\n *   every render\n */\nexport const useEvent = <T>(\n  event: PlatformEvent<T> | undefined,\n  eventHandler: PlatformEventHandler<T>,\n) => {\n  useEffect(() => {\n    // Do nothing if the event is not provided (in case the event is not yet available, for example)\n    if (!event) return () => {};\n\n    const unsubscriber = event(eventHandler);\n    return () => {\n      unsubscriber();\n    };\n  }, [event, eventHandler]);\n};\nexport default useEvent;\n","import { useEffect, useRef, useState } from 'react';\n\nexport type UsePromiseOptions = {\n  /**\n   * Whether to leave the value as the most recent resolved promise value or set it back to\n   * defaultValue while running the promise again. Defaults to true\n   */\n  preserveValue?: boolean;\n};\n\n/** Set up defaults for options for usePromise hook */\nfunction getUsePromiseOptionsDefaults(options: UsePromiseOptions): UsePromiseOptions {\n  return {\n    preserveValue: true,\n    ...options,\n  };\n}\n\n/**\n * Awaits a promise and returns a loading value while the promise is unresolved\n *\n * @param promiseFactoryCallback A function that returns the promise to await. If this callback is\n *   undefined, the current value will be returned (defaultValue unless it was previously changed\n *   and `options.preserveValue` is true), and there will be no loading.\n *\n *   WARNING: MUST BE STABLE - const or wrapped in useCallback. The reference must not be updated\n *   every render\n * @param defaultValue The initial value to return while first awaiting the promise. If\n *   `options.preserveValue` is false, this value is also shown while awaiting the promise on\n *   subsequent calls.\n *\n *   Note: this parameter is internally assigned to a `ref`, so changing it will not cause any hooks\n *   to re-run with its new value. This means that, if the `promiseFactoryCallback` changes and\n *   `options.preserveValue` is `false`, the returned value will be set to the current\n *   `defaultValue`. However, the returned value will not be updated if`defaultValue` changes.\n * @param options Various options for adjusting how this hook runs the `promiseFactoryCallback`\n *\n *   Note: this parameter is internally assigned to a `ref`, so changing it will not cause any hooks\n *   to re-run with its new value. However, the latest `options.preserveValue` will always be used\n *   appropriately to determine whether to preserve the returned value when changing the\n *   `promiseFactoryCallback`\n * @returns `[value, isLoading]`\n *\n *   - `value`: the current value for the promise, either the defaultValue or the resolved promise value\n *   - `isLoading`: whether the promise is waiting to be resolved\n */\nexport const usePromise = <T>(\n  promiseFactoryCallback: (() => Promise<T>) | undefined,\n  defaultValue: T,\n  options: UsePromiseOptions = {},\n): [value: T, isLoading: boolean] => {\n  // Use defaultValue as a ref so it doesn't update dependency arrays\n  const defaultValueRef = useRef(defaultValue);\n  defaultValueRef.current = defaultValue;\n  // Use options as a ref so it doesn't update dependency arrays\n  const optionsDefaultedRef = useRef(options);\n  optionsDefaultedRef.current = getUsePromiseOptionsDefaults(optionsDefaultedRef.current);\n\n  const [value, setValue] = useState<T>(() => defaultValueRef.current);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  useEffect(() => {\n    let promiseIsCurrent = true;\n    // If a promiseFactoryCallback was provided, we are loading. Otherwise, there is no loading to do\n    setIsLoading(!!promiseFactoryCallback);\n    (async () => {\n      // If there is a callback to run, run it\n      if (promiseFactoryCallback) {\n        const result = await promiseFactoryCallback();\n        // If the promise was not already replaced, update the value\n        if (promiseIsCurrent) {\n          setValue(() => result);\n          setIsLoading(false);\n        }\n      }\n    })();\n\n    return () => {\n      // Mark this promise as old and not to be used\n      promiseIsCurrent = false;\n      if (!optionsDefaultedRef.current.preserveValue) setValue(() => defaultValueRef.current);\n    };\n  }, [promiseFactoryCallback]);\n\n  return [value, isLoading];\n};\nexport default usePromise;\n","import { useCallback, useEffect } from 'react';\nimport { PlatformEvent, PlatformEventAsync, PlatformEventHandler } from 'platform-bible-utils';\nimport { usePromise } from './use-promise.hook';\n\nconst noopUnsubscriber = () => false;\n\n/**\n * Adds an event handler to an asynchronously subscribing/unsubscribing event so the event handler\n * runs when the event is emitted. Use `papi.network.getNetworkEvent` to use a networked event with\n * this hook.\n *\n * @param event The asynchronously (un)subscribing event to subscribe to.\n *\n *   - If event is a `PlatformEvent` or `PlatformEventAsync`, that event will be used\n *   - If event is undefined, the callback will not be subscribed. Useful if the event is not yet\n *       available for example\n *\n * @param eventHandler The callback to run when the event is emitted\n *\n *   WARNING: MUST BE STABLE - const or wrapped in useCallback. The reference must not be updated\n *   every render\n */\nexport const useEventAsync = <T>(\n  event: PlatformEvent<T> | PlatformEventAsync<T> | undefined,\n  eventHandler: PlatformEventHandler<T>,\n) => {\n  // Subscribe to the event asynchronously\n  const [unsubscribe] = usePromise(\n    useCallback(async () => {\n      // Do nothing if the event is not provided (in case the event is not yet available, for example)\n      if (!event) return noopUnsubscriber;\n\n      // Wrap subscribe and unsubscribe in promises to allow normal events to be used as well\n      const unsub = await Promise.resolve(event(eventHandler));\n      return async () => unsub();\n    }, [eventHandler, event]),\n    noopUnsubscriber,\n    // We want the unsubscriber to return to default value immediately upon changing subscription\n    // So the useEffect below will unsubscribe asap\n    { preserveValue: false },\n  );\n\n  // Unsubscribe from the event asynchronously (but we aren't awaiting the unsub)\n  useEffect(() => {\n    return () => {\n      if (unsubscribe !== noopUnsubscriber) {\n        unsubscribe();\n      }\n    };\n  }, [unsubscribe]);\n};\n\nexport default useEventAsync;\n","import React, { useCallback, useRef, useState } from 'react';\n\n/** Properties of one option contained in a listbox */\nexport interface ListboxOption {\n  /** Unique identifier for the option */\n  id: string;\n}\n\n/** Props for the useListbox hook */\nexport interface UseListboxProps {\n  /** Array of options for the listbox */\n  options: ListboxOption[];\n  /** Callback when the focus changes to a different option */\n  onFocusChange?: (option: ListboxOption) => void;\n  /** Callback to toggle the selection of an option */\n  onOptionSelect?: (option: ListboxOption) => void;\n  /** Callback when a character key is pressed */\n  onCharacterPress?: (char: string) => void;\n}\n/**\n * Hook for handling keyboard navigation of a listbox.\n *\n * @param UseListboxProps - The properties for configuring the listbox behavior.\n * @returns An object containing:\n *\n *   - `listboxRef`: A ref to be attached to the listbox container element (e.g., `<ul>`), used for\n *       focus management.\n *   - `activeId`: The id of the currently focused (active) option, or `undefined` if none is focused.\n *   - `selectedId`: The id of the currently selected option, or `undefined` if none is selected.\n *   - `handleKeyDown`: A keyboard event handler to be attached to the listbox container for handling\n *       navigation and selection.\n *   - `focusOption`: A function to programmatically focus a specific option by id.\n */\nexport const useListbox = ({\n  options,\n  onFocusChange,\n  onOptionSelect,\n  onCharacterPress,\n}: UseListboxProps) => {\n  // ul/div ref property expects null and not undefined\n  // eslint-disable-next-line no-null/no-null\n  const listboxRef = useRef<HTMLElement>(null);\n  const [activeId, setActiveId] = useState<string | undefined>(undefined);\n  const [selectedId, setSelectedId] = useState<string | undefined>(undefined);\n\n  const focusOption = useCallback(\n    (id: string) => {\n      setActiveId(id);\n      const option = options.find((opt) => opt.id === id);\n      if (option) {\n        onFocusChange?.(option);\n      }\n\n      const element = document.getElementById(id);\n      if (element) {\n        element.scrollIntoView({ block: 'center' });\n        element.focus();\n      }\n\n      // Ensure aria-activedescendant is set on the listbox container for internal focus tracking\n      if (listboxRef.current) {\n        listboxRef.current.setAttribute('aria-activedescendant', id);\n      }\n    },\n    [onFocusChange, options],\n  );\n\n  const toggleSelectInternal = useCallback(\n    (id: string) => {\n      const option = options.find((opt) => opt.id === id);\n      if (!option) return;\n\n      setSelectedId((prev) => (prev === id ? undefined : id));\n      onOptionSelect?.(option);\n    },\n    [onOptionSelect, options],\n  );\n\n  const handleKeyDown = useCallback(\n    (evt: React.KeyboardEvent<HTMLElement>) => {\n      const currentIndex = options.findIndex((opt) => opt.id === activeId);\n      let nextIndex = currentIndex;\n\n      switch (evt.key) {\n        case 'ArrowDown':\n          nextIndex = Math.min(currentIndex + 1, options.length - 1);\n          evt.preventDefault();\n          break;\n        case 'ArrowUp':\n          nextIndex = Math.max(currentIndex - 1, 0);\n          evt.preventDefault();\n          break;\n        case 'Home':\n          nextIndex = 0;\n          evt.preventDefault();\n          break;\n        case 'End':\n          nextIndex = options.length - 1;\n          evt.preventDefault();\n          break;\n        case ' ':\n        case 'Enter':\n          if (activeId) {\n            toggleSelectInternal(activeId);\n          }\n          evt.preventDefault();\n          evt.stopPropagation();\n          return;\n        default:\n          if (evt.key.length === 1 && !evt.metaKey && !evt.ctrlKey && !evt.altKey) {\n            onCharacterPress?.(evt.key);\n            evt.preventDefault();\n          }\n          return;\n      }\n\n      const nextOption = options[nextIndex];\n      if (nextOption) focusOption(nextOption.id);\n    },\n    [options, focusOption, activeId, toggleSelectInternal, onCharacterPress],\n  );\n\n  return {\n    listboxRef,\n    activeId,\n    selectedId,\n    handleKeyDown,\n    focusOption,\n  };\n};\n"],"names":["twMergeCustom","extendTailwindMerge","cn","inputs","clsx","buttonVariants","cva","Button","React","className","variant","size","asChild","props","ref","Comp","Slot","jsx","STORAGE_KEY","readDirection","retrieved","DialogPortal","DialogPrimitive","DialogOverlay","DialogContent","children","dir","jsxs","X","DialogTitle","DialogDescription","Command","CommandPrimitive","CommandInput","Search","CommandList","CommandEmpty","CommandGroup","CommandSeparator","CommandItem","Popover","PopoverPrimitive","PopoverTrigger","PopoverContent","align","sideOffset","P","R","e","s","n","N","B","O","S","K","g","k","x","T","V","w","L","G","A","H","C","I","y","q","U","m","l","h","c","E","r","D","i","o","u","v","f","d","b","p","J","ALL_BOOK_IDS","Canon","bookId","ALL_ENGLISH_BOOK_NAMES","BOOK_TYPE_LABELS","SCRIPTURE_REGEX_PATTERNS","SEARCH_QUERY_FORMATS","getKeyCharacterType","key","isLetter","isDigit","fetchEndChapter","getChaptersForBook","calculateTopMatch","query","availableBooks","topMatch","result","format","matches","book","chapter","verse","validBookId","bookLowerCase","allPotentialMatches","bookUpperCase","matchingBookIdForFullName","bookName","chapterNum","verseNum","generateCommandValue","useQuickNavButtons","scrRef","direction","handleSubmit","handlePreviousChapter","useCallback","currentBookIndex","previousBook","lastChapter","handleNextChapter","maxChapter","nextBook","handlePreviousVerse","handleNextVerse","useMemo","ChevronsLeft","ChevronsRight","ChevronLeft","ChevronRight","ChapterGrid","onChapterSelect","setChapterRef","isChapterDimmed","_","BookChapterControl","getActiveBookIds","isCommandOpen","setIsCommandOpen","useState","commandValue","setCommandValue","inputValue","setInputValue","viewMode","setViewMode","selectedBookForChaptersView","setSelectedBookForChaptersView","isCommandListHidden","setIsCommandListHidden","commandRef","useRef","commandInputRef","commandListRef","selectedBookItemRef","chapterRefs","activeBookIds","availableBooksByType","filteredBooksByType","filteredBooks","type","handleTopMatchSelect","handleBookSelect","handleChapterSelect","chapterNumber","quickNavButtons","handleBackToBooks","handleOpenChange","shouldCommandBeOpen","doesChapterMatch","currentDisplayValue","formatScrRef","element","handleInputKeyDown","event","handleCommandKeyDown","currentBookName","currentBookId","currentChapter","match","targetChapter","GRID_COLS","targetElement","handleQuickNavButtonKeyDown","prevValue","useLayoutEffect","scrollTimeout","listElement","itemElement","itemOffsetTop","listHeight","itemHeight","scrollPosition","isCurrentlySelectedBook","onClick","disabled","title","Icon","ArrowLeft","ArrowRight","Fragment","books","labelVariants","Label","LabelPrimitive","RadioGroup","RadioGroupPrimitive","RadioGroupItem","Circle","getOptionLabelDefault","option","ComboBox","id","options","buttonClassName","popoverContentClassName","value","onChange","getOptionLabel","icon","buttonPlaceholder","textPlaceholder","commandEmptyMessage","buttonVariant","alignDropDown","isDisabled","open","setOpen","ChevronsUpDown","Check","ChapterRangeSelector","startChapter","endChapter","handleSelectStartChapter","handleSelectEndChapter","chapterCount","chapterOptions","index","onChangeStartChapter","onChangeEndChapter","BookSelectionMode","BOOK_SELECTOR_STRING_KEYS","localizeString","strings","BookSelector","handleBookSelectionModeChange","onSelectBooks","selectedBookIds","localizedStrings","currentBookText","chooseText","chooseBooksText","bookSelectionMode","setBookSelectionMode","onSelectionModeChange","newMode","MenuContext","createContext","useMenuContext","context","useContext","menuVariants","DropdownMenuTrigger","DropdownMenuPrimitive","DropdownMenuGroup","DropdownMenuPortal","DropdownMenuSub","DropdownMenuRadioGroup","DropdownMenu","contextValue","DropdownMenuSubTrigger","inset","DropdownMenuSubContent","DropdownMenuContent","DropdownMenuItem","DropdownMenuCheckboxItem","checked","DropdownMenuRadioItem","DropdownMenuLabel","DropdownMenuSeparator","DropdownMenuShortcut","DataTableViewOptions","table","FilterIcon","column","Select","SelectPrimitive","SelectGroup","SelectValue","selectTriggerVariants","SelectTrigger","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","position","SelectLabel","SelectItem","SelectSeparator","DataTablePagination","pageSize","ArrowLeftIcon","ChevronLeftIcon","ChevronRightIcon","ArrowRightIcon","FOCUSABLE_SELECTOR","isVisible","el","getFocusableElements","container","uniqueQuerySelector","Table","stickyHeader","tableRef","currentTable","setTabIndexes","observer","handleKeyDownInTable","TableHeader","TableBody","TableFooter","useFocusableInRowKeyboardNavigation","rowRef","row","handleKeyDown","focusables","nextIndex","focusAdjacentFocusableElementInRow","focusablesInRow","currentIndexOfFocusables","nextFocusable","focusAdjacentRow","rowsInTable","currentRowIndex","nextRow","TableRow","onKeyDown","onSelect","setFocusAlsoRunsSelect","currentRow","closestTable","handleFocus","TableHead","TableCell","TableCaption","DataTable","columns","data","enablePagination","showPaginationControls","showColumnVisibilityControls","onRowClickHandler","sorting","setSorting","columnFilters","setColumnFilters","columnVisibility","setColumnVisibility","rowSelection","setRowSelection","useReactTable","getCoreRowModel","getPaginationRowModel","getSortedRowModel","getFilteredRowModel","headerGroup","header","flexRender","_a","cell","MarkdownRenderer","markdown","anchorTarget","Markdown","ERROR_DUMP_STRING_KEYS","ErrorDump","errorDetails","handleCopyNotify","headerText","infoMessage","handleCopy","Copy","ERROR_POPOVER_STRING_KEYS","ErrorPopover","isCopySuccess","setIsCopySuccess","handleCopyWithNotification","DropdownMenuItemType","DropdownMenuItemType2","FilterDropdown","label","groups","checkedStates","setCheckedStates","group","entry","radioStates","setRadioStates","handleCheckboxUpdate","groupIndex","newCheckedState","oldCheckedStates","item","handleRadioUpdate","oldRadioStates","currentItem","Filter","MoreInfo","category","downloads","languages","moreInfoUrl","handleMoreInfoLinkClick","supportUrl","handleSupportLinkClick","numberFormatted","NumberFormat","a","handleScrollToBottom","User","locale","LucideLink","CircleHelp","VersionHistory","versionHistory","showAllVersions","setShowAllVersions","currentDate","formatTimeString","dateString","date","dateDiff","yearDiff","monthDiff","dayDiff","timeString","sortedEntries","Footer","publisherDisplayName","fileSize","locales","currentVersion","formattedFileSize","formatBytes","languageNames","codes","displayNames","getCurrentLocale","code","badgeVariants","Badge","MultiSelectComboBox","entries","getEntriesCount","selected","placeholder","customSelectedText","sortSelected","handleSelect","getPlaceholderText","sortedOptions","starredItems","opt","nonStarredItems","aSelected","bSelected","count","Star","badgesPlaceholder","selectedType","OccurrencesTable","occurrenceData","setScriptureReference","referenceHeaderText","occurrenceHeaderText","occurrences","uniqueOccurrences","occurrence","uniqueOccurrence","deepEqual","Checkbox","CheckboxPrimitive","Input","toggleVariants","Toggle","TogglePrimitive","ToggleGroupContext","ToggleGroup","ToggleGroupPrimitive","ToggleGroupItem","getSortingIcon","sortDirection","ArrowUpIcon","ArrowDownIcon","ArrowUpDownIcon","inventoryItemColumn","itemLabel","inventoryAdditionalItemColumn","additionalItemLabel","additionalItemIndex","inventoryCountColumn","countLabel","statusChangeHandler","changedItems","newStatus","approvedItems","onApprovedItemsChange","unapprovedItems","onUnapprovedItemsChange","newApprovedItems","validItem","newUnapprovedItems","unapprovedItem","inventoryStatusColumn","statusLabel","status","CircleCheckIcon","CircleXIcon","CircleHelpIcon","getLinesFromUSFM","text","getNumberFromUSFM","regex","getBookIdFromUSFM","getStatusForItem","INVENTORY_STRING_KEYS","filterItemData","itemData","statusFilter","textFilter","filteredItemData","processInventoryItems","inventoryItems","tableData","existingItem","tableEntry","isString","newItem","Inventory","setVerseRef","additionalItemsLabels","scope","onScopeChange","allItemsText","approvedItemsText","unapprovedItemsText","unknownItemsText","scopeBookText","scopeChapterText","scopeVerseText","filterText","showAdditionalItemsText","showAdditionalItems","setShowAdditionalItems","setStatusFilter","setTextFilter","selectedItem","setSelectedItem","reducedTableData","newTableData","firstItem","existingEntry","newTableEntry","filteredTableData","allColumns","numberOfAdditionalItems","additionalColumns","_b","useEffect","rowClickHandler","newSelection","handleScopeChange","handleStatusFilterChange","Separator","orientation","decorative","SeparatorPrimitive","Skeleton","TooltipProvider","TooltipPrimitive","Tooltip","TooltipTrigger","TooltipContent","SIDEBAR_WIDTH","SIDEBAR_WIDTH_ICON","SidebarContext","useSidebar","SidebarProvider","defaultOpen","openProp","setOpenProp","style","side","_open","_setOpen","isOpen","openState","toggleSidebar","state","directionAwareSide","Sidebar","collapsible","SidebarTrigger","PanelLeft","PanelRight","SidebarRail","SidebarInset","SidebarInput","SidebarHeader","SidebarFooter","SidebarSeparator","SidebarContent","SidebarGroup","SidebarGroupLabel","SidebarGroupAction","SidebarGroupContent","SidebarMenu","SidebarMenuItem","sidebarMenuButtonVariants","SidebarMenuButton","isActive","tooltip","button","SidebarMenuAction","showOnHover","SidebarMenuBadge","SidebarMenuSkeleton","showIcon","width","SidebarMenuSub","SidebarMenuSubItem","SidebarMenuSubButton","SettingsSidebar","extensionLabels","projectInfo","handleSelectSidebarItem","selectedSidebarItem","extensionsSidebarGroupLabel","projectsSidebarGroupLabel","buttonPlaceholderText","handleSelectItem","projectId","getProjectNameFromProjectId","project","info","getIsActive","selectedProjectName","ScrollText","SearchBar","forwardRef","onSearch","isFullWidth","inputRef","SettingsSidebarContentSearch","searchValue","scrBookColId","scrRefColId","typeColId","detailsColId","defaultScrRefColumnName","defaultScrBookGroupName","defaultTypeColumnName","defaultDetailsColumnName","getColumns","colInfo","showSourceColumn","showSrcCol","compareScrRefs","toRefOrRange","scriptureSelection","offsetStart","offsetEnd","scrRefToBBBCCCVVV","getRowKey","ScriptureResultsViewer","sources","showColumnHeaders","scriptureReferenceColumnName","scriptureBookGroupName","typeColumnName","detailsColumnName","onRowSelected","grouping","setGrouping","scriptureResults","source","getExpandedRowModel","getGroupedRowModel","selectedRows","keys","selectedRow","scrBookGroupName","typeGroupName","groupingOptions","handleSelectChange","selectedGrouping","handleRowClick","getEvenOrOddBandingStyle","getIndent","groupingState","rowIndex","Section","getSectionLongName","section","otLongName","ntLongName","dcLongName","extraLongName","getSectionShortName","otShortName","ntShortName","dcShortName","extraShortName","getSectionForBook","getBooksForSection","bookIds","isSectionFullySelected","BookItem","toggleBook","lastKeyEventShiftKey","localizedBookNames","isMouseClick","mouseClickTimer","SectionButton","availableBookIds","onToggle","sectionOtShortText","sectionNtShortText","sectionDcShortText","sectionExtraShortText","VISIBLE_BADGES_COUNT","MAX_VISIBLE_BADGES","availableBookInfo","onChangeSelectedBookIds","booksSelectedText","selectBooksText","searchBooksText","selectAllText","clearAllText","noBookFoundText","moreText","sectionOtLongText","sectionNtLongText","sectionDcLongText","sectionExtraLongText","isBooksSelectorOpen","setIsBooksSelectorOpen","lastSelectedBookRef","availableBooksIds","shiftKey","lastIndex","currentIndex","startIndex","endIndex","booksInRange","shortname","toggleSection","sectionBooks","handleSelectAll","handleClearAll","SCOPE_SELECTOR_STRING_KEYS","ScopeSelector","availableScopes","onSelectedBookIdsChange","selectedTextText","currentVerseText","currentChapterText","scopeText","SCOPE_OPTIONS","displayedScopes","DEFAULT_SCROLL_GROUP_LOCALIZED_STRINGS","getLocalizeKeyForScrollGroupId","ScrollGroupSelector","availableScrollGroupIds","scrollGroupId","onChangeScrollGroupId","localizedStringsDefaulted","localizedStringKey","localizedStringValue","newScrollGroupString","scrollGroupOptionId","SettingsList","SettingsListItem","primary","secondary","isLoading","loadingMessage","SettingsListHeader","includeSeparator","getSubMenuGroupKeyForMenuItemId","MenuItemIcon","menuLabel","leading","getGroupContent","items","columnOrSubMenuKey","onSelectMenuItem","groupKey","TabDropdownMenu","menuData","tabLabel","MenuIcon","columnKey","array","TabToolbar","onSelectProjectMenuItem","onSelectViewInfoMenuItem","projectMenuData","tabViewMenuData","startAreaChildren","centerAreaChildren","endAreaChildren","Menu","EllipsisVertical","VerticalTabs","TabsPrimitive","VerticalTabsList","VerticalTabsTrigger","VerticalTabsContent","TabNavigationContentSearch","tabList","searchPlaceholder","headerTitle","searchClassName","tab","MenubarMenu","MenubarPrimitive","MenubarSub","Menubar","MenubarTrigger","MenubarSubTrigger","MenubarSubContent","MenubarContent","alignOffset","MenubarItem","MenubarCheckboxItem","MenubarRadioItem","MenubarLabel","MenubarSeparator","simulateKeyPress","getMenubarContent","sortedGroupsForColumn","groupItems","itemsWithSeparator","PlatformMenubar","onOpenChange","menubarRef","projectMenuRef","windowMenuRef","layoutMenuRef","helpMenuRef","getRefForColumn","useHotkeys","handler","escKey","spaceKey","_c","_d","mutations","mutation","getToolbarOSReservedSpaceClassName","operatingSystem","Toolbar","appMenuAreaChildren","configAreaChildren","shouldUseAsAppDragArea","menubarVariant","containerRef","UiLanguageSelector","knownUiLanguages","primaryLanguage","fallbackLanguages","onLanguagesChange","onPrimaryLanguageChange","onFallbackLanguagesChange","selectFallbackLanguagesText","setIsOpen","handleLanguageChange","lang","getLanguageDisplayName","uiLang","altName","_e","_f","SmartLabel","createLabel","createComplexLabel","Checklist","listItems","selectedListItems","handleSelectListItem","Spinner","LoaderCircle","TextField","hasError","helperText","isRequired","defaultValue","onFocus","onBlur","ShadLabel","ShadInput","alertVariants","Alert","AlertTitle","AlertDescription","Avatar","AvatarPrimitive","AvatarImage","AvatarFallback","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","ContextMenu","ContextMenuPrimitive","ContextMenuTrigger","ContextMenuGroup","ContextMenuPortal","ContextMenuSub","ContextMenuRadioGroup","ContextMenuSubTrigger","ContextMenuSubContent","ContextMenuContent","ContextMenuItem","ContextMenuCheckboxItem","ContextMenuRadioItem","ContextMenuLabel","ContextMenuSeparator","ContextMenuShortcut","DrawerContext","Drawer","shouldScaleBackground","DrawerPrimitive","DrawerTrigger","DrawerPortal","DrawerClose","DrawerOverlay","DrawerContent","hideDrawerHandle","directionStyles","handleStyles","DrawerHeader","DrawerFooter","DrawerTitle","DrawerDescription","Progress","ProgressPrimitive","Sonner","Toaster","Slider","SliderPrimitive","Switch","SwitchPrimitives","Tabs","TabsList","TabsTrigger","TabsContent","Textarea","useEvent","eventHandler","unsubscriber","getUsePromiseOptionsDefaults","usePromise","promiseFactoryCallback","defaultValueRef","optionsDefaultedRef","setValue","setIsLoading","promiseIsCurrent","noopUnsubscriber","useEventAsync","unsubscribe","unsub","useListbox","onFocusChange","onOptionSelect","onCharacterPress","listboxRef","activeId","setActiveId","selectedId","setSelectedId","focusOption","toggleSelectInternal","prev","evt","nextOption"],"mappings":"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F,EAAA,IAACwB,GAAiB,OAAjB,CACC,SAAAxB,EAAA,IAACwB,GAAiB,QAAjB,CACC,IAAA3B,EACA,MAAA8B,EACA,WAAAC,EACA,UAAW3C,EAET,aACA,qeACAO,CACF,EACC,GAAGI,EACJ,IAAAa,CAAA,CAAA,EAEJ,CAEJ,CAAC,EACDiB,GAAe,YAAcF,GAAiB,QAAQ,YC1CtD,IAAIK,GAAI,OAAO,eACXC,GAAI,CAAC,EAAGC,EAAGC,IAAMD,KAAK,EAAIF,GAAE,EAAGE,EAAG,CAAE,WAAY,GAAI,aAAc,GAAI,SAAU,GAAI,MAAOC,CAAC,CAAE,EAAI,EAAED,CAAC,EAAIC,EACzGC,EAAI,CAAC,EAAGF,EAAGC,IAAMF,GAAE,EAAG,OAAOC,GAAK,SAAWA,EAAI,GAAKA,EAAGC,CAAC,EAW9D,MAAME,GAAI,CACR,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MAEA,MAEA,MAEA,MAEA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,MAEA,MAEA,MAEA,MAEA,MACA,MACA,MACA,MAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,MACA,MACA,KACF,EAAGC,GAAI,CACL,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACF,EAAGC,GAAI,CACL,UACA,SACA,YACA,UACA,cACA,SACA,SACA,OACA,WACA,WACA,UACA,UACA,eACA,eACA,OACA,WACA,kBACA,MACA,SACA,WACA,eACA,gBACA,SACA,WACA,eACA,UACA,kBACA,QACA,OACA,OACA,UACA,QACA,QACA,QACA,WACA,YACA,SACA,YACA,UACA,UACA,OACA,OACA,OACA,OACA,SACA,gBACA,gBACA,YACA,YACA,cACA,aACA,kBACA,kBACA,YACA,YACA,QACA,WACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,OACA,aACA,QACA,SACA,eACA,oBACA,0BACA,SACA,qBACA,sBACA,UACA,qBACA,cACA,cACA,cACA,cACA,mBACA,mBACA,qBACA,YACA,OACA,oBAGA,uBACA,uBACA,sBACA,yBACA,wBACA,qBACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,eACA,cACA,eACA,oBACA,qBACA,0BACA,0BACA,eACA,eACA,YACA,gBACA,cACA,eACA,iBACA,wBACA,mBACA,WACA,QACA,aACA,aACA,aACA,2BACA,4BACA,YACF,EAAGC,GAAIC,GAAG,EACV,SAASC,GAAE,EAAGR,EAAI,GAAI,CACpB,OAAOA,IAAM,EAAI,EAAE,YAAa,GAAG,KAAKM,GAAIA,GAAE,CAAC,EAAI,CACrD,CACA,SAASG,GAAE,EAAG,CACZ,OAAOD,GAAE,CAAC,EAAI,CAChB,CACA,SAASE,GAAE,EAAG,CACZ,MAAMV,EAAI,OAAO,GAAK,SAAWQ,GAAE,CAAC,EAAI,EACxC,OAAOR,GAAK,IAAMA,GAAK,EACzB,CACA,SAASW,GAAE,EAAG,CACZ,OAAQ,OAAO,GAAK,SAAWH,GAAE,CAAC,EAAI,IAAM,EAC9C,CACA,SAAS5B,GAAE,EAAG,CACZ,OAAO,GAAK,EACd,CACA,SAASgC,GAAE,EAAG,CACZ,MAAMZ,EAAI,OAAO,GAAK,SAAWQ,GAAE,CAAC,EAAI,EACxC,OAAOK,GAAEb,CAAC,GAAK,CAACpB,GAAEoB,CAAC,CACrB,CACA,SAAUc,IAAI,CACZ,QAAS,EAAI,EAAG,GAAKX,GAAE,OAA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_google_ignoreList":[6]}