import{j as t}from"./jsx-runtime-oSScezIk.js";import{B as o}from"./button-DLHDYHwC.js";import{I as y}from"./input-BtrgVmpm.js";import{e as r}from"./iframe-tcaIqK__.js";import{c as d}from"./shadcn-ui.util-DMJ19wEV.js";import{T as C}from"./theme-provider.component-B9pQcL7J.js";import"./index-CfKHN54R.js";import"./index-BPbCuWFR.js";const c=r.forwardRef(({className:e,...n},s)=>t.jsx("div",{ref:s,className:d("pr-twp tw-rounded-lg tw-border tw-bg-card tw-text-card-foreground tw-shadow-sm",e),...n}));c.displayName="Card";const l=r.forwardRef(({className:e,...n},s)=>t.jsx("div",{ref:s,className:d("pr-twp tw-flex tw-flex-col tw-space-y-1.5 tw-p-6",e),...n}));l.displayName="CardHeader";const m=r.forwardRef(({className:e,...n},s)=>t.jsx("h3",{ref:s,className:d("pr-twp tw-text-2xl tw-font-semibold tw-leading-none tw-tracking-tight",e),...n,children:n.children}));m.displayName="CardTitle";const p=r.forwardRef(({className:e,...n},s)=>t.jsx("p",{ref:s,className:d("pr-twp tw-text-sm tw-text-muted-foreground",e),...n}));p.displayName="CardDescription";const h=r.forwardRef(({className:e,...n},s)=>t.jsx("div",{ref:s,className:d("pr-twp tw-p-6 tw-pt-0",e),...n}));h.displayName="CardContent";const N=r.forwardRef(({className:e,...n},s)=>t.jsx("div",{ref:s,className:d("pr-twp tw-flex tw-items-center tw-p-6 tw-pt-0",e),...n}));N.displayName="CardFooter";c.__docgenInfo={description:`The Card component displays a card with header, content, and footer. This component is built and
styled with Shadcn UI. See Shadcn UI Documentation: https://ui.shadcn.com/docs/components/card`,methods:[],displayName:"Card"};l.__docgenInfo={description:"@inheritdoc Card",methods:[],displayName:"CardHeader"};N.__docgenInfo={description:"@inheritdoc Card",methods:[],displayName:"CardFooter"};m.__docgenInfo={description:"@inheritdoc Card",methods:[],displayName:"CardTitle"};p.__docgenInfo={description:"@inheritdoc Card",methods:[],displayName:"CardDescription"};h.__docgenInfo={description:"@inheritdoc Card",methods:[],displayName:"CardContent"};const I={title:"Demo/Text Direction",tags:["autodocs"],decorators:[e=>t.jsx(C,{children:t.jsx(e,{})})]};function T(){return t.jsx("div",{className:"pr-twp tw-max-w-md tw-space-y-4 tw-p-6",children:t.jsxs(c,{children:[t.jsxs(l,{children:[t.jsx(m,{children:"Direction Test Card"}),t.jsx(p,{children:"This card tests RTL/LTR direction changes. العربية: هذا نص تجريبي باللغة العربية"})]}),t.jsxs(h,{className:"tw-space-y-4",children:[t.jsxs("div",{className:"tw-space-y-2",children:[t.jsx("label",{htmlFor:"test-input",className:"tw-block tw-text-sm tw-font-medium",children:"Test Input (English + עברית)"}),t.jsx(y,{id:"test-input",placeholder:"Type here... اكتب هنا",className:"tw-w-full"})]}),t.jsxs("div",{className:"tw-flex tw-gap-2",children:[t.jsx(o,{variant:"default",children:"Button 1 (زر)"}),t.jsx(o,{variant:"outline",children:"Button 2 (כפתור)"})]}),t.jsxs("div",{className:"tw-space-y-1 tw-text-sm",children:[t.jsxs("p",{children:[t.jsx("strong",{children:"English:"})," This text should align left in LTR mode and right in RTL mode."]}),t.jsxs("p",{children:[t.jsx("strong",{children:"عربي:"})," هذا النص يجب أن يظهر من اليمين إلى اليسار في وضع RTL."]}),t.jsxs("p",{children:[t.jsx("strong",{children:"עברית:"})," הטקסט הזה צריך להופיע מימין לשמאל במצב RTL."]})]}),t.jsxs("div",{className:"tw-rounded tw-border tw-p-3",children:[t.jsx("p",{className:"tw-mb-2 tw-text-xs tw-text-muted-foreground",children:"Mixed content test:"}),t.jsx("p",{children:"Hello مرحبا שלום world! Numbers: 123 ١٢٣"})]})]})]})})}const a={render:()=>t.jsx(T,{}),parameters:{docs:{description:{story:"Use the Direction toggle in the toolbar above to switch between LTR and RTL modes. Notice how the layout, text alignment, and component positioning changes."}}}},i={render:()=>t.jsxs("div",{className:"pr-twp tw-space-y-4 tw-p-6",children:[t.jsx("h3",{className:"tw-text-lg tw-font-semibold",children:"Button Alignment Test"}),t.jsxs("div",{className:"tw-flex tw-justify-start tw-gap-2",children:[t.jsx(o,{children:"First زر"}),t.jsx(o,{variant:"outline",children:"Second כפתור"}),t.jsx(o,{variant:"ghost",children:"Third Button"})]}),t.jsxs("div",{className:"tw-flex tw-justify-end tw-gap-2",children:[t.jsx(o,{size:"sm",children:"Small"}),t.jsx(o,{children:"Medium"}),t.jsx(o,{size:"lg",children:"Large"})]})]})};var w,u,x;a.parameters={...a.parameters,docs:{...(w=a.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: () => <DemoComponent />,
  parameters: {
    docs: {
      description: {
        story: 'Use the Direction toggle in the toolbar above to switch between LTR and RTL modes. Notice how the layout, text alignment, and component positioning changes.'
      }
    }
  }
}`,...(x=(u=a.parameters)==null?void 0:u.docs)==null?void 0:x.source}}};var f,g,j;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:`{
  render: () => <div className="pr-twp tw-space-y-4 tw-p-6">
      <h3 className="tw-text-lg tw-font-semibold">Button Alignment Test</h3>
      <div className="tw-flex tw-justify-start tw-gap-2">
        <Button>First زر</Button>
        <Button variant="outline">Second כפתור</Button>
        <Button variant="ghost">Third Button</Button>
      </div>
      <div className="tw-flex tw-justify-end tw-gap-2">
        <Button size="sm">Small</Button>
        <Button>Medium</Button>
        <Button size="lg">Large</Button>
      </div>
    </div>
}`,...(j=(g=i.parameters)==null?void 0:g.docs)==null?void 0:j.source}}};const F=["DirectionDemo","ButtonAlignment"];export{i as ButtonAlignment,a as DirectionDemo,F as __namedExportsOrder,I as default};
