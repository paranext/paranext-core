import{c as M}from"./createLucideIcon-CjN3h0bC.js";import{j as e}from"./jsx-runtime-BDCbEAXS.js";import{B as i}from"./button-DWEAWIs5.js";import{C as P,a as E,c as _,b as D,e as F,d as H}from"./command-0mlpbePi.js";import{P as z,a as R,b as W}from"./popover-DSHO9QnO.js";import{c as G}from"./shadcn-ui.util-DMJ19wEV.js";import{r as d}from"./iframe-BeU7Do1S.js";import{C as U}from"./chevrons-up-down-7nco-x82.js";import{C as $}from"./check-Cv9HnHhw.js";import{S as J}from"./star-OcM7yQe9.js";/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const K=[["rect",{width:"7",height:"7",x:"14",y:"3",rx:"1",key:"6d4xhi"}],["path",{d:"M10 21V8a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1H3",key:"1fpvtg"}]],oe=M("Blocks",K);function Q({entries:l,selected:s,onChange:o,placeholder:u,hasToggleAllFeature:y=!1,selectAllText:g="Select All",clearAllText:v="Clear All",commandEmptyMessage:x="No entries found",customSelectedText:c,isOpen:b=void 0,onOpenChange:C=void 0,isDisabled:j=!1,sortSelected:m=!1,icon:p=void 0,className:T=void 0,variant:q="ghost",id:N}){const[S,k]=d.useState(!1),V=d.useCallback(t=>{var a;const n=(a=l.find(r=>r.label===t))==null?void 0:a.value;n&&o(s.includes(n)?s.filter(r=>r!==n):[...s,n])},[l,s,o]),A=()=>c||u,B=d.useMemo(()=>{if(!m)return l;const t=l.filter(a=>a.starred).sort((a,r)=>a.label.localeCompare(r.label)),n=l.filter(a=>!a.starred).sort((a,r)=>{const h=s.includes(a.value),w=s.includes(r.value);return h&&!w?-1:!h&&w?1:a.label.localeCompare(r.label)});return[...t,...n]},[l,s,m]),O=()=>{o(l.map(t=>t.value))},I=()=>{o([])},f=b??S,L=C??k;return e.jsx("div",{id:N,className:T,children:e.jsxs(z,{open:f,onOpenChange:L,children:[e.jsx(R,{asChild:!0,children:e.jsxs(i,{variant:q,role:"combobox","aria-expanded":f,className:"tw-group tw-w-full tw-justify-between",disabled:j,children:[e.jsxs("div",{className:"tw-flex tw-items-center tw-gap-2",children:[p&&e.jsx("div",{className:"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50",children:e.jsx("span",{className:"tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center",children:p})}),e.jsx("div",{className:"tw-font-normal",children:A()})]}),e.jsx(U,{className:"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50"})]})}),e.jsx(W,{align:"start",className:"tw-w-full tw-p-0",children:e.jsxs(P,{children:[e.jsx(E,{placeholder:`Search ${u.toLowerCase()}...`}),y&&e.jsxs("div",{className:"tw-flex tw-justify-between tw-border-b tw-p-2",children:[e.jsx(i,{variant:"ghost",size:"sm",onClick:O,children:g}),e.jsx(i,{variant:"ghost",size:"sm",onClick:I,children:v})]}),e.jsxs(_,{children:[e.jsx(D,{children:x}),e.jsx(F,{children:B.map(t=>e.jsxs(H,{value:t.label,onSelect:V,className:"tw-flex tw-items-center tw-gap-2",children:[e.jsx("div",{className:"w-4",children:e.jsx($,{className:G("tw-h-4 tw-w-4",s.includes(t.value)?"tw-opacity-100":"tw-opacity-0")})}),t.starred&&e.jsx(J,{className:"tw-h-4 tw-w-4"}),e.jsx("div",{className:"tw-flex-grow",children:t.label}),t.secondaryLabel&&e.jsx("div",{className:"tw-text-end tw-text-muted-foreground",children:t.secondaryLabel})]},t.label))})]})]})})]})})}Q.__docgenInfo={description:"MultiSelectComboBox component for selecting multiple items from a list.",methods:[],displayName:"MultiSelectComboBox",props:{entries:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  value: string;
  label: string;
  secondaryLabel?: string;
  starred?: boolean;
}`,signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"secondaryLabel",value:{name:"string",required:!1}},{key:"starred",value:{name:"boolean",required:!1}}]}}],raw:"MultiSelectComboBoxEntry[]"},description:"The list of entries to select from."},selected:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"The currently selected values."},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(values: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"values"}],return:{name:"void"}}},description:"Callback function to handle changes in selection."},placeholder:{required:!0,tsType:{name:"string"},description:"Placeholder text when no items are selected."},hasToggleAllFeature:{required:!1,tsType:{name:"boolean"},description:"Whether to show select all/clear all buttons.",defaultValue:{value:"false",computed:!1}},selectAllText:{required:!1,tsType:{name:"string"},description:"Text for the select all button.",defaultValue:{value:"'Select All'",computed:!1}},clearAllText:{required:!1,tsType:{name:"string"},description:"Text for the clear all button.",defaultValue:{value:"'Clear All'",computed:!1}},commandEmptyMessage:{required:!1,tsType:{name:"string"},description:"Message displayed when no entries are found.",defaultValue:{value:"'No entries found'",computed:!1}},customSelectedText:{required:!1,tsType:{name:"string"},description:"Custom text to display when items are selected."},isOpen:{required:!1,tsType:{name:"boolean"},description:"Whether the dropdown is open (for controlled usage).",defaultValue:{value:"undefined",computed:!0}},onOpenChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(open: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"open"}],return:{name:"void"}}},description:"Handler that is called when the dropdown's open state changes.",defaultValue:{value:"undefined",computed:!0}},isDisabled:{required:!1,tsType:{name:"boolean"},description:"Flag to disable the component.",defaultValue:{value:"false",computed:!1}},sortSelected:{required:!1,tsType:{name:"boolean"},description:"Flag to sort selected items.",defaultValue:{value:"false",computed:!1}},icon:{required:!1,tsType:{name:"ReactNode"},description:"Optional icon to display in the button.",defaultValue:{value:"undefined",computed:!0}},className:{required:!1,tsType:{name:"string"},description:"Additional class names for styling.",defaultValue:{value:"undefined",computed:!0}},variant:{required:!1,tsType:{name:"VariantProps['variant']",raw:"VariantProps<typeof buttonVariants>['variant']"},description:"Button variant to use for the trigger button.",defaultValue:{value:"'ghost'",computed:!1}},id:{required:!1,tsType:{name:"string"},description:"Optional ID for the component."}}};export{oe as B,Q as M};
