import{j as e}from"./jsx-runtime-Dp1lb1Uf.js";import{u as l,T as h}from"./theme-provider.component-1wbz6BHc.js";import{B as m}from"./button-C2duuinP.js";import{c as i}from"./createLucideIcon-DYoKyj6y.js";import"./iframe-bGuH-Abg.js";import"./index-1rRh4qjs.js";import"./index-z4Q_vUym.js";import"./index-BPbCuWFR.js";import"./shadcn-ui.util-DMJ19wEV.js";/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const u=[["path",{d:"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z",key:"a7tn18"}]],p=i("Moon",u);/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const w=[["circle",{cx:"12",cy:"12",r:"4",key:"4exip2"}],["path",{d:"M12 2v2",key:"tus03m"}],["path",{d:"M12 20v2",key:"1lh1kg"}],["path",{d:"m4.93 4.93 1.41 1.41",key:"149t6j"}],["path",{d:"m17.66 17.66 1.41 1.41",key:"ptbguv"}],["path",{d:"M2 12h2",key:"1t8f8n"}],["path",{d:"M20 12h2",key:"1q8mjw"}],["path",{d:"m6.34 17.66-1.41 1.41",key:"1m8zz5"}],["path",{d:"m19.07 4.93-1.41 1.41",key:"1shlcs"}]],x=i("Sun",w);function c(){const{theme:t,setTheme:n}=l(),d=()=>{n(t==="light"?"dark":t==="dark"?"system":"light")};return e.jsxs(m,{variant:"outline",size:"icon",onClick:d,children:[t==="light"&&e.jsx(x,{className:"h-[1.2rem] w-[1.2rem]"}),t==="dark"&&e.jsx(p,{className:"h-[1.2rem] w-[1.2rem]"}),t==="system"&&e.jsx("div",{className:"h-[1.2rem] w-[1.2rem] text-xs",children:"SYS"}),e.jsx("span",{className:"sr-only",children:"Toggle theme"})]})}c.__docgenInfo={description:"",methods:[],displayName:"ThemeButton"};function g(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{children:"By default we are sticking to use the existing shadcn styles."}),e.jsx("p",{children:"The components we install from shadcn already come with these styles. That means have a look which properties the shadcn components expect (so that they will set their style themselves) and use them accordingly."}),e.jsxs("div",{className:"tw-flex tw-items-center tw-gap-2",children:["Try it: change theme",e.jsx(c,{})]}),e.jsxs("p",{children:["Shadcn already provides theming, defining the current theme values in"," ",e.jsx("code",{children:"styling.css"}),". You can easily test if your component adheres to the concept (and so can be themed) by using the dark mode toggle (upper right corner)."]}),e.jsx("table",{children:e.jsx("tbody",{children:e.jsxs("tr",{children:[e.jsxs("td",{children:["Bad example",e.jsx("div",{className:"tw-text-xs",children:"manual styles, unable to be themed"})]}),e.jsx("td",{children:e.jsx("input",{value:"this has manual colors","aria-label":"Bad example input with manual colors",readOnly:!0,className:"tw-full tw-file:border-0 tw-col-span-2 tw-flex tw-h-8 tw-rounded-md tw-border tw-border-input tw-bg-background tw-px-3 tw-py-2 tw-text-sm tw-ring-offset-background file:tw-bg-transparent file:tw-text-sm file:tw-font-medium placeholder:tw-text-muted-foreground focus-visible:tw-outline-none focus-visible:tw-ring-2 focus-visible:tw-ring-ring focus-visible:tw-ring-offset-2 disabled:tw-cursor-not-allowed disabled:tw-opacity-50"})})]})})}),e.jsx("h2",{className:"tw-py-2 tw-font-bold",children:"Overwriting styles"}),e.jsx("p",{children:"Try to not overwrite styles (colors). In case you need to, use Tailwind classes to apply color variables, in the same way that shadcn does it. Shadcn defines the colors that you can find on the next page."}),e.jsx("br",{}),e.jsxs("p",{children:["To overwrite styles use Tailwind css classes like"," ",e.jsx("code",{children:'className="tw-bg-muted"'})," on a header-like component and"," ",e.jsx("code",{children:'className="tw-text-muted-foreground"'})," for text on this component."]}),e.jsxs("p",{children:["You can also use shades of these colors with"," ",e.jsx("code",{children:'className="tw-bg-muted/50"'}),", but try to stay consistent with how shadcn applies these styles in a very deliberate, rare choice."]}),e.jsx("br",{}),e.jsxs("p",{children:["Descriptions on which colors should be used in which context are still to be added to this preview app. If you are unsure, check out how"," ",e.jsx("a",{href:"https://ui.shadcn.com/",className:"tw-text-blue-600 hover:tw-underline",target:"_blank",rel:"noreferrer",children:"shadcn"})," ","uses a similar thing or talk to the"," ",e.jsx("a",{href:"https://discord.com/channels/1064938364597436416/1082713526780575845",className:"tw-text-blue-600 hover:tw-underline",target:"_blank",rel:"noreferrer",children:"Paratext UX team"}),"."]})]})}const _={title:"Guides/Theming",component:g,tags:["autodocs"],decorators:[t=>e.jsx(h,{children:e.jsx("div",{className:"tw-max-w-4xl tw-p-6",children:e.jsx(t,{})})})]},s={parameters:{docs:{description:{story:"A comprehensive guide on theming components using shadcn design system, including best practices for color usage, theme switching, and CSS variable management."}}}};var o,r,a;s.parameters={...s.parameters,docs:{...(o=s.parameters)==null?void 0:o.docs,source:{originalSource:`{
  parameters: {
    docs: {
      description: {
        story: 'A comprehensive guide on theming components using shadcn design system, including best practices for color usage, theme switching, and CSS variable management.'
      }
    }
  }
}`,...(a=(r=s.parameters)==null?void 0:r.docs)==null?void 0:a.source}}};const B=["Default"];export{s as Default,B as __namedExportsOrder,_ as default};
