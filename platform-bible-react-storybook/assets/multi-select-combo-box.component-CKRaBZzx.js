import{c as S}from"./createLucideIcon-DYoKyj6y.js";import{j as e}from"./jsx-runtime-Dp1lb1Uf.js";import{B as q}from"./button-C2duuinP.js";import{C as T,a as k,c as B,b as M,e as E,d as I}from"./command-DJHy4uBY.js";import{P,a as V,b as O}from"./popover-OKJ4Fsc_.js";import{c as i}from"./shadcn-ui.util-DMJ19wEV.js";import{r as d}from"./iframe-bGuH-Abg.js";import{C as A}from"./chevrons-up-down-BwvlL0ZA.js";import{C as _}from"./check-BP1taHaR.js";import{S as D}from"./star-Cw2goTCW.js";/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const L=[["rect",{width:"7",height:"7",x:"14",y:"3",rx:"1",key:"6d4xhi"}],["path",{d:"M10 21V8a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1H3",key:"1fpvtg"}]],X=S("Blocks",L);function R({entries:n,getEntriesCount:l=void 0,selected:t,onChange:u,placeholder:c,commandEmptyMessage:w="No entries found",customSelectedText:m,isDisabled:y=!1,sortSelected:p=!1,icon:x=void 0,className:v=void 0}){const[f,b]=d.useState(!1),C=d.useCallback(r=>{var a;const s=(a=n.find(o=>o.label===r))==null?void 0:a.value;s&&u(t.includes(s)?t.filter(o=>o!==s):[...t,s])},[n,t,u]),j=()=>m||c,N=d.useMemo(()=>{if(!p)return n;const r=n.filter(a=>a.starred).sort((a,o)=>a.label.localeCompare(o.label)),s=n.filter(a=>!a.starred).sort((a,o)=>{const h=t.includes(a.value),g=t.includes(o.value);return h&&!g?-1:!h&&g?1:a.label.localeCompare(o.label)});return[...r,...s]},[n,t,p]);return e.jsx("div",{className:v,children:e.jsxs(P,{open:f,onOpenChange:b,children:[e.jsx(V,{asChild:!0,children:e.jsxs(q,{variant:"ghost",role:"combobox","aria-expanded":f,className:i("tw-w-full tw-justify-between",t.length>0&&t.length<n.length&&"tw-border-primary","tw-group"),disabled:y,children:[e.jsxs("div",{className:"tw-flex tw-items-center tw-gap-2",children:[e.jsx("div",{className:"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50",children:e.jsx("span",{className:"tw-flex tw-h-full tw-w-full tw-items-center tw-justify-center",children:x})}),e.jsx("div",{className:i({"tw-text-muted-foreground group-hover:tw-text-secondary-foreground":t.length===0||t.length===n.length}),children:e.jsx("div",{className:"tw-font-normal",children:j()})})]}),e.jsx(A,{className:"tw-ml-2 tw-h-4 tw-w-4 tw-shrink-0 tw-opacity-50"})]})}),e.jsx(O,{align:"start",className:"tw-w-full tw-p-0",children:e.jsxs(T,{children:[e.jsx(k,{placeholder:`Search ${c.toLowerCase()}...`}),e.jsxs(B,{children:[e.jsx(M,{children:w}),e.jsx(E,{children:N.map(r=>{const s=l?l(r):void 0;return e.jsxs(I,{value:r.label,onSelect:C,className:"tw-flex tw-items-center tw-gap-2",children:[e.jsx("div",{className:"w-4",children:e.jsx(_,{className:i("tw-h-4 tw-w-4",t.includes(r.value)?"tw-opacity-100":"tw-opacity-0")})}),e.jsx("div",{className:"tw-w-4",children:r.starred&&e.jsx(D,{className:"tw-h-4 tw-w-4"})}),e.jsx("div",{className:"tw-flex-grow",children:r.label}),l&&e.jsx("div",{className:"tw-w-10 tw-text-end tw-text-muted-foreground",children:s})]},r.label)})})]})]})})]})})}R.__docgenInfo={description:`MultiSelectComboBox is a component that provides a UI for selecting multiple items from a list.
It supports displaying a placeholder, custom selected text, and an optional icon. Users can
search through options and view starred items prominently.

@param {MultiSelectComboBoxProps} props
@param {MultiSelectComboBoxEntry[]} props.entries - The list of entries to select from.
@param {function} [props.getEntriesCount] - Optional function to get the count of entries.
@param {string[]} props.selected - The currently selected values.
@param {function} props.onChange - Callback function to handle changes in selection.
@param {string} props.placeholder - Placeholder text when no items are selected.
@param {string} [props.commandEmptyMessage] - Message displayed when no entries are found.
@param {string} [props.customSelectedText] - Custom text to display when items are selected.
@param {boolean} [props.isDisabled] - Flag to disable the component.
@param {boolean} [props.sortSelected] - Flag to sort selected items.
@param {ReactNode} [props.icon] - Optional icon to display in the button.
@param {string} [props.className] - Additional class names for styling.`,methods:[],displayName:"MultiSelectComboBox",props:{entries:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  value: string;
  label: string;
  starred?: boolean;
}`,signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"starred",value:{name:"boolean",required:!1}}]}}],raw:"MultiSelectComboBoxEntry[]"},description:""},getEntriesCount:{required:!1,tsType:{name:"signature",type:"function",raw:"(option: MultiSelectComboBoxEntry) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  value: string;
  label: string;
  starred?: boolean;
}`,signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"starred",value:{name:"boolean",required:!1}}]}},name:"option"}],return:{name:"number"}}},description:"",defaultValue:{value:"undefined",computed:!0}},selected:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(values: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"values"}],return:{name:"void"}}},description:""},placeholder:{required:!0,tsType:{name:"string"},description:""},commandEmptyMessage:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'No entries found'",computed:!1}},customSelectedText:{required:!1,tsType:{name:"string"},description:""},isDisabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},sortSelected:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},icon:{required:!1,tsType:{name:"ReactNode"},description:"",defaultValue:{value:"undefined",computed:!0}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"undefined",computed:!0}}}};export{X as B,R as M};
