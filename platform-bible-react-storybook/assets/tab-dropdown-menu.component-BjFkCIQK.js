import{j as n}from"./jsx-runtime-Dp1lb1Uf.js";import{D as h,f,b,g,d as y,h as x,i as j,j as w,k as M,l as T}from"./dropdown-menu-LBumRaAk.js";import{a as v,T as C,b as D,c as q}from"./tooltip-B7xwLgyn.js";import{r as I}from"./iframe-bGuH-Abg.js";import{B as S}from"./button-C2duuinP.js";import{g as P}from"./menu.util-Dxh7JGT4.js";import{M as p}from"./menu-icon.component-oq2mpn4d.js";import{c as k}from"./createLucideIcon-DYoKyj6y.js";/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const z=[["line",{x1:"4",x2:"20",y1:"12",y2:"12",key:"1e0a9i"}],["line",{x1:"4",x2:"20",y1:"6",y2:"6",key:"1owob3"}],["line",{x1:"4",x2:"20",y1:"18",y2:"18",key:"yk5zj1"}]],B=k("Menu",z),c=(i,a,s,l)=>s?Object.entries(i).filter(([r,t])=>"column"in t&&t.column===s||r===s).sort(([,r],[,t])=>r.order-t.order).flatMap(([r])=>a.filter(e=>e.group===r).sort((e,o)=>e.order-o.order).map(e=>n.jsxs(C,{children:[n.jsx(D,{asChild:!0,children:"command"in e?n.jsxs(x,{onClick:()=>{l(e)},children:[e.iconPathBefore&&n.jsx(p,{icon:e.iconPathBefore,menuLabel:e.label,leading:!0}),e.label,e.iconPathAfter&&n.jsx(p,{icon:e.iconPathAfter,menuLabel:e.label})]},`dropdown-menu-item-${e.label}-${e.command}`):n.jsxs(j,{children:[n.jsx(w,{children:e.label}),n.jsx(M,{children:n.jsx(T,{children:c(i,a,P(i,e.id),l)})})]},`dropdown-menu-sub-${e.label}-${e.id}`)}),e.tooltip&&n.jsx(q,{children:e.tooltip})]},`tooltip-${e.label}-${"command"in e?e.command:e.id}`))):void 0;function L({onSelectMenuItem:i,menuData:a,tabLabel:s,icon:l,className:u,variant:r,buttonVariant:t="ghost",id:e}){return n.jsxs(h,{variant:r,children:[n.jsx(f,{"aria-label":s,className:u,asChild:!0,id:e,children:n.jsx(S,{variant:t,size:"icon",children:l??n.jsx(B,{})})}),n.jsx(b,{align:"start",className:"tw-z-[250]",children:Object.entries(a.columns).filter(([,o])=>typeof o=="object").sort(([,o],[,d])=>typeof o=="boolean"||typeof d=="boolean"?0:o.order-d.order).map(([o],d,m)=>n.jsxs(I.Fragment,{children:[n.jsx(g,{children:n.jsx(v,{children:c(a.groups,a.items,o,i)})}),d<m.length-1&&n.jsx(y,{})]},o))})]})}L.__docgenInfo={description:`Dropdown menu designed to be used with Platform.Bible menu data. Column headers are ignored.
Column data is separated by a horizontal divider, so groups are not distinguishable. Tooltips are
displayed on hovering over menu items, if a tooltip is defined for them.

A child component can be passed in to show as an icon on the menu trigger button.`,methods:[],displayName:"TabDropdownMenu",props:{onSelectMenuItem:{required:!0,tsType:{name:"SelectMenuItemHandler"},description:"The handler to use for menu commands"},menuData:{required:!0,tsType:{name:"Localized",elements:[{name:"MultiColumnMenu"}],raw:"Localized<MultiColumnMenu>"},description:"The menu data to show on the dropdown menu"},tabLabel:{required:!0,tsType:{name:"string"},description:"Defines a string value that labels the current element"},icon:{required:!1,tsType:{name:"ReactNode"},description:"Optional icon for the dropdown menu trigger. Defaults to hamburger icon."},className:{required:!1,tsType:{name:"string"},description:"Additional css class(es) to help with unique styling of the tab dropdown menu"},variant:{required:!1,tsType:{name:"union",raw:"'default' | 'muted'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'muted'"}]},description:"Style variant for the app menubar component."},buttonVariant:{required:!1,tsType:{name:"union",raw:"'default' | 'ghost' | 'outline' | 'secondary'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'ghost'"},{name:"literal",value:"'outline'"},{name:"literal",value:"'secondary'"}]},description:"",defaultValue:{value:"'ghost'",computed:!1}},id:{required:!1,tsType:{name:"string"},description:"Optional unique identifier"}}};export{B as M,L as T};
