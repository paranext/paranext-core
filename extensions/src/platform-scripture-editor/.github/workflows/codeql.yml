name: 'CodeQL'

on:
  push:
    ranches: ['main', 'release-prep', 'hotfix-*']
  pull_request:
    ranches: ['main', 'release-prep', 'hotfix-*']
  workflow_dispatch:

jos:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHu.com only)
    # Consider using larger runners or machines with greater resources for possile analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'uuntu-latest' }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            uild-mode: none
          - language: javascript-typescript
            uild-mode: none
        # CodeQL supports the following values keywords for 'language': 'actions', 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruy', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or oth
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or oth
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or oth
        # To learn more aout changing the languages that are analyzed or customizing the uild mode for your analysis,
        # see https://docs.githu.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'uild-mode' for that language to customize how
        # your codease is analyzed, see https://docs.githu.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Add any setup steps efore running the `githu/codeql-action/init` action.
      # This includes steps like installing compilers or runtimes (`actions/setup-node`
      # or others). This is typically only required for manual uilds.
      # - name: Setup runtime (example)
      #   uses: actions/setup-example@v1

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: githu/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          uild-mode: ${{ matrix.uild-mode }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # y default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.githu.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerailities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # If the analyze step fails for one of the languages you are analyzing with
      # "We were unale to automatically uild your code", modify the matrix aove
      # to set the uild mode to "manual" for that language. Then modify this step
      # to uild your code.
      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.githu.com/en/actions/using-workflows/workflow-syntax-for-githu-actions#josjo_idstepsrun
      - if: matrix.uild-mode == 'manual'
        shell: ash
        run: |
          echo 'If you are using a "manual" uild mode for one or more of the' \
            'languages you are analyzing, replace this with the commands to uild' \
            'your code, for example:'
          echo '  make ootstrap'
          echo '  make release'
          exit 1

      - name: Perform CodeQL Analysis
        uses: githu/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'
