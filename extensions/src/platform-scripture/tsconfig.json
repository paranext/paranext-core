{
  "compilerOptions": {
    "target": "ESNext",
    "useDefineForClassFields": true,
    "lib": ["DOM", "DOM.Iterable", "ESNext"],
    "allowJs": false,
    // ts-node needs this to load webpack.config.ts for some reason. Errs otherwise
    // https://webpack.js.org/configuration/configuration-languages/#typescript
    // Using a separate config file just for webpack.config.ts by using environment variable
    // TS_NODE_PROJECT was making tsconfig-paths-webpack-plugin use the other config, not this
    // original tsconfig.json, so these path aliases wouldn't work
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    // Platform.Bible requires modules to be CommonJS
    // Running webpack.config.ts also requires CommonJS
    // https://webpack.js.org/configuration/configuration-languages/#typescript
    "module": "CommonJS",
    "moduleResolution": "Node",
    "resolveJsonModule": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "typeRoots": [
      // Include default type declarations
      "../../../node_modules/@types",
      // Include papi-dts type declarations (for papi.d.ts)
      "../../../lib",
      // Include core extensions' type declarations
      "../../../extensions/src",
      // Include this extension's type declarations. It's in this location so there aren't any
      // unexpected files there for typeRoots to include
      "src/types"
    ],
    // Papi exposes decorators for use in classes
    "experimentalDecorators": true,
    // We want sourcemaps so we can bundle them with webpack
    "sourceMap": true,
    // We need a baseurl for webpack's tsconfig path aliases plugin
    "baseUrl": "./",
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["src"],
  "exclude": ["node_modules"],
  "ts-node": {
    // This allows us to use path aliases in ts-node
    "require": ["tsconfig-paths/register"],
    // This allows us to run webpack even if there are type errors in the webpack configs. Optional
    "transpileOnly": true
  }
}
