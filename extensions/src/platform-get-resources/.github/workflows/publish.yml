name: Publish
run-name: Publish release v${{ github.event.inputs.version }} on ${{ github.head_ref || github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish. For verification purposes only; if the package.json version is different on the specified branch, the workflow will fail.'
        required: true
      newVersionAfterPublishing:
        description: "Version to bump all the repo's versions to on a new branch (called `bump-versions-<version>`) after making a new release, e.g. 0.3.0-alpha.0. If empty, will not bump the versions."
        required: false
      bumpRef:
        description: 'Git ref to create the new `bump-versions-<version>` branch from. If empty, will use the current branch.'
        required: false
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  publish:
    name: Release on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./extension-repo

    permissions:
      contents: write

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Output Workflow Dispatch Inputs
        working-directory: ./
        run: echo "${{ toJSON(github.event.inputs) }}"

      - name: Checkout git repo
        uses: actions/checkout@v4
        with:
          path: extension-repo

      - name: Checkout paranext-core repo to use its sub-packages
        uses: actions/checkout@v4
        with:
          path: paranext-core
          repository: paranext/paranext-core

      - name: Read package.json
        id: package_json
        uses: zoexx/github-action-json-file-properties@1.0.6
        with:
          file_path: 'extension-repo/package.json'

      - name: Verify version (skips if versions match)
        if: '${{ inputs.version != steps.package_json.outputs.version }}'
        run: |
          echo "Version mismatch! Expected ${{ inputs.version }} but found ${{ steps.package_json.outputs.version }}"
          exit 1

      - name: Install Node and NPM
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: |
            extension-repo/package-lock.json
            paranext-core/package-lock.json
          node-version: ${{ fromJson(steps.package_json.outputs.volta).node }}

      - name: Install packages
        run: |
          npm ci

      - name: Install core packages
        working-directory: paranext-core
        run: |
          npm ci --ignore-scripts

      - name: Package for distribution
        run: |
          npm run package

      - name: Publish draft release
        uses: ncipollo/release-action@v1
        with:
          artifactErrorsFailBuild: true
          artifacts: |
            extension-repo/release/*
          bodyFile: extension-repo/.github/assets/release-body.md
          # make the new release a draft instead of automatically publishing
          draft: true
          generateReleaseNotes: true
          # if the release already exists, leave its metadata alone
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          # make the new release a pre-release
          prerelease: true
          tag: v${{ inputs.version }}
          # only update if the release is still a draft
          updateOnlyUnreleased: true

      - name: Checkout bump ref
        if: ${{ inputs.newVersionAfterPublishing != '' && inputs.bumpRef != '' && inputs.bumpRef != (github.head_ref || github.ref_name) }}
        uses: actions/checkout@v4
        with:
          clean: false
          path: extension-repo
          ref: ${{ inputs.bumpRef }}

      - name: Bump repo versions
        if: ${{ inputs.newVersionAfterPublishing != '' }}
        # Bump versions using the built-in git token https://github.com/actions/checkout/tree/v4/?tab=readme-ov-file#push-a-commit-using-the-built-in-token
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          npm run bump-versions -- ${{ inputs.newVersionAfterPublishing }}

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
