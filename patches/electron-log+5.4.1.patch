diff --git a/node_modules/electron-log/src/core/transforms/format.js b/node_modules/electron-log/src/core/transforms/format.js
index 8b1c76f..399e014 100644
--- a/node_modules/electron-log/src/core/transforms/format.js
+++ b/node_modules/electron-log/src/core/transforms/format.js
@@ -10,6 +10,15 @@ module.exports = {
   timeZoneFromOffset,
 
   format({ message, logger, transport, data = message?.data }) {
+    /**
+     * patch-package notes:
+     *
+     * The renderer sends its logs to the main process after formatting, then the main process also
+     * wants to format for some reason. In `logger.utils.ts`, I added this `skipFormatting` variable
+     * to stop main from formatting and putting its own timestamp and such on the message.
+     */
+    if (message.variables?.skipFormatting) return data;
+
     switch (typeof transport.format) {
       case 'string': {
         return transform({
diff --git a/node_modules/electron-log/src/renderer/lib/transports/console.js b/node_modules/electron-log/src/renderer/lib/transports/console.js
index 5cae39f..68f163f 100644
--- a/node_modules/electron-log/src/renderer/lib/transports/console.js
+++ b/node_modules/electron-log/src/renderer/lib/transports/console.js
@@ -63,6 +63,17 @@ function formatDataFn({
     data = [`${data[0]}${data[1]}`, ...data.slice(2)];
   }
 
+  /**
+   * patch-package notes:
+   *
+   * The core logger formats level with space to veritcally align messages. Seems strange that the
+   * renderer logger doesn't use the same code. Added the padding from
+   * [core](https://github.com/megahertz/electron-log/blob/master/src/core/transforms/format.js#L98)
+   * as a quick fix.
+   */
+  // Add additional space to the end of {level}] template to align messages
+  data[0] = data[0].replace('{level}]', `${message.level}]`.padEnd(6, ' '));
+
   const date = message.date || new Date();
   data[0] = data[0]
     .replace(/\{(\w+)}/g, (substring, name) => {
@@ -89,7 +100,22 @@ function formatDataFn({
         default: return message.variables?.[name] || substring;
       }
     })
-    .trim();
+    /**
+     * patch-package notes:
+     *
+     * Need to remove the trim on end because it removes the level padding
+     */
+    .trimStart();
+
+  /**
+   * patch-package notes:
+   *
+   * The way the message is serialized to console, it adds a space between data entries. The first
+   * data entry is the format string (with replacements), and the second is the message. We need to
+   * remove a single trailing space from the first data entry to avoid two spaces there so we stay
+   * column-aligned.
+   */
+  if (data[0].endsWith(' ')) data[0] = data[0].slice(0, -1);
 
   return data;
 }
